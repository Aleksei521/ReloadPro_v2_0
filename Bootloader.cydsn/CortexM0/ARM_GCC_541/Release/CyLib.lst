ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 115 0
  39              		@ sp needed
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 100 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 115 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 08010B40 		.word	1074462984
  49              		.cfi_endproc
  50              	.LFE0:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoStop,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoStop
  55              		.code	16
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 4


  56              		.thumb_func
  57              		.type	CySysClkImoStop, %function
  58              	CySysClkImoStop:
  59              	.LFB1:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
  60              		.loc 1 131 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  65              		.loc 1 140 0
  66 0000 024A     		ldr	r2, .L5
 141:Generated_Source\PSoC4/CyLib.c **** }
  67              		.loc 1 141 0
  68              		@ sp needed
 140:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 140 0
  70 0002 1368     		ldr	r3, [r2]
  71 0004 5B00     		lsls	r3, r3, #1
  72 0006 5B08     		lsrs	r3, r3, #1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 141 0
  75 000a 7047     		bx	lr
  76              	.L6:
  77              		.align	2
  78              	.L5:
  79 000c 08010B40 		.word	1074462984
  80              		.cfi_endproc
  81              	.LFE1:
  82              		.size	CySysClkImoStop, .-CySysClkImoStop
  83              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  84              		.align	1
  85              		.global	CySysClkWriteHfclkDirect
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 5


  86              		.code	16
  87              		.thumb_func
  88              		.type	CySysClkWriteHfclkDirect, %function
  89              	CySysClkWriteHfclkDirect:
  90              	.LFB2:
 142:Generated_Source\PSoC4/CyLib.c **** 
 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 193:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 6


 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 7


 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 8


 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 9


 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 10


 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 11


 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 12


 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
  91              		.loc 1 540 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL0:
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 100              		.loc 1 540 0
 101 0002 0400     		movs	r4, r0
 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 102              		.loc 1 548 0
 103 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 104              	.LVL1:
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 105              		.loc 1 575 0
 106 0008 0723     		movs	r3, #7
 107 000a 0449     		ldr	r1, .L8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 13


 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 592:Generated_Source\PSoC4/CyLib.c **** }
 108              		.loc 1 592 0
 109              		@ sp needed
 575:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 110              		.loc 1 575 0
 111 000c 0A68     		ldr	r2, [r1]
 112 000e 9A43     		bics	r2, r3
 113              	.LVL2:
 586:Generated_Source\PSoC4/CyLib.c ****     }   
 114              		.loc 1 586 0
 115 0010 2340     		ands	r3, r4
 116 0012 1343     		orrs	r3, r2
 117              	.LVL3:
 589:Generated_Source\PSoC4/CyLib.c ****     
 118              		.loc 1 589 0
 119 0014 0B60     		str	r3, [r1]
 591:Generated_Source\PSoC4/CyLib.c **** }
 120              		.loc 1 591 0
 121 0016 FFF7FEFF 		bl	CyExitCriticalSection
 122              	.LVL4:
 123              	.LVL5:
 124              		.loc 1 592 0
 125 001a 10BD     		pop	{r4, pc}
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 001c 00010B40 		.word	1074462976
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 133              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 134              		.align	1
 135              		.global	CySysEnablePumpClock
 136              		.code	16
 137              		.thumb_func
 138              		.type	CySysEnablePumpClock, %function
 139              	CySysEnablePumpClock:
 140              	.LFB3:
 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 14


 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 141              		.loc 1 612 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL6:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 094B     		ldr	r3, .L15
 151 0004 094C     		ldr	r4, .L15+4
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 152              		.loc 1 614 0
 153 0006 C207     		lsls	r2, r0, #31
 154 0008 04D5     		bpl	.L11
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 155              		.loc 1 616 0
 156 000a 2268     		ldr	r2, [r4]
 157 000c 1968     		ldr	r1, [r3]
 158 000e 5206     		lsls	r2, r2, #25
 159 0010 0A43     		orrs	r2, r1
 160 0012 06E0     		b	.L13
 161              	.L11:
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 162              		.loc 1 620 0
 163 0014 1A68     		ldr	r2, [r3]
 164 0016 1201     		lsls	r2, r2, #4
 165 0018 520F     		lsrs	r2, r2, #29
 166 001a 2260     		str	r2, [r4]
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 167              		.loc 1 622 0
 168 001c 1968     		ldr	r1, [r3]
 169 001e 044A     		ldr	r2, .L15+8
 170 0020 0A40     		ands	r2, r1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 15


 171              	.L13:
 172 0022 1A60     		str	r2, [r3]
 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 173              		.loc 1 636 0
 174              		@ sp needed
 175 0024 10BD     		pop	{r4, pc}
 176              	.L16:
 177 0026 C046     		.align	2
 178              	.L15:
 179 0028 08010B40 		.word	1074462984
 180 002c 00000000 		.word	.LANCHOR0
 181 0030 FFFFFFF1 		.word	-234881025
 182              		.cfi_endproc
 183              	.LFE3:
 184              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 185              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 186              		.align	1
 187              		.global	CySysClkGetSysclkSource
 188              		.code	16
 189              		.thumb_func
 190              		.type	CySysClkGetSysclkSource, %function
 191              	CySysClkGetSysclkSource:
 192              	.LFB4:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 193              		.loc 1 649 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 16


 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 201              		.loc 1 653 0
 202 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 203              	.LVL7:
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 204              		.loc 1 663 0
 205 0006 034B     		ldr	r3, .L18
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 675:Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 675 0
 207              		@ sp needed
 663:Generated_Source\PSoC4/CyLib.c **** 
 208              		.loc 1 663 0
 209 0008 1C68     		ldr	r4, [r3]
 210              	.LVL8:
 672:Generated_Source\PSoC4/CyLib.c **** 
 211              		.loc 1 672 0
 212 000a FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL9:
 674:Generated_Source\PSoC4/CyLib.c **** }
 214              		.loc 1 674 0
 215 000e 0720     		movs	r0, #7
 216 0010 2040     		ands	r0, r4
 217              	.LVL10:
 218              		.loc 1 675 0
 219 0012 10BD     		pop	{r4, pc}
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0014 00010B40 		.word	1074462976
 224              		.cfi_endproc
 225              	.LFE4:
 226              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 227              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 228              		.align	1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 17


 229              		.global	CySysClkWriteSysclkDiv
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysClkWriteSysclkDiv, %function
 233              	CySysClkWriteSysclkDiv:
 234              	.LFB5:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 710 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL11:
 240 0000 70B5     		push	{r4, r5, r6, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246              		.loc 1 710 0
 247 0002 0400     		movs	r4, r0
 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 18


 248              		.loc 1 713 0
 249 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 250              	.LVL12:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 251              		.loc 1 716 0
 252 0008 E104     		lsls	r1, r4, #19
 253 000a E024     		movs	r4, #224
 254              	.LVL13:
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 255              		.loc 1 717 0
 256 000c 054D     		ldr	r5, .L21
 716:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 257              		.loc 1 716 0
 258 000e A403     		lsls	r4, r4, #14
 259              		.loc 1 717 0
 260 0010 2B68     		ldr	r3, [r5]
 716:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 261              		.loc 1 716 0
 262 0012 054A     		ldr	r2, .L21+4
 263 0014 2140     		ands	r1, r4
 264 0016 1A40     		ands	r2, r3
 265 0018 0B00     		movs	r3, r1
 266 001a 1343     		orrs	r3, r2
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 267              		.loc 1 715 0
 268 001c 2B60     		str	r3, [r5]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 269              		.loc 1 720 0
 270 001e FFF7FEFF 		bl	CyExitCriticalSection
 271              	.LVL14:
 721:Generated_Source\PSoC4/CyLib.c **** }
 272              		.loc 1 721 0
 273              		@ sp needed
 274 0022 70BD     		pop	{r4, r5, r6, pc}
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 0024 00010B40 		.word	1074462976
 279 0028 FFFFC7FF 		.word	-3670017
 280              		.cfi_endproc
 281              	.LFE5:
 282              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 283              		.section	.text.CySysLvdDisable,"ax",%progbits
 284              		.align	1
 285              		.global	CySysLvdDisable
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysLvdDisable, %function
 289              	CySysLvdDisable:
 290              	.LFB8:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 19


 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 20


 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 21


 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 22


 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 948:Generated_Source\PSoC4/CyLib.c ****     }
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 23


 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 24


1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 25


1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 26


1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 27


1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 28


1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1279:Generated_Source\PSoC4/CyLib.c ****     }
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 29


1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1345:Generated_Source\PSoC4/CyLib.c ****     }
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 30


1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 31


1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 32


1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 33


1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 34


1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 35


1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 36


1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1749:Generated_Source\PSoC4/CyLib.c **** 
1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 37


1751:Generated_Source\PSoC4/CyLib.c ****     }
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 38


1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 39


1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1921:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 40


1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 41


1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 42


2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2092:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 43


2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 44


2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 45


2207:Generated_Source\PSoC4/CyLib.c ****     {
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 46


2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2286:Generated_Source\PSoC4/CyLib.c ****     }
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
 291              		.loc 1 2297 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 296              		.loc 1 2298 0
 297 0000 0221     		movs	r1, #2
 298 0002 054A     		ldr	r2, .L24
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2300:Generated_Source\PSoC4/CyLib.c ****     }
 299              		.loc 1 2300 0
 300              		@ sp needed
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 301              		.loc 1 2298 0
 302 0004 1368     		ldr	r3, [r2]
 303 0006 8B43     		bics	r3, r1
 304 0008 1360     		str	r3, [r2]
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 305              		.loc 1 2299 0
 306 000a 044A     		ldr	r2, .L24+4
 307 000c 0139     		subs	r1, r1, #1
 308 000e 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 47


 309 0010 8B43     		bics	r3, r1
 310 0012 1360     		str	r3, [r2]
 311              		.loc 1 2300 0
 312 0014 7047     		bx	lr
 313              	.L25:
 314 0016 C046     		.align	2
 315              	.L24:
 316 0018 08000B40 		.word	1074462728
 317 001c 18000B40 		.word	1074462744
 318              		.cfi_endproc
 319              	.LFE8:
 320              		.size	CySysLvdDisable, .-CySysLvdDisable
 321              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 322              		.align	1
 323              		.global	CySysLvdGetInterruptSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysLvdGetInterruptSource, %function
 327              	CySysLvdGetInterruptSource:
 328              	.LFB9:
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
 329              		.loc 1 2315 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 334              		.loc 1 2316 0
 335 0000 024B     		ldr	r3, .L27
2317:Generated_Source\PSoC4/CyLib.c ****     }
 336              		.loc 1 2317 0
 337              		@ sp needed
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 338              		.loc 1 2316 0
 339 0002 1868     		ldr	r0, [r3]
 340 0004 0223     		movs	r3, #2
 341 0006 1840     		ands	r0, r3
 342              		.loc 1 2317 0
 343 0008 7047     		bx	lr
 344              	.L28:
 345 000a C046     		.align	2
 346              	.L27:
 347 000c 04000B40 		.word	1074462724
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 48


 348              		.cfi_endproc
 349              	.LFE9:
 350              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 351              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 352              		.align	1
 353              		.global	CySysLvdClearInterrupt
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysLvdClearInterrupt, %function
 357              	CySysLvdClearInterrupt:
 358              	.LFB10:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 2331 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 364              		.loc 1 2332 0
 365 0000 0222     		movs	r2, #2
 366 0002 014B     		ldr	r3, .L30
2333:Generated_Source\PSoC4/CyLib.c ****     }
 367              		.loc 1 2333 0
 368              		@ sp needed
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 369              		.loc 1 2332 0
 370 0004 1A60     		str	r2, [r3]
 371              		.loc 1 2333 0
 372 0006 7047     		bx	lr
 373              	.L31:
 374              		.align	2
 375              	.L30:
 376 0008 04000B40 		.word	1074462724
 377              		.cfi_endproc
 378              	.LFE10:
 379              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 380              		.section	.text.CySysGetResetReason,"ax",%progbits
 381              		.align	1
 382              		.global	CySysGetResetReason
 383              		.code	16
 384              		.thumb_func
 385              		.type	CySysGetResetReason, %function
 386              	CySysGetResetReason:
 387              	.LFB11:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 49


2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 388              		.loc 1 2357 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              	.LVL15:
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 394              		.loc 1 2360 0
 395 0000 1923     		movs	r3, #25
 396 0002 0200     		movs	r2, r0
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 397              		.loc 1 2361 0
 398 0004 0249     		ldr	r1, .L33
2360:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 399              		.loc 1 2360 0
 400 0006 1A40     		ands	r2, r3
 401              	.LVL16:
 402              		.loc 1 2361 0
 403 0008 0868     		ldr	r0, [r1]
 404              	.LVL17:
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2366:Generated_Source\PSoC4/CyLib.c **** }
 405              		.loc 1 2366 0
 406              		@ sp needed
2365:Generated_Source\PSoC4/CyLib.c **** }
 407              		.loc 1 2365 0
 408 000a 1840     		ands	r0, r3
 409              	.LVL18:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 50


2363:Generated_Source\PSoC4/CyLib.c **** 
 410              		.loc 1 2363 0
 411 000c 0A60     		str	r2, [r1]
 412              		.loc 1 2366 0
 413 000e 7047     		bx	lr
 414              	.L34:
 415              		.align	2
 416              	.L33:
 417 0010 00030B40 		.word	1074463488
 418              		.cfi_endproc
 419              	.LFE11:
 420              		.size	CySysGetResetReason, .-CySysGetResetReason
 421              		.section	.text.CyDisableInts,"ax",%progbits
 422              		.align	1
 423              		.global	CyDisableInts
 424              		.code	16
 425              		.thumb_func
 426              		.type	CyDisableInts, %function
 427              	CyDisableInts:
 428              	.LFB12:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 429              		.loc 1 2380 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 434              		.loc 1 2387 0
 435 0000 0122     		movs	r2, #1
2384:Generated_Source\PSoC4/CyLib.c **** 
 436              		.loc 1 2384 0
 437 0002 024B     		ldr	r3, .L36
 438              		.loc 1 2387 0
 439 0004 5242     		rsbs	r2, r2, #0
2384:Generated_Source\PSoC4/CyLib.c **** 
 440              		.loc 1 2384 0
 441 0006 1868     		ldr	r0, [r3]
 442              	.LVL19:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 51


2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2390:Generated_Source\PSoC4/CyLib.c **** }
 443              		.loc 1 2390 0
 444              		@ sp needed
2387:Generated_Source\PSoC4/CyLib.c **** 
 445              		.loc 1 2387 0
 446 0008 1A60     		str	r2, [r3]
 447              		.loc 1 2390 0
 448 000a 7047     		bx	lr
 449              	.L37:
 450              		.align	2
 451              	.L36:
 452 000c 80E100E0 		.word	-536813184
 453              		.cfi_endproc
 454              	.LFE12:
 455              		.size	CyDisableInts, .-CyDisableInts
 456              		.section	.text.CyEnableInts,"ax",%progbits
 457              		.align	1
 458              		.global	CyEnableInts
 459              		.code	16
 460              		.thumb_func
 461              		.type	CyEnableInts, %function
 462              	CyEnableInts:
 463              	.LFB13:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 464              		.loc 1 2403 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              	.LVL20:
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 470              		.loc 1 2404 0
 471 0000 014B     		ldr	r3, .L39
2405:Generated_Source\PSoC4/CyLib.c **** }
 472              		.loc 1 2405 0
 473              		@ sp needed
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 474              		.loc 1 2404 0
 475 0002 1860     		str	r0, [r3]
 476              		.loc 1 2405 0
 477 0004 7047     		bx	lr
 478              	.L40:
 479 0006 C046     		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 52


 480              	.L39:
 481 0008 00E100E0 		.word	-536813312
 482              		.cfi_endproc
 483              	.LFE13:
 484              		.size	CyEnableInts, .-CyEnableInts
 485              		.section	.text.CyIntSetSysVector,"ax",%progbits
 486              		.align	1
 487              		.global	CyIntSetSysVector
 488              		.code	16
 489              		.thumb_func
 490              		.type	CyIntSetSysVector, %function
 491              	CyIntSetSysVector:
 492              	.LFB14:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
 493              		.loc 1 2428 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498              	.LVL21:
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2431:Generated_Source\PSoC4/CyLib.c **** 
2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 499              		.loc 1 2435 0
 500 0000 8023     		movs	r3, #128
 501 0002 8000     		lsls	r0, r0, #2
 502              	.LVL22:
 503 0004 9B05     		lsls	r3, r3, #22
 504 0006 C318     		adds	r3, r0, r3
 505 0008 1868     		ldr	r0, [r3]
 506              	.LVL23:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 53


2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2441:Generated_Source\PSoC4/CyLib.c **** }
 507              		.loc 1 2441 0
 508              		@ sp needed
2438:Generated_Source\PSoC4/CyLib.c **** 
 509              		.loc 1 2438 0
 510 000a 1960     		str	r1, [r3]
 511              		.loc 1 2441 0
 512 000c 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE14:
 515              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 516              		.section	.text.CyIntGetSysVector,"ax",%progbits
 517              		.align	1
 518              		.global	CyIntGetSysVector
 519              		.code	16
 520              		.thumb_func
 521              		.type	CyIntGetSysVector, %function
 522              	CyIntGetSysVector:
 523              	.LFB15:
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
 524              		.loc 1 2462 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL24:
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 530              		.loc 1 2467 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 54


 531 0000 8023     		movs	r3, #128
 532 0002 8000     		lsls	r0, r0, #2
 533              	.LVL25:
 534 0004 9B05     		lsls	r3, r3, #22
 535 0006 C018     		adds	r0, r0, r3
 536 0008 0068     		ldr	r0, [r0]
2468:Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2468 0
 538              		@ sp needed
 539 000a 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE15:
 542              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 543              		.section	.text.CyIntSetVector,"ax",%progbits
 544              		.align	1
 545              		.global	CyIntSetVector
 546              		.code	16
 547              		.thumb_func
 548              		.type	CyIntSetVector, %function
 549              	CyIntSetVector:
 550              	.LFB16:
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
 551              		.loc 1 2484 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL26:
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 557              		.loc 1 2491 0
 558 0000 024B     		ldr	r3, .L44
 559 0002 8000     		lsls	r0, r0, #2
 560              	.LVL27:
 561 0004 C318     		adds	r3, r0, r3
 562 0006 1868     		ldr	r0, [r3]
 563              	.LVL28:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 55


2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2497:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 2497 0
 565              		@ sp needed
2494:Generated_Source\PSoC4/CyLib.c **** 
 566              		.loc 1 2494 0
 567 0008 1960     		str	r1, [r3]
 568              		.loc 1 2497 0
 569 000a 7047     		bx	lr
 570              	.L45:
 571              		.align	2
 572              	.L44:
 573 000c 40000020 		.word	536870976
 574              		.cfi_endproc
 575              	.LFE16:
 576              		.size	CyIntSetVector, .-CyIntSetVector
 577              		.section	.text.CyIntGetVector,"ax",%progbits
 578              		.align	1
 579              		.global	CyIntGetVector
 580              		.code	16
 581              		.thumb_func
 582              		.type	CyIntGetVector, %function
 583              	CyIntGetVector:
 584              	.LFB17:
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
 585              		.loc 1 2512 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 590              	.LVL29:
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 591              		.loc 1 2517 0
 592 0000 024B     		ldr	r3, .L47
 593 0002 8000     		lsls	r0, r0, #2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 56


 594              	.LVL30:
 595 0004 C018     		adds	r0, r0, r3
 596 0006 0068     		ldr	r0, [r0]
2518:Generated_Source\PSoC4/CyLib.c **** }
 597              		.loc 1 2518 0
 598              		@ sp needed
 599 0008 7047     		bx	lr
 600              	.L48:
 601 000a C046     		.align	2
 602              	.L47:
 603 000c 40000020 		.word	536870976
 604              		.cfi_endproc
 605              	.LFE17:
 606              		.size	CyIntGetVector, .-CyIntGetVector
 607              		.section	.text.CyIntSetPriority,"ax",%progbits
 608              		.align	1
 609              		.global	CyIntSetPriority
 610              		.code	16
 611              		.thumb_func
 612              		.type	CyIntSetPriority, %function
 613              	CyIntSetPriority:
 614              	.LFB18:
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
 615              		.loc 1 2531 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL31:
 620 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 621              		.cfi_def_cfa_offset 24
 622              		.cfi_offset 3, -24
 623              		.cfi_offset 4, -20
 624              		.cfi_offset 5, -16
 625              		.cfi_offset 6, -12
 626              		.cfi_offset 7, -8
 627              		.cfi_offset 14, -4
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 628              		.loc 1 2539 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 57


 629 0002 0326     		movs	r6, #3
 630 0004 0500     		movs	r5, r0
 631 0006 3540     		ands	r5, r6
 632 0008 B540     		lsls	r5, r5, r6
2531:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 633              		.loc 1 2531 0
 634 000a 0F00     		movs	r7, r1
 635 000c 0400     		movs	r4, r0
 636              		.loc 1 2539 0
 637 000e 0635     		adds	r5, r5, #6
 638              	.LVL32:
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 639              		.loc 1 2544 0
 640 0010 AE40     		lsls	r6, r6, r5
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 641              		.loc 1 2545 0
 642 0012 AF40     		lsls	r7, r7, r5
2541:Generated_Source\PSoC4/CyLib.c **** 
 643              		.loc 1 2541 0
 644 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 645              	.LVL33:
2543:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 646              		.loc 1 2543 0
 647 0018 A408     		lsrs	r4, r4, #2
 648 001a 054B     		ldr	r3, .L50
 649 001c A400     		lsls	r4, r4, #2
 650 001e E418     		adds	r4, r4, r3
 651 0020 2368     		ldr	r3, [r4]
 652              	.LVL34:
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2549:Generated_Source\PSoC4/CyLib.c **** }
 653              		.loc 1 2549 0
 654              		@ sp needed
2544:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 655              		.loc 1 2544 0
 656 0022 B343     		bics	r3, r6
 657              	.LVL35:
2545:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 658              		.loc 1 2545 0
 659 0024 1F43     		orrs	r7, r3
 660              	.LVL36:
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 661              		.loc 1 2546 0
 662 0026 2760     		str	r7, [r4]
2548:Generated_Source\PSoC4/CyLib.c **** }
 663              		.loc 1 2548 0
 664 0028 FFF7FEFF 		bl	CyExitCriticalSection
 665              	.LVL37:
 666              	.LVL38:
 667              	.LVL39:
 668              		.loc 1 2549 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 58


 669 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 670              	.L51:
 671 002e C046     		.align	2
 672              	.L50:
 673 0030 00E400E0 		.word	-536812544
 674              		.cfi_endproc
 675              	.LFE18:
 676              		.size	CyIntSetPriority, .-CyIntSetPriority
 677              		.section	.text.CyIntGetPriority,"ax",%progbits
 678              		.align	1
 679              		.global	CyIntGetPriority
 680              		.code	16
 681              		.thumb_func
 682              		.type	CyIntGetPriority, %function
 683              	CyIntGetPriority:
 684              	.LFB19:
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
 685              		.loc 1 2565 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690              	.LVL40:
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 691              		.loc 1 2570 0
 692 0000 8308     		lsrs	r3, r0, #2
 693 0002 064A     		ldr	r2, .L53
 694 0004 9B00     		lsls	r3, r3, #2
 695 0006 9B18     		adds	r3, r3, r2
 696 0008 1968     		ldr	r1, [r3]
 697              	.LVL41:
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 698              		.loc 1 2572 0
 699 000a 0322     		movs	r2, #3
 700 000c 0300     		movs	r3, r0
 701 000e 1340     		ands	r3, r2
 702 0010 9340     		lsls	r3, r3, r2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 59


 703 0012 0633     		adds	r3, r3, #6
 704 0014 D940     		lsrs	r1, r1, r3
 705              	.LVL42:
 706 0016 0800     		movs	r0, r1
 707              	.LVL43:
2573:Generated_Source\PSoC4/CyLib.c **** }
 708              		.loc 1 2573 0
 709              		@ sp needed
2572:Generated_Source\PSoC4/CyLib.c **** }
 710              		.loc 1 2572 0
 711 0018 1040     		ands	r0, r2
 712              		.loc 1 2573 0
 713 001a 7047     		bx	lr
 714              	.L54:
 715              		.align	2
 716              	.L53:
 717 001c 00E400E0 		.word	-536812544
 718              		.cfi_endproc
 719              	.LFE19:
 720              		.size	CyIntGetPriority, .-CyIntGetPriority
 721              		.section	.text.CyIntEnable,"ax",%progbits
 722              		.align	1
 723              		.global	CyIntEnable
 724              		.code	16
 725              		.thumb_func
 726              		.type	CyIntEnable, %function
 727              	CyIntEnable:
 728              	.LFB20:
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 729              		.loc 1 2586 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 734              	.LVL44:
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 735              		.loc 1 2587 0
 736 0000 1F23     		movs	r3, #31
 737 0002 1840     		ands	r0, r3
 738              	.LVL45:
 739 0004 1E3B     		subs	r3, r3, #30
 740 0006 8340     		lsls	r3, r3, r0
 741 0008 014A     		ldr	r2, .L56
2588:Generated_Source\PSoC4/CyLib.c **** }
 742              		.loc 1 2588 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 60


 743              		@ sp needed
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 744              		.loc 1 2587 0
 745 000a 1360     		str	r3, [r2]
 746              		.loc 1 2588 0
 747 000c 7047     		bx	lr
 748              	.L57:
 749 000e C046     		.align	2
 750              	.L56:
 751 0010 00E100E0 		.word	-536813312
 752              		.cfi_endproc
 753              	.LFE20:
 754              		.size	CyIntEnable, .-CyIntEnable
 755              		.section	.text.CyIntGetState,"ax",%progbits
 756              		.align	1
 757              		.global	CyIntGetState
 758              		.code	16
 759              		.thumb_func
 760              		.type	CyIntGetState, %function
 761              	CyIntGetState:
 762              	.LFB21:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 763              		.loc 1 2604 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768              	.LVL46:
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 769              		.loc 1 2606 0
 770 0000 1F22     		movs	r2, #31
 771 0002 044B     		ldr	r3, .L59
 772 0004 1040     		ands	r0, r2
 773              	.LVL47:
 774 0006 1B68     		ldr	r3, [r3]
2607:Generated_Source\PSoC4/CyLib.c **** }
 775              		.loc 1 2607 0
 776              		@ sp needed
2606:Generated_Source\PSoC4/CyLib.c **** }
 777              		.loc 1 2606 0
 778 0008 C340     		lsrs	r3, r3, r0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 61


 779 000a 1800     		movs	r0, r3
 780 000c 0123     		movs	r3, #1
 781 000e 1840     		ands	r0, r3
 782              		.loc 1 2607 0
 783 0010 7047     		bx	lr
 784              	.L60:
 785 0012 C046     		.align	2
 786              	.L59:
 787 0014 00E100E0 		.word	-536813312
 788              		.cfi_endproc
 789              	.LFE21:
 790              		.size	CyIntGetState, .-CyIntGetState
 791              		.section	.text.CyIntDisable,"ax",%progbits
 792              		.align	1
 793              		.global	CyIntDisable
 794              		.code	16
 795              		.thumb_func
 796              		.type	CyIntDisable, %function
 797              	CyIntDisable:
 798              	.LFB22:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 799              		.loc 1 2620 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL48:
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 805              		.loc 1 2621 0
 806 0000 1F23     		movs	r3, #31
 807 0002 1840     		ands	r0, r3
 808              	.LVL49:
 809 0004 1E3B     		subs	r3, r3, #30
 810 0006 8340     		lsls	r3, r3, r0
 811 0008 014A     		ldr	r2, .L62
2622:Generated_Source\PSoC4/CyLib.c **** }
 812              		.loc 1 2622 0
 813              		@ sp needed
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 814              		.loc 1 2621 0
 815 000a 1360     		str	r3, [r2]
 816              		.loc 1 2622 0
 817 000c 7047     		bx	lr
 818              	.L63:
 819 000e C046     		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 62


 820              	.L62:
 821 0010 80E100E0 		.word	-536813184
 822              		.cfi_endproc
 823              	.LFE22:
 824              		.size	CyIntDisable, .-CyIntDisable
 825              		.section	.text.CyIntSetPending,"ax",%progbits
 826              		.align	1
 827              		.global	CyIntSetPending
 828              		.code	16
 829              		.thumb_func
 830              		.type	CyIntSetPending, %function
 831              	CyIntSetPending:
 832              	.LFB23:
2623:Generated_Source\PSoC4/CyLib.c **** 
2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 833              		.loc 1 2634 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838              	.LVL50:
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 839              		.loc 1 2635 0
 840 0000 1F23     		movs	r3, #31
 841 0002 1840     		ands	r0, r3
 842              	.LVL51:
 843 0004 1E3B     		subs	r3, r3, #30
 844 0006 8340     		lsls	r3, r3, r0
 845 0008 014A     		ldr	r2, .L65
2636:Generated_Source\PSoC4/CyLib.c **** }
 846              		.loc 1 2636 0
 847              		@ sp needed
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 848              		.loc 1 2635 0
 849 000a 1360     		str	r3, [r2]
 850              		.loc 1 2636 0
 851 000c 7047     		bx	lr
 852              	.L66:
 853 000e C046     		.align	2
 854              	.L65:
 855 0010 00E200E0 		.word	-536813056
 856              		.cfi_endproc
 857              	.LFE23:
 858              		.size	CyIntSetPending, .-CyIntSetPending
 859              		.section	.text.CyIntClearPending,"ax",%progbits
 860              		.align	1
 861              		.global	CyIntClearPending
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 63


 862              		.code	16
 863              		.thumb_func
 864              		.type	CyIntClearPending, %function
 865              	CyIntClearPending:
 866              	.LFB24:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 867              		.loc 1 2649 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872              	.LVL52:
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 873              		.loc 1 2650 0
 874 0000 1F23     		movs	r3, #31
 875 0002 1840     		ands	r0, r3
 876              	.LVL53:
 877 0004 1E3B     		subs	r3, r3, #30
 878 0006 8340     		lsls	r3, r3, r0
 879 0008 014A     		ldr	r2, .L68
2651:Generated_Source\PSoC4/CyLib.c **** }
 880              		.loc 1 2651 0
 881              		@ sp needed
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 882              		.loc 1 2650 0
 883 000a 1360     		str	r3, [r2]
 884              		.loc 1 2651 0
 885 000c 7047     		bx	lr
 886              	.L69:
 887 000e C046     		.align	2
 888              	.L68:
 889 0010 80E200E0 		.word	-536812928
 890              		.cfi_endproc
 891              	.LFE24:
 892              		.size	CyIntClearPending, .-CyIntClearPending
 893              		.section	.text.CyHalt,"ax",%progbits
 894              		.align	1
 895              		.global	CyHalt
 896              		.code	16
 897              		.thumb_func
 898              		.type	CyHalt, %function
 899              	CyHalt:
 900              	.LFB25:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 64


2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 901              		.loc 1 2664 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL54:
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 907              		.loc 1 2673 0
 908              		.syntax divided
 909              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 910 0000 01BE     		    bkpt    1
 911              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 912              		.loc 1 2677 0
 913              		.thumb
 914              		.syntax unified
 915              		@ sp needed
 916 0002 7047     		bx	lr
 917              		.cfi_endproc
 918              	.LFE25:
 919              		.size	CyHalt, .-CyHalt
 920              		.section	.text.CySoftwareReset,"ax",%progbits
 921              		.align	1
 922              		.global	CySoftwareReset
 923              		.code	16
 924              		.thumb_func
 925              		.type	CySoftwareReset, %function
 926              	CySoftwareReset:
 927              	.LFB26:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 65


2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 928              		.loc 1 2688 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		@ link register save eliminated.
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 933              		.loc 1 2693 0
 934 0000 034A     		ldr	r2, .L72
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 935              		.loc 1 2694 0
 936 0002 0449     		ldr	r1, .L72+4
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 937              		.loc 1 2693 0
 938 0004 1368     		ldr	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c **** }
 939              		.loc 1 2695 0
 940              		@ sp needed
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 941              		.loc 1 2694 0
 942 0006 9BB2     		uxth	r3, r3
 943 0008 0B43     		orrs	r3, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 944              		.loc 1 2693 0
 945 000a 1360     		str	r3, [r2]
 946              		.loc 1 2695 0
 947 000c 7047     		bx	lr
 948              	.L73:
 949 000e C046     		.align	2
 950              	.L72:
 951 0010 0CED00E0 		.word	-536810228
 952 0014 0400FA05 		.word	100270084
 953              		.cfi_endproc
 954              	.LFE26:
 955              		.size	CySoftwareReset, .-CySoftwareReset
 956              		.section	.text.CyDelay,"ax",%progbits
 957              		.align	1
 958              		.global	CyDelay
 959              		.code	16
 960              		.thumb_func
 961              		.type	CyDelay, %function
 962              	CyDelay:
 963              	.LFB27:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 66


2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 964              		.loc 1 2708 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              	.LVL55:
 969 0000 70B5     		push	{r4, r5, r6, lr}
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 4, -16
 972              		.cfi_offset 5, -12
 973              		.cfi_offset 6, -8
 974              		.cfi_offset 14, -4
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 975              		.loc 1 2709 0
 976 0002 8025     		movs	r5, #128
2708:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 977              		.loc 1 2708 0
 978 0004 0400     		movs	r4, r0
 979              		.loc 1 2709 0
 980 0006 2D02     		lsls	r5, r5, #8
 981              	.LVL56:
 982              	.L75:
 983 0008 064B     		ldr	r3, .L78
 984 000a AC42     		cmp	r4, r5
 985 000c 05D9     		bls	.L77
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 986              		.loc 1 2714 0
 987 000e 5868     		ldr	r0, [r3, #4]
 988 0010 FFF7FEFF 		bl	CyDelayCycles
 989              	.LVL57:
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 990              		.loc 1 2715 0
 991 0014 044B     		ldr	r3, .L78+4
 992 0016 E418     		adds	r4, r4, r3
 993              	.LVL58:
 994 0018 F6E7     		b	.L75
 995              	.L77:
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 996              		.loc 1 2718 0
 997 001a 9868     		ldr	r0, [r3, #8]
2719:Generated_Source\PSoC4/CyLib.c **** }
 998              		.loc 1 2719 0
 999              		@ sp needed
2718:Generated_Source\PSoC4/CyLib.c **** }
 1000              		.loc 1 2718 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 67


 1001 001c 6043     		muls	r0, r4
 1002 001e FFF7FEFF 		bl	CyDelayCycles
 1003              	.LVL59:
 1004              	.LVL60:
 1005              		.loc 1 2719 0
 1006 0022 70BD     		pop	{r4, r5, r6, pc}
 1007              	.L79:
 1008              		.align	2
 1009              	.L78:
 1010 0024 00000000 		.word	.LANCHOR0
 1011 0028 0080FFFF 		.word	-32768
 1012              		.cfi_endproc
 1013              	.LFE27:
 1014              		.size	CyDelay, .-CyDelay
 1015              		.section	.text.CyDelayUs,"ax",%progbits
 1016              		.align	1
 1017              		.global	CyDelayUs
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	CyDelayUs, %function
 1021              	CyDelayUs:
 1022              	.LFB28:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 1023              		.loc 1 2731 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              	.LVL61:
 1028 0000 10B5     		push	{r4, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 4, -8
 1031              		.cfi_offset 14, -4
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1032              		.loc 1 2732 0
 1033 0002 034B     		ldr	r3, .L81
2733:Generated_Source\PSoC4/CyLib.c **** }
 1034              		.loc 1 2733 0
 1035              		@ sp needed
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1036              		.loc 1 2732 0
 1037 0004 1B7B     		ldrb	r3, [r3, #12]
 1038 0006 5843     		muls	r0, r3
 1039              	.LVL62:
 1040 0008 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL63:
 1042              		.loc 1 2733 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 68


 1043 000c 10BD     		pop	{r4, pc}
 1044              	.L82:
 1045 000e C046     		.align	2
 1046              	.L81:
 1047 0010 00000000 		.word	.LANCHOR0
 1048              		.cfi_endproc
 1049              	.LFE28:
 1050              		.size	CyDelayUs, .-CyDelayUs
 1051              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1052              		.align	1
 1053              		.global	CySysClkWriteImoFreq
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	CySysClkWriteImoFreq, %function
 1057              	CySysClkWriteImoFreq:
 1058              	.LFB6:
 768:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1059              		.loc 1 768 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 24
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              	.LVL64:
 1064 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1065              		.cfi_def_cfa_offset 20
 1066              		.cfi_offset 4, -20
 1067              		.cfi_offset 5, -16
 1068              		.cfi_offset 6, -12
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 0500     		movs	r5, r0
 1072 0004 87B0     		sub	sp, sp, #28
 1073              		.cfi_def_cfa_offset 48
 790:Generated_Source\PSoC4/CyLib.c **** 
 1074              		.loc 1 790 0
 1075 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1076              	.LVL65:
 840:Generated_Source\PSoC4/CyLib.c ****         {
 1077              		.loc 1 840 0
 1078 000a EB1E     		subs	r3, r5, #3
 790:Generated_Source\PSoC4/CyLib.c **** 
 1079              		.loc 1 790 0
 1080 000c 0490     		str	r0, [sp, #16]
 1081              	.LVL66:
 840:Generated_Source\PSoC4/CyLib.c ****         {
 1082              		.loc 1 840 0
 1083 000e 0393     		str	r3, [sp, #12]
 1084 0010 2D2B     		cmp	r3, #45
 1085 0012 5BD8     		bhi	.L85
 842:Generated_Source\PSoC4/CyLib.c ****             {
 1086              		.loc 1 842 0
 1087 0014 304B     		ldr	r3, .L96
 1088 0016 1B78     		ldrb	r3, [r3]
 1089 0018 9D42     		cmp	r5, r3
 1090 001a 04D8     		bhi	.L86
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1091              		.loc 1 844 0
 1092 001c 2F4B     		ldr	r3, .L96+4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 69


 1093 001e 1C78     		ldrb	r4, [r3]
 845:Generated_Source\PSoC4/CyLib.c ****             }
 1094              		.loc 1 845 0
 1095 0020 2F4B     		ldr	r3, .L96+8
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1096              		.loc 1 844 0
 1097 0022 E4B2     		uxtb	r4, r4
 1098              	.LVL67:
 1099 0024 1EE0     		b	.L94
 1100              	.LVL68:
 1101              	.L86:
 847:Generated_Source\PSoC4/CyLib.c ****             {
 1102              		.loc 1 847 0
 1103 0026 2F4B     		ldr	r3, .L96+12
 1104 0028 1B78     		ldrb	r3, [r3]
 1105 002a 9D42     		cmp	r5, r3
 1106 002c 04D8     		bhi	.L88
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1107              		.loc 1 849 0
 1108 002e 2E4B     		ldr	r3, .L96+16
 1109 0030 1C78     		ldrb	r4, [r3]
 850:Generated_Source\PSoC4/CyLib.c ****             }
 1110              		.loc 1 850 0
 1111 0032 2E4B     		ldr	r3, .L96+20
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1112              		.loc 1 849 0
 1113 0034 E4B2     		uxtb	r4, r4
 1114              	.LVL69:
 1115 0036 15E0     		b	.L94
 1116              	.LVL70:
 1117              	.L88:
 852:Generated_Source\PSoC4/CyLib.c ****             {
 1118              		.loc 1 852 0
 1119 0038 2D4B     		ldr	r3, .L96+24
 1120 003a 1B78     		ldrb	r3, [r3]
 1121 003c 9D42     		cmp	r5, r3
 1122 003e 04D8     		bhi	.L89
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1123              		.loc 1 854 0
 1124 0040 2C4B     		ldr	r3, .L96+28
 1125 0042 1C78     		ldrb	r4, [r3]
 855:Generated_Source\PSoC4/CyLib.c ****             }
 1126              		.loc 1 855 0
 1127 0044 2C4B     		ldr	r3, .L96+32
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1128              		.loc 1 854 0
 1129 0046 E4B2     		uxtb	r4, r4
 1130              	.LVL71:
 1131 0048 0CE0     		b	.L94
 1132              	.LVL72:
 1133              	.L89:
 857:Generated_Source\PSoC4/CyLib.c ****             {
 1134              		.loc 1 857 0
 1135 004a 2C4B     		ldr	r3, .L96+36
 1136 004c 1B78     		ldrb	r3, [r3]
 1137 004e 9D42     		cmp	r5, r3
 1138 0050 04D8     		bhi	.L90
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 70


 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1139              		.loc 1 859 0
 1140 0052 2B4B     		ldr	r3, .L96+40
 1141 0054 1C78     		ldrb	r4, [r3]
 860:Generated_Source\PSoC4/CyLib.c ****             }
 1142              		.loc 1 860 0
 1143 0056 2B4B     		ldr	r3, .L96+44
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1144              		.loc 1 859 0
 1145 0058 E4B2     		uxtb	r4, r4
 1146              	.LVL73:
 1147 005a 03E0     		b	.L94
 1148              	.LVL74:
 1149              	.L90:
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1150              		.loc 1 864 0
 1151 005c 2A4B     		ldr	r3, .L96+48
 1152 005e 1C78     		ldrb	r4, [r3]
 865:Generated_Source\PSoC4/CyLib.c ****             }
 1153              		.loc 1 865 0
 1154 0060 2A4B     		ldr	r3, .L96+52
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1155              		.loc 1 864 0
 1156 0062 E4B2     		uxtb	r4, r4
 1157              	.LVL75:
 1158              	.L94:
 865:Generated_Source\PSoC4/CyLib.c ****             }
 1159              		.loc 1 865 0
 1160 0064 1B78     		ldrb	r3, [r3]
 869:Generated_Source\PSoC4/CyLib.c **** 
 1161              		.loc 1 869 0
 1162 0066 EA1E     		subs	r2, r5, #3
 865:Generated_Source\PSoC4/CyLib.c ****             }
 1163              		.loc 1 865 0
 1164 0068 DBB2     		uxtb	r3, r3
 1165 006a 0193     		str	r3, [sp, #4]
 1166              	.LVL76:
 869:Generated_Source\PSoC4/CyLib.c **** 
 1167              		.loc 1 869 0
 1168 006c 284B     		ldr	r3, .L96+56
 1169 006e 294F     		ldr	r7, .L96+60
 1170 0070 9A5C     		ldrb	r2, [r3, r2]
 1171 0072 0593     		str	r3, [sp, #20]
 1172 0074 0292     		str	r2, [sp, #8]
 1173              	.LVL77:
 881:Generated_Source\PSoC4/CyLib.c ****             {
 1174              		.loc 1 881 0
 1175 0076 2F2A     		cmp	r2, #47
 1176 0078 04D9     		bls	.L91
 881:Generated_Source\PSoC4/CyLib.c ****             {
 1177              		.loc 1 881 0 is_stmt 0 discriminator 1
 1178 007a 2A2D     		cmp	r5, #42
 1179 007c 02D9     		bls	.L91
 884:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1180              		.loc 1 884 0 is_stmt 1
 1181 007e 1926     		movs	r6, #25
 1182 0080 3E60     		str	r6, [r7]
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 71


 1183 0082 08E0     		b	.L95
 1184              	.L91:
 893:Generated_Source\PSoC4/CyLib.c ****             }
 1185              		.loc 1 893 0
 1186 0084 3F23     		movs	r3, #63
 1187 0086 3E68     		ldr	r6, [r7]
 1188 0088 1E40     		ands	r6, r3
 1189              	.LVL78:
 905:Generated_Source\PSoC4/CyLib.c ****             {
 1190              		.loc 1 905 0
 1191 008a 029B     		ldr	r3, [sp, #8]
 1192 008c B342     		cmp	r3, r6
 1193 008e 05D2     		bcs	.L92
 908:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1194              		.loc 1 908 0
 1195 0090 204B     		ldr	r3, .L96+60
 1196 0092 029A     		ldr	r2, [sp, #8]
 1197 0094 1A60     		str	r2, [r3]
 1198              	.LVL79:
 1199              	.L95:
 909:Generated_Source\PSoC4/CyLib.c ****             }
 1200              		.loc 1 909 0
 1201 0096 0520     		movs	r0, #5
 1202 0098 FFF7FEFF 		bl	CyDelayCycles
 1203              	.LVL80:
 1204              	.L92:
 913:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1205              		.loc 1 913 0
 1206 009c 1B4B     		ldr	r3, .L96+52
 1207 009e 1E4A     		ldr	r2, .L96+64
 1208 00a0 ED18     		adds	r5, r5, r3
 1209              	.LVL81:
 1210 00a2 2B78     		ldrb	r3, [r5]
 916:Generated_Source\PSoC4/CyLib.c **** 
 1211              		.loc 1 916 0
 1212 00a4 0520     		movs	r0, #5
 913:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1213              		.loc 1 913 0
 1214 00a6 DBB2     		uxtb	r3, r3
 1215 00a8 1360     		str	r3, [r2]
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1216              		.loc 1 914 0
 1217 00aa 1C4B     		ldr	r3, .L96+68
 915:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1218              		.loc 1 915 0
 1219 00ac 019A     		ldr	r2, [sp, #4]
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1220              		.loc 1 914 0
 1221 00ae 1C60     		str	r4, [r3]
 915:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1222              		.loc 1 915 0
 1223 00b0 1B4B     		ldr	r3, .L96+72
 1224 00b2 1A60     		str	r2, [r3]
 916:Generated_Source\PSoC4/CyLib.c **** 
 1225              		.loc 1 916 0
 1226 00b4 FFF7FEFF 		bl	CyDelayUs
 1227              	.LVL82:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 72


 918:Generated_Source\PSoC4/CyLib.c ****             {
 1228              		.loc 1 918 0
 1229 00b8 029B     		ldr	r3, [sp, #8]
 1230 00ba B342     		cmp	r3, r6
 1231 00bc 06D9     		bls	.L85
 921:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1232              		.loc 1 921 0
 1233 00be 059B     		ldr	r3, [sp, #20]
 1234 00c0 039A     		ldr	r2, [sp, #12]
 922:Generated_Source\PSoC4/CyLib.c ****             }
 1235              		.loc 1 922 0
 1236 00c2 0520     		movs	r0, #5
 921:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1237              		.loc 1 921 0
 1238 00c4 9B5C     		ldrb	r3, [r3, r2]
 1239 00c6 3B60     		str	r3, [r7]
 922:Generated_Source\PSoC4/CyLib.c ****             }
 1240              		.loc 1 922 0
 1241 00c8 FFF7FEFF 		bl	CyDelayCycles
 1242              	.LVL83:
 1243              	.L85:
 947:Generated_Source\PSoC4/CyLib.c ****     }
 1244              		.loc 1 947 0
 1245 00cc 0498     		ldr	r0, [sp, #16]
 1246 00ce FFF7FEFF 		bl	CyExitCriticalSection
 1247              	.LVL84:
 948:Generated_Source\PSoC4/CyLib.c **** 
 1248              		.loc 1 948 0
 1249 00d2 07B0     		add	sp, sp, #28
 1250              		@ sp needed
 1251 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1252              	.L97:
 1253 00d6 C046     		.align	2
 1254              	.L96:
 1255 00d8 C0F1FF0F 		.word	268431808
 1256 00dc C1F1FF0F 		.word	268431809
 1257 00e0 C2F1FF0F 		.word	268431810
 1258 00e4 C3F1FF0F 		.word	268431811
 1259 00e8 C4F1FF0F 		.word	268431812
 1260 00ec C5F1FF0F 		.word	268431813
 1261 00f0 C6F1FF0F 		.word	268431814
 1262 00f4 C7F1FF0F 		.word	268431815
 1263 00f8 C8F1FF0F 		.word	268431816
 1264 00fc C9F1FF0F 		.word	268431817
 1265 0100 CAF1FF0F 		.word	268431818
 1266 0104 CBF1FF0F 		.word	268431819
 1267 0108 CCF1FF0F 		.word	268431820
 1268 010c CDF1FF0F 		.word	268431821
 1269 0110 00000000 		.word	.LANCHOR1
 1270 0114 2CFF0B40 		.word	1074528044
 1271 0118 28FF0B40 		.word	1074528040
 1272 011c 1CFF0B40 		.word	1074528028
 1273 0120 20FF0B40 		.word	1074528032
 1274              		.cfi_endproc
 1275              	.LFE6:
 1276              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1277              		.section	.text.CySysLvdEnable,"ax",%progbits
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 73


 1278              		.align	1
 1279              		.global	CySysLvdEnable
 1280              		.code	16
 1281              		.thumb_func
 1282              		.type	CySysLvdEnable, %function
 1283              	CySysLvdEnable:
 1284              	.LFB7:
2267:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1285              		.loc 1 2267 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              	.LVL85:
 1290 0000 70B5     		push	{r4, r5, r6, lr}
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 4, -16
 1293              		.cfi_offset 5, -12
 1294              		.cfi_offset 6, -8
 1295              		.cfi_offset 14, -4
2269:Generated_Source\PSoC4/CyLib.c **** 
 1296              		.loc 1 2269 0
 1297 0002 0225     		movs	r5, #2
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1298              		.loc 1 2272 0
 1299 0004 1E21     		movs	r1, #30
2269:Generated_Source\PSoC4/CyLib.c **** 
 1300              		.loc 1 2269 0
 1301 0006 0C4C     		ldr	r4, .L99
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1302              		.loc 1 2272 0
 1303 0008 0C4A     		ldr	r2, .L99+4
2269:Generated_Source\PSoC4/CyLib.c **** 
 1304              		.loc 1 2269 0
 1305 000a 2368     		ldr	r3, [r4]
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1306              		.loc 1 2272 0
 1307 000c 4000     		lsls	r0, r0, #1
 1308              	.LVL86:
2269:Generated_Source\PSoC4/CyLib.c **** 
 1309              		.loc 1 2269 0
 1310 000e AB43     		bics	r3, r5
 1311 0010 2360     		str	r3, [r4]
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1312              		.loc 1 2272 0
 1313 0012 1368     		ldr	r3, [r2]
 1314 0014 0840     		ands	r0, r1
 1315 0016 8B43     		bics	r3, r1
 1316 0018 1843     		orrs	r0, r3
 1317 001a 1060     		str	r0, [r2]
2279:Generated_Source\PSoC4/CyLib.c **** 
 1318              		.loc 1 2279 0
 1319 001c FA20     		movs	r0, #250
2276:Generated_Source\PSoC4/CyLib.c **** 
 1320              		.loc 1 2276 0
 1321 001e 1368     		ldr	r3, [r2]
 1322 0020 1D39     		subs	r1, r1, #29
 1323 0022 0B43     		orrs	r3, r1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 74


 1324 0024 1360     		str	r3, [r2]
2279:Generated_Source\PSoC4/CyLib.c **** 
 1325              		.loc 1 2279 0
 1326 0026 8000     		lsls	r0, r0, #2
 1327 0028 FFF7FEFF 		bl	CyDelayUs
 1328              	.LVL87:
 1329              	.LBB10:
 1330              	.LBB11:
2332:Generated_Source\PSoC4/CyLib.c ****     }
 1331              		.loc 1 2332 0
 1332 002c 044B     		ldr	r3, .L99+8
 1333              	.LBE11:
 1334              	.LBE10:
2286:Generated_Source\PSoC4/CyLib.c **** 
 1335              		.loc 1 2286 0
 1336              		@ sp needed
 1337              	.LBB13:
 1338              	.LBB12:
2332:Generated_Source\PSoC4/CyLib.c ****     }
 1339              		.loc 1 2332 0
 1340 002e 1D60     		str	r5, [r3]
 1341              	.LBE12:
 1342              	.LBE13:
2285:Generated_Source\PSoC4/CyLib.c ****     }
 1343              		.loc 1 2285 0
 1344 0030 2368     		ldr	r3, [r4]
 1345 0032 1D43     		orrs	r5, r3
 1346 0034 2560     		str	r5, [r4]
2286:Generated_Source\PSoC4/CyLib.c **** 
 1347              		.loc 1 2286 0
 1348 0036 70BD     		pop	{r4, r5, r6, pc}
 1349              	.L100:
 1350              		.align	2
 1351              	.L99:
 1352 0038 08000B40 		.word	1074462728
 1353 003c 18000B40 		.word	1074462744
 1354 0040 04000B40 		.word	1074462724
 1355              		.cfi_endproc
 1356              	.LFE7:
 1357              		.size	CySysLvdEnable, .-CySysLvdEnable
 1358              		.global	__aeabi_uidiv
 1359              		.section	.text.CyDelayFreq,"ax",%progbits
 1360              		.align	1
 1361              		.global	CyDelayFreq
 1362              		.code	16
 1363              		.thumb_func
 1364              		.type	CyDelayFreq, %function
 1365              	CyDelayFreq:
 1366              	.LFB29:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 75


2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1367              		.loc 1 2745 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 1371              	.LVL88:
 1372 0000 70B5     		push	{r4, r5, r6, lr}
 1373              		.cfi_def_cfa_offset 16
 1374              		.cfi_offset 4, -16
 1375              		.cfi_offset 5, -12
 1376              		.cfi_offset 6, -8
 1377              		.cfi_offset 14, -4
 1378 0002 0C4C     		ldr	r4, .L104
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1379              		.loc 1 2746 0
 1380 0004 0028     		cmp	r0, #0
 1381 0006 01D0     		beq	.L102
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1382              		.loc 1 2748 0
 1383 0008 2061     		str	r0, [r4, #16]
 1384 000a 01E0     		b	.L103
 1385              	.L102:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1386              		.loc 1 2752 0
 1387 000c 0A4B     		ldr	r3, .L104+4
 1388 000e 2361     		str	r3, [r4, #16]
 1389              	.L103:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1390              		.loc 1 2755 0
 1391 0010 2569     		ldr	r5, [r4, #16]
 1392 0012 0A4B     		ldr	r3, .L104+8
 1393 0014 0A49     		ldr	r1, .L104+12
 1394 0016 E818     		adds	r0, r5, r3
 1395              	.LVL89:
 1396 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1397              	.LVL90:
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1398              		.loc 1 2756 0
 1399 001c FA21     		movs	r1, #250
 1400 001e 094B     		ldr	r3, .L104+16
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1401              		.loc 1 2755 0
 1402 0020 2073     		strb	r0, [r4, #12]
 1403              		.loc 1 2756 0
 1404 0022 8900     		lsls	r1, r1, #2
 1405 0024 E818     		adds	r0, r5, r3
 1406 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1407              	.LVL91:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 76


 1408 002a A060     		str	r0, [r4, #8]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1409              		.loc 1 2757 0
 1410 002c C003     		lsls	r0, r0, #15
 1411 002e 6060     		str	r0, [r4, #4]
2758:Generated_Source\PSoC4/CyLib.c **** }
 1412              		.loc 1 2758 0
 1413              		@ sp needed
 1414 0030 70BD     		pop	{r4, r5, r6, pc}
 1415              	.L105:
 1416 0032 C046     		.align	2
 1417              	.L104:
 1418 0034 00000000 		.word	.LANCHOR0
 1419 0038 00366E01 		.word	24000000
 1420 003c 3F420F00 		.word	999999
 1421 0040 40420F00 		.word	1000000
 1422 0044 E7030000 		.word	999
 1423              		.cfi_endproc
 1424              	.LFE29:
 1425              		.size	CyDelayFreq, .-CyDelayFreq
 1426              		.section	.text.CySysTickInit,"ax",%progbits
 1427              		.align	1
 1428              		.global	CySysTickInit
 1429              		.code	16
 1430              		.thumb_func
 1431              		.type	CySysTickInit, %function
 1432              	CySysTickInit:
 1433              	.LFB31:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2785:Generated_Source\PSoC4/CyLib.c **** }
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 77


2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
 1434              		.loc 1 2806 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL92:
 1439 0000 10B5     		push	{r4, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 4, -8
 1442              		.cfi_offset 14, -4
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1443              		.loc 1 2811 0
 1444 0002 0024     		movs	r4, #0
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1445              		.loc 1 2820 0
 1446 0004 FA21     		movs	r1, #250
2811:Generated_Source\PSoC4/CyLib.c ****     }
 1447              		.loc 1 2811 0
 1448 0006 094B     		ldr	r3, .L107
 1449              	.LBB14:
 1450              	.LBB15:
2438:Generated_Source\PSoC4/CyLib.c **** 
 1451              		.loc 1 2438 0
 1452 0008 094A     		ldr	r2, .L107+4
 1453              	.LBE15:
 1454              	.LBE14:
2811:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 78


 1455              		.loc 1 2811 0
 1456 000a 1C60     		str	r4, [r3]
 1457              	.LVL93:
 1458 000c 1C61     		str	r4, [r3, #16]
 1459 000e 5C60     		str	r4, [r3, #4]
 1460              	.LVL94:
 1461 0010 9C60     		str	r4, [r3, #8]
 1462              	.LVL95:
 1463 0012 DC60     		str	r4, [r3, #12]
 1464              	.LVL96:
 1465              	.LBB18:
 1466              	.LBB16:
2438:Generated_Source\PSoC4/CyLib.c **** 
 1467              		.loc 1 2438 0
 1468 0014 074B     		ldr	r3, .L107+8
 1469              	.LVL97:
 1470              	.LBE16:
 1471              	.LBE18:
 1472              		.loc 1 2820 0
 1473 0016 8900     		lsls	r1, r1, #2
 1474              	.LBB19:
 1475              	.LBB17:
2438:Generated_Source\PSoC4/CyLib.c **** 
 1476              		.loc 1 2438 0
 1477 0018 1A60     		str	r2, [r3]
 1478              	.LVL98:
 1479              	.LBE17:
 1480              	.LBE19:
 1481              		.loc 1 2820 0
 1482 001a 074B     		ldr	r3, .L107+12
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2822:Generated_Source\PSoC4/CyLib.c **** }
 1483              		.loc 1 2822 0
 1484              		@ sp needed
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1485              		.loc 1 2820 0
 1486 001c 1869     		ldr	r0, [r3, #16]
 1487 001e FFF7FEFF 		bl	__aeabi_uidiv
 1488              	.LVL99:
 1489              	.LBB20:
 1490              	.LBB21:
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 79


2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2855:Generated_Source\PSoC4/CyLib.c **** }
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2871:Generated_Source\PSoC4/CyLib.c **** }
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2887:Generated_Source\PSoC4/CyLib.c **** }
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 80


2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1491              		.loc 1 2903 0
 1492 0022 064B     		ldr	r3, .L107+16
 1493 0024 1860     		str	r0, [r3]
 1494              	.LVL100:
 1495              	.LBE21:
 1496              	.LBE20:
 1497              	.LBB22:
 1498              	.LBB23:
2904:Generated_Source\PSoC4/CyLib.c **** }
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2936:Generated_Source\PSoC4/CyLib.c **** }
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 81


2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2993:Generated_Source\PSoC4/CyLib.c ****     }
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 82


3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3016:Generated_Source\PSoC4/CyLib.c **** }
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3027:Generated_Source\PSoC4/CyLib.c **** {
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1499              		.loc 1 3028 0
 1500 0026 064B     		ldr	r3, .L107+20
 1501 0028 1C60     		str	r4, [r3]
 1502              	.LBE23:
 1503              	.LBE22:
2822:Generated_Source\PSoC4/CyLib.c **** 
 1504              		.loc 1 2822 0
 1505 002a 10BD     		pop	{r4, pc}
 1506              	.L108:
 1507              		.align	2
 1508              	.L107:
 1509 002c 00000000 		.word	.LANCHOR2
 1510 0030 00000000 		.word	CySysTickServiceCallbacks
 1511 0034 3C000020 		.word	536870972
 1512 0038 00000000 		.word	.LANCHOR0
 1513 003c 14E000E0 		.word	-536813548
 1514 0040 18E000E0 		.word	-536813544
 1515              		.cfi_endproc
 1516              	.LFE31:
 1517              		.size	CySysTickInit, .-CySysTickInit
 1518              		.section	.text.CySysTickStop,"ax",%progbits
 1519              		.align	1
 1520              		.global	CySysTickStop
 1521              		.code	16
 1522              		.thumb_func
 1523              		.type	CySysTickStop, %function
 1524              	CySysTickStop:
 1525              	.LFB33:
2853:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1526              		.loc 1 2853 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 83


 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 1530              		@ link register save eliminated.
2854:Generated_Source\PSoC4/CyLib.c **** }
 1531              		.loc 1 2854 0
 1532 0000 0121     		movs	r1, #1
 1533 0002 024A     		ldr	r2, .L110
2855:Generated_Source\PSoC4/CyLib.c **** 
 1534              		.loc 1 2855 0
 1535              		@ sp needed
2854:Generated_Source\PSoC4/CyLib.c **** }
 1536              		.loc 1 2854 0
 1537 0004 1368     		ldr	r3, [r2]
 1538 0006 8B43     		bics	r3, r1
 1539 0008 1360     		str	r3, [r2]
2855:Generated_Source\PSoC4/CyLib.c **** 
 1540              		.loc 1 2855 0
 1541 000a 7047     		bx	lr
 1542              	.L111:
 1543              		.align	2
 1544              	.L110:
 1545 000c 10E000E0 		.word	-536813552
 1546              		.cfi_endproc
 1547              	.LFE33:
 1548              		.size	CySysTickStop, .-CySysTickStop
 1549              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1550              		.align	1
 1551              		.global	CySysTickEnableInterrupt
 1552              		.code	16
 1553              		.thumb_func
 1554              		.type	CySysTickEnableInterrupt, %function
 1555              	CySysTickEnableInterrupt:
 1556              	.LFB34:
2869:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1557              		.loc 1 2869 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              		@ link register save eliminated.
2870:Generated_Source\PSoC4/CyLib.c **** }
 1562              		.loc 1 2870 0
 1563 0000 0221     		movs	r1, #2
 1564 0002 024A     		ldr	r2, .L113
2871:Generated_Source\PSoC4/CyLib.c **** 
 1565              		.loc 1 2871 0
 1566              		@ sp needed
2870:Generated_Source\PSoC4/CyLib.c **** }
 1567              		.loc 1 2870 0
 1568 0004 1368     		ldr	r3, [r2]
 1569 0006 0B43     		orrs	r3, r1
 1570 0008 1360     		str	r3, [r2]
2871:Generated_Source\PSoC4/CyLib.c **** 
 1571              		.loc 1 2871 0
 1572 000a 7047     		bx	lr
 1573              	.L114:
 1574              		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 84


 1575              	.L113:
 1576 000c 10E000E0 		.word	-536813552
 1577              		.cfi_endproc
 1578              	.LFE34:
 1579              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1580              		.section	.text.CySysTickEnable,"ax",%progbits
 1581              		.align	1
 1582              		.global	CySysTickEnable
 1583              		.code	16
 1584              		.thumb_func
 1585              		.type	CySysTickEnable, %function
 1586              	CySysTickEnable:
 1587              	.LFB32:
2836:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1588              		.loc 1 2836 0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 0
 1591              		@ frame_needed = 0, uses_anonymous_args = 0
 1592 0000 10B5     		push	{r4, lr}
 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 4, -8
 1595              		.cfi_offset 14, -4
2837:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1596              		.loc 1 2837 0
 1597 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1598              	.LVL101:
2838:Generated_Source\PSoC4/CyLib.c **** }
 1599              		.loc 1 2838 0
 1600 0006 0121     		movs	r1, #1
 1601 0008 024A     		ldr	r2, .L116
2839:Generated_Source\PSoC4/CyLib.c **** 
 1602              		.loc 1 2839 0
 1603              		@ sp needed
2838:Generated_Source\PSoC4/CyLib.c **** }
 1604              		.loc 1 2838 0
 1605 000a 1368     		ldr	r3, [r2]
 1606 000c 0B43     		orrs	r3, r1
 1607 000e 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CyLib.c **** 
 1608              		.loc 1 2839 0
 1609 0010 10BD     		pop	{r4, pc}
 1610              	.L117:
 1611 0012 C046     		.align	2
 1612              	.L116:
 1613 0014 10E000E0 		.word	-536813552
 1614              		.cfi_endproc
 1615              	.LFE32:
 1616              		.size	CySysTickEnable, .-CySysTickEnable
 1617              		.section	.text.CySysTickStart,"ax",%progbits
 1618              		.align	1
 1619              		.global	CySysTickStart
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	CySysTickStart, %function
 1623              	CySysTickStart:
 1624              	.LFB30:
2777:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 85


 1625              		.loc 1 2777 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 1629 0000 10B5     		push	{r4, lr}
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 4, -8
 1632              		.cfi_offset 14, -4
2778:Generated_Source\PSoC4/CyLib.c ****     {
 1633              		.loc 1 2778 0
 1634 0002 054C     		ldr	r4, .L120
 1635 0004 6369     		ldr	r3, [r4, #20]
 1636 0006 002B     		cmp	r3, #0
 1637 0008 03D1     		bne	.L119
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1638              		.loc 1 2780 0
 1639 000a FFF7FEFF 		bl	CySysTickInit
 1640              	.LVL102:
2781:Generated_Source\PSoC4/CyLib.c ****     }
 1641              		.loc 1 2781 0
 1642 000e 0123     		movs	r3, #1
 1643 0010 6361     		str	r3, [r4, #20]
 1644              	.L119:
2784:Generated_Source\PSoC4/CyLib.c **** }
 1645              		.loc 1 2784 0
 1646 0012 FFF7FEFF 		bl	CySysTickEnable
 1647              	.LVL103:
2785:Generated_Source\PSoC4/CyLib.c **** 
 1648              		.loc 1 2785 0
 1649              		@ sp needed
 1650 0016 10BD     		pop	{r4, pc}
 1651              	.L121:
 1652              		.align	2
 1653              	.L120:
 1654 0018 00000000 		.word	.LANCHOR2
 1655              		.cfi_endproc
 1656              	.LFE30:
 1657              		.size	CySysTickStart, .-CySysTickStart
 1658              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1659              		.align	1
 1660              		.global	CySysTickDisableInterrupt
 1661              		.code	16
 1662              		.thumb_func
 1663              		.type	CySysTickDisableInterrupt, %function
 1664              	CySysTickDisableInterrupt:
 1665              	.LFB35:
2885:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1666              		.loc 1 2885 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670              		@ link register save eliminated.
2886:Generated_Source\PSoC4/CyLib.c **** }
 1671              		.loc 1 2886 0
 1672 0000 0221     		movs	r1, #2
 1673 0002 024A     		ldr	r2, .L123
2887:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 86


 1674              		.loc 1 2887 0
 1675              		@ sp needed
2886:Generated_Source\PSoC4/CyLib.c **** }
 1676              		.loc 1 2886 0
 1677 0004 1368     		ldr	r3, [r2]
 1678 0006 8B43     		bics	r3, r1
 1679 0008 1360     		str	r3, [r2]
2887:Generated_Source\PSoC4/CyLib.c **** 
 1680              		.loc 1 2887 0
 1681 000a 7047     		bx	lr
 1682              	.L124:
 1683              		.align	2
 1684              	.L123:
 1685 000c 10E000E0 		.word	-536813552
 1686              		.cfi_endproc
 1687              	.LFE35:
 1688              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1689              		.section	.text.CySysTickSetReload,"ax",%progbits
 1690              		.align	1
 1691              		.global	CySysTickSetReload
 1692              		.code	16
 1693              		.thumb_func
 1694              		.type	CySysTickSetReload, %function
 1695              	CySysTickSetReload:
 1696              	.LFB36:
2902:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1697              		.loc 1 2902 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              		@ link register save eliminated.
 1702              	.LVL104:
2903:Generated_Source\PSoC4/CyLib.c **** }
 1703              		.loc 1 2903 0
 1704 0000 024B     		ldr	r3, .L126
 1705 0002 0002     		lsls	r0, r0, #8
 1706              	.LVL105:
 1707 0004 000A     		lsrs	r0, r0, #8
 1708 0006 1860     		str	r0, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** 
 1709              		.loc 1 2904 0
 1710              		@ sp needed
 1711 0008 7047     		bx	lr
 1712              	.L127:
 1713 000a C046     		.align	2
 1714              	.L126:
 1715 000c 14E000E0 		.word	-536813548
 1716              		.cfi_endproc
 1717              	.LFE36:
 1718              		.size	CySysTickSetReload, .-CySysTickSetReload
 1719              		.section	.text.CySysTickGetReload,"ax",%progbits
 1720              		.align	1
 1721              		.global	CySysTickGetReload
 1722              		.code	16
 1723              		.thumb_func
 1724              		.type	CySysTickGetReload, %function
 1725              	CySysTickGetReload:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 87


 1726              	.LFB37:
2918:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1727              		.loc 1 2918 0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 0
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              		@ link register save eliminated.
2919:Generated_Source\PSoC4/CyLib.c **** }
 1732              		.loc 1 2919 0
 1733 0000 024B     		ldr	r3, .L129
2920:Generated_Source\PSoC4/CyLib.c **** 
 1734              		.loc 1 2920 0
 1735              		@ sp needed
2919:Generated_Source\PSoC4/CyLib.c **** }
 1736              		.loc 1 2919 0
 1737 0002 1868     		ldr	r0, [r3]
 1738 0004 0002     		lsls	r0, r0, #8
 1739 0006 000A     		lsrs	r0, r0, #8
2920:Generated_Source\PSoC4/CyLib.c **** 
 1740              		.loc 1 2920 0
 1741 0008 7047     		bx	lr
 1742              	.L130:
 1743 000a C046     		.align	2
 1744              	.L129:
 1745 000c 14E000E0 		.word	-536813548
 1746              		.cfi_endproc
 1747              	.LFE37:
 1748              		.size	CySysTickGetReload, .-CySysTickGetReload
 1749              		.section	.text.CySysTickGetValue,"ax",%progbits
 1750              		.align	1
 1751              		.global	CySysTickGetValue
 1752              		.code	16
 1753              		.thumb_func
 1754              		.type	CySysTickGetValue, %function
 1755              	CySysTickGetValue:
 1756              	.LFB38:
2934:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1757              		.loc 1 2934 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
2935:Generated_Source\PSoC4/CyLib.c **** }
 1762              		.loc 1 2935 0
 1763 0000 024B     		ldr	r3, .L132
2936:Generated_Source\PSoC4/CyLib.c **** 
 1764              		.loc 1 2936 0
 1765              		@ sp needed
2935:Generated_Source\PSoC4/CyLib.c **** }
 1766              		.loc 1 2935 0
 1767 0002 1868     		ldr	r0, [r3]
 1768 0004 0002     		lsls	r0, r0, #8
 1769 0006 000A     		lsrs	r0, r0, #8
2936:Generated_Source\PSoC4/CyLib.c **** 
 1770              		.loc 1 2936 0
 1771 0008 7047     		bx	lr
 1772              	.L133:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 88


 1773 000a C046     		.align	2
 1774              	.L132:
 1775 000c 18E000E0 		.word	-536813544
 1776              		.cfi_endproc
 1777              	.LFE38:
 1778              		.size	CySysTickGetValue, .-CySysTickGetValue
 1779              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1780              		.align	1
 1781              		.global	CySysTickGetCountFlag
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CySysTickGetCountFlag, %function
 1785              	CySysTickGetCountFlag:
 1786              	.LFB39:
3014:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1787              		.loc 1 3014 0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 1791              		@ link register save eliminated.
3015:Generated_Source\PSoC4/CyLib.c **** }
 1792              		.loc 1 3015 0
 1793 0000 024B     		ldr	r3, .L135
3016:Generated_Source\PSoC4/CyLib.c **** 
 1794              		.loc 1 3016 0
 1795              		@ sp needed
3015:Generated_Source\PSoC4/CyLib.c **** }
 1796              		.loc 1 3015 0
 1797 0002 1868     		ldr	r0, [r3]
 1798 0004 C003     		lsls	r0, r0, #15
 1799 0006 C00F     		lsrs	r0, r0, #31
3016:Generated_Source\PSoC4/CyLib.c **** 
 1800              		.loc 1 3016 0
 1801 0008 7047     		bx	lr
 1802              	.L136:
 1803 000a C046     		.align	2
 1804              	.L135:
 1805 000c 10E000E0 		.word	-536813552
 1806              		.cfi_endproc
 1807              	.LFE39:
 1808              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1809              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1810              		.align	1
 1811              		.code	16
 1812              		.thumb_func
 1813              		.type	CySysTickServiceCallbacks, %function
 1814              	CySysTickServiceCallbacks:
 1815              	.LFB43:
3029:Generated_Source\PSoC4/CyLib.c **** }
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 89


3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3068:Generated_Source\PSoC4/CyLib.c **** }
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3088:Generated_Source\PSoC4/CyLib.c **** }
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 90


3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 1816              		.loc 1 3099 0
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 0
 1819              		@ frame_needed = 0, uses_anonymous_args = 0
 1820 0000 10B5     		push	{r4, lr}
 1821              		.cfi_def_cfa_offset 8
 1822              		.cfi_offset 4, -8
 1823              		.cfi_offset 14, -4
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1824              		.loc 1 3103 0
 1825 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1826              	.LVL106:
 1827 0006 0128     		cmp	r0, #1
 1828 0008 08D1     		bne	.L137
 1829 000a 0024     		movs	r4, #0
 1830              	.L140:
 1831              	.LBB26:
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1832              		.loc 1 3107 0
 1833 000c 044B     		ldr	r3, .L146
 1834 000e E358     		ldr	r3, [r4, r3]
 1835 0010 002B     		cmp	r3, #0
 1836 0012 00D0     		beq	.L139
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1837              		.loc 1 3109 0
 1838 0014 9847     		blx	r3
 1839              	.LVL107:
 1840              	.L139:
 1841 0016 0434     		adds	r4, r4, #4
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1842              		.loc 1 3105 0
 1843 0018 142C     		cmp	r4, #20
 1844 001a F7D1     		bne	.L140
 1845              	.L137:
 1846              	.LBE26:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 1847              		.loc 1 3113 0
 1848              		@ sp needed
 1849 001c 10BD     		pop	{r4, pc}
 1850              	.L147:
 1851 001e C046     		.align	2
 1852              	.L146:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 91


 1853 0020 00000000 		.word	.LANCHOR2
 1854              		.cfi_endproc
 1855              	.LFE43:
 1856              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1857              		.section	.text.CySysTickClear,"ax",%progbits
 1858              		.align	1
 1859              		.global	CySysTickClear
 1860              		.code	16
 1861              		.thumb_func
 1862              		.type	CySysTickClear, %function
 1863              	CySysTickClear:
 1864              	.LFB40:
3027:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1865              		.loc 1 3027 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              		@ link register save eliminated.
3028:Generated_Source\PSoC4/CyLib.c **** }
 1870              		.loc 1 3028 0
 1871 0000 0022     		movs	r2, #0
 1872 0002 014B     		ldr	r3, .L149
3029:Generated_Source\PSoC4/CyLib.c **** 
 1873              		.loc 1 3029 0
 1874              		@ sp needed
3028:Generated_Source\PSoC4/CyLib.c **** }
 1875              		.loc 1 3028 0
 1876 0004 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** 
 1877              		.loc 1 3029 0
 1878 0006 7047     		bx	lr
 1879              	.L150:
 1880              		.align	2
 1881              	.L149:
 1882 0008 18E000E0 		.word	-536813544
 1883              		.cfi_endproc
 1884              	.LFE40:
 1885              		.size	CySysTickClear, .-CySysTickClear
 1886              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1887              		.align	1
 1888              		.global	CySysTickSetCallback
 1889              		.code	16
 1890              		.thumb_func
 1891              		.type	CySysTickSetCallback, %function
 1892              	CySysTickSetCallback:
 1893              	.LFB41:
3062:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1894              		.loc 1 3062 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              		@ link register save eliminated.
 1899              	.LVL108:
3065:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1900              		.loc 1 3065 0
 1901 0000 024A     		ldr	r2, .L152
 1902 0002 8300     		lsls	r3, r0, #2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 92


 1903 0004 9858     		ldr	r0, [r3, r2]
 1904              	.LVL109:
3068:Generated_Source\PSoC4/CyLib.c **** 
 1905              		.loc 1 3068 0
 1906              		@ sp needed
3066:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1907              		.loc 1 3066 0
 1908 0006 9950     		str	r1, [r3, r2]
3068:Generated_Source\PSoC4/CyLib.c **** 
 1909              		.loc 1 3068 0
 1910 0008 7047     		bx	lr
 1911              	.L153:
 1912 000a C046     		.align	2
 1913              	.L152:
 1914 000c 00000000 		.word	.LANCHOR2
 1915              		.cfi_endproc
 1916              	.LFE41:
 1917              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1918              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1919              		.align	1
 1920              		.global	CySysTickGetCallback
 1921              		.code	16
 1922              		.thumb_func
 1923              		.type	CySysTickGetCallback, %function
 1924              	CySysTickGetCallback:
 1925              	.LFB42:
3086:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1926              		.loc 1 3086 0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930              		@ link register save eliminated.
 1931              	.LVL110:
3087:Generated_Source\PSoC4/CyLib.c **** }
 1932              		.loc 1 3087 0
 1933 0000 014B     		ldr	r3, .L155
 1934 0002 8000     		lsls	r0, r0, #2
 1935              	.LVL111:
 1936 0004 C058     		ldr	r0, [r0, r3]
3088:Generated_Source\PSoC4/CyLib.c **** 
 1937              		.loc 1 3088 0
 1938              		@ sp needed
 1939 0006 7047     		bx	lr
 1940              	.L156:
 1941              		.align	2
 1942              	.L155:
 1943 0008 00000000 		.word	.LANCHOR2
 1944              		.cfi_endproc
 1945              	.LFE42:
 1946              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1947              		.section	.text.CyGetUniqueId,"ax",%progbits
 1948              		.align	1
 1949              		.global	CyGetUniqueId
 1950              		.code	16
 1951              		.thumb_func
 1952              		.type	CyGetUniqueId, %function
 1953              	CyGetUniqueId:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 93


 1954              	.LFB44:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 1955              		.loc 1 3131 0
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 0
 1958              		@ frame_needed = 0, uses_anonymous_args = 0
 1959              		@ link register save eliminated.
 1960              	.LVL112:
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1961              		.loc 1 3133 0
 1962 0000 144B     		ldr	r3, .L158
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
 1963              		.loc 1 3153 0
 1964              		@ sp needed
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1965              		.loc 1 3133 0
 1966 0002 1A78     		ldrb	r2, [r3]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1967              		.loc 1 3134 0
 1968 0004 144B     		ldr	r3, .L158+4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 94


3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1969              		.loc 1 3133 0
 1970 0006 D1B2     		uxtb	r1, r2
 1971 0008 0160     		str	r1, [r0]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1972              		.loc 1 3134 0
 1973 000a 1B78     		ldrb	r3, [r3]
 1974 000c 1B02     		lsls	r3, r3, #8
 1975 000e 0B43     		orrs	r3, r1
 1976 0010 1A00     		movs	r2, r3
 1977 0012 0360     		str	r3, [r0]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1978              		.loc 1 3135 0
 1979 0014 114B     		ldr	r3, .L158+8
 1980 0016 1B78     		ldrb	r3, [r3]
 1981 0018 1B04     		lsls	r3, r3, #16
 1982 001a 1343     		orrs	r3, r2
3136:Generated_Source\PSoC4/CyLib.c **** 
 1983              		.loc 1 3136 0
 1984 001c 104A     		ldr	r2, .L158+12
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1985              		.loc 1 3135 0
 1986 001e 0360     		str	r3, [r0]
3136:Generated_Source\PSoC4/CyLib.c **** 
 1987              		.loc 1 3136 0
 1988 0020 1278     		ldrb	r2, [r2]
 1989 0022 1206     		lsls	r2, r2, #24
 1990 0024 1343     		orrs	r3, r2
 1991 0026 0360     		str	r3, [r0]
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1992              		.loc 1 3138 0
 1993 0028 0E4B     		ldr	r3, .L158+16
 1994 002a 1A78     		ldrb	r2, [r3]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1995              		.loc 1 3139 0
 1996 002c 0E4B     		ldr	r3, .L158+20
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1997              		.loc 1 3138 0
 1998 002e D1B2     		uxtb	r1, r2
 1999 0030 4160     		str	r1, [r0, #4]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2000              		.loc 1 3139 0
 2001 0032 1B78     		ldrb	r3, [r3]
 2002 0034 1B02     		lsls	r3, r3, #8
 2003 0036 0B43     		orrs	r3, r1
 2004 0038 1A00     		movs	r2, r3
 2005 003a 4360     		str	r3, [r0, #4]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2006              		.loc 1 3140 0
 2007 003c 0B4B     		ldr	r3, .L158+24
 2008 003e 1B78     		ldrb	r3, [r3]
 2009 0040 1B04     		lsls	r3, r3, #16
 2010 0042 1343     		orrs	r3, r2
3141:Generated_Source\PSoC4/CyLib.c **** #else
 2011              		.loc 1 3141 0
 2012 0044 0A4A     		ldr	r2, .L158+28
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 95


 2013              		.loc 1 3140 0
 2014 0046 4360     		str	r3, [r0, #4]
3141:Generated_Source\PSoC4/CyLib.c **** #else
 2015              		.loc 1 3141 0
 2016 0048 1278     		ldrb	r2, [r2]
 2017 004a 1206     		lsls	r2, r2, #24
 2018 004c 1343     		orrs	r3, r2
 2019 004e 4360     		str	r3, [r0, #4]
 2020              		.loc 1 3153 0
 2021 0050 7047     		bx	lr
 2022              	.L159:
 2023 0052 C046     		.align	2
 2024              	.L158:
 2025 0054 78F1FF0F 		.word	268431736
 2026 0058 79F1FF0F 		.word	268431737
 2027 005c 7AF1FF0F 		.word	268431738
 2028 0060 7BF1FF0F 		.word	268431739
 2029 0064 7CF1FF0F 		.word	268431740
 2030 0068 7DF1FF0F 		.word	268431741
 2031 006c 7EF1FF0F 		.word	268431742
 2032 0070 7FF1FF0F 		.word	268431743
 2033              		.cfi_endproc
 2034              	.LFE44:
 2035              		.size	CyGetUniqueId, .-CyGetUniqueId
 2036              		.global	CySysClkPumpConfig
 2037              		.global	cyImoFreqMhz2Reg
 2038              		.global	CySysTickInitVar
 2039              		.global	cydelay32kMs
 2040              		.global	cydelayFreqMhz
 2041              		.global	cydelayFreqKhz
 2042              		.global	cydelayFreqHz
 2043              		.section	.rodata
 2044              		.set	.LANCHOR1,. + 0
 2045              		.type	cyImoFreqMhz2Reg, %object
 2046              		.size	cyImoFreqMhz2Reg, 46
 2047              	cyImoFreqMhz2Reg:
 2048 0000 03       		.byte	3
 2049 0001 04       		.byte	4
 2050 0002 05       		.byte	5
 2051 0003 06       		.byte	6
 2052 0004 07       		.byte	7
 2053 0005 08       		.byte	8
 2054 0006 09       		.byte	9
 2055 0007 0A       		.byte	10
 2056 0008 0B       		.byte	11
 2057 0009 0C       		.byte	12
 2058 000a 0E       		.byte	14
 2059 000b 0F       		.byte	15
 2060 000c 10       		.byte	16
 2061 000d 11       		.byte	17
 2062 000e 12       		.byte	18
 2063 000f 13       		.byte	19
 2064 0010 14       		.byte	20
 2065 0011 15       		.byte	21
 2066 0012 16       		.byte	22
 2067 0013 17       		.byte	23
 2068 0014 18       		.byte	24
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 96


 2069 0015 19       		.byte	25
 2070 0016 1B       		.byte	27
 2071 0017 1C       		.byte	28
 2072 0018 1D       		.byte	29
 2073 0019 1E       		.byte	30
 2074 001a 1F       		.byte	31
 2075 001b 20       		.byte	32
 2076 001c 21       		.byte	33
 2077 001d 22       		.byte	34
 2078 001e 23       		.byte	35
 2079 001f 25       		.byte	37
 2080 0020 26       		.byte	38
 2081 0021 27       		.byte	39
 2082 0022 28       		.byte	40
 2083 0023 29       		.byte	41
 2084 0024 2A       		.byte	42
 2085 0025 2B       		.byte	43
 2086 0026 2E       		.byte	46
 2087 0027 2F       		.byte	47
 2088 0028 30       		.byte	48
 2089 0029 31       		.byte	49
 2090 002a 32       		.byte	50
 2091 002b 33       		.byte	51
 2092 002c 34       		.byte	52
 2093 002d 35       		.byte	53
 2094              		.data
 2095              		.align	2
 2096              		.set	.LANCHOR0,. + 0
 2097              		.type	CySysClkPumpConfig, %object
 2098              		.size	CySysClkPumpConfig, 4
 2099              	CySysClkPumpConfig:
 2100 0000 01000000 		.word	1
 2101              		.type	cydelay32kMs, %object
 2102              		.size	cydelay32kMs, 4
 2103              	cydelay32kMs:
 2104 0004 0000E02E 		.word	786432000
 2105              		.type	cydelayFreqKhz, %object
 2106              		.size	cydelayFreqKhz, 4
 2107              	cydelayFreqKhz:
 2108 0008 C05D0000 		.word	24000
 2109              		.type	cydelayFreqMhz, %object
 2110              		.size	cydelayFreqMhz, 1
 2111              	cydelayFreqMhz:
 2112 000c 18       		.byte	24
 2113 000d 000000   		.space	3
 2114              		.type	cydelayFreqHz, %object
 2115              		.size	cydelayFreqHz, 4
 2116              	cydelayFreqHz:
 2117 0010 00366E01 		.word	24000000
 2118              		.bss
 2119              		.align	2
 2120              		.set	.LANCHOR2,. + 0
 2121              		.type	CySysTickCallbacks, %object
 2122              		.size	CySysTickCallbacks, 20
 2123              	CySysTickCallbacks:
 2124 0000 00000000 		.space	20
 2124      00000000 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 97


 2124      00000000 
 2124      00000000 
 2124      00000000 
 2125              		.type	CySysTickInitVar, %object
 2126              		.size	CySysTickInitVar, 4
 2127              	CySysTickInitVar:
 2128 0014 00000000 		.space	4
 2129              		.text
 2130              	.Letext0:
 2131              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2132              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2133              		.section	.debug_info,"",%progbits
 2134              	.Ldebug_info0:
 2135 0000 E30A0000 		.4byte	0xae3
 2136 0004 0400     		.2byte	0x4
 2137 0006 00000000 		.4byte	.Ldebug_abbrev0
 2138 000a 04       		.byte	0x4
 2139 000b 01       		.uleb128 0x1
 2140 000c EC040000 		.4byte	.LASF101
 2141 0010 0C       		.byte	0xc
 2142 0011 68060000 		.4byte	.LASF102
 2143 0015 EA010000 		.4byte	.LASF103
 2144 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 2145 001d 00000000 		.4byte	0
 2146 0021 00000000 		.4byte	.Ldebug_line0
 2147 0025 02       		.uleb128 0x2
 2148 0026 01       		.byte	0x1
 2149 0027 06       		.byte	0x6
 2150 0028 FE000000 		.4byte	.LASF0
 2151 002c 02       		.uleb128 0x2
 2152 002d 01       		.byte	0x1
 2153 002e 08       		.byte	0x8
 2154 002f 81040000 		.4byte	.LASF1
 2155 0033 02       		.uleb128 0x2
 2156 0034 02       		.byte	0x2
 2157 0035 05       		.byte	0x5
 2158 0036 96040000 		.4byte	.LASF2
 2159 003a 02       		.uleb128 0x2
 2160 003b 02       		.byte	0x2
 2161 003c 07       		.byte	0x7
 2162 003d F1020000 		.4byte	.LASF3
 2163 0041 02       		.uleb128 0x2
 2164 0042 04       		.byte	0x4
 2165 0043 05       		.byte	0x5
 2166 0044 3D010000 		.4byte	.LASF4
 2167 0048 02       		.uleb128 0x2
 2168 0049 04       		.byte	0x4
 2169 004a 07       		.byte	0x7
 2170 004b 79020000 		.4byte	.LASF5
 2171 004f 02       		.uleb128 0x2
 2172 0050 08       		.byte	0x8
 2173 0051 05       		.byte	0x5
 2174 0052 F0000000 		.4byte	.LASF6
 2175 0056 02       		.uleb128 0x2
 2176 0057 08       		.byte	0x8
 2177 0058 07       		.byte	0x7
 2178 0059 84000000 		.4byte	.LASF7
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 98


 2179 005d 03       		.uleb128 0x3
 2180 005e 04       		.byte	0x4
 2181 005f 05       		.byte	0x5
 2182 0060 696E7400 		.ascii	"int\000"
 2183 0064 02       		.uleb128 0x2
 2184 0065 04       		.byte	0x4
 2185 0066 07       		.byte	0x7
 2186 0067 5D020000 		.4byte	.LASF8
 2187 006b 04       		.uleb128 0x4
 2188 006c 68010000 		.4byte	.LASF9
 2189 0070 02       		.byte	0x2
 2190 0071 E401     		.2byte	0x1e4
 2191 0073 2C000000 		.4byte	0x2c
 2192 0077 04       		.uleb128 0x4
 2193 0078 17000000 		.4byte	.LASF10
 2194 007c 02       		.byte	0x2
 2195 007d E501     		.2byte	0x1e5
 2196 007f 3A000000 		.4byte	0x3a
 2197 0083 04       		.uleb128 0x4
 2198 0084 A8010000 		.4byte	.LASF11
 2199 0088 02       		.byte	0x2
 2200 0089 E601     		.2byte	0x1e6
 2201 008b 48000000 		.4byte	0x48
 2202 008f 02       		.uleb128 0x2
 2203 0090 04       		.byte	0x4
 2204 0091 04       		.byte	0x4
 2205 0092 04040000 		.4byte	.LASF12
 2206 0096 02       		.uleb128 0x2
 2207 0097 08       		.byte	0x8
 2208 0098 04       		.byte	0x4
 2209 0099 84010000 		.4byte	.LASF13
 2210 009d 02       		.uleb128 0x2
 2211 009e 01       		.byte	0x1
 2212 009f 08       		.byte	0x8
 2213 00a0 85050000 		.4byte	.LASF14
 2214 00a4 04       		.uleb128 0x4
 2215 00a5 6B040000 		.4byte	.LASF15
 2216 00a9 02       		.byte	0x2
 2217 00aa 8E02     		.2byte	0x28e
 2218 00ac B0000000 		.4byte	0xb0
 2219 00b0 05       		.uleb128 0x5
 2220 00b1 6B000000 		.4byte	0x6b
 2221 00b5 04       		.uleb128 0x4
 2222 00b6 5F030000 		.4byte	.LASF16
 2223 00ba 02       		.byte	0x2
 2224 00bb 9002     		.2byte	0x290
 2225 00bd C1000000 		.4byte	0xc1
 2226 00c1 05       		.uleb128 0x5
 2227 00c2 83000000 		.4byte	0x83
 2228 00c6 04       		.uleb128 0x4
 2229 00c7 8A050000 		.4byte	.LASF17
 2230 00cb 02       		.byte	0x2
 2231 00cc A002     		.2byte	0x2a0
 2232 00ce D2000000 		.4byte	0xd2
 2233 00d2 06       		.uleb128 0x6
 2234 00d3 04       		.byte	0x4
 2235 00d4 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 99


 2236 00d8 07       		.uleb128 0x7
 2237 00d9 02       		.uleb128 0x2
 2238 00da 04       		.byte	0x4
 2239 00db 07       		.byte	0x7
 2240 00dc 81030000 		.4byte	.LASF18
 2241 00e0 08       		.uleb128 0x8
 2242 00e1 2F040000 		.4byte	.LASF19
 2243 00e5 03       		.byte	0x3
 2244 00e6 F5       		.byte	0xf5
 2245 00e7 D2000000 		.4byte	0xd2
 2246 00eb 09       		.uleb128 0x9
 2247 00ec 91010000 		.4byte	.LASF20
 2248 00f0 01       		.byte	0x1
 2249 00f1 1A09     		.2byte	0x91a
 2250 00f3 01       		.byte	0x1
 2251 00f4 0A       		.uleb128 0xa
 2252 00f5 D2040000 		.4byte	.LASF104
 2253 00f9 01       		.byte	0x1
 2254 00fa 1A0C     		.2byte	0xc1a
 2255 00fc 01       		.byte	0x1
 2256 00fd 0C010000 		.4byte	0x10c
 2257 0101 0B       		.uleb128 0xb
 2258 0102 6900     		.ascii	"i\000"
 2259 0104 01       		.byte	0x1
 2260 0105 1C0C     		.2byte	0xc1c
 2261 0107 83000000 		.4byte	0x83
 2262 010b 00       		.byte	0
 2263 010c 09       		.uleb128 0x9
 2264 010d 6A020000 		.4byte	.LASF21
 2265 0111 01       		.byte	0x1
 2266 0112 D20B     		.2byte	0xbd2
 2267 0114 01       		.byte	0x1
 2268 0115 0C       		.uleb128 0xc
 2269 0116 9B060000 		.4byte	.LASF105
 2270 011a 01       		.byte	0x1
 2271 011b 550B     		.2byte	0xb55
 2272 011d 01       		.byte	0x1
 2273 011e 2F010000 		.4byte	0x12f
 2274 0122 0D       		.uleb128 0xd
 2275 0123 33020000 		.4byte	.LASF22
 2276 0127 01       		.byte	0x1
 2277 0128 550B     		.2byte	0xb55
 2278 012a 83000000 		.4byte	0x83
 2279 012e 00       		.byte	0
 2280 012f 0E       		.uleb128 0xe
 2281 0130 38030000 		.4byte	.LASF106
 2282 0134 01       		.byte	0x1
 2283 0135 7B09     		.2byte	0x97b
 2284 0137 C6000000 		.4byte	0xc6
 2285 013b 01       		.byte	0x1
 2286 013c 71010000 		.4byte	0x171
 2287 0140 0D       		.uleb128 0xd
 2288 0141 13030000 		.4byte	.LASF23
 2289 0145 01       		.byte	0x1
 2290 0146 7B09     		.2byte	0x97b
 2291 0148 6B000000 		.4byte	0x6b
 2292 014c 0D       		.uleb128 0xd
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 100


 2293 014d 9C030000 		.4byte	.LASF24
 2294 0151 01       		.byte	0x1
 2295 0152 7B09     		.2byte	0x97b
 2296 0154 C6000000 		.4byte	0xc6
 2297 0158 0F       		.uleb128 0xf
 2298 0159 53000000 		.4byte	.LASF25
 2299 015d 01       		.byte	0x1
 2300 015e 7D09     		.2byte	0x97d
 2301 0160 C6000000 		.4byte	0xc6
 2302 0164 0F       		.uleb128 0xf
 2303 0165 00000000 		.4byte	.LASF26
 2304 0169 01       		.byte	0x1
 2305 016a 7E09     		.2byte	0x97e
 2306 016c 71010000 		.4byte	0x171
 2307 0170 00       		.byte	0
 2308 0171 06       		.uleb128 0x6
 2309 0172 04       		.byte	0x4
 2310 0173 C6000000 		.4byte	0xc6
 2311 0177 10       		.uleb128 0x10
 2312 0178 46060000 		.4byte	.LASF27
 2313 017c 01       		.byte	0x1
 2314 017d 62       		.byte	0x62
 2315 017e 00000000 		.4byte	.LFB0
 2316 0182 14000000 		.4byte	.LFE0-.LFB0
 2317 0186 01       		.uleb128 0x1
 2318 0187 9C       		.byte	0x9c
 2319 0188 10       		.uleb128 0x10
 2320 0189 A6020000 		.4byte	.LASF28
 2321 018d 01       		.byte	0x1
 2322 018e 82       		.byte	0x82
 2323 018f 00000000 		.4byte	.LFB1
 2324 0193 10000000 		.4byte	.LFE1-.LFB1
 2325 0197 01       		.uleb128 0x1
 2326 0198 9C       		.byte	0x9c
 2327 0199 11       		.uleb128 0x11
 2328 019a 27000000 		.4byte	.LASF31
 2329 019e 01       		.byte	0x1
 2330 019f 1B02     		.2byte	0x21b
 2331 01a1 00000000 		.4byte	.LFB2
 2332 01a5 20000000 		.4byte	.LFE2-.LFB2
 2333 01a9 01       		.uleb128 0x1
 2334 01aa 9C       		.byte	0x9c
 2335 01ab F2010000 		.4byte	0x1f2
 2336 01af 12       		.uleb128 0x12
 2337 01b0 BE040000 		.4byte	.LASF33
 2338 01b4 01       		.byte	0x1
 2339 01b5 1B02     		.2byte	0x21b
 2340 01b7 83000000 		.4byte	0x83
 2341 01bb 00000000 		.4byte	.LLST0
 2342 01bf 13       		.uleb128 0x13
 2343 01c0 1B010000 		.4byte	.LASF29
 2344 01c4 01       		.byte	0x1
 2345 01c5 1D02     		.2byte	0x21d
 2346 01c7 6B000000 		.4byte	0x6b
 2347 01cb 2C000000 		.4byte	.LLST1
 2348 01cf 13       		.uleb128 0x13
 2349 01d0 94060000 		.4byte	.LASF30
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 101


 2350 01d4 01       		.byte	0x1
 2351 01d5 1E02     		.2byte	0x21e
 2352 01d7 83000000 		.4byte	0x83
 2353 01db 3F000000 		.4byte	.LLST2
 2354 01df 14       		.uleb128 0x14
 2355 01e0 08000000 		.4byte	.LVL1
 2356 01e4 C50A0000 		.4byte	0xac5
 2357 01e8 14       		.uleb128 0x14
 2358 01e9 1A000000 		.4byte	.LVL4
 2359 01ed D00A0000 		.4byte	0xad0
 2360 01f1 00       		.byte	0
 2361 01f2 11       		.uleb128 0x11
 2362 01f3 4A030000 		.4byte	.LASF32
 2363 01f7 01       		.byte	0x1
 2364 01f8 6302     		.2byte	0x263
 2365 01fa 00000000 		.4byte	.LFB3
 2366 01fe 34000000 		.4byte	.LFE3-.LFB3
 2367 0202 01       		.uleb128 0x1
 2368 0203 9C       		.byte	0x9c
 2369 0204 17020000 		.4byte	0x217
 2370 0208 15       		.uleb128 0x15
 2371 0209 7D010000 		.4byte	.LASF34
 2372 020d 01       		.byte	0x1
 2373 020e 6302     		.2byte	0x263
 2374 0210 83000000 		.4byte	0x83
 2375 0214 01       		.uleb128 0x1
 2376 0215 50       		.byte	0x50
 2377 0216 00       		.byte	0
 2378 0217 16       		.uleb128 0x16
 2379 0218 B4010000 		.4byte	.LASF39
 2380 021c 01       		.byte	0x1
 2381 021d 8802     		.2byte	0x288
 2382 021f 83000000 		.4byte	0x83
 2383 0223 00000000 		.4byte	.LFB4
 2384 0227 18000000 		.4byte	.LFE4-.LFB4
 2385 022b 01       		.uleb128 0x1
 2386 022c 9C       		.byte	0x9c
 2387 022d 64020000 		.4byte	0x264
 2388 0231 13       		.uleb128 0x13
 2389 0232 1B010000 		.4byte	.LASF29
 2390 0236 01       		.byte	0x1
 2391 0237 8A02     		.2byte	0x28a
 2392 0239 6B000000 		.4byte	0x6b
 2393 023d 5D000000 		.4byte	.LLST3
 2394 0241 13       		.uleb128 0x13
 2395 0242 AC030000 		.4byte	.LASF35
 2396 0246 01       		.byte	0x1
 2397 0247 8B02     		.2byte	0x28b
 2398 0249 83000000 		.4byte	0x83
 2399 024d 70000000 		.4byte	.LLST4
 2400 0251 14       		.uleb128 0x14
 2401 0252 06000000 		.4byte	.LVL7
 2402 0256 C50A0000 		.4byte	0xac5
 2403 025a 14       		.uleb128 0x14
 2404 025b 0E000000 		.4byte	.LVL9
 2405 025f D00A0000 		.4byte	0xad0
 2406 0263 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 102


 2407 0264 11       		.uleb128 0x11
 2408 0265 A7050000 		.4byte	.LASF36
 2409 0269 01       		.byte	0x1
 2410 026a C502     		.2byte	0x2c5
 2411 026c 00000000 		.4byte	.LFB5
 2412 0270 2C000000 		.4byte	.LFE5-.LFB5
 2413 0274 01       		.uleb128 0x1
 2414 0275 9C       		.byte	0x9c
 2415 0276 AD020000 		.4byte	0x2ad
 2416 027a 12       		.uleb128 0x12
 2417 027b 3E060000 		.4byte	.LASF37
 2418 027f 01       		.byte	0x1
 2419 0280 C502     		.2byte	0x2c5
 2420 0282 83000000 		.4byte	0x83
 2421 0286 92000000 		.4byte	.LLST5
 2422 028a 13       		.uleb128 0x13
 2423 028b 1B010000 		.4byte	.LASF29
 2424 028f 01       		.byte	0x1
 2425 0290 C702     		.2byte	0x2c7
 2426 0292 6B000000 		.4byte	0x6b
 2427 0296 BE000000 		.4byte	.LLST6
 2428 029a 14       		.uleb128 0x14
 2429 029b 08000000 		.4byte	.LVL12
 2430 029f C50A0000 		.4byte	0xac5
 2431 02a3 14       		.uleb128 0x14
 2432 02a4 22000000 		.4byte	.LVL14
 2433 02a8 D00A0000 		.4byte	0xad0
 2434 02ac 00       		.byte	0
 2435 02ad 17       		.uleb128 0x17
 2436 02ae 11060000 		.4byte	.LASF38
 2437 02b2 01       		.byte	0x1
 2438 02b3 F808     		.2byte	0x8f8
 2439 02b5 00000000 		.4byte	.LFB8
 2440 02b9 20000000 		.4byte	.LFE8-.LFB8
 2441 02bd 01       		.uleb128 0x1
 2442 02be 9C       		.byte	0x9c
 2443 02bf 18       		.uleb128 0x18
 2444 02c0 8B020000 		.4byte	.LASF80
 2445 02c4 01       		.byte	0x1
 2446 02c5 0A09     		.2byte	0x90a
 2447 02c7 83000000 		.4byte	0x83
 2448 02cb 00000000 		.4byte	.LFB9
 2449 02cf 10000000 		.4byte	.LFE9-.LFB9
 2450 02d3 01       		.uleb128 0x1
 2451 02d4 9C       		.byte	0x9c
 2452 02d5 19       		.uleb128 0x19
 2453 02d6 EB000000 		.4byte	0xeb
 2454 02da 00000000 		.4byte	.LFB10
 2455 02de 0C000000 		.4byte	.LFE10-.LFB10
 2456 02e2 01       		.uleb128 0x1
 2457 02e3 9C       		.byte	0x9c
 2458 02e4 16       		.uleb128 0x16
 2459 02e5 DD020000 		.4byte	.LASF40
 2460 02e9 01       		.byte	0x1
 2461 02ea 3409     		.2byte	0x934
 2462 02ec 83000000 		.4byte	0x83
 2463 02f0 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 103


 2464 02f4 14000000 		.4byte	.LFE11-.LFB11
 2465 02f8 01       		.uleb128 0x1
 2466 02f9 9C       		.byte	0x9c
 2467 02fa 1F030000 		.4byte	0x31f
 2468 02fe 12       		.uleb128 0x12
 2469 02ff 8F040000 		.4byte	.LASF41
 2470 0303 01       		.byte	0x1
 2471 0304 3409     		.2byte	0x934
 2472 0306 83000000 		.4byte	0x83
 2473 030a D1000000 		.4byte	.LLST7
 2474 030e 13       		.uleb128 0x13
 2475 030f 74030000 		.4byte	.LASF42
 2476 0313 01       		.byte	0x1
 2477 0314 3609     		.2byte	0x936
 2478 0316 83000000 		.4byte	0x83
 2479 031a EF000000 		.4byte	.LLST8
 2480 031e 00       		.byte	0
 2481 031f 16       		.uleb128 0x16
 2482 0320 61000000 		.4byte	.LASF43
 2483 0324 01       		.byte	0x1
 2484 0325 4B09     		.2byte	0x94b
 2485 0327 83000000 		.4byte	0x83
 2486 032b 00000000 		.4byte	.LFB12
 2487 032f 10000000 		.4byte	.LFE12-.LFB12
 2488 0333 01       		.uleb128 0x1
 2489 0334 9C       		.byte	0x9c
 2490 0335 48030000 		.4byte	0x348
 2491 0339 1A       		.uleb128 0x1a
 2492 033a 1E000000 		.4byte	.LASF44
 2493 033e 01       		.byte	0x1
 2494 033f 4D09     		.2byte	0x94d
 2495 0341 83000000 		.4byte	0x83
 2496 0345 01       		.uleb128 0x1
 2497 0346 50       		.byte	0x50
 2498 0347 00       		.byte	0
 2499 0348 11       		.uleb128 0x11
 2500 0349 AC000000 		.4byte	.LASF45
 2501 034d 01       		.byte	0x1
 2502 034e 6209     		.2byte	0x962
 2503 0350 00000000 		.4byte	.LFB13
 2504 0354 0C000000 		.4byte	.LFE13-.LFB13
 2505 0358 01       		.uleb128 0x1
 2506 0359 9C       		.byte	0x9c
 2507 035a 6D030000 		.4byte	0x36d
 2508 035e 15       		.uleb128 0x15
 2509 035f AF010000 		.4byte	.LASF46
 2510 0363 01       		.byte	0x1
 2511 0364 6209     		.2byte	0x962
 2512 0366 83000000 		.4byte	0x83
 2513 036a 01       		.uleb128 0x1
 2514 036b 50       		.byte	0x50
 2515 036c 00       		.byte	0
 2516 036d 1B       		.uleb128 0x1b
 2517 036e 2F010000 		.4byte	0x12f
 2518 0372 00000000 		.4byte	.LFB14
 2519 0376 0E000000 		.4byte	.LFE14-.LFB14
 2520 037a 01       		.uleb128 0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 104


 2521 037b 9C       		.byte	0x9c
 2522 037c A1030000 		.4byte	0x3a1
 2523 0380 1C       		.uleb128 0x1c
 2524 0381 40010000 		.4byte	0x140
 2525 0385 11010000 		.4byte	.LLST9
 2526 0389 1D       		.uleb128 0x1d
 2527 038a 4C010000 		.4byte	0x14c
 2528 038e 01       		.uleb128 0x1
 2529 038f 51       		.byte	0x51
 2530 0390 1E       		.uleb128 0x1e
 2531 0391 58010000 		.4byte	0x158
 2532 0395 01       		.uleb128 0x1
 2533 0396 50       		.byte	0x50
 2534 0397 1F       		.uleb128 0x1f
 2535 0398 64010000 		.4byte	0x164
 2536 039c 00000020 		.4byte	0x20000000
 2537 03a0 00       		.byte	0
 2538 03a1 16       		.uleb128 0x16
 2539 03a2 AC040000 		.4byte	.LASF47
 2540 03a6 01       		.byte	0x1
 2541 03a7 9D09     		.2byte	0x99d
 2542 03a9 C6000000 		.4byte	0xc6
 2543 03ad 00000000 		.4byte	.LFB15
 2544 03b1 0C000000 		.4byte	.LFE15-.LFB15
 2545 03b5 01       		.uleb128 0x1
 2546 03b6 9C       		.byte	0x9c
 2547 03b7 DC030000 		.4byte	0x3dc
 2548 03bb 12       		.uleb128 0x12
 2549 03bc 13030000 		.4byte	.LASF23
 2550 03c0 01       		.byte	0x1
 2551 03c1 9D09     		.2byte	0x99d
 2552 03c3 6B000000 		.4byte	0x6b
 2553 03c7 32010000 		.4byte	.LLST10
 2554 03cb 20       		.uleb128 0x20
 2555 03cc 00000000 		.4byte	.LASF26
 2556 03d0 01       		.byte	0x1
 2557 03d1 9F09     		.2byte	0x99f
 2558 03d3 71010000 		.4byte	0x171
 2559 03d7 00000020 		.4byte	0x20000000
 2560 03db 00       		.byte	0
 2561 03dc 16       		.uleb128 0x16
 2562 03dd 04030000 		.4byte	.LASF48
 2563 03e1 01       		.byte	0x1
 2564 03e2 B309     		.2byte	0x9b3
 2565 03e4 C6000000 		.4byte	0xc6
 2566 03e8 00000000 		.4byte	.LFB16
 2567 03ec 10000000 		.4byte	.LFE16-.LFB16
 2568 03f0 01       		.uleb128 0x1
 2569 03f1 9C       		.byte	0x9c
 2570 03f2 33040000 		.4byte	0x433
 2571 03f6 12       		.uleb128 0x12
 2572 03f7 13030000 		.4byte	.LASF23
 2573 03fb 01       		.byte	0x1
 2574 03fc B309     		.2byte	0x9b3
 2575 03fe 6B000000 		.4byte	0x6b
 2576 0402 53010000 		.4byte	.LLST11
 2577 0406 15       		.uleb128 0x15
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 105


 2578 0407 9C030000 		.4byte	.LASF24
 2579 040b 01       		.byte	0x1
 2580 040c B309     		.2byte	0x9b3
 2581 040e C6000000 		.4byte	0xc6
 2582 0412 01       		.uleb128 0x1
 2583 0413 51       		.byte	0x51
 2584 0414 1A       		.uleb128 0x1a
 2585 0415 53000000 		.4byte	.LASF25
 2586 0419 01       		.byte	0x1
 2587 041a B509     		.2byte	0x9b5
 2588 041c C6000000 		.4byte	0xc6
 2589 0420 01       		.uleb128 0x1
 2590 0421 50       		.byte	0x50
 2591 0422 20       		.uleb128 0x20
 2592 0423 00000000 		.4byte	.LASF26
 2593 0427 01       		.byte	0x1
 2594 0428 B609     		.2byte	0x9b6
 2595 042a 71010000 		.4byte	0x171
 2596 042e 00000020 		.4byte	0x20000000
 2597 0432 00       		.byte	0
 2598 0433 16       		.uleb128 0x16
 2599 0434 41040000 		.4byte	.LASF49
 2600 0438 01       		.byte	0x1
 2601 0439 CF09     		.2byte	0x9cf
 2602 043b C6000000 		.4byte	0xc6
 2603 043f 00000000 		.4byte	.LFB17
 2604 0443 10000000 		.4byte	.LFE17-.LFB17
 2605 0447 01       		.uleb128 0x1
 2606 0448 9C       		.byte	0x9c
 2607 0449 6E040000 		.4byte	0x46e
 2608 044d 12       		.uleb128 0x12
 2609 044e 13030000 		.4byte	.LASF23
 2610 0452 01       		.byte	0x1
 2611 0453 CF09     		.2byte	0x9cf
 2612 0455 6B000000 		.4byte	0x6b
 2613 0459 74010000 		.4byte	.LLST12
 2614 045d 20       		.uleb128 0x20
 2615 045e 00000000 		.4byte	.LASF26
 2616 0462 01       		.byte	0x1
 2617 0463 D109     		.2byte	0x9d1
 2618 0465 71010000 		.4byte	0x171
 2619 0469 00000020 		.4byte	0x20000000
 2620 046d 00       		.byte	0
 2621 046e 11       		.uleb128 0x11
 2622 046f F3030000 		.4byte	.LASF50
 2623 0473 01       		.byte	0x1
 2624 0474 E209     		.2byte	0x9e2
 2625 0476 00000000 		.4byte	.LFB18
 2626 047a 34000000 		.4byte	.LFE18-.LFB18
 2627 047e 01       		.uleb128 0x1
 2628 047f 9C       		.byte	0x9c
 2629 0480 E7040000 		.4byte	0x4e7
 2630 0484 12       		.uleb128 0x12
 2631 0485 13030000 		.4byte	.LASF23
 2632 0489 01       		.byte	0x1
 2633 048a E209     		.2byte	0x9e2
 2634 048c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 106


 2635 0490 95010000 		.4byte	.LLST13
 2636 0494 12       		.uleb128 0x12
 2637 0495 1A030000 		.4byte	.LASF51
 2638 0499 01       		.byte	0x1
 2639 049a E209     		.2byte	0x9e2
 2640 049c 6B000000 		.4byte	0x6b
 2641 04a0 B6010000 		.4byte	.LLST14
 2642 04a4 13       		.uleb128 0x13
 2643 04a5 1B010000 		.4byte	.LASF29
 2644 04a9 01       		.byte	0x1
 2645 04aa E409     		.2byte	0x9e4
 2646 04ac 6B000000 		.4byte	0x6b
 2647 04b0 D7010000 		.4byte	.LLST15
 2648 04b4 13       		.uleb128 0x13
 2649 04b5 8B010000 		.4byte	.LASF52
 2650 04b9 01       		.byte	0x1
 2651 04ba E509     		.2byte	0x9e5
 2652 04bc 83000000 		.4byte	0x83
 2653 04c0 EA010000 		.4byte	.LLST16
 2654 04c4 13       		.uleb128 0x13
 2655 04c5 33020000 		.4byte	.LASF22
 2656 04c9 01       		.byte	0x1
 2657 04ca E609     		.2byte	0x9e6
 2658 04cc 83000000 		.4byte	0x83
 2659 04d0 FD010000 		.4byte	.LLST17
 2660 04d4 14       		.uleb128 0x14
 2661 04d5 18000000 		.4byte	.LVL33
 2662 04d9 C50A0000 		.4byte	0xac5
 2663 04dd 14       		.uleb128 0x14
 2664 04de 2C000000 		.4byte	.LVL37
 2665 04e2 D00A0000 		.4byte	0xad0
 2666 04e6 00       		.byte	0
 2667 04e7 16       		.uleb128 0x16
 2668 04e8 CC010000 		.4byte	.LASF53
 2669 04ec 01       		.byte	0x1
 2670 04ed 040A     		.2byte	0xa04
 2671 04ef 6B000000 		.4byte	0x6b
 2672 04f3 00000000 		.4byte	.LFB19
 2673 04f7 20000000 		.4byte	.LFE19-.LFB19
 2674 04fb 01       		.uleb128 0x1
 2675 04fc 9C       		.byte	0x9c
 2676 04fd 22050000 		.4byte	0x522
 2677 0501 12       		.uleb128 0x12
 2678 0502 13030000 		.4byte	.LASF23
 2679 0506 01       		.byte	0x1
 2680 0507 040A     		.2byte	0xa04
 2681 0509 6B000000 		.4byte	0x6b
 2682 050d 1B020000 		.4byte	.LLST18
 2683 0511 13       		.uleb128 0x13
 2684 0512 1A030000 		.4byte	.LASF51
 2685 0516 01       		.byte	0x1
 2686 0517 060A     		.2byte	0xa06
 2687 0519 6B000000 		.4byte	0x6b
 2688 051d 3C020000 		.4byte	.LLST19
 2689 0521 00       		.byte	0
 2690 0522 11       		.uleb128 0x11
 2691 0523 A0040000 		.4byte	.LASF54
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 107


 2692 0527 01       		.byte	0x1
 2693 0528 190A     		.2byte	0xa19
 2694 052a 00000000 		.4byte	.LFB20
 2695 052e 14000000 		.4byte	.LFE20-.LFB20
 2696 0532 01       		.uleb128 0x1
 2697 0533 9C       		.byte	0x9c
 2698 0534 49050000 		.4byte	0x549
 2699 0538 12       		.uleb128 0x12
 2700 0539 13030000 		.4byte	.LASF23
 2701 053d 01       		.byte	0x1
 2702 053e 190A     		.2byte	0xa19
 2703 0540 6B000000 		.4byte	0x6b
 2704 0544 5D020000 		.4byte	.LLST20
 2705 0548 00       		.byte	0
 2706 0549 16       		.uleb128 0x16
 2707 054a E2000000 		.4byte	.LASF55
 2708 054e 01       		.byte	0x1
 2709 054f 2B0A     		.2byte	0xa2b
 2710 0551 6B000000 		.4byte	0x6b
 2711 0555 00000000 		.4byte	.LFB21
 2712 0559 18000000 		.4byte	.LFE21-.LFB21
 2713 055d 01       		.uleb128 0x1
 2714 055e 9C       		.byte	0x9c
 2715 055f 74050000 		.4byte	0x574
 2716 0563 12       		.uleb128 0x12
 2717 0564 13030000 		.4byte	.LASF23
 2718 0568 01       		.byte	0x1
 2719 0569 2B0A     		.2byte	0xa2b
 2720 056b 6B000000 		.4byte	0x6b
 2721 056f 7E020000 		.4byte	.LLST21
 2722 0573 00       		.byte	0
 2723 0574 11       		.uleb128 0x11
 2724 0575 46010000 		.4byte	.LASF56
 2725 0579 01       		.byte	0x1
 2726 057a 3B0A     		.2byte	0xa3b
 2727 057c 00000000 		.4byte	.LFB22
 2728 0580 14000000 		.4byte	.LFE22-.LFB22
 2729 0584 01       		.uleb128 0x1
 2730 0585 9C       		.byte	0x9c
 2731 0586 9B050000 		.4byte	0x59b
 2732 058a 12       		.uleb128 0x12
 2733 058b 13030000 		.4byte	.LASF23
 2734 058f 01       		.byte	0x1
 2735 0590 3B0A     		.2byte	0xa3b
 2736 0592 6B000000 		.4byte	0x6b
 2737 0596 9F020000 		.4byte	.LLST22
 2738 059a 00       		.byte	0
 2739 059b 11       		.uleb128 0x11
 2740 059c CD020000 		.4byte	.LASF57
 2741 05a0 01       		.byte	0x1
 2742 05a1 490A     		.2byte	0xa49
 2743 05a3 00000000 		.4byte	.LFB23
 2744 05a7 14000000 		.4byte	.LFE23-.LFB23
 2745 05ab 01       		.uleb128 0x1
 2746 05ac 9C       		.byte	0x9c
 2747 05ad C2050000 		.4byte	0x5c2
 2748 05b1 12       		.uleb128 0x12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 108


 2749 05b2 13030000 		.4byte	.LASF23
 2750 05b6 01       		.byte	0x1
 2751 05b7 490A     		.2byte	0xa49
 2752 05b9 6B000000 		.4byte	0x6b
 2753 05bd C0020000 		.4byte	.LLST23
 2754 05c1 00       		.byte	0
 2755 05c2 11       		.uleb128 0x11
 2756 05c3 8A030000 		.4byte	.LASF58
 2757 05c7 01       		.byte	0x1
 2758 05c8 580A     		.2byte	0xa58
 2759 05ca 00000000 		.4byte	.LFB24
 2760 05ce 14000000 		.4byte	.LFE24-.LFB24
 2761 05d2 01       		.uleb128 0x1
 2762 05d3 9C       		.byte	0x9c
 2763 05d4 E9050000 		.4byte	0x5e9
 2764 05d8 12       		.uleb128 0x12
 2765 05d9 13030000 		.4byte	.LASF23
 2766 05dd 01       		.byte	0x1
 2767 05de 580A     		.2byte	0xa58
 2768 05e0 6B000000 		.4byte	0x6b
 2769 05e4 E1020000 		.4byte	.LLST24
 2770 05e8 00       		.byte	0
 2771 05e9 11       		.uleb128 0x11
 2772 05ea 7A040000 		.4byte	.LASF59
 2773 05ee 01       		.byte	0x1
 2774 05ef 670A     		.2byte	0xa67
 2775 05f1 00000000 		.4byte	.LFB25
 2776 05f5 04000000 		.4byte	.LFE25-.LFB25
 2777 05f9 01       		.uleb128 0x1
 2778 05fa 9C       		.byte	0x9c
 2779 05fb 0E060000 		.4byte	0x60e
 2780 05ff 15       		.uleb128 0x15
 2781 0600 8F040000 		.4byte	.LASF41
 2782 0604 01       		.byte	0x1
 2783 0605 670A     		.2byte	0xa67
 2784 0607 6B000000 		.4byte	0x6b
 2785 060b 01       		.uleb128 0x1
 2786 060c 50       		.byte	0x50
 2787 060d 00       		.byte	0
 2788 060e 17       		.uleb128 0x17
 2789 060f B9000000 		.4byte	.LASF60
 2790 0613 01       		.byte	0x1
 2791 0614 7F0A     		.2byte	0xa7f
 2792 0616 00000000 		.4byte	.LFB26
 2793 061a 18000000 		.4byte	.LFE26-.LFB26
 2794 061e 01       		.uleb128 0x1
 2795 061f 9C       		.byte	0x9c
 2796 0620 11       		.uleb128 0x11
 2797 0621 EF050000 		.4byte	.LASF61
 2798 0625 01       		.byte	0x1
 2799 0626 930A     		.2byte	0xa93
 2800 0628 00000000 		.4byte	.LFB27
 2801 062c 2C000000 		.4byte	.LFE27-.LFB27
 2802 0630 01       		.uleb128 0x1
 2803 0631 9C       		.byte	0x9c
 2804 0632 59060000 		.4byte	0x659
 2805 0636 12       		.uleb128 0x12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 109


 2806 0637 50040000 		.4byte	.LASF62
 2807 063b 01       		.byte	0x1
 2808 063c 930A     		.2byte	0xa93
 2809 063e 83000000 		.4byte	0x83
 2810 0642 02030000 		.4byte	.LLST25
 2811 0646 14       		.uleb128 0x14
 2812 0647 14000000 		.4byte	.LVL57
 2813 064b DB0A0000 		.4byte	0xadb
 2814 064f 14       		.uleb128 0x14
 2815 0650 22000000 		.4byte	.LVL59
 2816 0654 DB0A0000 		.4byte	0xadb
 2817 0658 00       		.byte	0
 2818 0659 11       		.uleb128 0x11
 2819 065a C8040000 		.4byte	.LASF63
 2820 065e 01       		.byte	0x1
 2821 065f AA0A     		.2byte	0xaaa
 2822 0661 00000000 		.4byte	.LFB28
 2823 0665 14000000 		.4byte	.LFE28-.LFB28
 2824 0669 01       		.uleb128 0x1
 2825 066a 9C       		.byte	0x9c
 2826 066b 89060000 		.4byte	0x689
 2827 066f 12       		.uleb128 0x12
 2828 0670 87060000 		.4byte	.LASF64
 2829 0674 01       		.byte	0x1
 2830 0675 AA0A     		.2byte	0xaaa
 2831 0677 77000000 		.4byte	0x77
 2832 067b 20030000 		.4byte	.LLST26
 2833 067f 14       		.uleb128 0x14
 2834 0680 0C000000 		.4byte	.LVL63
 2835 0684 DB0A0000 		.4byte	0xadb
 2836 0688 00       		.byte	0
 2837 0689 11       		.uleb128 0x11
 2838 068a 23030000 		.4byte	.LASF65
 2839 068e 01       		.byte	0x1
 2840 068f FF02     		.2byte	0x2ff
 2841 0691 00000000 		.4byte	.LFB6
 2842 0695 24010000 		.4byte	.LFE6-.LFB6
 2843 0699 01       		.uleb128 0x1
 2844 069a 9C       		.byte	0x9c
 2845 069b 53070000 		.4byte	0x753
 2846 069f 12       		.uleb128 0x12
 2847 06a0 0A010000 		.4byte	.LASF66
 2848 06a4 01       		.byte	0x1
 2849 06a5 FF02     		.2byte	0x2ff
 2850 06a7 83000000 		.4byte	0x83
 2851 06ab 41030000 		.4byte	.LLST27
 2852 06af 13       		.uleb128 0x13
 2853 06b0 0F000000 		.4byte	.LASF67
 2854 06b4 01       		.byte	0x1
 2855 06b5 0503     		.2byte	0x305
 2856 06b7 6B000000 		.4byte	0x6b
 2857 06bb 80030000 		.4byte	.LLST28
 2858 06bf 13       		.uleb128 0x13
 2859 06c0 A4030000 		.4byte	.LASF68
 2860 06c4 01       		.byte	0x1
 2861 06c5 0603     		.2byte	0x306
 2862 06c7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 110


 2863 06cb BF030000 		.4byte	.LLST29
 2864 06cf 13       		.uleb128 0x13
 2865 06d0 57060000 		.4byte	.LASF69
 2866 06d4 01       		.byte	0x1
 2867 06d5 0703     		.2byte	0x307
 2868 06d7 6B000000 		.4byte	0x6b
 2869 06db D3030000 		.4byte	.LLST30
 2870 06df 13       		.uleb128 0x13
 2871 06e0 6F000000 		.4byte	.LASF70
 2872 06e4 01       		.byte	0x1
 2873 06e5 0803     		.2byte	0x308
 2874 06e7 6B000000 		.4byte	0x6b
 2875 06eb E7030000 		.4byte	.LLST31
 2876 06ef 1A       		.uleb128 0x1a
 2877 06f0 1B010000 		.4byte	.LASF29
 2878 06f4 01       		.byte	0x1
 2879 06f5 1303     		.2byte	0x313
 2880 06f7 6B000000 		.4byte	0x6b
 2881 06fb 02       		.uleb128 0x2
 2882 06fc 91       		.byte	0x91
 2883 06fd 60       		.sleb128 -32
 2884 06fe 14       		.uleb128 0x14
 2885 06ff 0A000000 		.4byte	.LVL65
 2886 0703 C50A0000 		.4byte	0xac5
 2887 0707 21       		.uleb128 0x21
 2888 0708 9C000000 		.4byte	.LVL80
 2889 070c DB0A0000 		.4byte	0xadb
 2890 0710 1A070000 		.4byte	0x71a
 2891 0714 22       		.uleb128 0x22
 2892 0715 01       		.uleb128 0x1
 2893 0716 50       		.byte	0x50
 2894 0717 01       		.uleb128 0x1
 2895 0718 35       		.byte	0x35
 2896 0719 00       		.byte	0
 2897 071a 21       		.uleb128 0x21
 2898 071b B8000000 		.4byte	.LVL82
 2899 071f 59060000 		.4byte	0x659
 2900 0723 2D070000 		.4byte	0x72d
 2901 0727 22       		.uleb128 0x22
 2902 0728 01       		.uleb128 0x1
 2903 0729 50       		.byte	0x50
 2904 072a 01       		.uleb128 0x1
 2905 072b 35       		.byte	0x35
 2906 072c 00       		.byte	0
 2907 072d 21       		.uleb128 0x21
 2908 072e CC000000 		.4byte	.LVL83
 2909 0732 DB0A0000 		.4byte	0xadb
 2910 0736 40070000 		.4byte	0x740
 2911 073a 22       		.uleb128 0x22
 2912 073b 01       		.uleb128 0x1
 2913 073c 50       		.byte	0x50
 2914 073d 01       		.uleb128 0x1
 2915 073e 35       		.byte	0x35
 2916 073f 00       		.byte	0
 2917 0740 23       		.uleb128 0x23
 2918 0741 D2000000 		.4byte	.LVL84
 2919 0745 D00A0000 		.4byte	0xad0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 111


 2920 0749 22       		.uleb128 0x22
 2921 074a 01       		.uleb128 0x1
 2922 074b 50       		.byte	0x50
 2923 074c 04       		.uleb128 0x4
 2924 074d 91       		.byte	0x91
 2925 074e 60       		.sleb128 -32
 2926 074f 94       		.byte	0x94
 2927 0750 01       		.byte	0x1
 2928 0751 00       		.byte	0
 2929 0752 00       		.byte	0
 2930 0753 11       		.uleb128 0x11
 2931 0754 20040000 		.4byte	.LASF71
 2932 0758 01       		.byte	0x1
 2933 0759 DA08     		.2byte	0x8da
 2934 075b 00000000 		.4byte	.LFB7
 2935 075f 44000000 		.4byte	.LFE7-.LFB7
 2936 0763 01       		.uleb128 0x1
 2937 0764 9C       		.byte	0x9c
 2938 0765 9B070000 		.4byte	0x79b
 2939 0769 12       		.uleb128 0x12
 2940 076a 70040000 		.4byte	.LASF72
 2941 076e 01       		.byte	0x1
 2942 076f DA08     		.2byte	0x8da
 2943 0771 83000000 		.4byte	0x83
 2944 0775 FA030000 		.4byte	.LLST32
 2945 0779 24       		.uleb128 0x24
 2946 077a EB000000 		.4byte	0xeb
 2947 077e 2C000000 		.4byte	.LBB10
 2948 0782 00000000 		.4byte	.Ldebug_ranges0+0
 2949 0786 01       		.byte	0x1
 2950 0787 EA08     		.2byte	0x8ea
 2951 0789 23       		.uleb128 0x23
 2952 078a 2C000000 		.4byte	.LVL87
 2953 078e 59060000 		.4byte	0x659
 2954 0792 22       		.uleb128 0x22
 2955 0793 01       		.uleb128 0x1
 2956 0794 50       		.byte	0x50
 2957 0795 03       		.uleb128 0x3
 2958 0796 0A       		.byte	0xa
 2959 0797 E803     		.2byte	0x3e8
 2960 0799 00       		.byte	0
 2961 079a 00       		.byte	0
 2962 079b 25       		.uleb128 0x25
 2963 079c 0F010000 		.4byte	.LASF73
 2964 07a0 01       		.byte	0x1
 2965 07a1 B80A     		.2byte	0xab8
 2966 07a3 00000000 		.4byte	.LFB29
 2967 07a7 48000000 		.4byte	.LFE29-.LFB29
 2968 07ab 01       		.uleb128 0x1
 2969 07ac 9C       		.byte	0x9c
 2970 07ad C2070000 		.4byte	0x7c2
 2971 07b1 12       		.uleb128 0x12
 2972 07b2 0A010000 		.4byte	.LASF66
 2973 07b6 01       		.byte	0x1
 2974 07b7 B80A     		.2byte	0xab8
 2975 07b9 83000000 		.4byte	0x83
 2976 07bd 1B040000 		.4byte	.LLST33
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 112


 2977 07c1 00       		.byte	0
 2978 07c2 25       		.uleb128 0x25
 2979 07c3 25020000 		.4byte	.LASF74
 2980 07c7 01       		.byte	0x1
 2981 07c8 F50A     		.2byte	0xaf5
 2982 07ca 00000000 		.4byte	.LFB31
 2983 07ce 44000000 		.4byte	.LFE31-.LFB31
 2984 07d2 01       		.uleb128 0x1
 2985 07d3 9C       		.byte	0x9c
 2986 07d4 54080000 		.4byte	0x854
 2987 07d8 26       		.uleb128 0x26
 2988 07d9 6900     		.ascii	"i\000"
 2989 07db 01       		.byte	0x1
 2990 07dc F70A     		.2byte	0xaf7
 2991 07de 83000000 		.4byte	0x83
 2992 07e2 3C040000 		.4byte	.LLST34
 2993 07e6 27       		.uleb128 0x27
 2994 07e7 2F010000 		.4byte	0x12f
 2995 07eb 08000000 		.4byte	.LBB14
 2996 07ef 18000000 		.4byte	.Ldebug_ranges0+0x18
 2997 07f3 01       		.byte	0x1
 2998 07f4 FE0A     		.2byte	0xafe
 2999 07f6 25080000 		.4byte	0x825
 3000 07fa 1C       		.uleb128 0x1c
 3001 07fb 4C010000 		.4byte	0x14c
 3002 07ff 80040000 		.4byte	.LLST35
 3003 0803 1C       		.uleb128 0x1c
 3004 0804 40010000 		.4byte	0x140
 3005 0808 98040000 		.4byte	.LLST36
 3006 080c 28       		.uleb128 0x28
 3007 080d 18000000 		.4byte	.Ldebug_ranges0+0x18
 3008 0811 29       		.uleb128 0x29
 3009 0812 58010000 		.4byte	0x158
 3010 0816 AC040000 		.4byte	.LLST37
 3011 081a 1F       		.uleb128 0x1f
 3012 081b 64010000 		.4byte	0x164
 3013 081f 00000020 		.4byte	0x20000000
 3014 0823 00       		.byte	0
 3015 0824 00       		.byte	0
 3016 0825 2A       		.uleb128 0x2a
 3017 0826 15010000 		.4byte	0x115
 3018 082a 22000000 		.4byte	.LBB20
 3019 082e 04000000 		.4byte	.LBE20-.LBB20
 3020 0832 01       		.byte	0x1
 3021 0833 040B     		.2byte	0xb04
 3022 0835 43080000 		.4byte	0x843
 3023 0839 1C       		.uleb128 0x1c
 3024 083a 22010000 		.4byte	0x122
 3025 083e CF040000 		.4byte	.LLST38
 3026 0842 00       		.byte	0
 3027 0843 2B       		.uleb128 0x2b
 3028 0844 0C010000 		.4byte	0x10c
 3029 0848 26000000 		.4byte	.LBB22
 3030 084c 04000000 		.4byte	.LBE22-.LBB22
 3031 0850 01       		.byte	0x1
 3032 0851 050B     		.2byte	0xb05
 3033 0853 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 113


 3034 0854 17       		.uleb128 0x17
 3035 0855 30060000 		.4byte	.LASF75
 3036 0859 01       		.byte	0x1
 3037 085a 240B     		.2byte	0xb24
 3038 085c 00000000 		.4byte	.LFB33
 3039 0860 10000000 		.4byte	.LFE33-.LFB33
 3040 0864 01       		.uleb128 0x1
 3041 0865 9C       		.byte	0x9c
 3042 0866 17       		.uleb128 0x17
 3043 0867 C9000000 		.4byte	.LASF76
 3044 086b 01       		.byte	0x1
 3045 086c 340B     		.2byte	0xb34
 3046 086e 00000000 		.4byte	.LFB34
 3047 0872 10000000 		.4byte	.LFE34-.LFB34
 3048 0876 01       		.uleb128 0x1
 3049 0877 9C       		.byte	0x9c
 3050 0878 11       		.uleb128 0x11
 3051 0879 97050000 		.4byte	.LASF77
 3052 087d 01       		.byte	0x1
 3053 087e 130B     		.2byte	0xb13
 3054 0880 00000000 		.4byte	.LFB32
 3055 0884 18000000 		.4byte	.LFE32-.LFB32
 3056 0888 01       		.uleb128 0x1
 3057 0889 9C       		.byte	0x9c
 3058 088a 98080000 		.4byte	0x898
 3059 088e 14       		.uleb128 0x14
 3060 088f 06000000 		.4byte	.LVL101
 3061 0893 66080000 		.4byte	0x866
 3062 0897 00       		.byte	0
 3063 0898 11       		.uleb128 0x11
 3064 0899 65030000 		.4byte	.LASF78
 3065 089d 01       		.byte	0x1
 3066 089e D80A     		.2byte	0xad8
 3067 08a0 00000000 		.4byte	.LFB30
 3068 08a4 1C000000 		.4byte	.LFE30-.LFB30
 3069 08a8 01       		.uleb128 0x1
 3070 08a9 9C       		.byte	0x9c
 3071 08aa C1080000 		.4byte	0x8c1
 3072 08ae 14       		.uleb128 0x14
 3073 08af 0E000000 		.4byte	.LVL102
 3074 08b3 C2070000 		.4byte	0x7c2
 3075 08b7 14       		.uleb128 0x14
 3076 08b8 16000000 		.4byte	.LVL103
 3077 08bc 78080000 		.4byte	0x878
 3078 08c0 00       		.byte	0
 3079 08c1 17       		.uleb128 0x17
 3080 08c2 F7050000 		.4byte	.LASF79
 3081 08c6 01       		.byte	0x1
 3082 08c7 440B     		.2byte	0xb44
 3083 08c9 00000000 		.4byte	.LFB35
 3084 08cd 10000000 		.4byte	.LFE35-.LFB35
 3085 08d1 01       		.uleb128 0x1
 3086 08d2 9C       		.byte	0x9c
 3087 08d3 1B       		.uleb128 0x1b
 3088 08d4 15010000 		.4byte	0x115
 3089 08d8 00000000 		.4byte	.LFB36
 3090 08dc 10000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 114


 3091 08e0 01       		.uleb128 0x1
 3092 08e1 9C       		.byte	0x9c
 3093 08e2 F0080000 		.4byte	0x8f0
 3094 08e6 1C       		.uleb128 0x1c
 3095 08e7 22010000 		.4byte	0x122
 3096 08eb E2040000 		.4byte	.LLST39
 3097 08ef 00       		.byte	0
 3098 08f0 18       		.uleb128 0x18
 3099 08f1 2A010000 		.4byte	.LASF81
 3100 08f5 01       		.byte	0x1
 3101 08f6 650B     		.2byte	0xb65
 3102 08f8 83000000 		.4byte	0x83
 3103 08fc 00000000 		.4byte	.LFB37
 3104 0900 10000000 		.4byte	.LFE37-.LFB37
 3105 0904 01       		.uleb128 0x1
 3106 0905 9C       		.byte	0x9c
 3107 0906 18       		.uleb128 0x18
 3108 0907 D3030000 		.4byte	.LASF82
 3109 090b 01       		.byte	0x1
 3110 090c 750B     		.2byte	0xb75
 3111 090e 83000000 		.4byte	0x83
 3112 0912 00000000 		.4byte	.LFB38
 3113 0916 10000000 		.4byte	.LFE38-.LFB38
 3114 091a 01       		.uleb128 0x1
 3115 091b 9C       		.byte	0x9c
 3116 091c 18       		.uleb128 0x18
 3117 091d 47020000 		.4byte	.LASF83
 3118 0921 01       		.byte	0x1
 3119 0922 C50B     		.2byte	0xbc5
 3120 0924 83000000 		.4byte	0x83
 3121 0928 00000000 		.4byte	.LFB39
 3122 092c 10000000 		.4byte	.LFE39-.LFB39
 3123 0930 01       		.uleb128 0x1
 3124 0931 9C       		.byte	0x9c
 3125 0932 2C       		.uleb128 0x2c
 3126 0933 F4000000 		.4byte	0xf4
 3127 0937 00000000 		.4byte	.LFB43
 3128 093b 24000000 		.4byte	.LFE43-.LFB43
 3129 093f 01       		.uleb128 0x1
 3130 0940 9C       		.byte	0x9c
 3131 0941 67090000 		.4byte	0x967
 3132 0945 2D       		.uleb128 0x2d
 3133 0946 01010000 		.4byte	0x101
 3134 094a 2E       		.uleb128 0x2e
 3135 094b 0C000000 		.4byte	.LBB26
 3136 094f 10000000 		.4byte	.LBE26-.LBB26
 3137 0953 5D090000 		.4byte	0x95d
 3138 0957 2D       		.uleb128 0x2d
 3139 0958 01010000 		.4byte	0x101
 3140 095c 00       		.byte	0
 3141 095d 14       		.uleb128 0x14
 3142 095e 06000000 		.4byte	.LVL106
 3143 0962 1C090000 		.4byte	0x91c
 3144 0966 00       		.byte	0
 3145 0967 19       		.uleb128 0x19
 3146 0968 0C010000 		.4byte	0x10c
 3147 096c 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 115


 3148 0970 0C000000 		.4byte	.LFE40-.LFB40
 3149 0974 01       		.uleb128 0x1
 3150 0975 9C       		.byte	0x9c
 3151 0976 16       		.uleb128 0x16
 3152 0977 BE050000 		.4byte	.LASF84
 3153 097b 01       		.byte	0x1
 3154 097c F50B     		.2byte	0xbf5
 3155 097e E0000000 		.4byte	0xe0
 3156 0982 00000000 		.4byte	.LFB41
 3157 0986 10000000 		.4byte	.LFE41-.LFB41
 3158 098a 01       		.uleb128 0x1
 3159 098b 9C       		.byte	0x9c
 3160 098c BD090000 		.4byte	0x9bd
 3161 0990 12       		.uleb128 0x12
 3162 0991 13030000 		.4byte	.LASF23
 3163 0995 01       		.byte	0x1
 3164 0996 F50B     		.2byte	0xbf5
 3165 0998 83000000 		.4byte	0x83
 3166 099c 03050000 		.4byte	.LLST40
 3167 09a0 15       		.uleb128 0x15
 3168 09a1 B9030000 		.4byte	.LASF85
 3169 09a5 01       		.byte	0x1
 3170 09a6 F50B     		.2byte	0xbf5
 3171 09a8 E0000000 		.4byte	0xe0
 3172 09ac 01       		.uleb128 0x1
 3173 09ad 51       		.byte	0x51
 3174 09ae 1A       		.uleb128 0x1a
 3175 09af 5A000000 		.4byte	.LASF86
 3176 09b3 01       		.byte	0x1
 3177 09b4 F70B     		.2byte	0xbf7
 3178 09b6 E0000000 		.4byte	0xe0
 3179 09ba 01       		.uleb128 0x1
 3180 09bb 50       		.byte	0x50
 3181 09bc 00       		.byte	0
 3182 09bd 16       		.uleb128 0x16
 3183 09be 53010000 		.4byte	.LASF87
 3184 09c2 01       		.byte	0x1
 3185 09c3 0D0C     		.2byte	0xc0d
 3186 09c5 E0000000 		.4byte	0xe0
 3187 09c9 00000000 		.4byte	.LFB42
 3188 09cd 0C000000 		.4byte	.LFE42-.LFB42
 3189 09d1 01       		.uleb128 0x1
 3190 09d2 9C       		.byte	0x9c
 3191 09d3 E8090000 		.4byte	0x9e8
 3192 09d7 12       		.uleb128 0x12
 3193 09d8 13030000 		.4byte	.LASF23
 3194 09dc 01       		.byte	0x1
 3195 09dd 0D0C     		.2byte	0xc0d
 3196 09df 83000000 		.4byte	0x83
 3197 09e3 24050000 		.4byte	.LLST41
 3198 09e7 00       		.byte	0
 3199 09e8 11       		.uleb128 0x11
 3200 09e9 39020000 		.4byte	.LASF88
 3201 09ed 01       		.byte	0x1
 3202 09ee 3A0C     		.2byte	0xc3a
 3203 09f0 00000000 		.4byte	.LFB44
 3204 09f4 74000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 116


 3205 09f8 01       		.uleb128 0x1
 3206 09f9 9C       		.byte	0x9c
 3207 09fa 0D0A0000 		.4byte	0xa0d
 3208 09fe 15       		.uleb128 0x15
 3209 09ff E6050000 		.4byte	.LASF89
 3210 0a03 01       		.byte	0x1
 3211 0a04 3A0C     		.2byte	0xc3a
 3212 0a06 0D0A0000 		.4byte	0xa0d
 3213 0a0a 01       		.uleb128 0x1
 3214 0a0b 50       		.byte	0x50
 3215 0a0c 00       		.byte	0
 3216 0a0d 06       		.uleb128 0x6
 3217 0a0e 04       		.byte	0x4
 3218 0a0f 83000000 		.4byte	0x83
 3219 0a13 2F       		.uleb128 0x2f
 3220 0a14 E0000000 		.4byte	0xe0
 3221 0a18 230A0000 		.4byte	0xa23
 3222 0a1c 30       		.uleb128 0x30
 3223 0a1d D9000000 		.4byte	0xd9
 3224 0a21 04       		.byte	0x4
 3225 0a22 00       		.byte	0
 3226 0a23 31       		.uleb128 0x31
 3227 0a24 D3050000 		.4byte	.LASF90
 3228 0a28 01       		.byte	0x1
 3229 0a29 22       		.byte	0x22
 3230 0a2a 130A0000 		.4byte	0xa13
 3231 0a2e 05       		.uleb128 0x5
 3232 0a2f 03       		.byte	0x3
 3233 0a30 00000000 		.4byte	CySysTickCallbacks
 3234 0a34 32       		.uleb128 0x32
 3235 0a35 E5030000 		.4byte	.LASF91
 3236 0a39 01       		.byte	0x1
 3237 0a3a 1B       		.byte	0x1b
 3238 0a3b 83000000 		.4byte	0x83
 3239 0a3f 05       		.uleb128 0x5
 3240 0a40 03       		.byte	0x3
 3241 0a41 00000000 		.4byte	cydelayFreqHz
 3242 0a45 32       		.uleb128 0x32
 3243 0a46 6E010000 		.4byte	.LASF92
 3244 0a4a 01       		.byte	0x1
 3245 0a4b 1C       		.byte	0x1c
 3246 0a4c 83000000 		.4byte	0x83
 3247 0a50 05       		.uleb128 0x5
 3248 0a51 03       		.byte	0x3
 3249 0a52 00000000 		.4byte	cydelayFreqKhz
 3250 0a56 32       		.uleb128 0x32
 3251 0a57 21060000 		.4byte	.LASF93
 3252 0a5b 01       		.byte	0x1
 3253 0a5c 1D       		.byte	0x1d
 3254 0a5d 6B000000 		.4byte	0x6b
 3255 0a61 05       		.uleb128 0x5
 3256 0a62 03       		.byte	0x3
 3257 0a63 00000000 		.4byte	cydelayFreqMhz
 3258 0a67 32       		.uleb128 0x32
 3259 0a68 DD010000 		.4byte	.LASF94
 3260 0a6c 01       		.byte	0x1
 3261 0a6d 1E       		.byte	0x1e
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 117


 3262 0a6e 83000000 		.4byte	0x83
 3263 0a72 05       		.uleb128 0x5
 3264 0a73 03       		.byte	0x3
 3265 0a74 00000000 		.4byte	cydelay32kMs
 3266 0a78 32       		.uleb128 0x32
 3267 0a79 9B000000 		.4byte	.LASF95
 3268 0a7d 01       		.byte	0x1
 3269 0a7e 36       		.byte	0x36
 3270 0a7f 83000000 		.4byte	0x83
 3271 0a83 05       		.uleb128 0x5
 3272 0a84 03       		.byte	0x3
 3273 0a85 00000000 		.4byte	CySysTickInitVar
 3274 0a89 2F       		.uleb128 0x2f
 3275 0a8a 990A0000 		.4byte	0xa99
 3276 0a8e 990A0000 		.4byte	0xa99
 3277 0a92 30       		.uleb128 0x30
 3278 0a93 D9000000 		.4byte	0xd9
 3279 0a97 2D       		.byte	0x2d
 3280 0a98 00       		.byte	0
 3281 0a99 33       		.uleb128 0x33
 3282 0a9a 6B000000 		.4byte	0x6b
 3283 0a9e 32       		.uleb128 0x32
 3284 0a9f C2030000 		.4byte	.LASF96
 3285 0aa3 01       		.byte	0x1
 3286 0aa4 3B       		.byte	0x3b
 3287 0aa5 AF0A0000 		.4byte	0xaaf
 3288 0aa9 05       		.uleb128 0x5
 3289 0aaa 03       		.byte	0x3
 3290 0aab 00000000 		.4byte	cyImoFreqMhz2Reg
 3291 0aaf 33       		.uleb128 0x33
 3292 0ab0 890A0000 		.4byte	0xa89
 3293 0ab4 32       		.uleb128 0x32
 3294 0ab5 40000000 		.4byte	.LASF97
 3295 0ab9 01       		.byte	0x1
 3296 0aba 51       		.byte	0x51
 3297 0abb 83000000 		.4byte	0x83
 3298 0abf 05       		.uleb128 0x5
 3299 0ac0 03       		.byte	0x3
 3300 0ac1 00000000 		.4byte	CySysClkPumpConfig
 3301 0ac5 34       		.uleb128 0x34
 3302 0ac6 B6020000 		.4byte	.LASF98
 3303 0aca B6020000 		.4byte	.LASF98
 3304 0ace 03       		.byte	0x3
 3305 0acf E5       		.byte	0xe5
 3306 0ad0 34       		.uleb128 0x34
 3307 0ad1 0A040000 		.4byte	.LASF99
 3308 0ad5 0A040000 		.4byte	.LASF99
 3309 0ad9 03       		.byte	0x3
 3310 0ada E6       		.byte	0xe6
 3311 0adb 34       		.uleb128 0x34
 3312 0adc 5D040000 		.4byte	.LASF100
 3313 0ae0 5D040000 		.4byte	.LASF100
 3314 0ae4 03       		.byte	0x3
 3315 0ae5 DC       		.byte	0xdc
 3316 0ae6 00       		.byte	0
 3317              		.section	.debug_abbrev,"",%progbits
 3318              	.Ldebug_abbrev0:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 118


 3319 0000 01       		.uleb128 0x1
 3320 0001 11       		.uleb128 0x11
 3321 0002 01       		.byte	0x1
 3322 0003 25       		.uleb128 0x25
 3323 0004 0E       		.uleb128 0xe
 3324 0005 13       		.uleb128 0x13
 3325 0006 0B       		.uleb128 0xb
 3326 0007 03       		.uleb128 0x3
 3327 0008 0E       		.uleb128 0xe
 3328 0009 1B       		.uleb128 0x1b
 3329 000a 0E       		.uleb128 0xe
 3330 000b 55       		.uleb128 0x55
 3331 000c 17       		.uleb128 0x17
 3332 000d 11       		.uleb128 0x11
 3333 000e 01       		.uleb128 0x1
 3334 000f 10       		.uleb128 0x10
 3335 0010 17       		.uleb128 0x17
 3336 0011 00       		.byte	0
 3337 0012 00       		.byte	0
 3338 0013 02       		.uleb128 0x2
 3339 0014 24       		.uleb128 0x24
 3340 0015 00       		.byte	0
 3341 0016 0B       		.uleb128 0xb
 3342 0017 0B       		.uleb128 0xb
 3343 0018 3E       		.uleb128 0x3e
 3344 0019 0B       		.uleb128 0xb
 3345 001a 03       		.uleb128 0x3
 3346 001b 0E       		.uleb128 0xe
 3347 001c 00       		.byte	0
 3348 001d 00       		.byte	0
 3349 001e 03       		.uleb128 0x3
 3350 001f 24       		.uleb128 0x24
 3351 0020 00       		.byte	0
 3352 0021 0B       		.uleb128 0xb
 3353 0022 0B       		.uleb128 0xb
 3354 0023 3E       		.uleb128 0x3e
 3355 0024 0B       		.uleb128 0xb
 3356 0025 03       		.uleb128 0x3
 3357 0026 08       		.uleb128 0x8
 3358 0027 00       		.byte	0
 3359 0028 00       		.byte	0
 3360 0029 04       		.uleb128 0x4
 3361 002a 16       		.uleb128 0x16
 3362 002b 00       		.byte	0
 3363 002c 03       		.uleb128 0x3
 3364 002d 0E       		.uleb128 0xe
 3365 002e 3A       		.uleb128 0x3a
 3366 002f 0B       		.uleb128 0xb
 3367 0030 3B       		.uleb128 0x3b
 3368 0031 05       		.uleb128 0x5
 3369 0032 49       		.uleb128 0x49
 3370 0033 13       		.uleb128 0x13
 3371 0034 00       		.byte	0
 3372 0035 00       		.byte	0
 3373 0036 05       		.uleb128 0x5
 3374 0037 35       		.uleb128 0x35
 3375 0038 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 119


 3376 0039 49       		.uleb128 0x49
 3377 003a 13       		.uleb128 0x13
 3378 003b 00       		.byte	0
 3379 003c 00       		.byte	0
 3380 003d 06       		.uleb128 0x6
 3381 003e 0F       		.uleb128 0xf
 3382 003f 00       		.byte	0
 3383 0040 0B       		.uleb128 0xb
 3384 0041 0B       		.uleb128 0xb
 3385 0042 49       		.uleb128 0x49
 3386 0043 13       		.uleb128 0x13
 3387 0044 00       		.byte	0
 3388 0045 00       		.byte	0
 3389 0046 07       		.uleb128 0x7
 3390 0047 15       		.uleb128 0x15
 3391 0048 00       		.byte	0
 3392 0049 27       		.uleb128 0x27
 3393 004a 19       		.uleb128 0x19
 3394 004b 00       		.byte	0
 3395 004c 00       		.byte	0
 3396 004d 08       		.uleb128 0x8
 3397 004e 16       		.uleb128 0x16
 3398 004f 00       		.byte	0
 3399 0050 03       		.uleb128 0x3
 3400 0051 0E       		.uleb128 0xe
 3401 0052 3A       		.uleb128 0x3a
 3402 0053 0B       		.uleb128 0xb
 3403 0054 3B       		.uleb128 0x3b
 3404 0055 0B       		.uleb128 0xb
 3405 0056 49       		.uleb128 0x49
 3406 0057 13       		.uleb128 0x13
 3407 0058 00       		.byte	0
 3408 0059 00       		.byte	0
 3409 005a 09       		.uleb128 0x9
 3410 005b 2E       		.uleb128 0x2e
 3411 005c 00       		.byte	0
 3412 005d 3F       		.uleb128 0x3f
 3413 005e 19       		.uleb128 0x19
 3414 005f 03       		.uleb128 0x3
 3415 0060 0E       		.uleb128 0xe
 3416 0061 3A       		.uleb128 0x3a
 3417 0062 0B       		.uleb128 0xb
 3418 0063 3B       		.uleb128 0x3b
 3419 0064 05       		.uleb128 0x5
 3420 0065 27       		.uleb128 0x27
 3421 0066 19       		.uleb128 0x19
 3422 0067 20       		.uleb128 0x20
 3423 0068 0B       		.uleb128 0xb
 3424 0069 00       		.byte	0
 3425 006a 00       		.byte	0
 3426 006b 0A       		.uleb128 0xa
 3427 006c 2E       		.uleb128 0x2e
 3428 006d 01       		.byte	0x1
 3429 006e 03       		.uleb128 0x3
 3430 006f 0E       		.uleb128 0xe
 3431 0070 3A       		.uleb128 0x3a
 3432 0071 0B       		.uleb128 0xb
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 120


 3433 0072 3B       		.uleb128 0x3b
 3434 0073 05       		.uleb128 0x5
 3435 0074 27       		.uleb128 0x27
 3436 0075 19       		.uleb128 0x19
 3437 0076 20       		.uleb128 0x20
 3438 0077 0B       		.uleb128 0xb
 3439 0078 01       		.uleb128 0x1
 3440 0079 13       		.uleb128 0x13
 3441 007a 00       		.byte	0
 3442 007b 00       		.byte	0
 3443 007c 0B       		.uleb128 0xb
 3444 007d 34       		.uleb128 0x34
 3445 007e 00       		.byte	0
 3446 007f 03       		.uleb128 0x3
 3447 0080 08       		.uleb128 0x8
 3448 0081 3A       		.uleb128 0x3a
 3449 0082 0B       		.uleb128 0xb
 3450 0083 3B       		.uleb128 0x3b
 3451 0084 05       		.uleb128 0x5
 3452 0085 49       		.uleb128 0x49
 3453 0086 13       		.uleb128 0x13
 3454 0087 00       		.byte	0
 3455 0088 00       		.byte	0
 3456 0089 0C       		.uleb128 0xc
 3457 008a 2E       		.uleb128 0x2e
 3458 008b 01       		.byte	0x1
 3459 008c 3F       		.uleb128 0x3f
 3460 008d 19       		.uleb128 0x19
 3461 008e 03       		.uleb128 0x3
 3462 008f 0E       		.uleb128 0xe
 3463 0090 3A       		.uleb128 0x3a
 3464 0091 0B       		.uleb128 0xb
 3465 0092 3B       		.uleb128 0x3b
 3466 0093 05       		.uleb128 0x5
 3467 0094 27       		.uleb128 0x27
 3468 0095 19       		.uleb128 0x19
 3469 0096 20       		.uleb128 0x20
 3470 0097 0B       		.uleb128 0xb
 3471 0098 01       		.uleb128 0x1
 3472 0099 13       		.uleb128 0x13
 3473 009a 00       		.byte	0
 3474 009b 00       		.byte	0
 3475 009c 0D       		.uleb128 0xd
 3476 009d 05       		.uleb128 0x5
 3477 009e 00       		.byte	0
 3478 009f 03       		.uleb128 0x3
 3479 00a0 0E       		.uleb128 0xe
 3480 00a1 3A       		.uleb128 0x3a
 3481 00a2 0B       		.uleb128 0xb
 3482 00a3 3B       		.uleb128 0x3b
 3483 00a4 05       		.uleb128 0x5
 3484 00a5 49       		.uleb128 0x49
 3485 00a6 13       		.uleb128 0x13
 3486 00a7 00       		.byte	0
 3487 00a8 00       		.byte	0
 3488 00a9 0E       		.uleb128 0xe
 3489 00aa 2E       		.uleb128 0x2e
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 121


 3490 00ab 01       		.byte	0x1
 3491 00ac 3F       		.uleb128 0x3f
 3492 00ad 19       		.uleb128 0x19
 3493 00ae 03       		.uleb128 0x3
 3494 00af 0E       		.uleb128 0xe
 3495 00b0 3A       		.uleb128 0x3a
 3496 00b1 0B       		.uleb128 0xb
 3497 00b2 3B       		.uleb128 0x3b
 3498 00b3 05       		.uleb128 0x5
 3499 00b4 27       		.uleb128 0x27
 3500 00b5 19       		.uleb128 0x19
 3501 00b6 49       		.uleb128 0x49
 3502 00b7 13       		.uleb128 0x13
 3503 00b8 20       		.uleb128 0x20
 3504 00b9 0B       		.uleb128 0xb
 3505 00ba 01       		.uleb128 0x1
 3506 00bb 13       		.uleb128 0x13
 3507 00bc 00       		.byte	0
 3508 00bd 00       		.byte	0
 3509 00be 0F       		.uleb128 0xf
 3510 00bf 34       		.uleb128 0x34
 3511 00c0 00       		.byte	0
 3512 00c1 03       		.uleb128 0x3
 3513 00c2 0E       		.uleb128 0xe
 3514 00c3 3A       		.uleb128 0x3a
 3515 00c4 0B       		.uleb128 0xb
 3516 00c5 3B       		.uleb128 0x3b
 3517 00c6 05       		.uleb128 0x5
 3518 00c7 49       		.uleb128 0x49
 3519 00c8 13       		.uleb128 0x13
 3520 00c9 00       		.byte	0
 3521 00ca 00       		.byte	0
 3522 00cb 10       		.uleb128 0x10
 3523 00cc 2E       		.uleb128 0x2e
 3524 00cd 00       		.byte	0
 3525 00ce 3F       		.uleb128 0x3f
 3526 00cf 19       		.uleb128 0x19
 3527 00d0 03       		.uleb128 0x3
 3528 00d1 0E       		.uleb128 0xe
 3529 00d2 3A       		.uleb128 0x3a
 3530 00d3 0B       		.uleb128 0xb
 3531 00d4 3B       		.uleb128 0x3b
 3532 00d5 0B       		.uleb128 0xb
 3533 00d6 27       		.uleb128 0x27
 3534 00d7 19       		.uleb128 0x19
 3535 00d8 11       		.uleb128 0x11
 3536 00d9 01       		.uleb128 0x1
 3537 00da 12       		.uleb128 0x12
 3538 00db 06       		.uleb128 0x6
 3539 00dc 40       		.uleb128 0x40
 3540 00dd 18       		.uleb128 0x18
 3541 00de 9742     		.uleb128 0x2117
 3542 00e0 19       		.uleb128 0x19
 3543 00e1 00       		.byte	0
 3544 00e2 00       		.byte	0
 3545 00e3 11       		.uleb128 0x11
 3546 00e4 2E       		.uleb128 0x2e
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 122


 3547 00e5 01       		.byte	0x1
 3548 00e6 3F       		.uleb128 0x3f
 3549 00e7 19       		.uleb128 0x19
 3550 00e8 03       		.uleb128 0x3
 3551 00e9 0E       		.uleb128 0xe
 3552 00ea 3A       		.uleb128 0x3a
 3553 00eb 0B       		.uleb128 0xb
 3554 00ec 3B       		.uleb128 0x3b
 3555 00ed 05       		.uleb128 0x5
 3556 00ee 27       		.uleb128 0x27
 3557 00ef 19       		.uleb128 0x19
 3558 00f0 11       		.uleb128 0x11
 3559 00f1 01       		.uleb128 0x1
 3560 00f2 12       		.uleb128 0x12
 3561 00f3 06       		.uleb128 0x6
 3562 00f4 40       		.uleb128 0x40
 3563 00f5 18       		.uleb128 0x18
 3564 00f6 9742     		.uleb128 0x2117
 3565 00f8 19       		.uleb128 0x19
 3566 00f9 01       		.uleb128 0x1
 3567 00fa 13       		.uleb128 0x13
 3568 00fb 00       		.byte	0
 3569 00fc 00       		.byte	0
 3570 00fd 12       		.uleb128 0x12
 3571 00fe 05       		.uleb128 0x5
 3572 00ff 00       		.byte	0
 3573 0100 03       		.uleb128 0x3
 3574 0101 0E       		.uleb128 0xe
 3575 0102 3A       		.uleb128 0x3a
 3576 0103 0B       		.uleb128 0xb
 3577 0104 3B       		.uleb128 0x3b
 3578 0105 05       		.uleb128 0x5
 3579 0106 49       		.uleb128 0x49
 3580 0107 13       		.uleb128 0x13
 3581 0108 02       		.uleb128 0x2
 3582 0109 17       		.uleb128 0x17
 3583 010a 00       		.byte	0
 3584 010b 00       		.byte	0
 3585 010c 13       		.uleb128 0x13
 3586 010d 34       		.uleb128 0x34
 3587 010e 00       		.byte	0
 3588 010f 03       		.uleb128 0x3
 3589 0110 0E       		.uleb128 0xe
 3590 0111 3A       		.uleb128 0x3a
 3591 0112 0B       		.uleb128 0xb
 3592 0113 3B       		.uleb128 0x3b
 3593 0114 05       		.uleb128 0x5
 3594 0115 49       		.uleb128 0x49
 3595 0116 13       		.uleb128 0x13
 3596 0117 02       		.uleb128 0x2
 3597 0118 17       		.uleb128 0x17
 3598 0119 00       		.byte	0
 3599 011a 00       		.byte	0
 3600 011b 14       		.uleb128 0x14
 3601 011c 898201   		.uleb128 0x4109
 3602 011f 00       		.byte	0
 3603 0120 11       		.uleb128 0x11
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 123


 3604 0121 01       		.uleb128 0x1
 3605 0122 31       		.uleb128 0x31
 3606 0123 13       		.uleb128 0x13
 3607 0124 00       		.byte	0
 3608 0125 00       		.byte	0
 3609 0126 15       		.uleb128 0x15
 3610 0127 05       		.uleb128 0x5
 3611 0128 00       		.byte	0
 3612 0129 03       		.uleb128 0x3
 3613 012a 0E       		.uleb128 0xe
 3614 012b 3A       		.uleb128 0x3a
 3615 012c 0B       		.uleb128 0xb
 3616 012d 3B       		.uleb128 0x3b
 3617 012e 05       		.uleb128 0x5
 3618 012f 49       		.uleb128 0x49
 3619 0130 13       		.uleb128 0x13
 3620 0131 02       		.uleb128 0x2
 3621 0132 18       		.uleb128 0x18
 3622 0133 00       		.byte	0
 3623 0134 00       		.byte	0
 3624 0135 16       		.uleb128 0x16
 3625 0136 2E       		.uleb128 0x2e
 3626 0137 01       		.byte	0x1
 3627 0138 3F       		.uleb128 0x3f
 3628 0139 19       		.uleb128 0x19
 3629 013a 03       		.uleb128 0x3
 3630 013b 0E       		.uleb128 0xe
 3631 013c 3A       		.uleb128 0x3a
 3632 013d 0B       		.uleb128 0xb
 3633 013e 3B       		.uleb128 0x3b
 3634 013f 05       		.uleb128 0x5
 3635 0140 27       		.uleb128 0x27
 3636 0141 19       		.uleb128 0x19
 3637 0142 49       		.uleb128 0x49
 3638 0143 13       		.uleb128 0x13
 3639 0144 11       		.uleb128 0x11
 3640 0145 01       		.uleb128 0x1
 3641 0146 12       		.uleb128 0x12
 3642 0147 06       		.uleb128 0x6
 3643 0148 40       		.uleb128 0x40
 3644 0149 18       		.uleb128 0x18
 3645 014a 9742     		.uleb128 0x2117
 3646 014c 19       		.uleb128 0x19
 3647 014d 01       		.uleb128 0x1
 3648 014e 13       		.uleb128 0x13
 3649 014f 00       		.byte	0
 3650 0150 00       		.byte	0
 3651 0151 17       		.uleb128 0x17
 3652 0152 2E       		.uleb128 0x2e
 3653 0153 00       		.byte	0
 3654 0154 3F       		.uleb128 0x3f
 3655 0155 19       		.uleb128 0x19
 3656 0156 03       		.uleb128 0x3
 3657 0157 0E       		.uleb128 0xe
 3658 0158 3A       		.uleb128 0x3a
 3659 0159 0B       		.uleb128 0xb
 3660 015a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 124


 3661 015b 05       		.uleb128 0x5
 3662 015c 27       		.uleb128 0x27
 3663 015d 19       		.uleb128 0x19
 3664 015e 11       		.uleb128 0x11
 3665 015f 01       		.uleb128 0x1
 3666 0160 12       		.uleb128 0x12
 3667 0161 06       		.uleb128 0x6
 3668 0162 40       		.uleb128 0x40
 3669 0163 18       		.uleb128 0x18
 3670 0164 9742     		.uleb128 0x2117
 3671 0166 19       		.uleb128 0x19
 3672 0167 00       		.byte	0
 3673 0168 00       		.byte	0
 3674 0169 18       		.uleb128 0x18
 3675 016a 2E       		.uleb128 0x2e
 3676 016b 00       		.byte	0
 3677 016c 3F       		.uleb128 0x3f
 3678 016d 19       		.uleb128 0x19
 3679 016e 03       		.uleb128 0x3
 3680 016f 0E       		.uleb128 0xe
 3681 0170 3A       		.uleb128 0x3a
 3682 0171 0B       		.uleb128 0xb
 3683 0172 3B       		.uleb128 0x3b
 3684 0173 05       		.uleb128 0x5
 3685 0174 27       		.uleb128 0x27
 3686 0175 19       		.uleb128 0x19
 3687 0176 49       		.uleb128 0x49
 3688 0177 13       		.uleb128 0x13
 3689 0178 11       		.uleb128 0x11
 3690 0179 01       		.uleb128 0x1
 3691 017a 12       		.uleb128 0x12
 3692 017b 06       		.uleb128 0x6
 3693 017c 40       		.uleb128 0x40
 3694 017d 18       		.uleb128 0x18
 3695 017e 9742     		.uleb128 0x2117
 3696 0180 19       		.uleb128 0x19
 3697 0181 00       		.byte	0
 3698 0182 00       		.byte	0
 3699 0183 19       		.uleb128 0x19
 3700 0184 2E       		.uleb128 0x2e
 3701 0185 00       		.byte	0
 3702 0186 31       		.uleb128 0x31
 3703 0187 13       		.uleb128 0x13
 3704 0188 11       		.uleb128 0x11
 3705 0189 01       		.uleb128 0x1
 3706 018a 12       		.uleb128 0x12
 3707 018b 06       		.uleb128 0x6
 3708 018c 40       		.uleb128 0x40
 3709 018d 18       		.uleb128 0x18
 3710 018e 9742     		.uleb128 0x2117
 3711 0190 19       		.uleb128 0x19
 3712 0191 00       		.byte	0
 3713 0192 00       		.byte	0
 3714 0193 1A       		.uleb128 0x1a
 3715 0194 34       		.uleb128 0x34
 3716 0195 00       		.byte	0
 3717 0196 03       		.uleb128 0x3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 125


 3718 0197 0E       		.uleb128 0xe
 3719 0198 3A       		.uleb128 0x3a
 3720 0199 0B       		.uleb128 0xb
 3721 019a 3B       		.uleb128 0x3b
 3722 019b 05       		.uleb128 0x5
 3723 019c 49       		.uleb128 0x49
 3724 019d 13       		.uleb128 0x13
 3725 019e 02       		.uleb128 0x2
 3726 019f 18       		.uleb128 0x18
 3727 01a0 00       		.byte	0
 3728 01a1 00       		.byte	0
 3729 01a2 1B       		.uleb128 0x1b
 3730 01a3 2E       		.uleb128 0x2e
 3731 01a4 01       		.byte	0x1
 3732 01a5 31       		.uleb128 0x31
 3733 01a6 13       		.uleb128 0x13
 3734 01a7 11       		.uleb128 0x11
 3735 01a8 01       		.uleb128 0x1
 3736 01a9 12       		.uleb128 0x12
 3737 01aa 06       		.uleb128 0x6
 3738 01ab 40       		.uleb128 0x40
 3739 01ac 18       		.uleb128 0x18
 3740 01ad 9742     		.uleb128 0x2117
 3741 01af 19       		.uleb128 0x19
 3742 01b0 01       		.uleb128 0x1
 3743 01b1 13       		.uleb128 0x13
 3744 01b2 00       		.byte	0
 3745 01b3 00       		.byte	0
 3746 01b4 1C       		.uleb128 0x1c
 3747 01b5 05       		.uleb128 0x5
 3748 01b6 00       		.byte	0
 3749 01b7 31       		.uleb128 0x31
 3750 01b8 13       		.uleb128 0x13
 3751 01b9 02       		.uleb128 0x2
 3752 01ba 17       		.uleb128 0x17
 3753 01bb 00       		.byte	0
 3754 01bc 00       		.byte	0
 3755 01bd 1D       		.uleb128 0x1d
 3756 01be 05       		.uleb128 0x5
 3757 01bf 00       		.byte	0
 3758 01c0 31       		.uleb128 0x31
 3759 01c1 13       		.uleb128 0x13
 3760 01c2 02       		.uleb128 0x2
 3761 01c3 18       		.uleb128 0x18
 3762 01c4 00       		.byte	0
 3763 01c5 00       		.byte	0
 3764 01c6 1E       		.uleb128 0x1e
 3765 01c7 34       		.uleb128 0x34
 3766 01c8 00       		.byte	0
 3767 01c9 31       		.uleb128 0x31
 3768 01ca 13       		.uleb128 0x13
 3769 01cb 02       		.uleb128 0x2
 3770 01cc 18       		.uleb128 0x18
 3771 01cd 00       		.byte	0
 3772 01ce 00       		.byte	0
 3773 01cf 1F       		.uleb128 0x1f
 3774 01d0 34       		.uleb128 0x34
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 126


 3775 01d1 00       		.byte	0
 3776 01d2 31       		.uleb128 0x31
 3777 01d3 13       		.uleb128 0x13
 3778 01d4 1C       		.uleb128 0x1c
 3779 01d5 06       		.uleb128 0x6
 3780 01d6 00       		.byte	0
 3781 01d7 00       		.byte	0
 3782 01d8 20       		.uleb128 0x20
 3783 01d9 34       		.uleb128 0x34
 3784 01da 00       		.byte	0
 3785 01db 03       		.uleb128 0x3
 3786 01dc 0E       		.uleb128 0xe
 3787 01dd 3A       		.uleb128 0x3a
 3788 01de 0B       		.uleb128 0xb
 3789 01df 3B       		.uleb128 0x3b
 3790 01e0 05       		.uleb128 0x5
 3791 01e1 49       		.uleb128 0x49
 3792 01e2 13       		.uleb128 0x13
 3793 01e3 1C       		.uleb128 0x1c
 3794 01e4 06       		.uleb128 0x6
 3795 01e5 00       		.byte	0
 3796 01e6 00       		.byte	0
 3797 01e7 21       		.uleb128 0x21
 3798 01e8 898201   		.uleb128 0x4109
 3799 01eb 01       		.byte	0x1
 3800 01ec 11       		.uleb128 0x11
 3801 01ed 01       		.uleb128 0x1
 3802 01ee 31       		.uleb128 0x31
 3803 01ef 13       		.uleb128 0x13
 3804 01f0 01       		.uleb128 0x1
 3805 01f1 13       		.uleb128 0x13
 3806 01f2 00       		.byte	0
 3807 01f3 00       		.byte	0
 3808 01f4 22       		.uleb128 0x22
 3809 01f5 8A8201   		.uleb128 0x410a
 3810 01f8 00       		.byte	0
 3811 01f9 02       		.uleb128 0x2
 3812 01fa 18       		.uleb128 0x18
 3813 01fb 9142     		.uleb128 0x2111
 3814 01fd 18       		.uleb128 0x18
 3815 01fe 00       		.byte	0
 3816 01ff 00       		.byte	0
 3817 0200 23       		.uleb128 0x23
 3818 0201 898201   		.uleb128 0x4109
 3819 0204 01       		.byte	0x1
 3820 0205 11       		.uleb128 0x11
 3821 0206 01       		.uleb128 0x1
 3822 0207 31       		.uleb128 0x31
 3823 0208 13       		.uleb128 0x13
 3824 0209 00       		.byte	0
 3825 020a 00       		.byte	0
 3826 020b 24       		.uleb128 0x24
 3827 020c 1D       		.uleb128 0x1d
 3828 020d 00       		.byte	0
 3829 020e 31       		.uleb128 0x31
 3830 020f 13       		.uleb128 0x13
 3831 0210 52       		.uleb128 0x52
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 127


 3832 0211 01       		.uleb128 0x1
 3833 0212 55       		.uleb128 0x55
 3834 0213 17       		.uleb128 0x17
 3835 0214 58       		.uleb128 0x58
 3836 0215 0B       		.uleb128 0xb
 3837 0216 59       		.uleb128 0x59
 3838 0217 05       		.uleb128 0x5
 3839 0218 00       		.byte	0
 3840 0219 00       		.byte	0
 3841 021a 25       		.uleb128 0x25
 3842 021b 2E       		.uleb128 0x2e
 3843 021c 01       		.byte	0x1
 3844 021d 3F       		.uleb128 0x3f
 3845 021e 19       		.uleb128 0x19
 3846 021f 03       		.uleb128 0x3
 3847 0220 0E       		.uleb128 0xe
 3848 0221 3A       		.uleb128 0x3a
 3849 0222 0B       		.uleb128 0xb
 3850 0223 3B       		.uleb128 0x3b
 3851 0224 05       		.uleb128 0x5
 3852 0225 27       		.uleb128 0x27
 3853 0226 19       		.uleb128 0x19
 3854 0227 11       		.uleb128 0x11
 3855 0228 01       		.uleb128 0x1
 3856 0229 12       		.uleb128 0x12
 3857 022a 06       		.uleb128 0x6
 3858 022b 40       		.uleb128 0x40
 3859 022c 18       		.uleb128 0x18
 3860 022d 9642     		.uleb128 0x2116
 3861 022f 19       		.uleb128 0x19
 3862 0230 01       		.uleb128 0x1
 3863 0231 13       		.uleb128 0x13
 3864 0232 00       		.byte	0
 3865 0233 00       		.byte	0
 3866 0234 26       		.uleb128 0x26
 3867 0235 34       		.uleb128 0x34
 3868 0236 00       		.byte	0
 3869 0237 03       		.uleb128 0x3
 3870 0238 08       		.uleb128 0x8
 3871 0239 3A       		.uleb128 0x3a
 3872 023a 0B       		.uleb128 0xb
 3873 023b 3B       		.uleb128 0x3b
 3874 023c 05       		.uleb128 0x5
 3875 023d 49       		.uleb128 0x49
 3876 023e 13       		.uleb128 0x13
 3877 023f 02       		.uleb128 0x2
 3878 0240 17       		.uleb128 0x17
 3879 0241 00       		.byte	0
 3880 0242 00       		.byte	0
 3881 0243 27       		.uleb128 0x27
 3882 0244 1D       		.uleb128 0x1d
 3883 0245 01       		.byte	0x1
 3884 0246 31       		.uleb128 0x31
 3885 0247 13       		.uleb128 0x13
 3886 0248 52       		.uleb128 0x52
 3887 0249 01       		.uleb128 0x1
 3888 024a 55       		.uleb128 0x55
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 128


 3889 024b 17       		.uleb128 0x17
 3890 024c 58       		.uleb128 0x58
 3891 024d 0B       		.uleb128 0xb
 3892 024e 59       		.uleb128 0x59
 3893 024f 05       		.uleb128 0x5
 3894 0250 01       		.uleb128 0x1
 3895 0251 13       		.uleb128 0x13
 3896 0252 00       		.byte	0
 3897 0253 00       		.byte	0
 3898 0254 28       		.uleb128 0x28
 3899 0255 0B       		.uleb128 0xb
 3900 0256 01       		.byte	0x1
 3901 0257 55       		.uleb128 0x55
 3902 0258 17       		.uleb128 0x17
 3903 0259 00       		.byte	0
 3904 025a 00       		.byte	0
 3905 025b 29       		.uleb128 0x29
 3906 025c 34       		.uleb128 0x34
 3907 025d 00       		.byte	0
 3908 025e 31       		.uleb128 0x31
 3909 025f 13       		.uleb128 0x13
 3910 0260 02       		.uleb128 0x2
 3911 0261 17       		.uleb128 0x17
 3912 0262 00       		.byte	0
 3913 0263 00       		.byte	0
 3914 0264 2A       		.uleb128 0x2a
 3915 0265 1D       		.uleb128 0x1d
 3916 0266 01       		.byte	0x1
 3917 0267 31       		.uleb128 0x31
 3918 0268 13       		.uleb128 0x13
 3919 0269 11       		.uleb128 0x11
 3920 026a 01       		.uleb128 0x1
 3921 026b 12       		.uleb128 0x12
 3922 026c 06       		.uleb128 0x6
 3923 026d 58       		.uleb128 0x58
 3924 026e 0B       		.uleb128 0xb
 3925 026f 59       		.uleb128 0x59
 3926 0270 05       		.uleb128 0x5
 3927 0271 01       		.uleb128 0x1
 3928 0272 13       		.uleb128 0x13
 3929 0273 00       		.byte	0
 3930 0274 00       		.byte	0
 3931 0275 2B       		.uleb128 0x2b
 3932 0276 1D       		.uleb128 0x1d
 3933 0277 00       		.byte	0
 3934 0278 31       		.uleb128 0x31
 3935 0279 13       		.uleb128 0x13
 3936 027a 11       		.uleb128 0x11
 3937 027b 01       		.uleb128 0x1
 3938 027c 12       		.uleb128 0x12
 3939 027d 06       		.uleb128 0x6
 3940 027e 58       		.uleb128 0x58
 3941 027f 0B       		.uleb128 0xb
 3942 0280 59       		.uleb128 0x59
 3943 0281 05       		.uleb128 0x5
 3944 0282 00       		.byte	0
 3945 0283 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 129


 3946 0284 2C       		.uleb128 0x2c
 3947 0285 2E       		.uleb128 0x2e
 3948 0286 01       		.byte	0x1
 3949 0287 31       		.uleb128 0x31
 3950 0288 13       		.uleb128 0x13
 3951 0289 11       		.uleb128 0x11
 3952 028a 01       		.uleb128 0x1
 3953 028b 12       		.uleb128 0x12
 3954 028c 06       		.uleb128 0x6
 3955 028d 40       		.uleb128 0x40
 3956 028e 18       		.uleb128 0x18
 3957 028f 9642     		.uleb128 0x2116
 3958 0291 19       		.uleb128 0x19
 3959 0292 01       		.uleb128 0x1
 3960 0293 13       		.uleb128 0x13
 3961 0294 00       		.byte	0
 3962 0295 00       		.byte	0
 3963 0296 2D       		.uleb128 0x2d
 3964 0297 34       		.uleb128 0x34
 3965 0298 00       		.byte	0
 3966 0299 31       		.uleb128 0x31
 3967 029a 13       		.uleb128 0x13
 3968 029b 00       		.byte	0
 3969 029c 00       		.byte	0
 3970 029d 2E       		.uleb128 0x2e
 3971 029e 0B       		.uleb128 0xb
 3972 029f 01       		.byte	0x1
 3973 02a0 11       		.uleb128 0x11
 3974 02a1 01       		.uleb128 0x1
 3975 02a2 12       		.uleb128 0x12
 3976 02a3 06       		.uleb128 0x6
 3977 02a4 01       		.uleb128 0x1
 3978 02a5 13       		.uleb128 0x13
 3979 02a6 00       		.byte	0
 3980 02a7 00       		.byte	0
 3981 02a8 2F       		.uleb128 0x2f
 3982 02a9 01       		.uleb128 0x1
 3983 02aa 01       		.byte	0x1
 3984 02ab 49       		.uleb128 0x49
 3985 02ac 13       		.uleb128 0x13
 3986 02ad 01       		.uleb128 0x1
 3987 02ae 13       		.uleb128 0x13
 3988 02af 00       		.byte	0
 3989 02b0 00       		.byte	0
 3990 02b1 30       		.uleb128 0x30
 3991 02b2 21       		.uleb128 0x21
 3992 02b3 00       		.byte	0
 3993 02b4 49       		.uleb128 0x49
 3994 02b5 13       		.uleb128 0x13
 3995 02b6 2F       		.uleb128 0x2f
 3996 02b7 0B       		.uleb128 0xb
 3997 02b8 00       		.byte	0
 3998 02b9 00       		.byte	0
 3999 02ba 31       		.uleb128 0x31
 4000 02bb 34       		.uleb128 0x34
 4001 02bc 00       		.byte	0
 4002 02bd 03       		.uleb128 0x3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 130


 4003 02be 0E       		.uleb128 0xe
 4004 02bf 3A       		.uleb128 0x3a
 4005 02c0 0B       		.uleb128 0xb
 4006 02c1 3B       		.uleb128 0x3b
 4007 02c2 0B       		.uleb128 0xb
 4008 02c3 49       		.uleb128 0x49
 4009 02c4 13       		.uleb128 0x13
 4010 02c5 02       		.uleb128 0x2
 4011 02c6 18       		.uleb128 0x18
 4012 02c7 00       		.byte	0
 4013 02c8 00       		.byte	0
 4014 02c9 32       		.uleb128 0x32
 4015 02ca 34       		.uleb128 0x34
 4016 02cb 00       		.byte	0
 4017 02cc 03       		.uleb128 0x3
 4018 02cd 0E       		.uleb128 0xe
 4019 02ce 3A       		.uleb128 0x3a
 4020 02cf 0B       		.uleb128 0xb
 4021 02d0 3B       		.uleb128 0x3b
 4022 02d1 0B       		.uleb128 0xb
 4023 02d2 49       		.uleb128 0x49
 4024 02d3 13       		.uleb128 0x13
 4025 02d4 3F       		.uleb128 0x3f
 4026 02d5 19       		.uleb128 0x19
 4027 02d6 02       		.uleb128 0x2
 4028 02d7 18       		.uleb128 0x18
 4029 02d8 00       		.byte	0
 4030 02d9 00       		.byte	0
 4031 02da 33       		.uleb128 0x33
 4032 02db 26       		.uleb128 0x26
 4033 02dc 00       		.byte	0
 4034 02dd 49       		.uleb128 0x49
 4035 02de 13       		.uleb128 0x13
 4036 02df 00       		.byte	0
 4037 02e0 00       		.byte	0
 4038 02e1 34       		.uleb128 0x34
 4039 02e2 2E       		.uleb128 0x2e
 4040 02e3 00       		.byte	0
 4041 02e4 3F       		.uleb128 0x3f
 4042 02e5 19       		.uleb128 0x19
 4043 02e6 3C       		.uleb128 0x3c
 4044 02e7 19       		.uleb128 0x19
 4045 02e8 6E       		.uleb128 0x6e
 4046 02e9 0E       		.uleb128 0xe
 4047 02ea 03       		.uleb128 0x3
 4048 02eb 0E       		.uleb128 0xe
 4049 02ec 3A       		.uleb128 0x3a
 4050 02ed 0B       		.uleb128 0xb
 4051 02ee 3B       		.uleb128 0x3b
 4052 02ef 0B       		.uleb128 0xb
 4053 02f0 00       		.byte	0
 4054 02f1 00       		.byte	0
 4055 02f2 00       		.byte	0
 4056              		.section	.debug_loc,"",%progbits
 4057              	.Ldebug_loc0:
 4058              	.LLST0:
 4059 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 131


 4060 0004 07000000 		.4byte	.LVL1-1
 4061 0008 0100     		.2byte	0x1
 4062 000a 50       		.byte	0x50
 4063 000b 07000000 		.4byte	.LVL1-1
 4064 000f 1A000000 		.4byte	.LVL5
 4065 0013 0100     		.2byte	0x1
 4066 0015 54       		.byte	0x54
 4067 0016 1A000000 		.4byte	.LVL5
 4068 001a 20000000 		.4byte	.LFE2
 4069 001e 0400     		.2byte	0x4
 4070 0020 F3       		.byte	0xf3
 4071 0021 01       		.uleb128 0x1
 4072 0022 50       		.byte	0x50
 4073 0023 9F       		.byte	0x9f
 4074 0024 00000000 		.4byte	0
 4075 0028 00000000 		.4byte	0
 4076              	.LLST1:
 4077 002c 08000000 		.4byte	.LVL1
 4078 0030 19000000 		.4byte	.LVL4-1
 4079 0034 0100     		.2byte	0x1
 4080 0036 50       		.byte	0x50
 4081 0037 00000000 		.4byte	0
 4082 003b 00000000 		.4byte	0
 4083              	.LLST2:
 4084 003f 10000000 		.4byte	.LVL2
 4085 0043 14000000 		.4byte	.LVL3
 4086 0047 0100     		.2byte	0x1
 4087 0049 52       		.byte	0x52
 4088 004a 14000000 		.4byte	.LVL3
 4089 004e 19000000 		.4byte	.LVL4-1
 4090 0052 0100     		.2byte	0x1
 4091 0054 53       		.byte	0x53
 4092 0055 00000000 		.4byte	0
 4093 0059 00000000 		.4byte	0
 4094              	.LLST3:
 4095 005d 06000000 		.4byte	.LVL7
 4096 0061 0D000000 		.4byte	.LVL9-1
 4097 0065 0100     		.2byte	0x1
 4098 0067 50       		.byte	0x50
 4099 0068 00000000 		.4byte	0
 4100 006c 00000000 		.4byte	0
 4101              	.LLST4:
 4102 0070 0A000000 		.4byte	.LVL8
 4103 0074 12000000 		.4byte	.LVL10
 4104 0078 0500     		.2byte	0x5
 4105 007a 74       		.byte	0x74
 4106 007b 00       		.sleb128 0
 4107 007c 37       		.byte	0x37
 4108 007d 1A       		.byte	0x1a
 4109 007e 9F       		.byte	0x9f
 4110 007f 12000000 		.4byte	.LVL10
 4111 0083 18000000 		.4byte	.LFE4
 4112 0087 0100     		.2byte	0x1
 4113 0089 50       		.byte	0x50
 4114 008a 00000000 		.4byte	0
 4115 008e 00000000 		.4byte	0
 4116              	.LLST5:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 132


 4117 0092 00000000 		.4byte	.LVL11
 4118 0096 07000000 		.4byte	.LVL12-1
 4119 009a 0100     		.2byte	0x1
 4120 009c 50       		.byte	0x50
 4121 009d 07000000 		.4byte	.LVL12-1
 4122 00a1 0C000000 		.4byte	.LVL13
 4123 00a5 0100     		.2byte	0x1
 4124 00a7 54       		.byte	0x54
 4125 00a8 0C000000 		.4byte	.LVL13
 4126 00ac 2C000000 		.4byte	.LFE5
 4127 00b0 0400     		.2byte	0x4
 4128 00b2 F3       		.byte	0xf3
 4129 00b3 01       		.uleb128 0x1
 4130 00b4 50       		.byte	0x50
 4131 00b5 9F       		.byte	0x9f
 4132 00b6 00000000 		.4byte	0
 4133 00ba 00000000 		.4byte	0
 4134              	.LLST6:
 4135 00be 08000000 		.4byte	.LVL12
 4136 00c2 21000000 		.4byte	.LVL14-1
 4137 00c6 0100     		.2byte	0x1
 4138 00c8 50       		.byte	0x50
 4139 00c9 00000000 		.4byte	0
 4140 00cd 00000000 		.4byte	0
 4141              	.LLST7:
 4142 00d1 00000000 		.4byte	.LVL15
 4143 00d5 08000000 		.4byte	.LVL16
 4144 00d9 0100     		.2byte	0x1
 4145 00db 50       		.byte	0x50
 4146 00dc 08000000 		.4byte	.LVL16
 4147 00e0 14000000 		.4byte	.LFE11
 4148 00e4 0100     		.2byte	0x1
 4149 00e6 52       		.byte	0x52
 4150 00e7 00000000 		.4byte	0
 4151 00eb 00000000 		.4byte	0
 4152              	.LLST8:
 4153 00ef 0A000000 		.4byte	.LVL17
 4154 00f3 0C000000 		.4byte	.LVL18
 4155 00f7 0500     		.2byte	0x5
 4156 00f9 70       		.byte	0x70
 4157 00fa 00       		.sleb128 0
 4158 00fb 49       		.byte	0x49
 4159 00fc 1A       		.byte	0x1a
 4160 00fd 9F       		.byte	0x9f
 4161 00fe 0C000000 		.4byte	.LVL18
 4162 0102 14000000 		.4byte	.LFE11
 4163 0106 0100     		.2byte	0x1
 4164 0108 50       		.byte	0x50
 4165 0109 00000000 		.4byte	0
 4166 010d 00000000 		.4byte	0
 4167              	.LLST9:
 4168 0111 00000000 		.4byte	.LVL21
 4169 0115 04000000 		.4byte	.LVL22
 4170 0119 0100     		.2byte	0x1
 4171 011b 50       		.byte	0x50
 4172 011c 04000000 		.4byte	.LVL22
 4173 0120 0E000000 		.4byte	.LFE14
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 133


 4174 0124 0400     		.2byte	0x4
 4175 0126 F3       		.byte	0xf3
 4176 0127 01       		.uleb128 0x1
 4177 0128 50       		.byte	0x50
 4178 0129 9F       		.byte	0x9f
 4179 012a 00000000 		.4byte	0
 4180 012e 00000000 		.4byte	0
 4181              	.LLST10:
 4182 0132 00000000 		.4byte	.LVL24
 4183 0136 04000000 		.4byte	.LVL25
 4184 013a 0100     		.2byte	0x1
 4185 013c 50       		.byte	0x50
 4186 013d 04000000 		.4byte	.LVL25
 4187 0141 0C000000 		.4byte	.LFE15
 4188 0145 0400     		.2byte	0x4
 4189 0147 F3       		.byte	0xf3
 4190 0148 01       		.uleb128 0x1
 4191 0149 50       		.byte	0x50
 4192 014a 9F       		.byte	0x9f
 4193 014b 00000000 		.4byte	0
 4194 014f 00000000 		.4byte	0
 4195              	.LLST11:
 4196 0153 00000000 		.4byte	.LVL26
 4197 0157 04000000 		.4byte	.LVL27
 4198 015b 0100     		.2byte	0x1
 4199 015d 50       		.byte	0x50
 4200 015e 04000000 		.4byte	.LVL27
 4201 0162 10000000 		.4byte	.LFE16
 4202 0166 0400     		.2byte	0x4
 4203 0168 F3       		.byte	0xf3
 4204 0169 01       		.uleb128 0x1
 4205 016a 50       		.byte	0x50
 4206 016b 9F       		.byte	0x9f
 4207 016c 00000000 		.4byte	0
 4208 0170 00000000 		.4byte	0
 4209              	.LLST12:
 4210 0174 00000000 		.4byte	.LVL29
 4211 0178 04000000 		.4byte	.LVL30
 4212 017c 0100     		.2byte	0x1
 4213 017e 50       		.byte	0x50
 4214 017f 04000000 		.4byte	.LVL30
 4215 0183 10000000 		.4byte	.LFE17
 4216 0187 0400     		.2byte	0x4
 4217 0189 F3       		.byte	0xf3
 4218 018a 01       		.uleb128 0x1
 4219 018b 50       		.byte	0x50
 4220 018c 9F       		.byte	0x9f
 4221 018d 00000000 		.4byte	0
 4222 0191 00000000 		.4byte	0
 4223              	.LLST13:
 4224 0195 00000000 		.4byte	.LVL31
 4225 0199 17000000 		.4byte	.LVL33-1
 4226 019d 0100     		.2byte	0x1
 4227 019f 50       		.byte	0x50
 4228 01a0 17000000 		.4byte	.LVL33-1
 4229 01a4 34000000 		.4byte	.LFE18
 4230 01a8 0400     		.2byte	0x4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 134


 4231 01aa F3       		.byte	0xf3
 4232 01ab 01       		.uleb128 0x1
 4233 01ac 50       		.byte	0x50
 4234 01ad 9F       		.byte	0x9f
 4235 01ae 00000000 		.4byte	0
 4236 01b2 00000000 		.4byte	0
 4237              	.LLST14:
 4238 01b6 00000000 		.4byte	.LVL31
 4239 01ba 17000000 		.4byte	.LVL33-1
 4240 01be 0100     		.2byte	0x1
 4241 01c0 51       		.byte	0x51
 4242 01c1 17000000 		.4byte	.LVL33-1
 4243 01c5 34000000 		.4byte	.LFE18
 4244 01c9 0400     		.2byte	0x4
 4245 01cb F3       		.byte	0xf3
 4246 01cc 01       		.uleb128 0x1
 4247 01cd 51       		.byte	0x51
 4248 01ce 9F       		.byte	0x9f
 4249 01cf 00000000 		.4byte	0
 4250 01d3 00000000 		.4byte	0
 4251              	.LLST15:
 4252 01d7 18000000 		.4byte	.LVL33
 4253 01db 2B000000 		.4byte	.LVL37-1
 4254 01df 0100     		.2byte	0x1
 4255 01e1 50       		.byte	0x50
 4256 01e2 00000000 		.4byte	0
 4257 01e6 00000000 		.4byte	0
 4258              	.LLST16:
 4259 01ea 10000000 		.4byte	.LVL32
 4260 01ee 2C000000 		.4byte	.LVL38
 4261 01f2 0100     		.2byte	0x1
 4262 01f4 55       		.byte	0x55
 4263 01f5 00000000 		.4byte	0
 4264 01f9 00000000 		.4byte	0
 4265              	.LLST17:
 4266 01fd 22000000 		.4byte	.LVL34
 4267 0201 26000000 		.4byte	.LVL36
 4268 0205 0100     		.2byte	0x1
 4269 0207 53       		.byte	0x53
 4270 0208 26000000 		.4byte	.LVL36
 4271 020c 2C000000 		.4byte	.LVL39
 4272 0210 0100     		.2byte	0x1
 4273 0212 57       		.byte	0x57
 4274 0213 00000000 		.4byte	0
 4275 0217 00000000 		.4byte	0
 4276              	.LLST18:
 4277 021b 00000000 		.4byte	.LVL40
 4278 021f 18000000 		.4byte	.LVL43
 4279 0223 0100     		.2byte	0x1
 4280 0225 50       		.byte	0x50
 4281 0226 18000000 		.4byte	.LVL43
 4282 022a 20000000 		.4byte	.LFE19
 4283 022e 0400     		.2byte	0x4
 4284 0230 F3       		.byte	0xf3
 4285 0231 01       		.uleb128 0x1
 4286 0232 50       		.byte	0x50
 4287 0233 9F       		.byte	0x9f
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 135


 4288 0234 00000000 		.4byte	0
 4289 0238 00000000 		.4byte	0
 4290              	.LLST19:
 4291 023c 0A000000 		.4byte	.LVL41
 4292 0240 16000000 		.4byte	.LVL42
 4293 0244 0F00     		.2byte	0xf
 4294 0246 71       		.byte	0x71
 4295 0247 00       		.sleb128 0
 4296 0248 70       		.byte	0x70
 4297 0249 00       		.sleb128 0
 4298 024a 33       		.byte	0x33
 4299 024b 1A       		.byte	0x1a
 4300 024c 08       		.byte	0x8
 4301 024d FF       		.byte	0xff
 4302 024e 1A       		.byte	0x1a
 4303 024f 33       		.byte	0x33
 4304 0250 24       		.byte	0x24
 4305 0251 23       		.byte	0x23
 4306 0252 06       		.uleb128 0x6
 4307 0253 25       		.byte	0x25
 4308 0254 9F       		.byte	0x9f
 4309 0255 00000000 		.4byte	0
 4310 0259 00000000 		.4byte	0
 4311              	.LLST20:
 4312 025d 00000000 		.4byte	.LVL44
 4313 0261 04000000 		.4byte	.LVL45
 4314 0265 0100     		.2byte	0x1
 4315 0267 50       		.byte	0x50
 4316 0268 04000000 		.4byte	.LVL45
 4317 026c 14000000 		.4byte	.LFE20
 4318 0270 0400     		.2byte	0x4
 4319 0272 F3       		.byte	0xf3
 4320 0273 01       		.uleb128 0x1
 4321 0274 50       		.byte	0x50
 4322 0275 9F       		.byte	0x9f
 4323 0276 00000000 		.4byte	0
 4324 027a 00000000 		.4byte	0
 4325              	.LLST21:
 4326 027e 00000000 		.4byte	.LVL46
 4327 0282 06000000 		.4byte	.LVL47
 4328 0286 0100     		.2byte	0x1
 4329 0288 50       		.byte	0x50
 4330 0289 06000000 		.4byte	.LVL47
 4331 028d 18000000 		.4byte	.LFE21
 4332 0291 0400     		.2byte	0x4
 4333 0293 F3       		.byte	0xf3
 4334 0294 01       		.uleb128 0x1
 4335 0295 50       		.byte	0x50
 4336 0296 9F       		.byte	0x9f
 4337 0297 00000000 		.4byte	0
 4338 029b 00000000 		.4byte	0
 4339              	.LLST22:
 4340 029f 00000000 		.4byte	.LVL48
 4341 02a3 04000000 		.4byte	.LVL49
 4342 02a7 0100     		.2byte	0x1
 4343 02a9 50       		.byte	0x50
 4344 02aa 04000000 		.4byte	.LVL49
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 136


 4345 02ae 14000000 		.4byte	.LFE22
 4346 02b2 0400     		.2byte	0x4
 4347 02b4 F3       		.byte	0xf3
 4348 02b5 01       		.uleb128 0x1
 4349 02b6 50       		.byte	0x50
 4350 02b7 9F       		.byte	0x9f
 4351 02b8 00000000 		.4byte	0
 4352 02bc 00000000 		.4byte	0
 4353              	.LLST23:
 4354 02c0 00000000 		.4byte	.LVL50
 4355 02c4 04000000 		.4byte	.LVL51
 4356 02c8 0100     		.2byte	0x1
 4357 02ca 50       		.byte	0x50
 4358 02cb 04000000 		.4byte	.LVL51
 4359 02cf 14000000 		.4byte	.LFE23
 4360 02d3 0400     		.2byte	0x4
 4361 02d5 F3       		.byte	0xf3
 4362 02d6 01       		.uleb128 0x1
 4363 02d7 50       		.byte	0x50
 4364 02d8 9F       		.byte	0x9f
 4365 02d9 00000000 		.4byte	0
 4366 02dd 00000000 		.4byte	0
 4367              	.LLST24:
 4368 02e1 00000000 		.4byte	.LVL52
 4369 02e5 04000000 		.4byte	.LVL53
 4370 02e9 0100     		.2byte	0x1
 4371 02eb 50       		.byte	0x50
 4372 02ec 04000000 		.4byte	.LVL53
 4373 02f0 14000000 		.4byte	.LFE24
 4374 02f4 0400     		.2byte	0x4
 4375 02f6 F3       		.byte	0xf3
 4376 02f7 01       		.uleb128 0x1
 4377 02f8 50       		.byte	0x50
 4378 02f9 9F       		.byte	0x9f
 4379 02fa 00000000 		.4byte	0
 4380 02fe 00000000 		.4byte	0
 4381              	.LLST25:
 4382 0302 00000000 		.4byte	.LVL55
 4383 0306 08000000 		.4byte	.LVL56
 4384 030a 0100     		.2byte	0x1
 4385 030c 50       		.byte	0x50
 4386 030d 08000000 		.4byte	.LVL56
 4387 0311 22000000 		.4byte	.LVL60
 4388 0315 0100     		.2byte	0x1
 4389 0317 54       		.byte	0x54
 4390 0318 00000000 		.4byte	0
 4391 031c 00000000 		.4byte	0
 4392              	.LLST26:
 4393 0320 00000000 		.4byte	.LVL61
 4394 0324 08000000 		.4byte	.LVL62
 4395 0328 0100     		.2byte	0x1
 4396 032a 50       		.byte	0x50
 4397 032b 08000000 		.4byte	.LVL62
 4398 032f 14000000 		.4byte	.LFE28
 4399 0333 0400     		.2byte	0x4
 4400 0335 F3       		.byte	0xf3
 4401 0336 01       		.uleb128 0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 137


 4402 0337 50       		.byte	0x50
 4403 0338 9F       		.byte	0x9f
 4404 0339 00000000 		.4byte	0
 4405 033d 00000000 		.4byte	0
 4406              	.LLST27:
 4407 0341 00000000 		.4byte	.LVL64
 4408 0345 09000000 		.4byte	.LVL65-1
 4409 0349 0100     		.2byte	0x1
 4410 034b 50       		.byte	0x50
 4411 034c 09000000 		.4byte	.LVL65-1
 4412 0350 A2000000 		.4byte	.LVL81
 4413 0354 0100     		.2byte	0x1
 4414 0356 55       		.byte	0x55
 4415 0357 A2000000 		.4byte	.LVL81
 4416 035b CC000000 		.4byte	.LVL83
 4417 035f 0700     		.2byte	0x7
 4418 0361 75       		.byte	0x75
 4419 0362 B39C8080 		.sleb128 -268431821
 4419      7F
 4420 0367 9F       		.byte	0x9f
 4421 0368 CC000000 		.4byte	.LVL83
 4422 036c 24010000 		.4byte	.LFE6
 4423 0370 0600     		.2byte	0x6
 4424 0372 91       		.byte	0x91
 4425 0373 5C       		.sleb128 -36
 4426 0374 06       		.byte	0x6
 4427 0375 23       		.byte	0x23
 4428 0376 03       		.uleb128 0x3
 4429 0377 9F       		.byte	0x9f
 4430 0378 00000000 		.4byte	0
 4431 037c 00000000 		.4byte	0
 4432              	.LLST28:
 4433 0380 24000000 		.4byte	.LVL67
 4434 0384 26000000 		.4byte	.LVL68
 4435 0388 0100     		.2byte	0x1
 4436 038a 54       		.byte	0x54
 4437 038b 36000000 		.4byte	.LVL69
 4438 038f 38000000 		.4byte	.LVL70
 4439 0393 0100     		.2byte	0x1
 4440 0395 54       		.byte	0x54
 4441 0396 48000000 		.4byte	.LVL71
 4442 039a 4A000000 		.4byte	.LVL72
 4443 039e 0100     		.2byte	0x1
 4444 03a0 54       		.byte	0x54
 4445 03a1 5A000000 		.4byte	.LVL73
 4446 03a5 5C000000 		.4byte	.LVL74
 4447 03a9 0100     		.2byte	0x1
 4448 03ab 54       		.byte	0x54
 4449 03ac 64000000 		.4byte	.LVL75
 4450 03b0 CC000000 		.4byte	.LVL83
 4451 03b4 0100     		.2byte	0x1
 4452 03b6 54       		.byte	0x54
 4453 03b7 00000000 		.4byte	0
 4454 03bb 00000000 		.4byte	0
 4455              	.LLST29:
 4456 03bf 6C000000 		.4byte	.LVL76
 4457 03c3 CC000000 		.4byte	.LVL83
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 138


 4458 03c7 0200     		.2byte	0x2
 4459 03c9 91       		.byte	0x91
 4460 03ca 54       		.sleb128 -44
 4461 03cb 00000000 		.4byte	0
 4462 03cf 00000000 		.4byte	0
 4463              	.LLST30:
 4464 03d3 76000000 		.4byte	.LVL77
 4465 03d7 CC000000 		.4byte	.LVL83
 4466 03db 0200     		.2byte	0x2
 4467 03dd 91       		.byte	0x91
 4468 03de 58       		.sleb128 -40
 4469 03df 00000000 		.4byte	0
 4470 03e3 00000000 		.4byte	0
 4471              	.LLST31:
 4472 03e7 8A000000 		.4byte	.LVL78
 4473 03eb 96000000 		.4byte	.LVL79
 4474 03ef 0100     		.2byte	0x1
 4475 03f1 56       		.byte	0x56
 4476 03f2 00000000 		.4byte	0
 4477 03f6 00000000 		.4byte	0
 4478              	.LLST32:
 4479 03fa 00000000 		.4byte	.LVL85
 4480 03fe 0E000000 		.4byte	.LVL86
 4481 0402 0100     		.2byte	0x1
 4482 0404 50       		.byte	0x50
 4483 0405 0E000000 		.4byte	.LVL86
 4484 0409 44000000 		.4byte	.LFE7
 4485 040d 0400     		.2byte	0x4
 4486 040f F3       		.byte	0xf3
 4487 0410 01       		.uleb128 0x1
 4488 0411 50       		.byte	0x50
 4489 0412 9F       		.byte	0x9f
 4490 0413 00000000 		.4byte	0
 4491 0417 00000000 		.4byte	0
 4492              	.LLST33:
 4493 041b 00000000 		.4byte	.LVL88
 4494 041f 18000000 		.4byte	.LVL89
 4495 0423 0100     		.2byte	0x1
 4496 0425 50       		.byte	0x50
 4497 0426 18000000 		.4byte	.LVL89
 4498 042a 48000000 		.4byte	.LFE29
 4499 042e 0400     		.2byte	0x4
 4500 0430 F3       		.byte	0xf3
 4501 0431 01       		.uleb128 0x1
 4502 0432 50       		.byte	0x50
 4503 0433 9F       		.byte	0x9f
 4504 0434 00000000 		.4byte	0
 4505 0438 00000000 		.4byte	0
 4506              	.LLST34:
 4507 043c 00000000 		.4byte	.LVL92
 4508 0440 0C000000 		.4byte	.LVL93
 4509 0444 0200     		.2byte	0x2
 4510 0446 30       		.byte	0x30
 4511 0447 9F       		.byte	0x9f
 4512 0448 0C000000 		.4byte	.LVL93
 4513 044c 10000000 		.4byte	.LVL94
 4514 0450 0200     		.2byte	0x2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 139


 4515 0452 31       		.byte	0x31
 4516 0453 9F       		.byte	0x9f
 4517 0454 10000000 		.4byte	.LVL94
 4518 0458 12000000 		.4byte	.LVL95
 4519 045c 0200     		.2byte	0x2
 4520 045e 32       		.byte	0x32
 4521 045f 9F       		.byte	0x9f
 4522 0460 12000000 		.4byte	.LVL95
 4523 0464 14000000 		.4byte	.LVL96
 4524 0468 0200     		.2byte	0x2
 4525 046a 33       		.byte	0x33
 4526 046b 9F       		.byte	0x9f
 4527 046c 14000000 		.4byte	.LVL96
 4528 0470 44000000 		.4byte	.LFE31
 4529 0474 0200     		.2byte	0x2
 4530 0476 35       		.byte	0x35
 4531 0477 9F       		.byte	0x9f
 4532 0478 00000000 		.4byte	0
 4533 047c 00000000 		.4byte	0
 4534              	.LLST35:
 4535 0480 14000000 		.4byte	.LVL96
 4536 0484 1A000000 		.4byte	.LVL98
 4537 0488 0600     		.2byte	0x6
 4538 048a 03       		.byte	0x3
 4539 048b 00000000 		.4byte	CySysTickServiceCallbacks
 4540 048f 9F       		.byte	0x9f
 4541 0490 00000000 		.4byte	0
 4542 0494 00000000 		.4byte	0
 4543              	.LLST36:
 4544 0498 14000000 		.4byte	.LVL96
 4545 049c 1A000000 		.4byte	.LVL98
 4546 04a0 0200     		.2byte	0x2
 4547 04a2 3F       		.byte	0x3f
 4548 04a3 9F       		.byte	0x9f
 4549 04a4 00000000 		.4byte	0
 4550 04a8 00000000 		.4byte	0
 4551              	.LLST37:
 4552 04ac 14000000 		.4byte	.LVL96
 4553 04b0 16000000 		.4byte	.LVL97
 4554 04b4 0500     		.2byte	0x5
 4555 04b6 0C       		.byte	0xc
 4556 04b7 3C000020 		.4byte	0x2000003c
 4557 04bb 16000000 		.4byte	.LVL97
 4558 04bf 1A000000 		.4byte	.LVL98
 4559 04c3 0200     		.2byte	0x2
 4560 04c5 73       		.byte	0x73
 4561 04c6 00       		.sleb128 0
 4562 04c7 00000000 		.4byte	0
 4563 04cb 00000000 		.4byte	0
 4564              	.LLST38:
 4565 04cf 22000000 		.4byte	.LVL99
 4566 04d3 26000000 		.4byte	.LVL100
 4567 04d7 0100     		.2byte	0x1
 4568 04d9 50       		.byte	0x50
 4569 04da 00000000 		.4byte	0
 4570 04de 00000000 		.4byte	0
 4571              	.LLST39:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 140


 4572 04e2 00000000 		.4byte	.LVL104
 4573 04e6 04000000 		.4byte	.LVL105
 4574 04ea 0100     		.2byte	0x1
 4575 04ec 50       		.byte	0x50
 4576 04ed 04000000 		.4byte	.LVL105
 4577 04f1 10000000 		.4byte	.LFE36
 4578 04f5 0400     		.2byte	0x4
 4579 04f7 F3       		.byte	0xf3
 4580 04f8 01       		.uleb128 0x1
 4581 04f9 50       		.byte	0x50
 4582 04fa 9F       		.byte	0x9f
 4583 04fb 00000000 		.4byte	0
 4584 04ff 00000000 		.4byte	0
 4585              	.LLST40:
 4586 0503 00000000 		.4byte	.LVL108
 4587 0507 06000000 		.4byte	.LVL109
 4588 050b 0100     		.2byte	0x1
 4589 050d 50       		.byte	0x50
 4590 050e 06000000 		.4byte	.LVL109
 4591 0512 10000000 		.4byte	.LFE41
 4592 0516 0400     		.2byte	0x4
 4593 0518 F3       		.byte	0xf3
 4594 0519 01       		.uleb128 0x1
 4595 051a 50       		.byte	0x50
 4596 051b 9F       		.byte	0x9f
 4597 051c 00000000 		.4byte	0
 4598 0520 00000000 		.4byte	0
 4599              	.LLST41:
 4600 0524 00000000 		.4byte	.LVL110
 4601 0528 04000000 		.4byte	.LVL111
 4602 052c 0100     		.2byte	0x1
 4603 052e 50       		.byte	0x50
 4604 052f 04000000 		.4byte	.LVL111
 4605 0533 0C000000 		.4byte	.LFE42
 4606 0537 0400     		.2byte	0x4
 4607 0539 F3       		.byte	0xf3
 4608 053a 01       		.uleb128 0x1
 4609 053b 50       		.byte	0x50
 4610 053c 9F       		.byte	0x9f
 4611 053d 00000000 		.4byte	0
 4612 0541 00000000 		.4byte	0
 4613              		.section	.debug_aranges,"",%progbits
 4614 0000 7C010000 		.4byte	0x17c
 4615 0004 0200     		.2byte	0x2
 4616 0006 00000000 		.4byte	.Ldebug_info0
 4617 000a 04       		.byte	0x4
 4618 000b 00       		.byte	0
 4619 000c 0000     		.2byte	0
 4620 000e 0000     		.2byte	0
 4621 0010 00000000 		.4byte	.LFB0
 4622 0014 14000000 		.4byte	.LFE0-.LFB0
 4623 0018 00000000 		.4byte	.LFB1
 4624 001c 10000000 		.4byte	.LFE1-.LFB1
 4625 0020 00000000 		.4byte	.LFB2
 4626 0024 20000000 		.4byte	.LFE2-.LFB2
 4627 0028 00000000 		.4byte	.LFB3
 4628 002c 34000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 141


 4629 0030 00000000 		.4byte	.LFB4
 4630 0034 18000000 		.4byte	.LFE4-.LFB4
 4631 0038 00000000 		.4byte	.LFB5
 4632 003c 2C000000 		.4byte	.LFE5-.LFB5
 4633 0040 00000000 		.4byte	.LFB8
 4634 0044 20000000 		.4byte	.LFE8-.LFB8
 4635 0048 00000000 		.4byte	.LFB9
 4636 004c 10000000 		.4byte	.LFE9-.LFB9
 4637 0050 00000000 		.4byte	.LFB10
 4638 0054 0C000000 		.4byte	.LFE10-.LFB10
 4639 0058 00000000 		.4byte	.LFB11
 4640 005c 14000000 		.4byte	.LFE11-.LFB11
 4641 0060 00000000 		.4byte	.LFB12
 4642 0064 10000000 		.4byte	.LFE12-.LFB12
 4643 0068 00000000 		.4byte	.LFB13
 4644 006c 0C000000 		.4byte	.LFE13-.LFB13
 4645 0070 00000000 		.4byte	.LFB14
 4646 0074 0E000000 		.4byte	.LFE14-.LFB14
 4647 0078 00000000 		.4byte	.LFB15
 4648 007c 0C000000 		.4byte	.LFE15-.LFB15
 4649 0080 00000000 		.4byte	.LFB16
 4650 0084 10000000 		.4byte	.LFE16-.LFB16
 4651 0088 00000000 		.4byte	.LFB17
 4652 008c 10000000 		.4byte	.LFE17-.LFB17
 4653 0090 00000000 		.4byte	.LFB18
 4654 0094 34000000 		.4byte	.LFE18-.LFB18
 4655 0098 00000000 		.4byte	.LFB19
 4656 009c 20000000 		.4byte	.LFE19-.LFB19
 4657 00a0 00000000 		.4byte	.LFB20
 4658 00a4 14000000 		.4byte	.LFE20-.LFB20
 4659 00a8 00000000 		.4byte	.LFB21
 4660 00ac 18000000 		.4byte	.LFE21-.LFB21
 4661 00b0 00000000 		.4byte	.LFB22
 4662 00b4 14000000 		.4byte	.LFE22-.LFB22
 4663 00b8 00000000 		.4byte	.LFB23
 4664 00bc 14000000 		.4byte	.LFE23-.LFB23
 4665 00c0 00000000 		.4byte	.LFB24
 4666 00c4 14000000 		.4byte	.LFE24-.LFB24
 4667 00c8 00000000 		.4byte	.LFB25
 4668 00cc 04000000 		.4byte	.LFE25-.LFB25
 4669 00d0 00000000 		.4byte	.LFB26
 4670 00d4 18000000 		.4byte	.LFE26-.LFB26
 4671 00d8 00000000 		.4byte	.LFB27
 4672 00dc 2C000000 		.4byte	.LFE27-.LFB27
 4673 00e0 00000000 		.4byte	.LFB28
 4674 00e4 14000000 		.4byte	.LFE28-.LFB28
 4675 00e8 00000000 		.4byte	.LFB6
 4676 00ec 24010000 		.4byte	.LFE6-.LFB6
 4677 00f0 00000000 		.4byte	.LFB7
 4678 00f4 44000000 		.4byte	.LFE7-.LFB7
 4679 00f8 00000000 		.4byte	.LFB29
 4680 00fc 48000000 		.4byte	.LFE29-.LFB29
 4681 0100 00000000 		.4byte	.LFB31
 4682 0104 44000000 		.4byte	.LFE31-.LFB31
 4683 0108 00000000 		.4byte	.LFB33
 4684 010c 10000000 		.4byte	.LFE33-.LFB33
 4685 0110 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 142


 4686 0114 10000000 		.4byte	.LFE34-.LFB34
 4687 0118 00000000 		.4byte	.LFB32
 4688 011c 18000000 		.4byte	.LFE32-.LFB32
 4689 0120 00000000 		.4byte	.LFB30
 4690 0124 1C000000 		.4byte	.LFE30-.LFB30
 4691 0128 00000000 		.4byte	.LFB35
 4692 012c 10000000 		.4byte	.LFE35-.LFB35
 4693 0130 00000000 		.4byte	.LFB36
 4694 0134 10000000 		.4byte	.LFE36-.LFB36
 4695 0138 00000000 		.4byte	.LFB37
 4696 013c 10000000 		.4byte	.LFE37-.LFB37
 4697 0140 00000000 		.4byte	.LFB38
 4698 0144 10000000 		.4byte	.LFE38-.LFB38
 4699 0148 00000000 		.4byte	.LFB39
 4700 014c 10000000 		.4byte	.LFE39-.LFB39
 4701 0150 00000000 		.4byte	.LFB43
 4702 0154 24000000 		.4byte	.LFE43-.LFB43
 4703 0158 00000000 		.4byte	.LFB40
 4704 015c 0C000000 		.4byte	.LFE40-.LFB40
 4705 0160 00000000 		.4byte	.LFB41
 4706 0164 10000000 		.4byte	.LFE41-.LFB41
 4707 0168 00000000 		.4byte	.LFB42
 4708 016c 0C000000 		.4byte	.LFE42-.LFB42
 4709 0170 00000000 		.4byte	.LFB44
 4710 0174 74000000 		.4byte	.LFE44-.LFB44
 4711 0178 00000000 		.4byte	0
 4712 017c 00000000 		.4byte	0
 4713              		.section	.debug_ranges,"",%progbits
 4714              	.Ldebug_ranges0:
 4715 0000 2C000000 		.4byte	.LBB10
 4716 0004 2E000000 		.4byte	.LBE10
 4717 0008 2E000000 		.4byte	.LBB13
 4718 000c 30000000 		.4byte	.LBE13
 4719 0010 00000000 		.4byte	0
 4720 0014 00000000 		.4byte	0
 4721 0018 08000000 		.4byte	.LBB14
 4722 001c 0A000000 		.4byte	.LBE14
 4723 0020 14000000 		.4byte	.LBB18
 4724 0024 16000000 		.4byte	.LBE18
 4725 0028 18000000 		.4byte	.LBB19
 4726 002c 1A000000 		.4byte	.LBE19
 4727 0030 00000000 		.4byte	0
 4728 0034 00000000 		.4byte	0
 4729 0038 00000000 		.4byte	.LFB0
 4730 003c 14000000 		.4byte	.LFE0
 4731 0040 00000000 		.4byte	.LFB1
 4732 0044 10000000 		.4byte	.LFE1
 4733 0048 00000000 		.4byte	.LFB2
 4734 004c 20000000 		.4byte	.LFE2
 4735 0050 00000000 		.4byte	.LFB3
 4736 0054 34000000 		.4byte	.LFE3
 4737 0058 00000000 		.4byte	.LFB4
 4738 005c 18000000 		.4byte	.LFE4
 4739 0060 00000000 		.4byte	.LFB5
 4740 0064 2C000000 		.4byte	.LFE5
 4741 0068 00000000 		.4byte	.LFB8
 4742 006c 20000000 		.4byte	.LFE8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 143


 4743 0070 00000000 		.4byte	.LFB9
 4744 0074 10000000 		.4byte	.LFE9
 4745 0078 00000000 		.4byte	.LFB10
 4746 007c 0C000000 		.4byte	.LFE10
 4747 0080 00000000 		.4byte	.LFB11
 4748 0084 14000000 		.4byte	.LFE11
 4749 0088 00000000 		.4byte	.LFB12
 4750 008c 10000000 		.4byte	.LFE12
 4751 0090 00000000 		.4byte	.LFB13
 4752 0094 0C000000 		.4byte	.LFE13
 4753 0098 00000000 		.4byte	.LFB14
 4754 009c 0E000000 		.4byte	.LFE14
 4755 00a0 00000000 		.4byte	.LFB15
 4756 00a4 0C000000 		.4byte	.LFE15
 4757 00a8 00000000 		.4byte	.LFB16
 4758 00ac 10000000 		.4byte	.LFE16
 4759 00b0 00000000 		.4byte	.LFB17
 4760 00b4 10000000 		.4byte	.LFE17
 4761 00b8 00000000 		.4byte	.LFB18
 4762 00bc 34000000 		.4byte	.LFE18
 4763 00c0 00000000 		.4byte	.LFB19
 4764 00c4 20000000 		.4byte	.LFE19
 4765 00c8 00000000 		.4byte	.LFB20
 4766 00cc 14000000 		.4byte	.LFE20
 4767 00d0 00000000 		.4byte	.LFB21
 4768 00d4 18000000 		.4byte	.LFE21
 4769 00d8 00000000 		.4byte	.LFB22
 4770 00dc 14000000 		.4byte	.LFE22
 4771 00e0 00000000 		.4byte	.LFB23
 4772 00e4 14000000 		.4byte	.LFE23
 4773 00e8 00000000 		.4byte	.LFB24
 4774 00ec 14000000 		.4byte	.LFE24
 4775 00f0 00000000 		.4byte	.LFB25
 4776 00f4 04000000 		.4byte	.LFE25
 4777 00f8 00000000 		.4byte	.LFB26
 4778 00fc 18000000 		.4byte	.LFE26
 4779 0100 00000000 		.4byte	.LFB27
 4780 0104 2C000000 		.4byte	.LFE27
 4781 0108 00000000 		.4byte	.LFB28
 4782 010c 14000000 		.4byte	.LFE28
 4783 0110 00000000 		.4byte	.LFB6
 4784 0114 24010000 		.4byte	.LFE6
 4785 0118 00000000 		.4byte	.LFB7
 4786 011c 44000000 		.4byte	.LFE7
 4787 0120 00000000 		.4byte	.LFB29
 4788 0124 48000000 		.4byte	.LFE29
 4789 0128 00000000 		.4byte	.LFB31
 4790 012c 44000000 		.4byte	.LFE31
 4791 0130 00000000 		.4byte	.LFB33
 4792 0134 10000000 		.4byte	.LFE33
 4793 0138 00000000 		.4byte	.LFB34
 4794 013c 10000000 		.4byte	.LFE34
 4795 0140 00000000 		.4byte	.LFB32
 4796 0144 18000000 		.4byte	.LFE32
 4797 0148 00000000 		.4byte	.LFB30
 4798 014c 1C000000 		.4byte	.LFE30
 4799 0150 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 144


 4800 0154 10000000 		.4byte	.LFE35
 4801 0158 00000000 		.4byte	.LFB36
 4802 015c 10000000 		.4byte	.LFE36
 4803 0160 00000000 		.4byte	.LFB37
 4804 0164 10000000 		.4byte	.LFE37
 4805 0168 00000000 		.4byte	.LFB38
 4806 016c 10000000 		.4byte	.LFE38
 4807 0170 00000000 		.4byte	.LFB39
 4808 0174 10000000 		.4byte	.LFE39
 4809 0178 00000000 		.4byte	.LFB43
 4810 017c 24000000 		.4byte	.LFE43
 4811 0180 00000000 		.4byte	.LFB40
 4812 0184 0C000000 		.4byte	.LFE40
 4813 0188 00000000 		.4byte	.LFB41
 4814 018c 10000000 		.4byte	.LFE41
 4815 0190 00000000 		.4byte	.LFB42
 4816 0194 0C000000 		.4byte	.LFE42
 4817 0198 00000000 		.4byte	.LFB44
 4818 019c 74000000 		.4byte	.LFE44
 4819 01a0 00000000 		.4byte	0
 4820 01a4 00000000 		.4byte	0
 4821              		.section	.debug_line,"",%progbits
 4822              	.Ldebug_line0:
 4823 0000 B1040000 		.section	.debug_str,"MS",%progbits,1
 4823      02004D00 
 4823      00000201 
 4823      FB0E0D00 
 4823      01010101 
 4824              	.LASF26:
 4825 0000 72616D56 		.ascii	"ramVectorTable\000"
 4825      6563746F 
 4825      72546162 
 4825      6C6500
 4826              	.LASF67:
 4827 000f 62675472 		.ascii	"bgTrim4\000"
 4827      696D3400 
 4828              	.LASF10:
 4829 0017 75696E74 		.ascii	"uint16\000"
 4829      313600
 4830              	.LASF44:
 4831 001e 696E7453 		.ascii	"intState\000"
 4831      74617465 
 4831      00
 4832              	.LASF31:
 4833 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4833      73436C6B 
 4833      57726974 
 4833      65486663 
 4833      6C6B4469 
 4834              	.LASF97:
 4835 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4835      73436C6B 
 4835      50756D70 
 4835      436F6E66 
 4835      696700
 4836              	.LASF25:
 4837 0053 6F6C6449 		.ascii	"oldIsr\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 145


 4837      737200
 4838              	.LASF86:
 4839 005a 72657456 		.ascii	"retVal\000"
 4839      616C00
 4840              	.LASF43:
 4841 0061 43794469 		.ascii	"CyDisableInts\000"
 4841      7361626C 
 4841      65496E74 
 4841      7300
 4842              	.LASF70:
 4843 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4843      656E7449 
 4843      6D6F5472 
 4843      696D3256 
 4843      616C7565 
 4844              	.LASF7:
 4845 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 4845      206C6F6E 
 4845      6720756E 
 4845      7369676E 
 4845      65642069 
 4846              	.LASF95:
 4847 009b 43795379 		.ascii	"CySysTickInitVar\000"
 4847      73546963 
 4847      6B496E69 
 4847      74566172 
 4847      00
 4848              	.LASF45:
 4849 00ac 4379456E 		.ascii	"CyEnableInts\000"
 4849      61626C65 
 4849      496E7473 
 4849      00
 4850              	.LASF60:
 4851 00b9 4379536F 		.ascii	"CySoftwareReset\000"
 4851      66747761 
 4851      72655265 
 4851      73657400 
 4852              	.LASF76:
 4853 00c9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4853      73546963 
 4853      6B456E61 
 4853      626C6549 
 4853      6E746572 
 4854              	.LASF55:
 4855 00e2 4379496E 		.ascii	"CyIntGetState\000"
 4855      74476574 
 4855      53746174 
 4855      6500
 4856              	.LASF6:
 4857 00f0 6C6F6E67 		.ascii	"long long int\000"
 4857      206C6F6E 
 4857      6720696E 
 4857      7400
 4858              	.LASF0:
 4859 00fe 7369676E 		.ascii	"signed char\000"
 4859      65642063 
 4859      68617200 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 146


 4860              	.LASF66:
 4861 010a 66726571 		.ascii	"freq\000"
 4861      00
 4862              	.LASF73:
 4863 010f 43794465 		.ascii	"CyDelayFreq\000"
 4863      6C617946 
 4863      72657100 
 4864              	.LASF29:
 4865 011b 696E7465 		.ascii	"interruptState\000"
 4865      72727570 
 4865      74537461 
 4865      746500
 4866              	.LASF81:
 4867 012a 43795379 		.ascii	"CySysTickGetReload\000"
 4867      73546963 
 4867      6B476574 
 4867      52656C6F 
 4867      616400
 4868              	.LASF4:
 4869 013d 6C6F6E67 		.ascii	"long int\000"
 4869      20696E74 
 4869      00
 4870              	.LASF56:
 4871 0146 4379496E 		.ascii	"CyIntDisable\000"
 4871      74446973 
 4871      61626C65 
 4871      00
 4872              	.LASF87:
 4873 0153 43795379 		.ascii	"CySysTickGetCallback\000"
 4873      73546963 
 4873      6B476574 
 4873      43616C6C 
 4873      6261636B 
 4874              	.LASF9:
 4875 0168 75696E74 		.ascii	"uint8\000"
 4875      3800
 4876              	.LASF92:
 4877 016e 63796465 		.ascii	"cydelayFreqKhz\000"
 4877      6C617946 
 4877      7265714B 
 4877      687A00
 4878              	.LASF34:
 4879 017d 656E6162 		.ascii	"enable\000"
 4879      6C6500
 4880              	.LASF13:
 4881 0184 646F7562 		.ascii	"double\000"
 4881      6C6500
 4882              	.LASF52:
 4883 018b 73686966 		.ascii	"shift\000"
 4883      7400
 4884              	.LASF20:
 4885 0191 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4885      734C7664 
 4885      436C6561 
 4885      72496E74 
 4885      65727275 
 4886              	.LASF11:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 147


 4887 01a8 75696E74 		.ascii	"uint32\000"
 4887      333200
 4888              	.LASF46:
 4889 01af 6D61736B 		.ascii	"mask\000"
 4889      00
 4890              	.LASF39:
 4891 01b4 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4891      73436C6B 
 4891      47657453 
 4891      7973636C 
 4891      6B536F75 
 4892              	.LASF53:
 4893 01cc 4379496E 		.ascii	"CyIntGetPriority\000"
 4893      74476574 
 4893      5072696F 
 4893      72697479 
 4893      00
 4894              	.LASF94:
 4895 01dd 63796465 		.ascii	"cydelay32kMs\000"
 4895      6C617933 
 4895      326B4D73 
 4895      00
 4896              	.LASF103:
 4897 01ea 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Boot"
 4897      5F776F72 
 4897      6B5C6D79 
 4897      5F70726F 
 4897      6A656374 
 4898 0218 6C6F6164 		.ascii	"loader.cydsn\000"
 4898      65722E63 
 4898      7964736E 
 4898      00
 4899              	.LASF74:
 4900 0225 43795379 		.ascii	"CySysTickInit\000"
 4900      73546963 
 4900      6B496E69 
 4900      7400
 4901              	.LASF22:
 4902 0233 76616C75 		.ascii	"value\000"
 4902      6500
 4903              	.LASF88:
 4904 0239 43794765 		.ascii	"CyGetUniqueId\000"
 4904      74556E69 
 4904      71756549 
 4904      6400
 4905              	.LASF83:
 4906 0247 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4906      73546963 
 4906      6B476574 
 4906      436F756E 
 4906      74466C61 
 4907              	.LASF8:
 4908 025d 756E7369 		.ascii	"unsigned int\000"
 4908      676E6564 
 4908      20696E74 
 4908      00
 4909              	.LASF21:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 148


 4910 026a 43795379 		.ascii	"CySysTickClear\000"
 4910      73546963 
 4910      6B436C65 
 4910      617200
 4911              	.LASF5:
 4912 0279 6C6F6E67 		.ascii	"long unsigned int\000"
 4912      20756E73 
 4912      69676E65 
 4912      6420696E 
 4912      7400
 4913              	.LASF80:
 4914 028b 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4914      734C7664 
 4914      47657449 
 4914      6E746572 
 4914      72757074 
 4915              	.LASF28:
 4916 02a6 43795379 		.ascii	"CySysClkImoStop\000"
 4916      73436C6B 
 4916      496D6F53 
 4916      746F7000 
 4917              	.LASF98:
 4918 02b6 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4918      74657243 
 4918      72697469 
 4918      63616C53 
 4918      65637469 
 4919              	.LASF57:
 4920 02cd 4379496E 		.ascii	"CyIntSetPending\000"
 4920      74536574 
 4920      50656E64 
 4920      696E6700 
 4921              	.LASF40:
 4922 02dd 43795379 		.ascii	"CySysGetResetReason\000"
 4922      73476574 
 4922      52657365 
 4922      74526561 
 4922      736F6E00 
 4923              	.LASF3:
 4924 02f1 73686F72 		.ascii	"short unsigned int\000"
 4924      7420756E 
 4924      7369676E 
 4924      65642069 
 4924      6E7400
 4925              	.LASF48:
 4926 0304 4379496E 		.ascii	"CyIntSetVector\000"
 4926      74536574 
 4926      56656374 
 4926      6F7200
 4927              	.LASF23:
 4928 0313 6E756D62 		.ascii	"number\000"
 4928      657200
 4929              	.LASF51:
 4930 031a 7072696F 		.ascii	"priority\000"
 4930      72697479 
 4930      00
 4931              	.LASF65:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 149


 4932 0323 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4932      73436C6B 
 4932      57726974 
 4932      65496D6F 
 4932      46726571 
 4933              	.LASF106:
 4934 0338 4379496E 		.ascii	"CyIntSetSysVector\000"
 4934      74536574 
 4934      53797356 
 4934      6563746F 
 4934      7200
 4935              	.LASF32:
 4936 034a 43795379 		.ascii	"CySysEnablePumpClock\000"
 4936      73456E61 
 4936      626C6550 
 4936      756D7043 
 4936      6C6F636B 
 4937              	.LASF16:
 4938 035f 72656733 		.ascii	"reg32\000"
 4938      3200
 4939              	.LASF78:
 4940 0365 43795379 		.ascii	"CySysTickStart\000"
 4940      73546963 
 4940      6B537461 
 4940      727400
 4941              	.LASF42:
 4942 0374 72657475 		.ascii	"returnStatus\000"
 4942      726E5374 
 4942      61747573 
 4942      00
 4943              	.LASF18:
 4944 0381 73697A65 		.ascii	"sizetype\000"
 4944      74797065 
 4944      00
 4945              	.LASF58:
 4946 038a 4379496E 		.ascii	"CyIntClearPending\000"
 4946      74436C65 
 4946      61725065 
 4946      6E64696E 
 4946      6700
 4947              	.LASF24:
 4948 039c 61646472 		.ascii	"address\000"
 4948      65737300 
 4949              	.LASF68:
 4950 03a4 62675472 		.ascii	"bgTrim5\000"
 4950      696D3500 
 4951              	.LASF35:
 4952 03ac 73797363 		.ascii	"sysclkSource\000"
 4952      6C6B536F 
 4952      75726365 
 4952      00
 4953              	.LASF85:
 4954 03b9 66756E63 		.ascii	"function\000"
 4954      74696F6E 
 4954      00
 4955              	.LASF96:
 4956 03c2 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 150


 4956      6F467265 
 4956      714D687A 
 4956      32526567 
 4956      00
 4957              	.LASF82:
 4958 03d3 43795379 		.ascii	"CySysTickGetValue\000"
 4958      73546963 
 4958      6B476574 
 4958      56616C75 
 4958      6500
 4959              	.LASF91:
 4960 03e5 63796465 		.ascii	"cydelayFreqHz\000"
 4960      6C617946 
 4960      72657148 
 4960      7A00
 4961              	.LASF50:
 4962 03f3 4379496E 		.ascii	"CyIntSetPriority\000"
 4962      74536574 
 4962      5072696F 
 4962      72697479 
 4962      00
 4963              	.LASF12:
 4964 0404 666C6F61 		.ascii	"float\000"
 4964      7400
 4965              	.LASF99:
 4966 040a 43794578 		.ascii	"CyExitCriticalSection\000"
 4966      69744372 
 4966      69746963 
 4966      616C5365 
 4966      6374696F 
 4967              	.LASF71:
 4968 0420 43795379 		.ascii	"CySysLvdEnable\000"
 4968      734C7664 
 4968      456E6162 
 4968      6C6500
 4969              	.LASF19:
 4970 042f 63795379 		.ascii	"cySysTickCallback\000"
 4970      73546963 
 4970      6B43616C 
 4970      6C626163 
 4970      6B00
 4971              	.LASF49:
 4972 0441 4379496E 		.ascii	"CyIntGetVector\000"
 4972      74476574 
 4972      56656374 
 4972      6F7200
 4973              	.LASF62:
 4974 0450 6D696C6C 		.ascii	"milliseconds\000"
 4974      69736563 
 4974      6F6E6473 
 4974      00
 4975              	.LASF100:
 4976 045d 43794465 		.ascii	"CyDelayCycles\000"
 4976      6C617943 
 4976      79636C65 
 4976      7300
 4977              	.LASF15:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 151


 4978 046b 72656738 		.ascii	"reg8\000"
 4978      00
 4979              	.LASF72:
 4980 0470 74687265 		.ascii	"threshold\000"
 4980      73686F6C 
 4980      6400
 4981              	.LASF59:
 4982 047a 43794861 		.ascii	"CyHalt\000"
 4982      6C7400
 4983              	.LASF1:
 4984 0481 756E7369 		.ascii	"unsigned char\000"
 4984      676E6564 
 4984      20636861 
 4984      7200
 4985              	.LASF41:
 4986 048f 72656173 		.ascii	"reason\000"
 4986      6F6E00
 4987              	.LASF2:
 4988 0496 73686F72 		.ascii	"short int\000"
 4988      7420696E 
 4988      7400
 4989              	.LASF54:
 4990 04a0 4379496E 		.ascii	"CyIntEnable\000"
 4990      74456E61 
 4990      626C6500 
 4991              	.LASF47:
 4992 04ac 4379496E 		.ascii	"CyIntGetSysVector\000"
 4992      74476574 
 4992      53797356 
 4992      6563746F 
 4992      7200
 4993              	.LASF33:
 4994 04be 636C6B53 		.ascii	"clkSelect\000"
 4994      656C6563 
 4994      7400
 4995              	.LASF63:
 4996 04c8 43794465 		.ascii	"CyDelayUs\000"
 4996      6C617955 
 4996      7300
 4997              	.LASF104:
 4998 04d2 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4998      73546963 
 4998      6B536572 
 4998      76696365 
 4998      43616C6C 
 4999              	.LASF101:
 5000 04ec 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5000      43393920 
 5000      352E342E 
 5000      31203230 
 5000      31363036 
 5001 051f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5001      20726576 
 5001      6973696F 
 5001      6E203233 
 5001      37373135 
 5002 0552 73202D73 		.ascii	"s -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 152


 5002      74643D67 
 5002      6E753939 
 5002      202D6666 
 5002      756E6374 
 5003              	.LASF14:
 5004 0585 63686172 		.ascii	"char\000"
 5004      00
 5005              	.LASF17:
 5006 058a 63796973 		.ascii	"cyisraddress\000"
 5006      72616464 
 5006      72657373 
 5006      00
 5007              	.LASF77:
 5008 0597 43795379 		.ascii	"CySysTickEnable\000"
 5008      73546963 
 5008      6B456E61 
 5008      626C6500 
 5009              	.LASF36:
 5010 05a7 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5010      73436C6B 
 5010      57726974 
 5010      65537973 
 5010      636C6B44 
 5011              	.LASF84:
 5012 05be 43795379 		.ascii	"CySysTickSetCallback\000"
 5012      73546963 
 5012      6B536574 
 5012      43616C6C 
 5012      6261636B 
 5013              	.LASF90:
 5014 05d3 43795379 		.ascii	"CySysTickCallbacks\000"
 5014      73546963 
 5014      6B43616C 
 5014      6C626163 
 5014      6B7300
 5015              	.LASF89:
 5016 05e6 756E6971 		.ascii	"uniqueId\000"
 5016      75654964 
 5016      00
 5017              	.LASF61:
 5018 05ef 43794465 		.ascii	"CyDelay\000"
 5018      6C617900 
 5019              	.LASF79:
 5020 05f7 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5020      73546963 
 5020      6B446973 
 5020      61626C65 
 5020      496E7465 
 5021              	.LASF38:
 5022 0611 43795379 		.ascii	"CySysLvdDisable\000"
 5022      734C7664 
 5022      44697361 
 5022      626C6500 
 5023              	.LASF93:
 5024 0621 63796465 		.ascii	"cydelayFreqMhz\000"
 5024      6C617946 
 5024      7265714D 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc2esm2Y.s 			page 153


 5024      687A00
 5025              	.LASF75:
 5026 0630 43795379 		.ascii	"CySysTickStop\000"
 5026      73546963 
 5026      6B53746F 
 5026      7000
 5027              	.LASF37:
 5028 063e 64697669 		.ascii	"divider\000"
 5028      64657200 
 5029              	.LASF27:
 5030 0646 43795379 		.ascii	"CySysClkImoStart\000"
 5030      73436C6B 
 5030      496D6F53 
 5030      74617274 
 5030      00
 5031              	.LASF69:
 5032 0657 6E657749 		.ascii	"newImoTrim2Value\000"
 5032      6D6F5472 
 5032      696D3256 
 5032      616C7565 
 5032      00
 5033              	.LASF102:
 5034 0668 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5034      72617465 
 5034      645F536F 
 5034      75726365 
 5034      5C50536F 
 5035              	.LASF64:
 5036 0687 6D696372 		.ascii	"microseconds\000"
 5036      6F736563 
 5036      6F6E6473 
 5036      00
 5037              	.LASF30:
 5038 0694 746D7052 		.ascii	"tmpReg\000"
 5038      656700
 5039              	.LASF105:
 5040 069b 43795379 		.ascii	"CySysTickSetReload\000"
 5040      73546963 
 5040      6B536574 
 5040      52656C6F 
 5040      616400
 5041              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
