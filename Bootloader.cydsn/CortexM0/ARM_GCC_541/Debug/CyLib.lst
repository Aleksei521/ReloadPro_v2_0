ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 115 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 4


  57              	.LFB1:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 131 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 140 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 141:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 141 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
 142:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 5


 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 540 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 12


  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 548 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 575 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 13


 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 586 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 589 0
 112 0014 1460     		str	r4, [r2]
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 591 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 592:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 592 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB3:
 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 14


 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 612 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 614 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 616 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 620 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 622 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 15


 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 636 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB4:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 649 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 653 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 16


 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 663 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 672 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 675:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 675 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE4:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB5:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 17


 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 710 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 713 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 715 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 717 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 18


 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 716 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 715 0
 257 001e 2360     		str	r3, [r4]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 720 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 721:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 721 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysLvdDisable,"ax",%progbits
 273              		.align	2
 274              		.global	CySysLvdDisable
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysLvdDisable, %function
 278              	CySysLvdDisable:
 279              	.LFB8:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 948:Generated_Source\PSoC4/CyLib.c ****     }
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1279:Generated_Source\PSoC4/CyLib.c ****     }
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 29


1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1345:Generated_Source\PSoC4/CyLib.c ****     }
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 30


1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 31


1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 32


1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 33


1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 34


1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 35


1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 36


1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1749:Generated_Source\PSoC4/CyLib.c **** 
1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1751:Generated_Source\PSoC4/CyLib.c ****     }
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 37


1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 38


1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 39


1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 40


1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 41


2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 42


2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 43


2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 44


2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 45


2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 46


2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2286:Generated_Source\PSoC4/CyLib.c ****     }
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 2297 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 285              		.loc 1 2298 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0221     		movs	r1, #2
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 291              		.loc 1 2299 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1368     		ldr	r3, [r2]
 294 000e 0139     		subs	r1, r1, #1
 295 0010 8B43     		bics	r3, r1
 296 0012 1360     		str	r3, [r2]
2300:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 2300 0
 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 08000B40 		.word	1074462728
 304 001c 18000B40 		.word	1074462744
 305              		.cfi_endproc
 306              	.LFE8:
 307              		.size	CySysLvdDisable, .-CySysLvdDisable
 308              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 309              		.align	2
 310              		.global	CySysLvdGetInterruptSource
 311              		.code	16
 312              		.thumb_func
 313              		.type	CySysLvdGetInterruptSource, %function
 314              	CySysLvdGetInterruptSource:
 315              	.LFB9:
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 47


2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
 316              		.loc 1 2315 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 321              		.loc 1 2316 0
 322 0000 024B     		ldr	r3, .L25
 323 0002 1B68     		ldr	r3, [r3]
 324 0004 0220     		movs	r0, #2
 325 0006 1840     		ands	r0, r3
2317:Generated_Source\PSoC4/CyLib.c ****     }
 326              		.loc 1 2317 0
 327              		@ sp needed
 328 0008 7047     		bx	lr
 329              	.L26:
 330 000a C046     		.align	2
 331              	.L25:
 332 000c 04000B40 		.word	1074462724
 333              		.cfi_endproc
 334              	.LFE9:
 335              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 336              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 337              		.align	2
 338              		.global	CySysLvdClearInterrupt
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysLvdClearInterrupt, %function
 342              	CySysLvdClearInterrupt:
 343              	.LFB10:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
 344              		.loc 1 2331 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 48


 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 349              		.loc 1 2332 0
 350 0000 0222     		movs	r2, #2
 351 0002 014B     		ldr	r3, .L28
 352 0004 1A60     		str	r2, [r3]
2333:Generated_Source\PSoC4/CyLib.c ****     }
 353              		.loc 1 2333 0
 354              		@ sp needed
 355 0006 7047     		bx	lr
 356              	.L29:
 357              		.align	2
 358              	.L28:
 359 0008 04000B40 		.word	1074462724
 360              		.cfi_endproc
 361              	.LFE10:
 362              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 363              		.section	.text.CySysGetResetReason,"ax",%progbits
 364              		.align	2
 365              		.global	CySysGetResetReason
 366              		.code	16
 367              		.thumb_func
 368              		.type	CySysGetResetReason, %function
 369              	CySysGetResetReason:
 370              	.LFB11:
2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 371              		.loc 1 2357 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL16:
 377 0000 0200     		movs	r2, r0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 49


2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 378              		.loc 1 2360 0
 379 0002 1920     		movs	r0, #25
 380              	.LVL17:
 381 0004 0240     		ands	r2, r0
 382              	.LVL18:
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 383              		.loc 1 2361 0
 384 0006 0249     		ldr	r1, .L31
 385 0008 0B68     		ldr	r3, [r1]
 386 000a 1840     		ands	r0, r3
 387              	.LVL19:
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 388              		.loc 1 2363 0
 389 000c 0A60     		str	r2, [r1]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2366:Generated_Source\PSoC4/CyLib.c **** }
 390              		.loc 1 2366 0
 391              		@ sp needed
 392 000e 7047     		bx	lr
 393              	.L32:
 394              		.align	2
 395              	.L31:
 396 0010 00030B40 		.word	1074463488
 397              		.cfi_endproc
 398              	.LFE11:
 399              		.size	CySysGetResetReason, .-CySysGetResetReason
 400              		.section	.text.CyDisableInts,"ax",%progbits
 401              		.align	2
 402              		.global	CyDisableInts
 403              		.code	16
 404              		.thumb_func
 405              		.type	CyDisableInts, %function
 406              	CyDisableInts:
 407              	.LFB12:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 408              		.loc 1 2380 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 50


 412              		@ link register save eliminated.
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 413              		.loc 1 2384 0
 414 0000 024B     		ldr	r3, .L34
 415 0002 1868     		ldr	r0, [r3]
 416              	.LVL20:
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 417              		.loc 1 2387 0
 418 0004 0122     		movs	r2, #1
 419 0006 5242     		rsbs	r2, r2, #0
 420 0008 1A60     		str	r2, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2390:Generated_Source\PSoC4/CyLib.c **** }
 421              		.loc 1 2390 0
 422              		@ sp needed
 423 000a 7047     		bx	lr
 424              	.L35:
 425              		.align	2
 426              	.L34:
 427 000c 80E100E0 		.word	-536813184
 428              		.cfi_endproc
 429              	.LFE12:
 430              		.size	CyDisableInts, .-CyDisableInts
 431              		.section	.text.CyEnableInts,"ax",%progbits
 432              		.align	2
 433              		.global	CyEnableInts
 434              		.code	16
 435              		.thumb_func
 436              		.type	CyEnableInts, %function
 437              	CyEnableInts:
 438              	.LFB13:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 439              		.loc 1 2403 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL21:
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 51


 445              		.loc 1 2404 0
 446 0000 014B     		ldr	r3, .L37
 447 0002 1860     		str	r0, [r3]
2405:Generated_Source\PSoC4/CyLib.c **** }
 448              		.loc 1 2405 0
 449              		@ sp needed
 450 0004 7047     		bx	lr
 451              	.L38:
 452 0006 C046     		.align	2
 453              	.L37:
 454 0008 00E100E0 		.word	-536813312
 455              		.cfi_endproc
 456              	.LFE13:
 457              		.size	CyEnableInts, .-CyEnableInts
 458              		.section	.text.CyIntEnable,"ax",%progbits
 459              		.align	2
 460              		.global	CyIntEnable
 461              		.code	16
 462              		.thumb_func
 463              		.type	CyIntEnable, %function
 464              	CyIntEnable:
 465              	.LFB20:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2431:Generated_Source\PSoC4/CyLib.c **** 
2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 52


2441:Generated_Source\PSoC4/CyLib.c **** }
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2468:Generated_Source\PSoC4/CyLib.c **** }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2497:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 53


2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2518:Generated_Source\PSoC4/CyLib.c **** }
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2549:Generated_Source\PSoC4/CyLib.c **** }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 54


2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2573:Generated_Source\PSoC4/CyLib.c **** }
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 466              		.loc 1 2586 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL22:
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 472              		.loc 1 2587 0
 473 0000 1F23     		movs	r3, #31
 474 0002 1840     		ands	r0, r3
 475              	.LVL23:
 476 0004 1E3B     		subs	r3, r3, #30
 477 0006 8340     		lsls	r3, r3, r0
 478 0008 014A     		ldr	r2, .L40
 479 000a 1360     		str	r3, [r2]
2588:Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2588 0
 481              		@ sp needed
 482 000c 7047     		bx	lr
 483              	.L41:
 484 000e C046     		.align	2
 485              	.L40:
 486 0010 00E100E0 		.word	-536813312
 487              		.cfi_endproc
 488              	.LFE20:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 55


 489              		.size	CyIntEnable, .-CyIntEnable
 490              		.section	.text.CyIntGetState,"ax",%progbits
 491              		.align	2
 492              		.global	CyIntGetState
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntGetState, %function
 496              	CyIntGetState:
 497              	.LFB21:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 2604 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL24:
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 504              		.loc 1 2606 0
 505 0000 044B     		ldr	r3, .L43
 506 0002 1B68     		ldr	r3, [r3]
 507 0004 1F22     		movs	r2, #31
 508 0006 1040     		ands	r0, r2
 509              	.LVL25:
 510 0008 C340     		lsrs	r3, r3, r0
 511 000a 1800     		movs	r0, r3
 512 000c 0123     		movs	r3, #1
 513 000e 1840     		ands	r0, r3
2607:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2607 0
 515              		@ sp needed
 516 0010 7047     		bx	lr
 517              	.L44:
 518 0012 C046     		.align	2
 519              	.L43:
 520 0014 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE21:
 523              		.size	CyIntGetState, .-CyIntGetState
 524              		.section	.text.CyIntDisable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntDisable
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 56


 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntDisable, %function
 530              	CyIntDisable:
 531              	.LFB22:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2620 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL26:
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2621 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL27:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2622:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 2622 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 80E100E0 		.word	-536813184
 553              		.cfi_endproc
 554              	.LFE22:
 555              		.size	CyIntDisable, .-CyIntDisable
 556              		.section	.text.CyIntSetPending,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntSetPending
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntSetPending, %function
 562              	CyIntSetPending:
 563              	.LFB23:
2623:Generated_Source\PSoC4/CyLib.c **** 
2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 57


2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 2634 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL28:
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 570              		.loc 1 2635 0
 571 0000 1F23     		movs	r3, #31
 572 0002 1840     		ands	r0, r3
 573              	.LVL29:
 574 0004 1E3B     		subs	r3, r3, #30
 575 0006 8340     		lsls	r3, r3, r0
 576 0008 014A     		ldr	r2, .L49
 577 000a 1360     		str	r3, [r2]
2636:Generated_Source\PSoC4/CyLib.c **** }
 578              		.loc 1 2636 0
 579              		@ sp needed
 580 000c 7047     		bx	lr
 581              	.L50:
 582 000e C046     		.align	2
 583              	.L49:
 584 0010 00E200E0 		.word	-536813056
 585              		.cfi_endproc
 586              	.LFE23:
 587              		.size	CyIntSetPending, .-CyIntSetPending
 588              		.section	.text.CyIntClearPending,"ax",%progbits
 589              		.align	2
 590              		.global	CyIntClearPending
 591              		.code	16
 592              		.thumb_func
 593              		.type	CyIntClearPending, %function
 594              	CyIntClearPending:
 595              	.LFB24:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 596              		.loc 1 2649 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 58


 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL30:
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 602              		.loc 1 2650 0
 603 0000 1F23     		movs	r3, #31
 604 0002 1840     		ands	r0, r3
 605              	.LVL31:
 606 0004 1E3B     		subs	r3, r3, #30
 607 0006 8340     		lsls	r3, r3, r0
 608 0008 014A     		ldr	r2, .L52
 609 000a 1360     		str	r3, [r2]
2651:Generated_Source\PSoC4/CyLib.c **** }
 610              		.loc 1 2651 0
 611              		@ sp needed
 612 000c 7047     		bx	lr
 613              	.L53:
 614 000e C046     		.align	2
 615              	.L52:
 616 0010 80E200E0 		.word	-536812928
 617              		.cfi_endproc
 618              	.LFE24:
 619              		.size	CyIntClearPending, .-CyIntClearPending
 620              		.section	.text.CyHalt,"ax",%progbits
 621              		.align	2
 622              		.global	CyHalt
 623              		.code	16
 624              		.thumb_func
 625              		.type	CyHalt, %function
 626              	CyHalt:
 627              	.LFB25:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 628              		.loc 1 2664 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL32:
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 59


2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 634              		.loc 1 2673 0
 635              		.syntax divided
 636              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 637 0000 01BE     		    bkpt    1
 638              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 639              		.loc 1 2677 0
 640              		.thumb
 641              		.syntax unified
 642              		@ sp needed
 643 0002 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE25:
 646              		.size	CyHalt, .-CyHalt
 647              		.section	.text.CyIntSetSysVector,"ax",%progbits
 648              		.align	2
 649              		.global	CyIntSetSysVector
 650              		.code	16
 651              		.thumb_func
 652              		.type	CyIntSetSysVector, %function
 653              	CyIntSetSysVector:
 654              	.LFB14:
2428:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 655              		.loc 1 2428 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              	.LVL33:
 660 0000 70B5     		push	{r4, r5, r6, lr}
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 4, -16
 663              		.cfi_offset 5, -12
 664              		.cfi_offset 6, -8
 665              		.cfi_offset 14, -4
 666 0002 0400     		movs	r4, r0
 667 0004 0D00     		movs	r5, r1
 668              	.LVL34:
2432:Generated_Source\PSoC4/CyLib.c **** 
 669              		.loc 1 2432 0
 670 0006 0F28     		cmp	r0, #15
 671 0008 02D9     		bls	.L56
2432:Generated_Source\PSoC4/CyLib.c **** 
 672              		.loc 1 2432 0 is_stmt 0 discriminator 1
 673 000a 0020     		movs	r0, #0
 674              	.LVL35:
 675 000c FFF7FEFF 		bl	CyHalt
 676              	.LVL36:
 677              	.L56:
2435:Generated_Source\PSoC4/CyLib.c **** 
 678              		.loc 1 2435 0 is_stmt 1
 679 0010 A400     		lsls	r4, r4, #2
 680 0012 8023     		movs	r3, #128
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 60


 681 0014 9B05     		lsls	r3, r3, #22
 682 0016 9C46     		mov	ip, r3
 683 0018 6444     		add	r4, r4, ip
 684 001a 2068     		ldr	r0, [r4]
 685              	.LVL37:
2438:Generated_Source\PSoC4/CyLib.c **** 
 686              		.loc 1 2438 0
 687 001c 2560     		str	r5, [r4]
2441:Generated_Source\PSoC4/CyLib.c **** 
 688              		.loc 1 2441 0
 689              		@ sp needed
 690              	.LVL38:
 691 001e 70BD     		pop	{r4, r5, r6, pc}
 692              		.cfi_endproc
 693              	.LFE14:
 694              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 695              		.section	.text.CyIntGetSysVector,"ax",%progbits
 696              		.align	2
 697              		.global	CyIntGetSysVector
 698              		.code	16
 699              		.thumb_func
 700              		.type	CyIntGetSysVector, %function
 701              	CyIntGetSysVector:
 702              	.LFB15:
2462:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 703              		.loc 1 2462 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL39:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
 712 0002 0400     		movs	r4, r0
 713              	.LVL40:
2465:Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2465 0
 715 0004 0F28     		cmp	r0, #15
 716 0006 02D9     		bls	.L58
2465:Generated_Source\PSoC4/CyLib.c **** 
 717              		.loc 1 2465 0 is_stmt 0 discriminator 1
 718 0008 0020     		movs	r0, #0
 719              	.LVL41:
 720 000a FFF7FEFF 		bl	CyHalt
 721              	.LVL42:
 722              	.L58:
2467:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 2467 0 is_stmt 1
 724 000e A400     		lsls	r4, r4, #2
 725 0010 8023     		movs	r3, #128
 726 0012 9B05     		lsls	r3, r3, #22
 727 0014 9C46     		mov	ip, r3
 728 0016 6444     		add	r4, r4, ip
 729 0018 2068     		ldr	r0, [r4]
2468:Generated_Source\PSoC4/CyLib.c **** 
 730              		.loc 1 2468 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 61


 731              		@ sp needed
 732 001a 10BD     		pop	{r4, pc}
 733              		.cfi_endproc
 734              	.LFE15:
 735              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 736              		.section	.text.CyIntSetVector,"ax",%progbits
 737              		.align	2
 738              		.global	CyIntSetVector
 739              		.code	16
 740              		.thumb_func
 741              		.type	CyIntSetVector, %function
 742              	CyIntSetVector:
 743              	.LFB16:
2484:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 744              		.loc 1 2484 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL43:
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 0002 0400     		movs	r4, r0
 756 0004 0D00     		movs	r5, r1
 757              	.LVL44:
2488:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 2488 0
 759 0006 1F28     		cmp	r0, #31
 760 0008 02D9     		bls	.L60
2488:Generated_Source\PSoC4/CyLib.c **** 
 761              		.loc 1 2488 0 is_stmt 0 discriminator 1
 762 000a 0020     		movs	r0, #0
 763              	.LVL45:
 764 000c FFF7FEFF 		bl	CyHalt
 765              	.LVL46:
 766              	.L60:
2491:Generated_Source\PSoC4/CyLib.c **** 
 767              		.loc 1 2491 0 is_stmt 1
 768 0010 1034     		adds	r4, r4, #16
 769 0012 A400     		lsls	r4, r4, #2
 770 0014 8023     		movs	r3, #128
 771 0016 9B05     		lsls	r3, r3, #22
 772 0018 9C46     		mov	ip, r3
 773 001a 6444     		add	r4, r4, ip
 774 001c 2068     		ldr	r0, [r4]
 775              	.LVL47:
2494:Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2494 0
 777 001e 2560     		str	r5, [r4]
2497:Generated_Source\PSoC4/CyLib.c **** 
 778              		.loc 1 2497 0
 779              		@ sp needed
 780              	.LVL48:
 781 0020 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 62


 782              		.cfi_endproc
 783              	.LFE16:
 784              		.size	CyIntSetVector, .-CyIntSetVector
 785 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 786              		.align	2
 787              		.global	CyIntGetVector
 788              		.code	16
 789              		.thumb_func
 790              		.type	CyIntGetVector, %function
 791              	CyIntGetVector:
 792              	.LFB17:
2512:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 793              		.loc 1 2512 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL49:
 798 0000 10B5     		push	{r4, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 4, -8
 801              		.cfi_offset 14, -4
 802 0002 0400     		movs	r4, r0
 803              	.LVL50:
2515:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2515 0
 805 0004 1F28     		cmp	r0, #31
 806 0006 02D9     		bls	.L62
2515:Generated_Source\PSoC4/CyLib.c **** 
 807              		.loc 1 2515 0 is_stmt 0 discriminator 1
 808 0008 0020     		movs	r0, #0
 809              	.LVL51:
 810 000a FFF7FEFF 		bl	CyHalt
 811              	.LVL52:
 812              	.L62:
2517:Generated_Source\PSoC4/CyLib.c **** }
 813              		.loc 1 2517 0 is_stmt 1
 814 000e 1034     		adds	r4, r4, #16
 815 0010 A400     		lsls	r4, r4, #2
 816 0012 8023     		movs	r3, #128
 817 0014 9B05     		lsls	r3, r3, #22
 818 0016 9C46     		mov	ip, r3
 819 0018 6444     		add	r4, r4, ip
 820 001a 2068     		ldr	r0, [r4]
2518:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2518 0
 822              		@ sp needed
 823 001c 10BD     		pop	{r4, pc}
 824              		.cfi_endproc
 825              	.LFE17:
 826              		.size	CyIntGetVector, .-CyIntGetVector
 827 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 828              		.align	2
 829              		.global	CyIntSetPriority
 830              		.code	16
 831              		.thumb_func
 832              		.type	CyIntSetPriority, %function
 833              	CyIntSetPriority:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 63


 834              	.LFB18:
2531:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 835              		.loc 1 2531 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL53:
 840 0000 70B5     		push	{r4, r5, r6, lr}
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 846 0002 0400     		movs	r4, r0
 847 0004 0E00     		movs	r6, r1
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 848              		.loc 1 2536 0
 849 0006 0329     		cmp	r1, #3
 850 0008 02D9     		bls	.L64
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 851              		.loc 1 2536 0 is_stmt 0 discriminator 1
 852 000a 0020     		movs	r0, #0
 853              	.LVL54:
 854 000c FFF7FEFF 		bl	CyHalt
 855              	.LVL55:
 856              	.L64:
2537:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2537 0 is_stmt 1
 858 0010 1F2C     		cmp	r4, #31
 859 0012 02D9     		bls	.L65
2537:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2537 0 is_stmt 0 discriminator 1
 861 0014 0020     		movs	r0, #0
 862 0016 FFF7FEFF 		bl	CyHalt
 863              	.LVL56:
 864              	.L65:
2539:Generated_Source\PSoC4/CyLib.c **** 
 865              		.loc 1 2539 0 is_stmt 1
 866 001a 0325     		movs	r5, #3
 867 001c 2540     		ands	r5, r4
 868 001e ED00     		lsls	r5, r5, #3
 869 0020 0635     		adds	r5, r5, #6
 870              	.LVL57:
2541:Generated_Source\PSoC4/CyLib.c **** 
 871              		.loc 1 2541 0
 872 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 873              	.LVL58:
2543:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 874              		.loc 1 2543 0
 875 0026 A408     		lsrs	r4, r4, #2
 876 0028 A400     		lsls	r4, r4, #2
 877 002a 074B     		ldr	r3, .L66
 878 002c 9C46     		mov	ip, r3
 879 002e 6444     		add	r4, r4, ip
 880 0030 2168     		ldr	r1, [r4]
 881              	.LVL59:
2544:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 64


 882              		.loc 1 2544 0
 883 0032 0323     		movs	r3, #3
 884 0034 AB40     		lsls	r3, r3, r5
 885 0036 9943     		bics	r1, r3
 886              	.LVL60:
 887 0038 0B00     		movs	r3, r1
 888              	.LVL61:
2545:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 889              		.loc 1 2545 0
 890 003a 3100     		movs	r1, r6
 891              	.LVL62:
 892 003c A940     		lsls	r1, r1, r5
 893 003e 1943     		orrs	r1, r3
 894              	.LVL63:
2546:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2546 0
 896 0040 2160     		str	r1, [r4]
2548:Generated_Source\PSoC4/CyLib.c **** }
 897              		.loc 1 2548 0
 898 0042 FFF7FEFF 		bl	CyExitCriticalSection
 899              	.LVL64:
2549:Generated_Source\PSoC4/CyLib.c **** 
 900              		.loc 1 2549 0
 901              		@ sp needed
 902              	.LVL65:
 903 0046 70BD     		pop	{r4, r5, r6, pc}
 904              	.L67:
 905              		.align	2
 906              	.L66:
 907 0048 00E400E0 		.word	-536812544
 908              		.cfi_endproc
 909              	.LFE18:
 910              		.size	CyIntSetPriority, .-CyIntSetPriority
 911              		.section	.text.CyIntGetPriority,"ax",%progbits
 912              		.align	2
 913              		.global	CyIntGetPriority
 914              		.code	16
 915              		.thumb_func
 916              		.type	CyIntGetPriority, %function
 917              	CyIntGetPriority:
 918              	.LFB19:
2565:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 919              		.loc 1 2565 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL66:
 924 0000 10B5     		push	{r4, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 0002 0400     		movs	r4, r0
2568:Generated_Source\PSoC4/CyLib.c **** 
 929              		.loc 1 2568 0
 930 0004 1F28     		cmp	r0, #31
 931 0006 02D9     		bls	.L69
2568:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 65


 932              		.loc 1 2568 0 is_stmt 0 discriminator 1
 933 0008 0020     		movs	r0, #0
 934              	.LVL67:
 935 000a FFF7FEFF 		bl	CyHalt
 936              	.LVL68:
 937              	.L69:
2570:Generated_Source\PSoC4/CyLib.c **** 
 938              		.loc 1 2570 0 is_stmt 1
 939 000e A308     		lsrs	r3, r4, #2
 940 0010 9B00     		lsls	r3, r3, #2
 941 0012 054A     		ldr	r2, .L70
 942 0014 9446     		mov	ip, r2
 943 0016 6344     		add	r3, r3, ip
 944 0018 1868     		ldr	r0, [r3]
 945 001a 0323     		movs	r3, #3
 946 001c 1C40     		ands	r4, r3
 947 001e E400     		lsls	r4, r4, #3
 948 0020 0634     		adds	r4, r4, #6
 949 0022 E040     		lsrs	r0, r0, r4
 950              	.LVL69:
2572:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2572 0
 952 0024 1840     		ands	r0, r3
 953              	.LVL70:
2573:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2573 0
 955              		@ sp needed
 956 0026 10BD     		pop	{r4, pc}
 957              	.L71:
 958              		.align	2
 959              	.L70:
 960 0028 00E400E0 		.word	-536812544
 961              		.cfi_endproc
 962              	.LFE19:
 963              		.size	CyIntGetPriority, .-CyIntGetPriority
 964              		.section	.text.CySoftwareReset,"ax",%progbits
 965              		.align	2
 966              		.global	CySoftwareReset
 967              		.code	16
 968              		.thumb_func
 969              		.type	CySoftwareReset, %function
 970              	CySoftwareReset:
 971              	.LFB26:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 972              		.loc 1 2688 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 66


 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 977              		.loc 1 2693 0
 978 0000 034A     		ldr	r2, .L73
 979 0002 1368     		ldr	r3, [r2]
 980 0004 1B04     		lsls	r3, r3, #16
 981 0006 1B0C     		lsrs	r3, r3, #16
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 982              		.loc 1 2694 0
 983 0008 0249     		ldr	r1, .L73+4
 984 000a 0B43     		orrs	r3, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 985              		.loc 1 2693 0
 986 000c 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c **** }
 987              		.loc 1 2695 0
 988              		@ sp needed
 989 000e 7047     		bx	lr
 990              	.L74:
 991              		.align	2
 992              	.L73:
 993 0010 0CED00E0 		.word	-536810228
 994 0014 0400FA05 		.word	100270084
 995              		.cfi_endproc
 996              	.LFE26:
 997              		.size	CySoftwareReset, .-CySoftwareReset
 998              		.section	.text.CyDelay,"ax",%progbits
 999              		.align	2
 1000              		.global	CyDelay
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	CyDelay, %function
 1004              	CyDelay:
 1005              	.LFB27:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 1006              		.loc 1 2708 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL71:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 67


 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
 1014              		.cfi_offset 14, -4
 1015 0002 0400     		movs	r4, r0
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1016              		.loc 1 2709 0
 1017 0004 06E0     		b	.L76
 1018              	.LVL72:
 1019              	.L77:
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1020              		.loc 1 2714 0
 1021 0006 084B     		ldr	r3, .L78
 1022 0008 5868     		ldr	r0, [r3, #4]
 1023 000a FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL73:
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1025              		.loc 1 2715 0
 1026 000e 074B     		ldr	r3, .L78+4
 1027 0010 9C46     		mov	ip, r3
 1028 0012 6444     		add	r4, r4, ip
 1029              	.LVL74:
 1030              	.L76:
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 2709 0
 1032 0014 8023     		movs	r3, #128
 1033 0016 1B02     		lsls	r3, r3, #8
 1034 0018 9C42     		cmp	r4, r3
 1035 001a F4D8     		bhi	.L77
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1036              		.loc 1 2718 0
 1037 001c 024B     		ldr	r3, .L78
 1038 001e 9868     		ldr	r0, [r3, #8]
 1039 0020 6043     		muls	r0, r4
 1040 0022 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL75:
2719:Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 2719 0
 1043              		@ sp needed
 1044              	.LVL76:
 1045 0026 10BD     		pop	{r4, pc}
 1046              	.L79:
 1047              		.align	2
 1048              	.L78:
 1049 0028 00000000 		.word	.LANCHOR0
 1050 002c 0080FFFF 		.word	-32768
 1051              		.cfi_endproc
 1052              	.LFE27:
 1053              		.size	CyDelay, .-CyDelay
 1054              		.section	.text.CyDelayUs,"ax",%progbits
 1055              		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 68


 1056              		.global	CyDelayUs
 1057              		.code	16
 1058              		.thumb_func
 1059              		.type	CyDelayUs, %function
 1060              	CyDelayUs:
 1061              	.LFB28:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 1062              		.loc 1 2731 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL77:
 1067 0000 10B5     		push	{r4, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 4, -8
 1070              		.cfi_offset 14, -4
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1071              		.loc 1 2732 0
 1072 0002 034B     		ldr	r3, .L81
 1073 0004 1B7B     		ldrb	r3, [r3, #12]
 1074 0006 5843     		muls	r0, r3
 1075              	.LVL78:
 1076 0008 FFF7FEFF 		bl	CyDelayCycles
 1077              	.LVL79:
2733:Generated_Source\PSoC4/CyLib.c **** }
 1078              		.loc 1 2733 0
 1079              		@ sp needed
 1080 000c 10BD     		pop	{r4, pc}
 1081              	.L82:
 1082 000e C046     		.align	2
 1083              	.L81:
 1084 0010 00000000 		.word	.LANCHOR0
 1085              		.cfi_endproc
 1086              	.LFE28:
 1087              		.size	CyDelayUs, .-CyDelayUs
 1088              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1089              		.align	2
 1090              		.global	CySysClkWriteImoFreq
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CySysClkWriteImoFreq, %function
 1094              	CySysClkWriteImoFreq:
 1095              	.LFB6:
 768:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1096              		.loc 1 768 0
 1097              		.cfi_startproc
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 69


 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              	.LVL80:
 1101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1102              		.cfi_def_cfa_offset 20
 1103              		.cfi_offset 4, -20
 1104              		.cfi_offset 5, -16
 1105              		.cfi_offset 6, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 5746     		mov	r7, r10
 1109 0004 4E46     		mov	r6, r9
 1110 0006 C0B4     		push	{r6, r7}
 1111              		.cfi_def_cfa_offset 28
 1112              		.cfi_offset 9, -28
 1113              		.cfi_offset 10, -24
 1114 0008 83B0     		sub	sp, sp, #12
 1115              		.cfi_def_cfa_offset 40
 1116 000a 0400     		movs	r4, r0
 790:Generated_Source\PSoC4/CyLib.c **** 
 1117              		.loc 1 790 0
 1118 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1119              	.LVL81:
 1120 0010 0190     		str	r0, [sp, #4]
 1121              	.LVL82:
 840:Generated_Source\PSoC4/CyLib.c ****         {
 1122              		.loc 1 840 0
 1123 0012 E71E     		subs	r7, r4, #3
 1124 0014 2D2F     		cmp	r7, #45
 1125 0016 74D8     		bhi	.L84
 842:Generated_Source\PSoC4/CyLib.c ****             {
 1126              		.loc 1 842 0
 1127 0018 3F4B     		ldr	r3, .L94
 1128 001a 1B78     		ldrb	r3, [r3]
 1129 001c DBB2     		uxtb	r3, r3
 1130 001e 9C42     		cmp	r4, r3
 1131 0020 08D8     		bhi	.L85
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1132              		.loc 1 844 0
 1133 0022 3E4B     		ldr	r3, .L94+4
 1134 0024 1B78     		ldrb	r3, [r3]
 1135 0026 DBB2     		uxtb	r3, r3
 1136 0028 9A46     		mov	r10, r3
 1137              	.LVL83:
 845:Generated_Source\PSoC4/CyLib.c ****             }
 1138              		.loc 1 845 0
 1139 002a 3D4B     		ldr	r3, .L94+8
 1140 002c 1B78     		ldrb	r3, [r3]
 1141 002e DBB2     		uxtb	r3, r3
 1142 0030 9946     		mov	r9, r3
 1143              	.LVL84:
 1144 0032 31E0     		b	.L86
 1145              	.LVL85:
 1146              	.L85:
 847:Generated_Source\PSoC4/CyLib.c ****             {
 1147              		.loc 1 847 0
 1148 0034 3B4B     		ldr	r3, .L94+12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 70


 1149 0036 1B78     		ldrb	r3, [r3]
 1150 0038 DBB2     		uxtb	r3, r3
 1151 003a 9C42     		cmp	r4, r3
 1152 003c 08D8     		bhi	.L87
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1153              		.loc 1 849 0
 1154 003e 3A4B     		ldr	r3, .L94+16
 1155 0040 1B78     		ldrb	r3, [r3]
 1156 0042 DBB2     		uxtb	r3, r3
 1157 0044 9A46     		mov	r10, r3
 1158              	.LVL86:
 850:Generated_Source\PSoC4/CyLib.c ****             }
 1159              		.loc 1 850 0
 1160 0046 394B     		ldr	r3, .L94+20
 1161 0048 1B78     		ldrb	r3, [r3]
 1162 004a DBB2     		uxtb	r3, r3
 1163 004c 9946     		mov	r9, r3
 1164              	.LVL87:
 1165 004e 23E0     		b	.L86
 1166              	.LVL88:
 1167              	.L87:
 852:Generated_Source\PSoC4/CyLib.c ****             {
 1168              		.loc 1 852 0
 1169 0050 374B     		ldr	r3, .L94+24
 1170 0052 1B78     		ldrb	r3, [r3]
 1171 0054 DBB2     		uxtb	r3, r3
 1172 0056 9C42     		cmp	r4, r3
 1173 0058 08D8     		bhi	.L88
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1174              		.loc 1 854 0
 1175 005a 364B     		ldr	r3, .L94+28
 1176 005c 1B78     		ldrb	r3, [r3]
 1177 005e DBB2     		uxtb	r3, r3
 1178 0060 9A46     		mov	r10, r3
 1179              	.LVL89:
 855:Generated_Source\PSoC4/CyLib.c ****             }
 1180              		.loc 1 855 0
 1181 0062 354B     		ldr	r3, .L94+32
 1182 0064 1B78     		ldrb	r3, [r3]
 1183 0066 DBB2     		uxtb	r3, r3
 1184 0068 9946     		mov	r9, r3
 1185              	.LVL90:
 1186 006a 15E0     		b	.L86
 1187              	.LVL91:
 1188              	.L88:
 857:Generated_Source\PSoC4/CyLib.c ****             {
 1189              		.loc 1 857 0
 1190 006c 334B     		ldr	r3, .L94+36
 1191 006e 1B78     		ldrb	r3, [r3]
 1192 0070 DBB2     		uxtb	r3, r3
 1193 0072 9C42     		cmp	r4, r3
 1194 0074 08D8     		bhi	.L89
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1195              		.loc 1 859 0
 1196 0076 324B     		ldr	r3, .L94+40
 1197 0078 1B78     		ldrb	r3, [r3]
 1198 007a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 71


 1199 007c 9A46     		mov	r10, r3
 1200              	.LVL92:
 860:Generated_Source\PSoC4/CyLib.c ****             }
 1201              		.loc 1 860 0
 1202 007e 314B     		ldr	r3, .L94+44
 1203 0080 1B78     		ldrb	r3, [r3]
 1204 0082 DBB2     		uxtb	r3, r3
 1205 0084 9946     		mov	r9, r3
 1206              	.LVL93:
 1207 0086 07E0     		b	.L86
 1208              	.LVL94:
 1209              	.L89:
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1210              		.loc 1 864 0
 1211 0088 2F4B     		ldr	r3, .L94+48
 1212 008a 1B78     		ldrb	r3, [r3]
 1213 008c DBB2     		uxtb	r3, r3
 1214 008e 9A46     		mov	r10, r3
 1215              	.LVL95:
 865:Generated_Source\PSoC4/CyLib.c ****             }
 1216              		.loc 1 865 0
 1217 0090 2E4B     		ldr	r3, .L94+52
 1218 0092 1B78     		ldrb	r3, [r3]
 1219 0094 DBB2     		uxtb	r3, r3
 1220 0096 9946     		mov	r9, r3
 1221              	.LVL96:
 1222              	.L86:
 869:Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 869 0
 1224 0098 2D4B     		ldr	r3, .L94+56
 1225 009a DE5D     		ldrb	r6, [r3, r7]
 1226              	.LVL97:
 881:Generated_Source\PSoC4/CyLib.c ****             {
 1227              		.loc 1 881 0
 1228 009c 2F2E     		cmp	r6, #47
 1229 009e 09D9     		bls	.L90
 881:Generated_Source\PSoC4/CyLib.c ****             {
 1230              		.loc 1 881 0 is_stmt 0 discriminator 1
 1231 00a0 2A2C     		cmp	r4, #42
 1232 00a2 07D9     		bls	.L90
 884:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1233              		.loc 1 884 0 is_stmt 1
 1234 00a4 1922     		movs	r2, #25
 1235 00a6 2B4B     		ldr	r3, .L94+60
 1236 00a8 1A60     		str	r2, [r3]
 1237              	.LVL98:
 887:Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 887 0
 1239 00aa 0520     		movs	r0, #5
 1240 00ac FFF7FEFF 		bl	CyDelayCycles
 1241              	.LVL99:
 889:Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 889 0
 1243 00b0 1925     		movs	r5, #25
 1244 00b2 03E0     		b	.L91
 1245              	.LVL100:
 1246              	.L90:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 72


 893:Generated_Source\PSoC4/CyLib.c ****             }
 1247              		.loc 1 893 0
 1248 00b4 274B     		ldr	r3, .L94+60
 1249 00b6 1D68     		ldr	r5, [r3]
 1250 00b8 3F23     		movs	r3, #63
 1251 00ba 1D40     		ands	r5, r3
 1252              	.LVL101:
 1253              	.L91:
 905:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 905 0
 1255 00bc B542     		cmp	r5, r6
 1256 00be 06D9     		bls	.L92
 908:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1257              		.loc 1 908 0
 1258 00c0 234B     		ldr	r3, .L94+56
 1259 00c2 DA5D     		ldrb	r2, [r3, r7]
 1260 00c4 234B     		ldr	r3, .L94+60
 1261 00c6 1A60     		str	r2, [r3]
 909:Generated_Source\PSoC4/CyLib.c ****             }
 1262              		.loc 1 909 0
 1263 00c8 0520     		movs	r0, #5
 1264 00ca FFF7FEFF 		bl	CyDelayCycles
 1265              	.LVL102:
 1266              	.L92:
 913:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1267              		.loc 1 913 0
 1268 00ce 1F4B     		ldr	r3, .L94+52
 1269 00d0 9C46     		mov	ip, r3
 1270 00d2 6444     		add	r4, r4, ip
 1271              	.LVL103:
 1272 00d4 2378     		ldrb	r3, [r4]
 1273 00d6 DBB2     		uxtb	r3, r3
 1274 00d8 1F4A     		ldr	r2, .L94+64
 1275 00da 1360     		str	r3, [r2]
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1276              		.loc 1 914 0
 1277 00dc 1F4B     		ldr	r3, .L94+68
 1278 00de 5246     		mov	r2, r10
 1279 00e0 1A60     		str	r2, [r3]
 915:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1280              		.loc 1 915 0
 1281 00e2 1F4B     		ldr	r3, .L94+72
 1282 00e4 4A46     		mov	r2, r9
 1283 00e6 1A60     		str	r2, [r3]
 916:Generated_Source\PSoC4/CyLib.c **** 
 1284              		.loc 1 916 0
 1285 00e8 0520     		movs	r0, #5
 1286 00ea FFF7FEFF 		bl	CyDelayUs
 1287              	.LVL104:
 918:Generated_Source\PSoC4/CyLib.c ****             {
 1288              		.loc 1 918 0
 1289 00ee B542     		cmp	r5, r6
 1290 00f0 0AD2     		bcs	.L93
 921:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1291              		.loc 1 921 0
 1292 00f2 174B     		ldr	r3, .L94+56
 1293 00f4 DA5D     		ldrb	r2, [r3, r7]
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 73


 1294 00f6 174B     		ldr	r3, .L94+60
 1295 00f8 1A60     		str	r2, [r3]
 922:Generated_Source\PSoC4/CyLib.c ****             }
 1296              		.loc 1 922 0
 1297 00fa 0520     		movs	r0, #5
 1298 00fc FFF7FEFF 		bl	CyDelayCycles
 1299              	.LVL105:
 1300 0100 02E0     		b	.L93
 1301              	.LVL106:
 1302              	.L84:
 928:Generated_Source\PSoC4/CyLib.c ****         }
 1303              		.loc 1 928 0 discriminator 1
 1304 0102 0020     		movs	r0, #0
 1305 0104 FFF7FEFF 		bl	CyHalt
 1306              	.LVL107:
 1307              	.L93:
 947:Generated_Source\PSoC4/CyLib.c ****     }
 1308              		.loc 1 947 0
 1309 0108 0198     		ldr	r0, [sp, #4]
 1310 010a FFF7FEFF 		bl	CyExitCriticalSection
 1311              	.LVL108:
 948:Generated_Source\PSoC4/CyLib.c **** 
 1312              		.loc 1 948 0
 1313 010e 03B0     		add	sp, sp, #12
 1314              		@ sp needed
 1315              	.LVL109:
 1316 0110 0CBC     		pop	{r2, r3}
 1317 0112 9146     		mov	r9, r2
 1318 0114 9A46     		mov	r10, r3
 1319 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1320              	.L95:
 1321              		.align	2
 1322              	.L94:
 1323 0118 C0F1FF0F 		.word	268431808
 1324 011c C1F1FF0F 		.word	268431809
 1325 0120 C2F1FF0F 		.word	268431810
 1326 0124 C3F1FF0F 		.word	268431811
 1327 0128 C4F1FF0F 		.word	268431812
 1328 012c C5F1FF0F 		.word	268431813
 1329 0130 C6F1FF0F 		.word	268431814
 1330 0134 C7F1FF0F 		.word	268431815
 1331 0138 C8F1FF0F 		.word	268431816
 1332 013c C9F1FF0F 		.word	268431817
 1333 0140 CAF1FF0F 		.word	268431818
 1334 0144 CBF1FF0F 		.word	268431819
 1335 0148 CCF1FF0F 		.word	268431820
 1336 014c CDF1FF0F 		.word	268431821
 1337 0150 00000000 		.word	.LANCHOR1
 1338 0154 2CFF0B40 		.word	1074528044
 1339 0158 28FF0B40 		.word	1074528040
 1340 015c 1CFF0B40 		.word	1074528028
 1341 0160 20FF0B40 		.word	1074528032
 1342              		.cfi_endproc
 1343              	.LFE6:
 1344              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1345              		.section	.text.CySysLvdEnable,"ax",%progbits
 1346              		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 74


 1347              		.global	CySysLvdEnable
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	CySysLvdEnable, %function
 1351              	CySysLvdEnable:
 1352              	.LFB7:
2267:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1353              		.loc 1 2267 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              	.LVL110:
 1358 0000 70B5     		push	{r4, r5, r6, lr}
 1359              		.cfi_def_cfa_offset 16
 1360              		.cfi_offset 4, -16
 1361              		.cfi_offset 5, -12
 1362              		.cfi_offset 6, -8
 1363              		.cfi_offset 14, -4
 1364 0002 0300     		movs	r3, r0
2269:Generated_Source\PSoC4/CyLib.c **** 
 1365              		.loc 1 2269 0
 1366 0004 0D4C     		ldr	r4, .L97
 1367 0006 2268     		ldr	r2, [r4]
 1368 0008 0225     		movs	r5, #2
 1369 000a AA43     		bics	r2, r5
 1370 000c 2260     		str	r2, [r4]
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1371              		.loc 1 2272 0
 1372 000e 0C4A     		ldr	r2, .L97+4
 1373 0010 1168     		ldr	r1, [r2]
 1374 0012 1E20     		movs	r0, #30
 1375              	.LVL111:
 1376 0014 8143     		bics	r1, r0
2273:Generated_Source\PSoC4/CyLib.c **** 
 1377              		.loc 1 2273 0
 1378 0016 5B00     		lsls	r3, r3, #1
 1379              	.LVL112:
 1380 0018 1840     		ands	r0, r3
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1381              		.loc 1 2272 0
 1382 001a 0843     		orrs	r0, r1
 1383 001c 1060     		str	r0, [r2]
2276:Generated_Source\PSoC4/CyLib.c **** 
 1384              		.loc 1 2276 0
 1385 001e 1168     		ldr	r1, [r2]
 1386 0020 0123     		movs	r3, #1
 1387 0022 0B43     		orrs	r3, r1
 1388 0024 1360     		str	r3, [r2]
2279:Generated_Source\PSoC4/CyLib.c **** 
 1389              		.loc 1 2279 0
 1390 0026 FA20     		movs	r0, #250
 1391 0028 8000     		lsls	r0, r0, #2
 1392 002a FFF7FEFF 		bl	CyDelayUs
 1393              	.LVL113:
2282:Generated_Source\PSoC4/CyLib.c **** 
 1394              		.loc 1 2282 0
 1395 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 75


 1396              	.LVL114:
2285:Generated_Source\PSoC4/CyLib.c ****     }
 1397              		.loc 1 2285 0
 1398 0032 2368     		ldr	r3, [r4]
 1399 0034 1D43     		orrs	r5, r3
 1400 0036 2560     		str	r5, [r4]
2286:Generated_Source\PSoC4/CyLib.c **** 
 1401              		.loc 1 2286 0
 1402              		@ sp needed
 1403 0038 70BD     		pop	{r4, r5, r6, pc}
 1404              	.L98:
 1405 003a C046     		.align	2
 1406              	.L97:
 1407 003c 08000B40 		.word	1074462728
 1408 0040 18000B40 		.word	1074462744
 1409              		.cfi_endproc
 1410              	.LFE7:
 1411              		.size	CySysLvdEnable, .-CySysLvdEnable
 1412              		.global	__aeabi_uidiv
 1413              		.section	.text.CyDelayFreq,"ax",%progbits
 1414              		.align	2
 1415              		.global	CyDelayFreq
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	CyDelayFreq, %function
 1419              	CyDelayFreq:
 1420              	.LFB29:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1421              		.loc 1 2745 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              	.LVL115:
 1426 0000 70B5     		push	{r4, r5, r6, lr}
 1427              		.cfi_def_cfa_offset 16
 1428              		.cfi_offset 4, -16
 1429              		.cfi_offset 5, -12
 1430              		.cfi_offset 6, -8
 1431              		.cfi_offset 14, -4
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1432              		.loc 1 2746 0
 1433 0002 0028     		cmp	r0, #0
 1434 0004 02D0     		beq	.L100
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1435              		.loc 1 2748 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 76


 1436 0006 0C4B     		ldr	r3, .L102
 1437 0008 1861     		str	r0, [r3, #16]
 1438 000a 02E0     		b	.L101
 1439              	.L100:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1440              		.loc 1 2752 0
 1441 000c 0B4A     		ldr	r2, .L102+4
 1442 000e 0A4B     		ldr	r3, .L102
 1443 0010 1A61     		str	r2, [r3, #16]
 1444              	.L101:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1445              		.loc 1 2755 0
 1446 0012 094C     		ldr	r4, .L102
 1447 0014 2569     		ldr	r5, [r4, #16]
 1448 0016 0A4B     		ldr	r3, .L102+8
 1449 0018 E818     		adds	r0, r5, r3
 1450              	.LVL116:
 1451 001a 0A49     		ldr	r1, .L102+12
 1452 001c FFF7FEFF 		bl	__aeabi_uidiv
 1453              	.LVL117:
 1454 0020 2073     		strb	r0, [r4, #12]
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1455              		.loc 1 2756 0
 1456 0022 094B     		ldr	r3, .L102+16
 1457 0024 E818     		adds	r0, r5, r3
 1458 0026 FA21     		movs	r1, #250
 1459 0028 8900     		lsls	r1, r1, #2
 1460 002a FFF7FEFF 		bl	__aeabi_uidiv
 1461              	.LVL118:
 1462 002e A060     		str	r0, [r4, #8]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1463              		.loc 1 2757 0
 1464 0030 C003     		lsls	r0, r0, #15
 1465 0032 6060     		str	r0, [r4, #4]
2758:Generated_Source\PSoC4/CyLib.c **** }
 1466              		.loc 1 2758 0
 1467              		@ sp needed
 1468 0034 70BD     		pop	{r4, r5, r6, pc}
 1469              	.L103:
 1470 0036 C046     		.align	2
 1471              	.L102:
 1472 0038 00000000 		.word	.LANCHOR0
 1473 003c 00366E01 		.word	24000000
 1474 0040 3F420F00 		.word	999999
 1475 0044 40420F00 		.word	1000000
 1476 0048 E7030000 		.word	999
 1477              		.cfi_endproc
 1478              	.LFE29:
 1479              		.size	CyDelayFreq, .-CyDelayFreq
 1480              		.section	.text.CySysTickStop,"ax",%progbits
 1481              		.align	2
 1482              		.global	CySysTickStop
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 77


 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CySysTickStop, %function
 1486              	CySysTickStop:
 1487              	.LFB33:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2785:Generated_Source\PSoC4/CyLib.c **** }
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2810:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 78


2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2822:Generated_Source\PSoC4/CyLib.c **** }
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 1488              		.loc 1 2853 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1493              		.loc 1 2854 0
 1494 0000 024A     		ldr	r2, .L105
 1495 0002 1368     		ldr	r3, [r2]
 1496 0004 0121     		movs	r1, #1
 1497 0006 8B43     		bics	r3, r1
 1498 0008 1360     		str	r3, [r2]
2855:Generated_Source\PSoC4/CyLib.c **** }
 1499              		.loc 1 2855 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 79


 1500              		@ sp needed
 1501 000a 7047     		bx	lr
 1502              	.L106:
 1503              		.align	2
 1504              	.L105:
 1505 000c 10E000E0 		.word	-536813552
 1506              		.cfi_endproc
 1507              	.LFE33:
 1508              		.size	CySysTickStop, .-CySysTickStop
 1509              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1510              		.align	2
 1511              		.global	CySysTickEnableInterrupt
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	CySysTickEnableInterrupt, %function
 1515              	CySysTickEnableInterrupt:
 1516              	.LFB34:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 1517              		.loc 1 2869 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              		@ link register save eliminated.
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1522              		.loc 1 2870 0
 1523 0000 024A     		ldr	r2, .L108
 1524 0002 1168     		ldr	r1, [r2]
 1525 0004 0223     		movs	r3, #2
 1526 0006 0B43     		orrs	r3, r1
 1527 0008 1360     		str	r3, [r2]
2871:Generated_Source\PSoC4/CyLib.c **** }
 1528              		.loc 1 2871 0
 1529              		@ sp needed
 1530 000a 7047     		bx	lr
 1531              	.L109:
 1532              		.align	2
 1533              	.L108:
 1534 000c 10E000E0 		.word	-536813552
 1535              		.cfi_endproc
 1536              	.LFE34:
 1537              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1538              		.section	.text.CySysTickEnable,"ax",%progbits
 1539              		.align	2
 1540              		.global	CySysTickEnable
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 80


 1541              		.code	16
 1542              		.thumb_func
 1543              		.type	CySysTickEnable, %function
 1544              	CySysTickEnable:
 1545              	.LFB32:
2836:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1546              		.loc 1 2836 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550 0000 10B5     		push	{r4, lr}
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 4, -8
 1553              		.cfi_offset 14, -4
2837:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1554              		.loc 1 2837 0
 1555 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1556              	.LVL119:
2838:Generated_Source\PSoC4/CyLib.c **** }
 1557              		.loc 1 2838 0
 1558 0006 034A     		ldr	r2, .L111
 1559 0008 1168     		ldr	r1, [r2]
 1560 000a 0123     		movs	r3, #1
 1561 000c 0B43     		orrs	r3, r1
 1562 000e 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CyLib.c **** 
 1563              		.loc 1 2839 0
 1564              		@ sp needed
 1565 0010 10BD     		pop	{r4, pc}
 1566              	.L112:
 1567 0012 C046     		.align	2
 1568              	.L111:
 1569 0014 10E000E0 		.word	-536813552
 1570              		.cfi_endproc
 1571              	.LFE32:
 1572              		.size	CySysTickEnable, .-CySysTickEnable
 1573              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1574              		.align	2
 1575              		.global	CySysTickDisableInterrupt
 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	CySysTickDisableInterrupt, %function
 1579              	CySysTickDisableInterrupt:
 1580              	.LFB35:
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 81


2885:Generated_Source\PSoC4/CyLib.c **** {
 1581              		.loc 1 2885 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1586              		.loc 1 2886 0
 1587 0000 024A     		ldr	r2, .L114
 1588 0002 1368     		ldr	r3, [r2]
 1589 0004 0221     		movs	r1, #2
 1590 0006 8B43     		bics	r3, r1
 1591 0008 1360     		str	r3, [r2]
2887:Generated_Source\PSoC4/CyLib.c **** }
 1592              		.loc 1 2887 0
 1593              		@ sp needed
 1594 000a 7047     		bx	lr
 1595              	.L115:
 1596              		.align	2
 1597              	.L114:
 1598 000c 10E000E0 		.word	-536813552
 1599              		.cfi_endproc
 1600              	.LFE35:
 1601              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1602              		.section	.text.CySysTickSetReload,"ax",%progbits
 1603              		.align	2
 1604              		.global	CySysTickSetReload
 1605              		.code	16
 1606              		.thumb_func
 1607              		.type	CySysTickSetReload, %function
 1608              	CySysTickSetReload:
 1609              	.LFB36:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
 1610              		.loc 1 2902 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615              	.LVL120:
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1616              		.loc 1 2903 0
 1617 0000 0002     		lsls	r0, r0, #8
 1618              	.LVL121:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 82


 1619 0002 000A     		lsrs	r0, r0, #8
 1620 0004 014B     		ldr	r3, .L117
 1621 0006 1860     		str	r0, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** }
 1622              		.loc 1 2904 0
 1623              		@ sp needed
 1624 0008 7047     		bx	lr
 1625              	.L118:
 1626 000a C046     		.align	2
 1627              	.L117:
 1628 000c 14E000E0 		.word	-536813548
 1629              		.cfi_endproc
 1630              	.LFE36:
 1631              		.size	CySysTickSetReload, .-CySysTickSetReload
 1632              		.section	.text.CySysTickGetReload,"ax",%progbits
 1633              		.align	2
 1634              		.global	CySysTickGetReload
 1635              		.code	16
 1636              		.thumb_func
 1637              		.type	CySysTickGetReload, %function
 1638              	CySysTickGetReload:
 1639              	.LFB37:
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
 1640              		.loc 1 2918 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              		@ link register save eliminated.
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1645              		.loc 1 2919 0
 1646 0000 024B     		ldr	r3, .L120
 1647 0002 1868     		ldr	r0, [r3]
 1648 0004 0002     		lsls	r0, r0, #8
 1649 0006 000A     		lsrs	r0, r0, #8
2920:Generated_Source\PSoC4/CyLib.c **** }
 1650              		.loc 1 2920 0
 1651              		@ sp needed
 1652 0008 7047     		bx	lr
 1653              	.L121:
 1654 000a C046     		.align	2
 1655              	.L120:
 1656 000c 14E000E0 		.word	-536813548
 1657              		.cfi_endproc
 1658              	.LFE37:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 83


 1659              		.size	CySysTickGetReload, .-CySysTickGetReload
 1660              		.section	.text.CySysTickGetValue,"ax",%progbits
 1661              		.align	2
 1662              		.global	CySysTickGetValue
 1663              		.code	16
 1664              		.thumb_func
 1665              		.type	CySysTickGetValue, %function
 1666              	CySysTickGetValue:
 1667              	.LFB38:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
 1668              		.loc 1 2934 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              		@ link register save eliminated.
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1673              		.loc 1 2935 0
 1674 0000 024B     		ldr	r3, .L123
 1675 0002 1868     		ldr	r0, [r3]
 1676 0004 0002     		lsls	r0, r0, #8
 1677 0006 000A     		lsrs	r0, r0, #8
2936:Generated_Source\PSoC4/CyLib.c **** }
 1678              		.loc 1 2936 0
 1679              		@ sp needed
 1680 0008 7047     		bx	lr
 1681              	.L124:
 1682 000a C046     		.align	2
 1683              	.L123:
 1684 000c 18E000E0 		.word	-536813544
 1685              		.cfi_endproc
 1686              	.LFE38:
 1687              		.size	CySysTickGetValue, .-CySysTickGetValue
 1688              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1689              		.align	2
 1690              		.global	CySysTickGetCountFlag
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CySysTickGetCountFlag, %function
 1694              	CySysTickGetCountFlag:
 1695              	.LFB39:
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 84


2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2993:Generated_Source\PSoC4/CyLib.c ****     }
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 85


2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
 1696              		.loc 1 3014 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1701              		.loc 1 3015 0
 1702 0000 024B     		ldr	r3, .L126
 1703 0002 1868     		ldr	r0, [r3]
 1704 0004 000C     		lsrs	r0, r0, #16
 1705 0006 0123     		movs	r3, #1
 1706 0008 1840     		ands	r0, r3
3016:Generated_Source\PSoC4/CyLib.c **** }
 1707              		.loc 1 3016 0
 1708              		@ sp needed
 1709 000a 7047     		bx	lr
 1710              	.L127:
 1711              		.align	2
 1712              	.L126:
 1713 000c 10E000E0 		.word	-536813552
 1714              		.cfi_endproc
 1715              	.LFE39:
 1716              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1717              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1718              		.align	2
 1719              		.code	16
 1720              		.thumb_func
 1721              		.type	CySysTickServiceCallbacks, %function
 1722              	CySysTickServiceCallbacks:
 1723              	.LFB43:
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 86


3027:Generated_Source\PSoC4/CyLib.c **** {
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3029:Generated_Source\PSoC4/CyLib.c **** }
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3068:Generated_Source\PSoC4/CyLib.c **** }
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 87


3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3088:Generated_Source\PSoC4/CyLib.c **** }
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 1724              		.loc 1 3099 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728 0000 10B5     		push	{r4, lr}
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 4, -8
 1731              		.cfi_offset 14, -4
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1732              		.loc 1 3103 0
 1733 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1734              	.LVL122:
 1735 0006 0128     		cmp	r0, #1
 1736 0008 0BD1     		bne	.L128
 1737 000a 07E0     		b	.L133
 1738              	.LVL123:
 1739              	.L132:
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1740              		.loc 1 3107 0
 1741 000c A300     		lsls	r3, r4, #2
 1742 000e 054A     		ldr	r2, .L134
 1743 0010 9B58     		ldr	r3, [r3, r2]
 1744 0012 002B     		cmp	r3, #0
 1745 0014 00D0     		beq	.L131
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1746              		.loc 1 3109 0
 1747 0016 9847     		blx	r3
 1748              	.LVL124:
 1749              	.L131:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1750              		.loc 1 3105 0 discriminator 2
 1751 0018 0134     		adds	r4, r4, #1
 1752              	.LVL125:
 1753 001a 00E0     		b	.L129
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 88


 1754              	.LVL126:
 1755              	.L133:
 1756 001c 0024     		movs	r4, #0
 1757              	.L129:
 1758              	.LVL127:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1759              		.loc 1 3105 0 is_stmt 0 discriminator 1
 1760 001e 042C     		cmp	r4, #4
 1761 0020 F4D9     		bls	.L132
 1762              	.LVL128:
 1763              	.L128:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 1764              		.loc 1 3113 0 is_stmt 1
 1765              		@ sp needed
 1766 0022 10BD     		pop	{r4, pc}
 1767              	.L135:
 1768              		.align	2
 1769              	.L134:
 1770 0024 00000000 		.word	.LANCHOR2
 1771              		.cfi_endproc
 1772              	.LFE43:
 1773              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1774              		.section	.text.CySysTickClear,"ax",%progbits
 1775              		.align	2
 1776              		.global	CySysTickClear
 1777              		.code	16
 1778              		.thumb_func
 1779              		.type	CySysTickClear, %function
 1780              	CySysTickClear:
 1781              	.LFB40:
3027:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1782              		.loc 1 3027 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
3028:Generated_Source\PSoC4/CyLib.c **** }
 1787              		.loc 1 3028 0
 1788 0000 0022     		movs	r2, #0
 1789 0002 014B     		ldr	r3, .L137
 1790 0004 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** 
 1791              		.loc 1 3029 0
 1792              		@ sp needed
 1793 0006 7047     		bx	lr
 1794              	.L138:
 1795              		.align	2
 1796              	.L137:
 1797 0008 18E000E0 		.word	-536813544
 1798              		.cfi_endproc
 1799              	.LFE40:
 1800              		.size	CySysTickClear, .-CySysTickClear
 1801              		.section	.text.CySysTickInit,"ax",%progbits
 1802              		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 89


 1803              		.global	CySysTickInit
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	CySysTickInit, %function
 1807              	CySysTickInit:
 1808              	.LFB31:
2806:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1809              		.loc 1 2806 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813 0000 10B5     		push	{r4, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 4, -8
 1816              		.cfi_offset 14, -4
 1817              	.LVL129:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1818              		.loc 1 2809 0
 1819 0002 0023     		movs	r3, #0
 1820 0004 04E0     		b	.L140
 1821              	.LVL130:
 1822              	.L141:
2811:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 2811 0 discriminator 3
 1824 0006 9900     		lsls	r1, r3, #2
 1825 0008 0020     		movs	r0, #0
 1826 000a 0A4A     		ldr	r2, .L142
 1827 000c 8850     		str	r0, [r1, r2]
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1828              		.loc 1 2809 0 discriminator 3
 1829 000e 0133     		adds	r3, r3, #1
 1830              	.LVL131:
 1831              	.L140:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1832              		.loc 1 2809 0 is_stmt 0 discriminator 1
 1833 0010 042B     		cmp	r3, #4
 1834 0012 F8D9     		bls	.L141
2814:Generated_Source\PSoC4/CyLib.c **** 
 1835              		.loc 1 2814 0 is_stmt 1
 1836 0014 0849     		ldr	r1, .L142+4
 1837 0016 0F20     		movs	r0, #15
 1838 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1839              	.LVL132:
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1840              		.loc 1 2820 0
 1841 001c 074B     		ldr	r3, .L142+8
 1842 001e 1869     		ldr	r0, [r3, #16]
 1843 0020 FA21     		movs	r1, #250
 1844 0022 8900     		lsls	r1, r1, #2
 1845 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1846              	.LVL133:
 1847 0028 FFF7FEFF 		bl	CySysTickSetReload
 1848              	.LVL134:
2821:Generated_Source\PSoC4/CyLib.c **** }
 1849              		.loc 1 2821 0
 1850 002c FFF7FEFF 		bl	CySysTickClear
 1851              	.LVL135:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 90


2822:Generated_Source\PSoC4/CyLib.c **** 
 1852              		.loc 1 2822 0
 1853              		@ sp needed
 1854 0030 10BD     		pop	{r4, pc}
 1855              	.L143:
 1856 0032 C046     		.align	2
 1857              	.L142:
 1858 0034 00000000 		.word	.LANCHOR2
 1859 0038 00000000 		.word	CySysTickServiceCallbacks
 1860 003c 00000000 		.word	.LANCHOR0
 1861              		.cfi_endproc
 1862              	.LFE31:
 1863              		.size	CySysTickInit, .-CySysTickInit
 1864              		.section	.text.CySysTickStart,"ax",%progbits
 1865              		.align	2
 1866              		.global	CySysTickStart
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysTickStart, %function
 1870              	CySysTickStart:
 1871              	.LFB30:
2777:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1872              		.loc 1 2777 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876 0000 10B5     		push	{r4, lr}
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 4, -8
 1879              		.cfi_offset 14, -4
2778:Generated_Source\PSoC4/CyLib.c ****     {
 1880              		.loc 1 2778 0
 1881 0002 064B     		ldr	r3, .L146
 1882 0004 5B69     		ldr	r3, [r3, #20]
 1883 0006 002B     		cmp	r3, #0
 1884 0008 04D1     		bne	.L145
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1885              		.loc 1 2780 0
 1886 000a FFF7FEFF 		bl	CySysTickInit
 1887              	.LVL136:
2781:Generated_Source\PSoC4/CyLib.c ****     }
 1888              		.loc 1 2781 0
 1889 000e 0122     		movs	r2, #1
 1890 0010 024B     		ldr	r3, .L146
 1891 0012 5A61     		str	r2, [r3, #20]
 1892              	.L145:
2784:Generated_Source\PSoC4/CyLib.c **** }
 1893              		.loc 1 2784 0
 1894 0014 FFF7FEFF 		bl	CySysTickEnable
 1895              	.LVL137:
2785:Generated_Source\PSoC4/CyLib.c **** 
 1896              		.loc 1 2785 0
 1897              		@ sp needed
 1898 0018 10BD     		pop	{r4, pc}
 1899              	.L147:
 1900 001a C046     		.align	2
 1901              	.L146:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 91


 1902 001c 00000000 		.word	.LANCHOR2
 1903              		.cfi_endproc
 1904              	.LFE30:
 1905              		.size	CySysTickStart, .-CySysTickStart
 1906              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1907              		.align	2
 1908              		.global	CySysTickSetCallback
 1909              		.code	16
 1910              		.thumb_func
 1911              		.type	CySysTickSetCallback, %function
 1912              	CySysTickSetCallback:
 1913              	.LFB41:
3062:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1914              		.loc 1 3062 0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918              		@ link register save eliminated.
 1919              	.LVL138:
3065:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1920              		.loc 1 3065 0
 1921 0000 024A     		ldr	r2, .L149
 1922 0002 8300     		lsls	r3, r0, #2
 1923 0004 9858     		ldr	r0, [r3, r2]
 1924              	.LVL139:
3066:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1925              		.loc 1 3066 0
 1926 0006 9950     		str	r1, [r3, r2]
3068:Generated_Source\PSoC4/CyLib.c **** 
 1927              		.loc 1 3068 0
 1928              		@ sp needed
 1929 0008 7047     		bx	lr
 1930              	.L150:
 1931 000a C046     		.align	2
 1932              	.L149:
 1933 000c 00000000 		.word	.LANCHOR2
 1934              		.cfi_endproc
 1935              	.LFE41:
 1936              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1937              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1938              		.align	2
 1939              		.global	CySysTickGetCallback
 1940              		.code	16
 1941              		.thumb_func
 1942              		.type	CySysTickGetCallback, %function
 1943              	CySysTickGetCallback:
 1944              	.LFB42:
3086:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1945              		.loc 1 3086 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 0
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
 1949              		@ link register save eliminated.
 1950              	.LVL140:
3087:Generated_Source\PSoC4/CyLib.c **** }
 1951              		.loc 1 3087 0
 1952 0000 8000     		lsls	r0, r0, #2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 92


 1953              	.LVL141:
 1954 0002 014B     		ldr	r3, .L152
 1955 0004 C058     		ldr	r0, [r0, r3]
3088:Generated_Source\PSoC4/CyLib.c **** 
 1956              		.loc 1 3088 0
 1957              		@ sp needed
 1958 0006 7047     		bx	lr
 1959              	.L153:
 1960              		.align	2
 1961              	.L152:
 1962 0008 00000000 		.word	.LANCHOR2
 1963              		.cfi_endproc
 1964              	.LFE42:
 1965              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1966              		.section	.text.CyGetUniqueId,"ax",%progbits
 1967              		.align	2
 1968              		.global	CyGetUniqueId
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CyGetUniqueId, %function
 1972              	CyGetUniqueId:
 1973              	.LFB44:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 1974              		.loc 1 3131 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 1979              	.LVL142:
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1980              		.loc 1 3133 0
 1981 0000 134B     		ldr	r3, .L155
 1982 0002 1B78     		ldrb	r3, [r3]
 1983 0004 DAB2     		uxtb	r2, r3
 1984 0006 0260     		str	r2, [r0]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1985              		.loc 1 3134 0
 1986 0008 124B     		ldr	r3, .L155+4
 1987 000a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 93


 1988 000c 1B02     		lsls	r3, r3, #8
 1989 000e 1343     		orrs	r3, r2
 1990 0010 0360     		str	r3, [r0]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1991              		.loc 1 3135 0
 1992 0012 114A     		ldr	r2, .L155+8
 1993 0014 1278     		ldrb	r2, [r2]
 1994 0016 1204     		lsls	r2, r2, #16
 1995 0018 1343     		orrs	r3, r2
 1996 001a 0360     		str	r3, [r0]
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1997              		.loc 1 3136 0
 1998 001c 0F4A     		ldr	r2, .L155+12
 1999 001e 1278     		ldrb	r2, [r2]
 2000 0020 1206     		lsls	r2, r2, #24
 2001 0022 1343     		orrs	r3, r2
 2002 0024 0360     		str	r3, [r0]
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2003              		.loc 1 3138 0
 2004 0026 0E4B     		ldr	r3, .L155+16
 2005 0028 1B78     		ldrb	r3, [r3]
 2006 002a DAB2     		uxtb	r2, r3
 2007 002c 4260     		str	r2, [r0, #4]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2008              		.loc 1 3139 0
 2009 002e 0D4B     		ldr	r3, .L155+20
 2010 0030 1B78     		ldrb	r3, [r3]
 2011 0032 1B02     		lsls	r3, r3, #8
 2012 0034 1343     		orrs	r3, r2
 2013 0036 4360     		str	r3, [r0, #4]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2014              		.loc 1 3140 0
 2015 0038 0B4A     		ldr	r2, .L155+24
 2016 003a 1278     		ldrb	r2, [r2]
 2017 003c 1204     		lsls	r2, r2, #16
 2018 003e 1343     		orrs	r3, r2
 2019 0040 4360     		str	r3, [r0, #4]
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2020              		.loc 1 3141 0
 2021 0042 0A4A     		ldr	r2, .L155+28
 2022 0044 1278     		ldrb	r2, [r2]
 2023 0046 1206     		lsls	r2, r2, #24
 2024 0048 1343     		orrs	r3, r2
 2025 004a 4360     		str	r3, [r0, #4]
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 94


 2026              		.loc 1 3153 0
 2027              		@ sp needed
 2028 004c 7047     		bx	lr
 2029              	.L156:
 2030 004e C046     		.align	2
 2031              	.L155:
 2032 0050 78F1FF0F 		.word	268431736
 2033 0054 79F1FF0F 		.word	268431737
 2034 0058 7AF1FF0F 		.word	268431738
 2035 005c 7BF1FF0F 		.word	268431739
 2036 0060 7CF1FF0F 		.word	268431740
 2037 0064 7DF1FF0F 		.word	268431741
 2038 0068 7EF1FF0F 		.word	268431742
 2039 006c 7FF1FF0F 		.word	268431743
 2040              		.cfi_endproc
 2041              	.LFE44:
 2042              		.size	CyGetUniqueId, .-CyGetUniqueId
 2043              		.global	CySysClkPumpConfig
 2044              		.global	cyImoFreqMhz2Reg
 2045              		.global	CySysTickInitVar
 2046              		.global	cydelay32kMs
 2047              		.global	cydelayFreqMhz
 2048              		.global	cydelayFreqKhz
 2049              		.global	cydelayFreqHz
 2050              		.section	.rodata
 2051              		.align	2
 2052              		.set	.LANCHOR1,. + 0
 2053              		.type	cyImoFreqMhz2Reg, %object
 2054              		.size	cyImoFreqMhz2Reg, 46
 2055              	cyImoFreqMhz2Reg:
 2056 0000 03       		.byte	3
 2057 0001 04       		.byte	4
 2058 0002 05       		.byte	5
 2059 0003 06       		.byte	6
 2060 0004 07       		.byte	7
 2061 0005 08       		.byte	8
 2062 0006 09       		.byte	9
 2063 0007 0A       		.byte	10
 2064 0008 0B       		.byte	11
 2065 0009 0C       		.byte	12
 2066 000a 0E       		.byte	14
 2067 000b 0F       		.byte	15
 2068 000c 10       		.byte	16
 2069 000d 11       		.byte	17
 2070 000e 12       		.byte	18
 2071 000f 13       		.byte	19
 2072 0010 14       		.byte	20
 2073 0011 15       		.byte	21
 2074 0012 16       		.byte	22
 2075 0013 17       		.byte	23
 2076 0014 18       		.byte	24
 2077 0015 19       		.byte	25
 2078 0016 1B       		.byte	27
 2079 0017 1C       		.byte	28
 2080 0018 1D       		.byte	29
 2081 0019 1E       		.byte	30
 2082 001a 1F       		.byte	31
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 95


 2083 001b 20       		.byte	32
 2084 001c 21       		.byte	33
 2085 001d 22       		.byte	34
 2086 001e 23       		.byte	35
 2087 001f 25       		.byte	37
 2088 0020 26       		.byte	38
 2089 0021 27       		.byte	39
 2090 0022 28       		.byte	40
 2091 0023 29       		.byte	41
 2092 0024 2A       		.byte	42
 2093 0025 2B       		.byte	43
 2094 0026 2E       		.byte	46
 2095 0027 2F       		.byte	47
 2096 0028 30       		.byte	48
 2097 0029 31       		.byte	49
 2098 002a 32       		.byte	50
 2099 002b 33       		.byte	51
 2100 002c 34       		.byte	52
 2101 002d 35       		.byte	53
 2102              		.data
 2103              		.align	2
 2104              		.set	.LANCHOR0,. + 0
 2105              		.type	CySysClkPumpConfig, %object
 2106              		.size	CySysClkPumpConfig, 4
 2107              	CySysClkPumpConfig:
 2108 0000 01000000 		.word	1
 2109              		.type	cydelay32kMs, %object
 2110              		.size	cydelay32kMs, 4
 2111              	cydelay32kMs:
 2112 0004 0000E02E 		.word	786432000
 2113              		.type	cydelayFreqKhz, %object
 2114              		.size	cydelayFreqKhz, 4
 2115              	cydelayFreqKhz:
 2116 0008 C05D0000 		.word	24000
 2117              		.type	cydelayFreqMhz, %object
 2118              		.size	cydelayFreqMhz, 1
 2119              	cydelayFreqMhz:
 2120 000c 18       		.byte	24
 2121 000d 000000   		.space	3
 2122              		.type	cydelayFreqHz, %object
 2123              		.size	cydelayFreqHz, 4
 2124              	cydelayFreqHz:
 2125 0010 00366E01 		.word	24000000
 2126              		.bss
 2127              		.align	2
 2128              		.set	.LANCHOR2,. + 0
 2129              		.type	CySysTickCallbacks, %object
 2130              		.size	CySysTickCallbacks, 20
 2131              	CySysTickCallbacks:
 2132 0000 00000000 		.space	20
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2133              		.type	CySysTickInitVar, %object
 2134              		.size	CySysTickInitVar, 4
 2135              	CySysTickInitVar:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 96


 2136 0014 00000000 		.space	4
 2137              		.text
 2138              	.Letext0:
 2139              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2140              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2141              		.section	.debug_info,"",%progbits
 2142              	.Ldebug_info0:
 2143 0000 E10A0000 		.4byte	0xae1
 2144 0004 0400     		.2byte	0x4
 2145 0006 00000000 		.4byte	.Ldebug_abbrev0
 2146 000a 04       		.byte	0x4
 2147 000b 01       		.uleb128 0x1
 2148 000c 6F000000 		.4byte	.LASF103
 2149 0010 0C       		.byte	0xc
 2150 0011 4E060000 		.4byte	.LASF104
 2151 0015 83020000 		.4byte	.LASF105
 2152 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2153 001d 00000000 		.4byte	0
 2154 0021 00000000 		.4byte	.Ldebug_line0
 2155 0025 02       		.uleb128 0x2
 2156 0026 01       		.byte	0x1
 2157 0027 06       		.byte	0x6
 2158 0028 97010000 		.4byte	.LASF0
 2159 002c 02       		.uleb128 0x2
 2160 002d 01       		.byte	0x1
 2161 002e 08       		.byte	0x8
 2162 002f 1A050000 		.4byte	.LASF1
 2163 0033 02       		.uleb128 0x2
 2164 0034 02       		.byte	0x2
 2165 0035 05       		.byte	0x5
 2166 0036 28050000 		.4byte	.LASF2
 2167 003a 02       		.uleb128 0x2
 2168 003b 02       		.byte	0x2
 2169 003c 07       		.byte	0x7
 2170 003d 8A030000 		.4byte	.LASF3
 2171 0041 02       		.uleb128 0x2
 2172 0042 04       		.byte	0x4
 2173 0043 05       		.byte	0x5
 2174 0044 D6010000 		.4byte	.LASF4
 2175 0048 02       		.uleb128 0x2
 2176 0049 04       		.byte	0x4
 2177 004a 07       		.byte	0x7
 2178 004b 12030000 		.4byte	.LASF5
 2179 004f 02       		.uleb128 0x2
 2180 0050 08       		.byte	0x8
 2181 0051 05       		.byte	0x5
 2182 0052 89010000 		.4byte	.LASF6
 2183 0056 02       		.uleb128 0x2
 2184 0057 08       		.byte	0x8
 2185 0058 07       		.byte	0x7
 2186 0059 1D010000 		.4byte	.LASF7
 2187 005d 03       		.uleb128 0x3
 2188 005e 04       		.byte	0x4
 2189 005f 05       		.byte	0x5
 2190 0060 696E7400 		.ascii	"int\000"
 2191 0064 02       		.uleb128 0x2
 2192 0065 04       		.byte	0x4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 97


 2193 0066 07       		.byte	0x7
 2194 0067 F6020000 		.4byte	.LASF8
 2195 006b 04       		.uleb128 0x4
 2196 006c 01020000 		.4byte	.LASF9
 2197 0070 02       		.byte	0x2
 2198 0071 E401     		.2byte	0x1e4
 2199 0073 2C000000 		.4byte	0x2c
 2200 0077 04       		.uleb128 0x4
 2201 0078 17000000 		.4byte	.LASF10
 2202 007c 02       		.byte	0x2
 2203 007d E501     		.2byte	0x1e5
 2204 007f 3A000000 		.4byte	0x3a
 2205 0083 04       		.uleb128 0x4
 2206 0084 41020000 		.4byte	.LASF11
 2207 0088 02       		.byte	0x2
 2208 0089 E601     		.2byte	0x1e6
 2209 008b 48000000 		.4byte	0x48
 2210 008f 02       		.uleb128 0x2
 2211 0090 04       		.byte	0x4
 2212 0091 04       		.byte	0x4
 2213 0092 9D040000 		.4byte	.LASF12
 2214 0096 02       		.uleb128 0x2
 2215 0097 08       		.byte	0x8
 2216 0098 04       		.byte	0x4
 2217 0099 1D020000 		.4byte	.LASF13
 2218 009d 02       		.uleb128 0x2
 2219 009e 01       		.byte	0x1
 2220 009f 08       		.byte	0x8
 2221 00a0 6B050000 		.4byte	.LASF14
 2222 00a4 04       		.uleb128 0x4
 2223 00a5 04050000 		.4byte	.LASF15
 2224 00a9 02       		.byte	0x2
 2225 00aa 8E02     		.2byte	0x28e
 2226 00ac B0000000 		.4byte	0xb0
 2227 00b0 05       		.uleb128 0x5
 2228 00b1 6B000000 		.4byte	0x6b
 2229 00b5 04       		.uleb128 0x4
 2230 00b6 F8030000 		.4byte	.LASF16
 2231 00ba 02       		.byte	0x2
 2232 00bb 9002     		.2byte	0x290
 2233 00bd C1000000 		.4byte	0xc1
 2234 00c1 05       		.uleb128 0x5
 2235 00c2 83000000 		.4byte	0x83
 2236 00c6 04       		.uleb128 0x4
 2237 00c7 70050000 		.4byte	.LASF17
 2238 00cb 02       		.byte	0x2
 2239 00cc A002     		.2byte	0x2a0
 2240 00ce D2000000 		.4byte	0xd2
 2241 00d2 06       		.uleb128 0x6
 2242 00d3 04       		.byte	0x4
 2243 00d4 D8000000 		.4byte	0xd8
 2244 00d8 07       		.uleb128 0x7
 2245 00d9 02       		.uleb128 0x2
 2246 00da 04       		.byte	0x4
 2247 00db 07       		.byte	0x7
 2248 00dc 1A040000 		.4byte	.LASF18
 2249 00e0 08       		.uleb128 0x8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 98


 2250 00e1 C8040000 		.4byte	.LASF19
 2251 00e5 03       		.byte	0x3
 2252 00e6 F5       		.byte	0xf5
 2253 00e7 D2000000 		.4byte	0xd2
 2254 00eb 09       		.uleb128 0x9
 2255 00ec 2C060000 		.4byte	.LASF20
 2256 00f0 01       		.byte	0x1
 2257 00f1 62       		.byte	0x62
 2258 00f2 00000000 		.4byte	.LFB0
 2259 00f6 14000000 		.4byte	.LFE0-.LFB0
 2260 00fa 01       		.uleb128 0x1
 2261 00fb 9C       		.byte	0x9c
 2262 00fc 09       		.uleb128 0x9
 2263 00fd 3F030000 		.4byte	.LASF21
 2264 0101 01       		.byte	0x1
 2265 0102 82       		.byte	0x82
 2266 0103 00000000 		.4byte	.LFB1
 2267 0107 10000000 		.4byte	.LFE1-.LFB1
 2268 010b 01       		.uleb128 0x1
 2269 010c 9C       		.byte	0x9c
 2270 010d 0A       		.uleb128 0xa
 2271 010e 27000000 		.4byte	.LASF24
 2272 0112 01       		.byte	0x1
 2273 0113 1B02     		.2byte	0x21b
 2274 0115 00000000 		.4byte	.LFB2
 2275 0119 20000000 		.4byte	.LFE2-.LFB2
 2276 011d 01       		.uleb128 0x1
 2277 011e 9C       		.byte	0x9c
 2278 011f 66010000 		.4byte	0x166
 2279 0123 0B       		.uleb128 0xb
 2280 0124 50050000 		.4byte	.LASF26
 2281 0128 01       		.byte	0x1
 2282 0129 1B02     		.2byte	0x21b
 2283 012b 83000000 		.4byte	0x83
 2284 012f 00000000 		.4byte	.LLST0
 2285 0133 0C       		.uleb128 0xc
 2286 0134 B4010000 		.4byte	.LASF22
 2287 0138 01       		.byte	0x1
 2288 0139 1D02     		.2byte	0x21d
 2289 013b 6B000000 		.4byte	0x6b
 2290 013f 2C000000 		.4byte	.LLST1
 2291 0143 0C       		.uleb128 0xc
 2292 0144 7A060000 		.4byte	.LASF23
 2293 0148 01       		.byte	0x1
 2294 0149 1E02     		.2byte	0x21e
 2295 014b 83000000 		.4byte	0x83
 2296 014f 3F000000 		.4byte	.LLST2
 2297 0153 0D       		.uleb128 0xd
 2298 0154 08000000 		.4byte	.LVL1
 2299 0158 C30A0000 		.4byte	0xac3
 2300 015c 0D       		.uleb128 0xd
 2301 015d 1A000000 		.4byte	.LVL5
 2302 0161 CE0A0000 		.4byte	0xace
 2303 0165 00       		.byte	0
 2304 0166 0A       		.uleb128 0xa
 2305 0167 E3030000 		.4byte	.LASF25
 2306 016b 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 99


 2307 016c 6302     		.2byte	0x263
 2308 016e 00000000 		.4byte	.LFB3
 2309 0172 38000000 		.4byte	.LFE3-.LFB3
 2310 0176 01       		.uleb128 0x1
 2311 0177 9C       		.byte	0x9c
 2312 0178 8B010000 		.4byte	0x18b
 2313 017c 0E       		.uleb128 0xe
 2314 017d 16020000 		.4byte	.LASF27
 2315 0181 01       		.byte	0x1
 2316 0182 6302     		.2byte	0x263
 2317 0184 83000000 		.4byte	0x83
 2318 0188 01       		.uleb128 0x1
 2319 0189 50       		.byte	0x50
 2320 018a 00       		.byte	0
 2321 018b 0F       		.uleb128 0xf
 2322 018c 4D020000 		.4byte	.LASF33
 2323 0190 01       		.byte	0x1
 2324 0191 8802     		.2byte	0x288
 2325 0193 83000000 		.4byte	0x83
 2326 0197 00000000 		.4byte	.LFB4
 2327 019b 1C000000 		.4byte	.LFE4-.LFB4
 2328 019f 01       		.uleb128 0x1
 2329 01a0 9C       		.byte	0x9c
 2330 01a1 D8010000 		.4byte	0x1d8
 2331 01a5 0C       		.uleb128 0xc
 2332 01a6 B4010000 		.4byte	.LASF22
 2333 01aa 01       		.byte	0x1
 2334 01ab 8A02     		.2byte	0x28a
 2335 01ad 6B000000 		.4byte	0x6b
 2336 01b1 5D000000 		.4byte	.LLST3
 2337 01b5 0C       		.uleb128 0xc
 2338 01b6 45040000 		.4byte	.LASF28
 2339 01ba 01       		.byte	0x1
 2340 01bb 8B02     		.2byte	0x28b
 2341 01bd 83000000 		.4byte	0x83
 2342 01c1 70000000 		.4byte	.LLST4
 2343 01c5 0D       		.uleb128 0xd
 2344 01c6 06000000 		.4byte	.LVL8
 2345 01ca C30A0000 		.4byte	0xac3
 2346 01ce 0D       		.uleb128 0xd
 2347 01cf 12000000 		.4byte	.LVL10
 2348 01d3 CE0A0000 		.4byte	0xace
 2349 01d7 00       		.byte	0
 2350 01d8 0A       		.uleb128 0xa
 2351 01d9 8D050000 		.4byte	.LASF29
 2352 01dd 01       		.byte	0x1
 2353 01de C502     		.2byte	0x2c5
 2354 01e0 00000000 		.4byte	.LFB5
 2355 01e4 30000000 		.4byte	.LFE5-.LFB5
 2356 01e8 01       		.uleb128 0x1
 2357 01e9 9C       		.byte	0x9c
 2358 01ea 21020000 		.4byte	0x221
 2359 01ee 0B       		.uleb128 0xb
 2360 01ef 24060000 		.4byte	.LASF30
 2361 01f3 01       		.byte	0x1
 2362 01f4 C502     		.2byte	0x2c5
 2363 01f6 83000000 		.4byte	0x83
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 100


 2364 01fa 8E000000 		.4byte	.LLST5
 2365 01fe 0C       		.uleb128 0xc
 2366 01ff B4010000 		.4byte	.LASF22
 2367 0203 01       		.byte	0x1
 2368 0204 C702     		.2byte	0x2c7
 2369 0206 6B000000 		.4byte	0x6b
 2370 020a BA000000 		.4byte	.LLST6
 2371 020e 0D       		.uleb128 0xd
 2372 020f 08000000 		.4byte	.LVL13
 2373 0213 C30A0000 		.4byte	0xac3
 2374 0217 0D       		.uleb128 0xd
 2375 0218 24000000 		.4byte	.LVL15
 2376 021c CE0A0000 		.4byte	0xace
 2377 0220 00       		.byte	0
 2378 0221 10       		.uleb128 0x10
 2379 0222 F7050000 		.4byte	.LASF31
 2380 0226 01       		.byte	0x1
 2381 0227 F808     		.2byte	0x8f8
 2382 0229 00000000 		.4byte	.LFB8
 2383 022d 20000000 		.4byte	.LFE8-.LFB8
 2384 0231 01       		.uleb128 0x1
 2385 0232 9C       		.byte	0x9c
 2386 0233 11       		.uleb128 0x11
 2387 0234 24030000 		.4byte	.LASF79
 2388 0238 01       		.byte	0x1
 2389 0239 0A09     		.2byte	0x90a
 2390 023b 83000000 		.4byte	0x83
 2391 023f 00000000 		.4byte	.LFB9
 2392 0243 10000000 		.4byte	.LFE9-.LFB9
 2393 0247 01       		.uleb128 0x1
 2394 0248 9C       		.byte	0x9c
 2395 0249 10       		.uleb128 0x10
 2396 024a 2A020000 		.4byte	.LASF32
 2397 024e 01       		.byte	0x1
 2398 024f 1A09     		.2byte	0x91a
 2399 0251 00000000 		.4byte	.LFB10
 2400 0255 0C000000 		.4byte	.LFE10-.LFB10
 2401 0259 01       		.uleb128 0x1
 2402 025a 9C       		.byte	0x9c
 2403 025b 0F       		.uleb128 0xf
 2404 025c 76030000 		.4byte	.LASF34
 2405 0260 01       		.byte	0x1
 2406 0261 3409     		.2byte	0x934
 2407 0263 83000000 		.4byte	0x83
 2408 0267 00000000 		.4byte	.LFB11
 2409 026b 14000000 		.4byte	.LFE11-.LFB11
 2410 026f 01       		.uleb128 0x1
 2411 0270 9C       		.byte	0x9c
 2412 0271 94020000 		.4byte	0x294
 2413 0275 0B       		.uleb128 0xb
 2414 0276 64050000 		.4byte	.LASF35
 2415 027a 01       		.byte	0x1
 2416 027b 3409     		.2byte	0x934
 2417 027d 83000000 		.4byte	0x83
 2418 0281 CD000000 		.4byte	.LLST7
 2419 0285 12       		.uleb128 0x12
 2420 0286 0D040000 		.4byte	.LASF36
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 101


 2421 028a 01       		.byte	0x1
 2422 028b 3609     		.2byte	0x936
 2423 028d 83000000 		.4byte	0x83
 2424 0291 01       		.uleb128 0x1
 2425 0292 50       		.byte	0x50
 2426 0293 00       		.byte	0
 2427 0294 0F       		.uleb128 0xf
 2428 0295 61000000 		.4byte	.LASF37
 2429 0299 01       		.byte	0x1
 2430 029a 4B09     		.2byte	0x94b
 2431 029c 83000000 		.4byte	0x83
 2432 02a0 00000000 		.4byte	.LFB12
 2433 02a4 10000000 		.4byte	.LFE12-.LFB12
 2434 02a8 01       		.uleb128 0x1
 2435 02a9 9C       		.byte	0x9c
 2436 02aa BD020000 		.4byte	0x2bd
 2437 02ae 12       		.uleb128 0x12
 2438 02af 1E000000 		.4byte	.LASF38
 2439 02b3 01       		.byte	0x1
 2440 02b4 4D09     		.2byte	0x94d
 2441 02b6 83000000 		.4byte	0x83
 2442 02ba 01       		.uleb128 0x1
 2443 02bb 50       		.byte	0x50
 2444 02bc 00       		.byte	0
 2445 02bd 0A       		.uleb128 0xa
 2446 02be 45010000 		.4byte	.LASF39
 2447 02c2 01       		.byte	0x1
 2448 02c3 6209     		.2byte	0x962
 2449 02c5 00000000 		.4byte	.LFB13
 2450 02c9 0C000000 		.4byte	.LFE13-.LFB13
 2451 02cd 01       		.uleb128 0x1
 2452 02ce 9C       		.byte	0x9c
 2453 02cf E2020000 		.4byte	0x2e2
 2454 02d3 0E       		.uleb128 0xe
 2455 02d4 48020000 		.4byte	.LASF40
 2456 02d8 01       		.byte	0x1
 2457 02d9 6209     		.2byte	0x962
 2458 02db 83000000 		.4byte	0x83
 2459 02df 01       		.uleb128 0x1
 2460 02e0 50       		.byte	0x50
 2461 02e1 00       		.byte	0
 2462 02e2 0A       		.uleb128 0xa
 2463 02e3 32050000 		.4byte	.LASF41
 2464 02e7 01       		.byte	0x1
 2465 02e8 190A     		.2byte	0xa19
 2466 02ea 00000000 		.4byte	.LFB20
 2467 02ee 14000000 		.4byte	.LFE20-.LFB20
 2468 02f2 01       		.uleb128 0x1
 2469 02f3 9C       		.byte	0x9c
 2470 02f4 09030000 		.4byte	0x309
 2471 02f8 0B       		.uleb128 0xb
 2472 02f9 AC030000 		.4byte	.LASF42
 2473 02fd 01       		.byte	0x1
 2474 02fe 190A     		.2byte	0xa19
 2475 0300 6B000000 		.4byte	0x6b
 2476 0304 EB000000 		.4byte	.LLST8
 2477 0308 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 102


 2478 0309 0F       		.uleb128 0xf
 2479 030a 7B010000 		.4byte	.LASF43
 2480 030e 01       		.byte	0x1
 2481 030f 2B0A     		.2byte	0xa2b
 2482 0311 6B000000 		.4byte	0x6b
 2483 0315 00000000 		.4byte	.LFB21
 2484 0319 18000000 		.4byte	.LFE21-.LFB21
 2485 031d 01       		.uleb128 0x1
 2486 031e 9C       		.byte	0x9c
 2487 031f 34030000 		.4byte	0x334
 2488 0323 0B       		.uleb128 0xb
 2489 0324 AC030000 		.4byte	.LASF42
 2490 0328 01       		.byte	0x1
 2491 0329 2B0A     		.2byte	0xa2b
 2492 032b 6B000000 		.4byte	0x6b
 2493 032f 0C010000 		.4byte	.LLST9
 2494 0333 00       		.byte	0
 2495 0334 0A       		.uleb128 0xa
 2496 0335 DF010000 		.4byte	.LASF44
 2497 0339 01       		.byte	0x1
 2498 033a 3B0A     		.2byte	0xa3b
 2499 033c 00000000 		.4byte	.LFB22
 2500 0340 14000000 		.4byte	.LFE22-.LFB22
 2501 0344 01       		.uleb128 0x1
 2502 0345 9C       		.byte	0x9c
 2503 0346 5B030000 		.4byte	0x35b
 2504 034a 0B       		.uleb128 0xb
 2505 034b AC030000 		.4byte	.LASF42
 2506 034f 01       		.byte	0x1
 2507 0350 3B0A     		.2byte	0xa3b
 2508 0352 6B000000 		.4byte	0x6b
 2509 0356 2D010000 		.4byte	.LLST10
 2510 035a 00       		.byte	0
 2511 035b 0A       		.uleb128 0xa
 2512 035c 66030000 		.4byte	.LASF45
 2513 0360 01       		.byte	0x1
 2514 0361 490A     		.2byte	0xa49
 2515 0363 00000000 		.4byte	.LFB23
 2516 0367 14000000 		.4byte	.LFE23-.LFB23
 2517 036b 01       		.uleb128 0x1
 2518 036c 9C       		.byte	0x9c
 2519 036d 82030000 		.4byte	0x382
 2520 0371 0B       		.uleb128 0xb
 2521 0372 AC030000 		.4byte	.LASF42
 2522 0376 01       		.byte	0x1
 2523 0377 490A     		.2byte	0xa49
 2524 0379 6B000000 		.4byte	0x6b
 2525 037d 4E010000 		.4byte	.LLST11
 2526 0381 00       		.byte	0
 2527 0382 0A       		.uleb128 0xa
 2528 0383 23040000 		.4byte	.LASF46
 2529 0387 01       		.byte	0x1
 2530 0388 580A     		.2byte	0xa58
 2531 038a 00000000 		.4byte	.LFB24
 2532 038e 14000000 		.4byte	.LFE24-.LFB24
 2533 0392 01       		.uleb128 0x1
 2534 0393 9C       		.byte	0x9c
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 103


 2535 0394 A9030000 		.4byte	0x3a9
 2536 0398 0B       		.uleb128 0xb
 2537 0399 AC030000 		.4byte	.LASF42
 2538 039d 01       		.byte	0x1
 2539 039e 580A     		.2byte	0xa58
 2540 03a0 6B000000 		.4byte	0x6b
 2541 03a4 6F010000 		.4byte	.LLST12
 2542 03a8 00       		.byte	0
 2543 03a9 0A       		.uleb128 0xa
 2544 03aa 13050000 		.4byte	.LASF47
 2545 03ae 01       		.byte	0x1
 2546 03af 670A     		.2byte	0xa67
 2547 03b1 00000000 		.4byte	.LFB25
 2548 03b5 04000000 		.4byte	.LFE25-.LFB25
 2549 03b9 01       		.uleb128 0x1
 2550 03ba 9C       		.byte	0x9c
 2551 03bb CE030000 		.4byte	0x3ce
 2552 03bf 0E       		.uleb128 0xe
 2553 03c0 64050000 		.4byte	.LASF35
 2554 03c4 01       		.byte	0x1
 2555 03c5 670A     		.2byte	0xa67
 2556 03c7 6B000000 		.4byte	0x6b
 2557 03cb 01       		.uleb128 0x1
 2558 03cc 50       		.byte	0x50
 2559 03cd 00       		.byte	0
 2560 03ce 0F       		.uleb128 0xf
 2561 03cf D1030000 		.4byte	.LASF48
 2562 03d3 01       		.byte	0x1
 2563 03d4 7B09     		.2byte	0x97b
 2564 03d6 C6000000 		.4byte	0xc6
 2565 03da 00000000 		.4byte	.LFB14
 2566 03de 20000000 		.4byte	.LFE14-.LFB14
 2567 03e2 01       		.uleb128 0x1
 2568 03e3 9C       		.byte	0x9c
 2569 03e4 36040000 		.4byte	0x436
 2570 03e8 0B       		.uleb128 0xb
 2571 03e9 AC030000 		.4byte	.LASF42
 2572 03ed 01       		.byte	0x1
 2573 03ee 7B09     		.2byte	0x97b
 2574 03f0 6B000000 		.4byte	0x6b
 2575 03f4 90010000 		.4byte	.LLST13
 2576 03f8 0B       		.uleb128 0xb
 2577 03f9 35040000 		.4byte	.LASF49
 2578 03fd 01       		.byte	0x1
 2579 03fe 7B09     		.2byte	0x97b
 2580 0400 C6000000 		.4byte	0xc6
 2581 0404 B1010000 		.4byte	.LLST14
 2582 0408 12       		.uleb128 0x12
 2583 0409 53000000 		.4byte	.LASF50
 2584 040d 01       		.byte	0x1
 2585 040e 7D09     		.2byte	0x97d
 2586 0410 C6000000 		.4byte	0xc6
 2587 0414 01       		.uleb128 0x1
 2588 0415 50       		.byte	0x50
 2589 0416 13       		.uleb128 0x13
 2590 0417 00000000 		.4byte	.LASF51
 2591 041b 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 104


 2592 041c 7E09     		.2byte	0x97e
 2593 041e 36040000 		.4byte	0x436
 2594 0422 00000020 		.4byte	0x20000000
 2595 0426 14       		.uleb128 0x14
 2596 0427 10000000 		.4byte	.LVL36
 2597 042b A9030000 		.4byte	0x3a9
 2598 042f 15       		.uleb128 0x15
 2599 0430 01       		.uleb128 0x1
 2600 0431 50       		.byte	0x50
 2601 0432 01       		.uleb128 0x1
 2602 0433 30       		.byte	0x30
 2603 0434 00       		.byte	0
 2604 0435 00       		.byte	0
 2605 0436 06       		.uleb128 0x6
 2606 0437 04       		.byte	0x4
 2607 0438 C6000000 		.4byte	0xc6
 2608 043c 0F       		.uleb128 0xf
 2609 043d 3E050000 		.4byte	.LASF52
 2610 0441 01       		.byte	0x1
 2611 0442 9D09     		.2byte	0x99d
 2612 0444 C6000000 		.4byte	0xc6
 2613 0448 00000000 		.4byte	.LFB15
 2614 044c 1C000000 		.4byte	.LFE15-.LFB15
 2615 0450 01       		.uleb128 0x1
 2616 0451 9C       		.byte	0x9c
 2617 0452 86040000 		.4byte	0x486
 2618 0456 0B       		.uleb128 0xb
 2619 0457 AC030000 		.4byte	.LASF42
 2620 045b 01       		.byte	0x1
 2621 045c 9D09     		.2byte	0x99d
 2622 045e 6B000000 		.4byte	0x6b
 2623 0462 DD010000 		.4byte	.LLST15
 2624 0466 13       		.uleb128 0x13
 2625 0467 00000000 		.4byte	.LASF51
 2626 046b 01       		.byte	0x1
 2627 046c 9F09     		.2byte	0x99f
 2628 046e 36040000 		.4byte	0x436
 2629 0472 00000020 		.4byte	0x20000000
 2630 0476 14       		.uleb128 0x14
 2631 0477 0E000000 		.4byte	.LVL42
 2632 047b A9030000 		.4byte	0x3a9
 2633 047f 15       		.uleb128 0x15
 2634 0480 01       		.uleb128 0x1
 2635 0481 50       		.byte	0x50
 2636 0482 01       		.uleb128 0x1
 2637 0483 30       		.byte	0x30
 2638 0484 00       		.byte	0
 2639 0485 00       		.byte	0
 2640 0486 0F       		.uleb128 0xf
 2641 0487 9D030000 		.4byte	.LASF53
 2642 048b 01       		.byte	0x1
 2643 048c B309     		.2byte	0x9b3
 2644 048e C6000000 		.4byte	0xc6
 2645 0492 00000000 		.4byte	.LFB16
 2646 0496 22000000 		.4byte	.LFE16-.LFB16
 2647 049a 01       		.uleb128 0x1
 2648 049b 9C       		.byte	0x9c
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 105


 2649 049c EE040000 		.4byte	0x4ee
 2650 04a0 0B       		.uleb128 0xb
 2651 04a1 AC030000 		.4byte	.LASF42
 2652 04a5 01       		.byte	0x1
 2653 04a6 B309     		.2byte	0x9b3
 2654 04a8 6B000000 		.4byte	0x6b
 2655 04ac FE010000 		.4byte	.LLST16
 2656 04b0 0B       		.uleb128 0xb
 2657 04b1 35040000 		.4byte	.LASF49
 2658 04b5 01       		.byte	0x1
 2659 04b6 B309     		.2byte	0x9b3
 2660 04b8 C6000000 		.4byte	0xc6
 2661 04bc 1F020000 		.4byte	.LLST17
 2662 04c0 12       		.uleb128 0x12
 2663 04c1 53000000 		.4byte	.LASF50
 2664 04c5 01       		.byte	0x1
 2665 04c6 B509     		.2byte	0x9b5
 2666 04c8 C6000000 		.4byte	0xc6
 2667 04cc 01       		.uleb128 0x1
 2668 04cd 50       		.byte	0x50
 2669 04ce 13       		.uleb128 0x13
 2670 04cf 00000000 		.4byte	.LASF51
 2671 04d3 01       		.byte	0x1
 2672 04d4 B609     		.2byte	0x9b6
 2673 04d6 36040000 		.4byte	0x436
 2674 04da 00000020 		.4byte	0x20000000
 2675 04de 14       		.uleb128 0x14
 2676 04df 10000000 		.4byte	.LVL46
 2677 04e3 A9030000 		.4byte	0x3a9
 2678 04e7 15       		.uleb128 0x15
 2679 04e8 01       		.uleb128 0x1
 2680 04e9 50       		.byte	0x50
 2681 04ea 01       		.uleb128 0x1
 2682 04eb 30       		.byte	0x30
 2683 04ec 00       		.byte	0
 2684 04ed 00       		.byte	0
 2685 04ee 0F       		.uleb128 0xf
 2686 04ef DA040000 		.4byte	.LASF54
 2687 04f3 01       		.byte	0x1
 2688 04f4 CF09     		.2byte	0x9cf
 2689 04f6 C6000000 		.4byte	0xc6
 2690 04fa 00000000 		.4byte	.LFB17
 2691 04fe 1E000000 		.4byte	.LFE17-.LFB17
 2692 0502 01       		.uleb128 0x1
 2693 0503 9C       		.byte	0x9c
 2694 0504 38050000 		.4byte	0x538
 2695 0508 0B       		.uleb128 0xb
 2696 0509 AC030000 		.4byte	.LASF42
 2697 050d 01       		.byte	0x1
 2698 050e CF09     		.2byte	0x9cf
 2699 0510 6B000000 		.4byte	0x6b
 2700 0514 4B020000 		.4byte	.LLST18
 2701 0518 13       		.uleb128 0x13
 2702 0519 00000000 		.4byte	.LASF51
 2703 051d 01       		.byte	0x1
 2704 051e D109     		.2byte	0x9d1
 2705 0520 36040000 		.4byte	0x436
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 106


 2706 0524 00000020 		.4byte	0x20000000
 2707 0528 14       		.uleb128 0x14
 2708 0529 0E000000 		.4byte	.LVL52
 2709 052d A9030000 		.4byte	0x3a9
 2710 0531 15       		.uleb128 0x15
 2711 0532 01       		.uleb128 0x1
 2712 0533 50       		.byte	0x50
 2713 0534 01       		.uleb128 0x1
 2714 0535 30       		.byte	0x30
 2715 0536 00       		.byte	0
 2716 0537 00       		.byte	0
 2717 0538 0A       		.uleb128 0xa
 2718 0539 8C040000 		.4byte	.LASF55
 2719 053d 01       		.byte	0x1
 2720 053e E209     		.2byte	0x9e2
 2721 0540 00000000 		.4byte	.LFB18
 2722 0544 4C000000 		.4byte	.LFE18-.LFB18
 2723 0548 01       		.uleb128 0x1
 2724 0549 9C       		.byte	0x9c
 2725 054a D7050000 		.4byte	0x5d7
 2726 054e 0B       		.uleb128 0xb
 2727 054f AC030000 		.4byte	.LASF42
 2728 0553 01       		.byte	0x1
 2729 0554 E209     		.2byte	0x9e2
 2730 0556 6B000000 		.4byte	0x6b
 2731 055a 6C020000 		.4byte	.LLST19
 2732 055e 0B       		.uleb128 0xb
 2733 055f B3030000 		.4byte	.LASF56
 2734 0563 01       		.byte	0x1
 2735 0564 E209     		.2byte	0x9e2
 2736 0566 6B000000 		.4byte	0x6b
 2737 056a 8D020000 		.4byte	.LLST20
 2738 056e 0C       		.uleb128 0xc
 2739 056f B4010000 		.4byte	.LASF22
 2740 0573 01       		.byte	0x1
 2741 0574 E409     		.2byte	0x9e4
 2742 0576 6B000000 		.4byte	0x6b
 2743 057a AE020000 		.4byte	.LLST21
 2744 057e 0C       		.uleb128 0xc
 2745 057f 24020000 		.4byte	.LASF57
 2746 0583 01       		.byte	0x1
 2747 0584 E509     		.2byte	0x9e5
 2748 0586 83000000 		.4byte	0x83
 2749 058a C1020000 		.4byte	.LLST22
 2750 058e 0C       		.uleb128 0xc
 2751 058f CC020000 		.4byte	.LASF58
 2752 0593 01       		.byte	0x1
 2753 0594 E609     		.2byte	0x9e6
 2754 0596 83000000 		.4byte	0x83
 2755 059a D4020000 		.4byte	.LLST23
 2756 059e 16       		.uleb128 0x16
 2757 059f 10000000 		.4byte	.LVL55
 2758 05a3 A9030000 		.4byte	0x3a9
 2759 05a7 B1050000 		.4byte	0x5b1
 2760 05ab 15       		.uleb128 0x15
 2761 05ac 01       		.uleb128 0x1
 2762 05ad 50       		.byte	0x50
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 107


 2763 05ae 01       		.uleb128 0x1
 2764 05af 30       		.byte	0x30
 2765 05b0 00       		.byte	0
 2766 05b1 16       		.uleb128 0x16
 2767 05b2 1A000000 		.4byte	.LVL56
 2768 05b6 A9030000 		.4byte	0x3a9
 2769 05ba C4050000 		.4byte	0x5c4
 2770 05be 15       		.uleb128 0x15
 2771 05bf 01       		.uleb128 0x1
 2772 05c0 50       		.byte	0x50
 2773 05c1 01       		.uleb128 0x1
 2774 05c2 30       		.byte	0x30
 2775 05c3 00       		.byte	0
 2776 05c4 0D       		.uleb128 0xd
 2777 05c5 26000000 		.4byte	.LVL58
 2778 05c9 C30A0000 		.4byte	0xac3
 2779 05cd 0D       		.uleb128 0xd
 2780 05ce 46000000 		.4byte	.LVL64
 2781 05d2 CE0A0000 		.4byte	0xace
 2782 05d6 00       		.byte	0
 2783 05d7 0F       		.uleb128 0xf
 2784 05d8 65020000 		.4byte	.LASF59
 2785 05dc 01       		.byte	0x1
 2786 05dd 040A     		.2byte	0xa04
 2787 05df 6B000000 		.4byte	0x6b
 2788 05e3 00000000 		.4byte	.LFB19
 2789 05e7 2C000000 		.4byte	.LFE19-.LFB19
 2790 05eb 01       		.uleb128 0x1
 2791 05ec 9C       		.byte	0x9c
 2792 05ed 21060000 		.4byte	0x621
 2793 05f1 0B       		.uleb128 0xb
 2794 05f2 AC030000 		.4byte	.LASF42
 2795 05f6 01       		.byte	0x1
 2796 05f7 040A     		.2byte	0xa04
 2797 05f9 6B000000 		.4byte	0x6b
 2798 05fd 08030000 		.4byte	.LLST24
 2799 0601 0C       		.uleb128 0xc
 2800 0602 B3030000 		.4byte	.LASF56
 2801 0606 01       		.byte	0x1
 2802 0607 060A     		.2byte	0xa06
 2803 0609 6B000000 		.4byte	0x6b
 2804 060d 29030000 		.4byte	.LLST25
 2805 0611 14       		.uleb128 0x14
 2806 0612 0E000000 		.4byte	.LVL68
 2807 0616 A9030000 		.4byte	0x3a9
 2808 061a 15       		.uleb128 0x15
 2809 061b 01       		.uleb128 0x1
 2810 061c 50       		.byte	0x50
 2811 061d 01       		.uleb128 0x1
 2812 061e 30       		.byte	0x30
 2813 061f 00       		.byte	0
 2814 0620 00       		.byte	0
 2815 0621 10       		.uleb128 0x10
 2816 0622 52010000 		.4byte	.LASF60
 2817 0626 01       		.byte	0x1
 2818 0627 7F0A     		.2byte	0xa7f
 2819 0629 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 108


 2820 062d 18000000 		.4byte	.LFE26-.LFB26
 2821 0631 01       		.uleb128 0x1
 2822 0632 9C       		.byte	0x9c
 2823 0633 0A       		.uleb128 0xa
 2824 0634 D5050000 		.4byte	.LASF61
 2825 0638 01       		.byte	0x1
 2826 0639 930A     		.2byte	0xa93
 2827 063b 00000000 		.4byte	.LFB27
 2828 063f 30000000 		.4byte	.LFE27-.LFB27
 2829 0643 01       		.uleb128 0x1
 2830 0644 9C       		.byte	0x9c
 2831 0645 6C060000 		.4byte	0x66c
 2832 0649 0B       		.uleb128 0xb
 2833 064a E9040000 		.4byte	.LASF62
 2834 064e 01       		.byte	0x1
 2835 064f 930A     		.2byte	0xa93
 2836 0651 83000000 		.4byte	0x83
 2837 0655 3C030000 		.4byte	.LLST26
 2838 0659 0D       		.uleb128 0xd
 2839 065a 0E000000 		.4byte	.LVL73
 2840 065e D90A0000 		.4byte	0xad9
 2841 0662 0D       		.uleb128 0xd
 2842 0663 26000000 		.4byte	.LVL75
 2843 0667 D90A0000 		.4byte	0xad9
 2844 066b 00       		.byte	0
 2845 066c 0A       		.uleb128 0xa
 2846 066d 5A050000 		.4byte	.LASF63
 2847 0671 01       		.byte	0x1
 2848 0672 AA0A     		.2byte	0xaaa
 2849 0674 00000000 		.4byte	.LFB28
 2850 0678 14000000 		.4byte	.LFE28-.LFB28
 2851 067c 01       		.uleb128 0x1
 2852 067d 9C       		.byte	0x9c
 2853 067e 9C060000 		.4byte	0x69c
 2854 0682 0B       		.uleb128 0xb
 2855 0683 6D060000 		.4byte	.LASF64
 2856 0687 01       		.byte	0x1
 2857 0688 AA0A     		.2byte	0xaaa
 2858 068a 77000000 		.4byte	0x77
 2859 068e 5A030000 		.4byte	.LLST27
 2860 0692 0D       		.uleb128 0xd
 2861 0693 0C000000 		.4byte	.LVL79
 2862 0697 D90A0000 		.4byte	0xad9
 2863 069b 00       		.byte	0
 2864 069c 0A       		.uleb128 0xa
 2865 069d BC030000 		.4byte	.LASF65
 2866 06a1 01       		.byte	0x1
 2867 06a2 FF02     		.2byte	0x2ff
 2868 06a4 00000000 		.4byte	.LFB6
 2869 06a8 64010000 		.4byte	.LFE6-.LFB6
 2870 06ac 01       		.uleb128 0x1
 2871 06ad 9C       		.byte	0x9c
 2872 06ae 8D070000 		.4byte	0x78d
 2873 06b2 0B       		.uleb128 0xb
 2874 06b3 A3010000 		.4byte	.LASF66
 2875 06b7 01       		.byte	0x1
 2876 06b8 FF02     		.2byte	0x2ff
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 109


 2877 06ba 83000000 		.4byte	0x83
 2878 06be 7B030000 		.4byte	.LLST28
 2879 06c2 0C       		.uleb128 0xc
 2880 06c3 0F000000 		.4byte	.LASF67
 2881 06c7 01       		.byte	0x1
 2882 06c8 0503     		.2byte	0x305
 2883 06ca 6B000000 		.4byte	0x6b
 2884 06ce D0030000 		.4byte	.LLST29
 2885 06d2 0C       		.uleb128 0xc
 2886 06d3 3D040000 		.4byte	.LASF68
 2887 06d7 01       		.byte	0x1
 2888 06d8 0603     		.2byte	0x306
 2889 06da 6B000000 		.4byte	0x6b
 2890 06de 0F040000 		.4byte	.LLST30
 2891 06e2 0C       		.uleb128 0xc
 2892 06e3 3D060000 		.4byte	.LASF69
 2893 06e7 01       		.byte	0x1
 2894 06e8 0703     		.2byte	0x307
 2895 06ea 6B000000 		.4byte	0x6b
 2896 06ee 4E040000 		.4byte	.LLST31
 2897 06f2 0C       		.uleb128 0xc
 2898 06f3 08010000 		.4byte	.LASF70
 2899 06f7 01       		.byte	0x1
 2900 06f8 0803     		.2byte	0x308
 2901 06fa 6B000000 		.4byte	0x6b
 2902 06fe 61040000 		.4byte	.LLST32
 2903 0702 0C       		.uleb128 0xc
 2904 0703 B4010000 		.4byte	.LASF22
 2905 0707 01       		.byte	0x1
 2906 0708 1303     		.2byte	0x313
 2907 070a 6B000000 		.4byte	0x6b
 2908 070e 80040000 		.4byte	.LLST33
 2909 0712 0D       		.uleb128 0xd
 2910 0713 10000000 		.4byte	.LVL81
 2911 0717 C30A0000 		.4byte	0xac3
 2912 071b 16       		.uleb128 0x16
 2913 071c B0000000 		.4byte	.LVL99
 2914 0720 D90A0000 		.4byte	0xad9
 2915 0724 2E070000 		.4byte	0x72e
 2916 0728 15       		.uleb128 0x15
 2917 0729 01       		.uleb128 0x1
 2918 072a 50       		.byte	0x50
 2919 072b 01       		.uleb128 0x1
 2920 072c 35       		.byte	0x35
 2921 072d 00       		.byte	0
 2922 072e 16       		.uleb128 0x16
 2923 072f CE000000 		.4byte	.LVL102
 2924 0733 D90A0000 		.4byte	0xad9
 2925 0737 41070000 		.4byte	0x741
 2926 073b 15       		.uleb128 0x15
 2927 073c 01       		.uleb128 0x1
 2928 073d 50       		.byte	0x50
 2929 073e 01       		.uleb128 0x1
 2930 073f 35       		.byte	0x35
 2931 0740 00       		.byte	0
 2932 0741 16       		.uleb128 0x16
 2933 0742 EE000000 		.4byte	.LVL104
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 110


 2934 0746 6C060000 		.4byte	0x66c
 2935 074a 54070000 		.4byte	0x754
 2936 074e 15       		.uleb128 0x15
 2937 074f 01       		.uleb128 0x1
 2938 0750 50       		.byte	0x50
 2939 0751 01       		.uleb128 0x1
 2940 0752 35       		.byte	0x35
 2941 0753 00       		.byte	0
 2942 0754 16       		.uleb128 0x16
 2943 0755 00010000 		.4byte	.LVL105
 2944 0759 D90A0000 		.4byte	0xad9
 2945 075d 67070000 		.4byte	0x767
 2946 0761 15       		.uleb128 0x15
 2947 0762 01       		.uleb128 0x1
 2948 0763 50       		.byte	0x50
 2949 0764 01       		.uleb128 0x1
 2950 0765 35       		.byte	0x35
 2951 0766 00       		.byte	0
 2952 0767 16       		.uleb128 0x16
 2953 0768 08010000 		.4byte	.LVL107
 2954 076c A9030000 		.4byte	0x3a9
 2955 0770 7A070000 		.4byte	0x77a
 2956 0774 15       		.uleb128 0x15
 2957 0775 01       		.uleb128 0x1
 2958 0776 50       		.byte	0x50
 2959 0777 01       		.uleb128 0x1
 2960 0778 30       		.byte	0x30
 2961 0779 00       		.byte	0
 2962 077a 14       		.uleb128 0x14
 2963 077b 0E010000 		.4byte	.LVL108
 2964 077f CE0A0000 		.4byte	0xace
 2965 0783 15       		.uleb128 0x15
 2966 0784 01       		.uleb128 0x1
 2967 0785 50       		.byte	0x50
 2968 0786 04       		.uleb128 0x4
 2969 0787 91       		.byte	0x91
 2970 0788 5C       		.sleb128 -36
 2971 0789 94       		.byte	0x94
 2972 078a 01       		.byte	0x1
 2973 078b 00       		.byte	0
 2974 078c 00       		.byte	0
 2975 078d 0A       		.uleb128 0xa
 2976 078e B9040000 		.4byte	.LASF71
 2977 0792 01       		.byte	0x1
 2978 0793 DA08     		.2byte	0x8da
 2979 0795 00000000 		.4byte	.LFB7
 2980 0799 44000000 		.4byte	.LFE7-.LFB7
 2981 079d 01       		.uleb128 0x1
 2982 079e 9C       		.byte	0x9c
 2983 079f D2070000 		.4byte	0x7d2
 2984 07a3 0B       		.uleb128 0xb
 2985 07a4 09050000 		.4byte	.LASF72
 2986 07a8 01       		.byte	0x1
 2987 07a9 DA08     		.2byte	0x8da
 2988 07ab 83000000 		.4byte	0x83
 2989 07af AC040000 		.4byte	.LLST34
 2990 07b3 16       		.uleb128 0x16
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 111


 2991 07b4 2E000000 		.4byte	.LVL113
 2992 07b8 6C060000 		.4byte	0x66c
 2993 07bc C8070000 		.4byte	0x7c8
 2994 07c0 15       		.uleb128 0x15
 2995 07c1 01       		.uleb128 0x1
 2996 07c2 50       		.byte	0x50
 2997 07c3 03       		.uleb128 0x3
 2998 07c4 0A       		.byte	0xa
 2999 07c5 E803     		.2byte	0x3e8
 3000 07c7 00       		.byte	0
 3001 07c8 0D       		.uleb128 0xd
 3002 07c9 32000000 		.4byte	.LVL114
 3003 07cd 49020000 		.4byte	0x249
 3004 07d1 00       		.byte	0
 3005 07d2 17       		.uleb128 0x17
 3006 07d3 A8010000 		.4byte	.LASF73
 3007 07d7 01       		.byte	0x1
 3008 07d8 B80A     		.2byte	0xab8
 3009 07da 00000000 		.4byte	.LFB29
 3010 07de 4C000000 		.4byte	.LFE29-.LFB29
 3011 07e2 01       		.uleb128 0x1
 3012 07e3 9C       		.byte	0x9c
 3013 07e4 F9070000 		.4byte	0x7f9
 3014 07e8 0B       		.uleb128 0xb
 3015 07e9 A3010000 		.4byte	.LASF66
 3016 07ed 01       		.byte	0x1
 3017 07ee B80A     		.2byte	0xab8
 3018 07f0 83000000 		.4byte	0x83
 3019 07f4 D8040000 		.4byte	.LLST35
 3020 07f8 00       		.byte	0
 3021 07f9 10       		.uleb128 0x10
 3022 07fa 16060000 		.4byte	.LASF74
 3023 07fe 01       		.byte	0x1
 3024 07ff 240B     		.2byte	0xb24
 3025 0801 00000000 		.4byte	.LFB33
 3026 0805 10000000 		.4byte	.LFE33-.LFB33
 3027 0809 01       		.uleb128 0x1
 3028 080a 9C       		.byte	0x9c
 3029 080b 10       		.uleb128 0x10
 3030 080c 62010000 		.4byte	.LASF75
 3031 0810 01       		.byte	0x1
 3032 0811 340B     		.2byte	0xb34
 3033 0813 00000000 		.4byte	.LFB34
 3034 0817 10000000 		.4byte	.LFE34-.LFB34
 3035 081b 01       		.uleb128 0x1
 3036 081c 9C       		.byte	0x9c
 3037 081d 0A       		.uleb128 0xa
 3038 081e 7D050000 		.4byte	.LASF76
 3039 0822 01       		.byte	0x1
 3040 0823 130B     		.2byte	0xb13
 3041 0825 00000000 		.4byte	.LFB32
 3042 0829 18000000 		.4byte	.LFE32-.LFB32
 3043 082d 01       		.uleb128 0x1
 3044 082e 9C       		.byte	0x9c
 3045 082f 3D080000 		.4byte	0x83d
 3046 0833 0D       		.uleb128 0xd
 3047 0834 06000000 		.4byte	.LVL119
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 112


 3048 0838 0B080000 		.4byte	0x80b
 3049 083c 00       		.byte	0
 3050 083d 10       		.uleb128 0x10
 3051 083e DD050000 		.4byte	.LASF77
 3052 0842 01       		.byte	0x1
 3053 0843 440B     		.2byte	0xb44
 3054 0845 00000000 		.4byte	.LFB35
 3055 0849 10000000 		.4byte	.LFE35-.LFB35
 3056 084d 01       		.uleb128 0x1
 3057 084e 9C       		.byte	0x9c
 3058 084f 0A       		.uleb128 0xa
 3059 0850 81060000 		.4byte	.LASF78
 3060 0854 01       		.byte	0x1
 3061 0855 550B     		.2byte	0xb55
 3062 0857 00000000 		.4byte	.LFB36
 3063 085b 10000000 		.4byte	.LFE36-.LFB36
 3064 085f 01       		.uleb128 0x1
 3065 0860 9C       		.byte	0x9c
 3066 0861 76080000 		.4byte	0x876
 3067 0865 0B       		.uleb128 0xb
 3068 0866 CC020000 		.4byte	.LASF58
 3069 086a 01       		.byte	0x1
 3070 086b 550B     		.2byte	0xb55
 3071 086d 83000000 		.4byte	0x83
 3072 0871 F9040000 		.4byte	.LLST36
 3073 0875 00       		.byte	0
 3074 0876 11       		.uleb128 0x11
 3075 0877 C3010000 		.4byte	.LASF80
 3076 087b 01       		.byte	0x1
 3077 087c 650B     		.2byte	0xb65
 3078 087e 83000000 		.4byte	0x83
 3079 0882 00000000 		.4byte	.LFB37
 3080 0886 10000000 		.4byte	.LFE37-.LFB37
 3081 088a 01       		.uleb128 0x1
 3082 088b 9C       		.byte	0x9c
 3083 088c 11       		.uleb128 0x11
 3084 088d 6C040000 		.4byte	.LASF81
 3085 0891 01       		.byte	0x1
 3086 0892 750B     		.2byte	0xb75
 3087 0894 83000000 		.4byte	0x83
 3088 0898 00000000 		.4byte	.LFB38
 3089 089c 10000000 		.4byte	.LFE38-.LFB38
 3090 08a0 01       		.uleb128 0x1
 3091 08a1 9C       		.byte	0x9c
 3092 08a2 11       		.uleb128 0x11
 3093 08a3 E0020000 		.4byte	.LASF82
 3094 08a7 01       		.byte	0x1
 3095 08a8 C50B     		.2byte	0xbc5
 3096 08aa 83000000 		.4byte	0x83
 3097 08ae 00000000 		.4byte	.LFB39
 3098 08b2 10000000 		.4byte	.LFE39-.LFB39
 3099 08b6 01       		.uleb128 0x1
 3100 08b7 9C       		.byte	0x9c
 3101 08b8 18       		.uleb128 0x18
 3102 08b9 94060000 		.4byte	.LASF106
 3103 08bd 01       		.byte	0x1
 3104 08be 1A0C     		.2byte	0xc1a
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 113


 3105 08c0 00000000 		.4byte	.LFB43
 3106 08c4 28000000 		.4byte	.LFE43-.LFB43
 3107 08c8 01       		.uleb128 0x1
 3108 08c9 9C       		.byte	0x9c
 3109 08ca E6080000 		.4byte	0x8e6
 3110 08ce 19       		.uleb128 0x19
 3111 08cf 6900     		.ascii	"i\000"
 3112 08d1 01       		.byte	0x1
 3113 08d2 1C0C     		.2byte	0xc1c
 3114 08d4 83000000 		.4byte	0x83
 3115 08d8 1A050000 		.4byte	.LLST37
 3116 08dc 0D       		.uleb128 0xd
 3117 08dd 06000000 		.4byte	.LVL122
 3118 08e1 A2080000 		.4byte	0x8a2
 3119 08e5 00       		.byte	0
 3120 08e6 10       		.uleb128 0x10
 3121 08e7 03030000 		.4byte	.LASF83
 3122 08eb 01       		.byte	0x1
 3123 08ec D20B     		.2byte	0xbd2
 3124 08ee 00000000 		.4byte	.LFB40
 3125 08f2 0C000000 		.4byte	.LFE40-.LFB40
 3126 08f6 01       		.uleb128 0x1
 3127 08f7 9C       		.byte	0x9c
 3128 08f8 17       		.uleb128 0x17
 3129 08f9 BE020000 		.4byte	.LASF84
 3130 08fd 01       		.byte	0x1
 3131 08fe F50A     		.2byte	0xaf5
 3132 0900 00000000 		.4byte	.LFB31
 3133 0904 40000000 		.4byte	.LFE31-.LFB31
 3134 0908 01       		.uleb128 0x1
 3135 0909 9C       		.byte	0x9c
 3136 090a 4B090000 		.4byte	0x94b
 3137 090e 19       		.uleb128 0x19
 3138 090f 6900     		.ascii	"i\000"
 3139 0911 01       		.byte	0x1
 3140 0912 F70A     		.2byte	0xaf7
 3141 0914 83000000 		.4byte	0x83
 3142 0918 38050000 		.4byte	.LLST38
 3143 091c 16       		.uleb128 0x16
 3144 091d 1C000000 		.4byte	.LVL132
 3145 0921 CE030000 		.4byte	0x3ce
 3146 0925 38090000 		.4byte	0x938
 3147 0929 15       		.uleb128 0x15
 3148 092a 01       		.uleb128 0x1
 3149 092b 50       		.byte	0x50
 3150 092c 01       		.uleb128 0x1
 3151 092d 3F       		.byte	0x3f
 3152 092e 15       		.uleb128 0x15
 3153 092f 01       		.uleb128 0x1
 3154 0930 51       		.byte	0x51
 3155 0931 05       		.uleb128 0x5
 3156 0932 03       		.byte	0x3
 3157 0933 00000000 		.4byte	CySysTickServiceCallbacks
 3158 0937 00       		.byte	0
 3159 0938 0D       		.uleb128 0xd
 3160 0939 2C000000 		.4byte	.LVL134
 3161 093d 4F080000 		.4byte	0x84f
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 114


 3162 0941 0D       		.uleb128 0xd
 3163 0942 30000000 		.4byte	.LVL135
 3164 0946 E6080000 		.4byte	0x8e6
 3165 094a 00       		.byte	0
 3166 094b 0A       		.uleb128 0xa
 3167 094c FE030000 		.4byte	.LASF85
 3168 0950 01       		.byte	0x1
 3169 0951 D80A     		.2byte	0xad8
 3170 0953 00000000 		.4byte	.LFB30
 3171 0957 20000000 		.4byte	.LFE30-.LFB30
 3172 095b 01       		.uleb128 0x1
 3173 095c 9C       		.byte	0x9c
 3174 095d 74090000 		.4byte	0x974
 3175 0961 0D       		.uleb128 0xd
 3176 0962 0E000000 		.4byte	.LVL136
 3177 0966 F8080000 		.4byte	0x8f8
 3178 096a 0D       		.uleb128 0xd
 3179 096b 18000000 		.4byte	.LVL137
 3180 096f 1D080000 		.4byte	0x81d
 3181 0973 00       		.byte	0
 3182 0974 0F       		.uleb128 0xf
 3183 0975 A4050000 		.4byte	.LASF86
 3184 0979 01       		.byte	0x1
 3185 097a F50B     		.2byte	0xbf5
 3186 097c E0000000 		.4byte	0xe0
 3187 0980 00000000 		.4byte	.LFB41
 3188 0984 10000000 		.4byte	.LFE41-.LFB41
 3189 0988 01       		.uleb128 0x1
 3190 0989 9C       		.byte	0x9c
 3191 098a BB090000 		.4byte	0x9bb
 3192 098e 0B       		.uleb128 0xb
 3193 098f AC030000 		.4byte	.LASF42
 3194 0993 01       		.byte	0x1
 3195 0994 F50B     		.2byte	0xbf5
 3196 0996 83000000 		.4byte	0x83
 3197 099a 57050000 		.4byte	.LLST39
 3198 099e 0E       		.uleb128 0xe
 3199 099f 52040000 		.4byte	.LASF87
 3200 09a3 01       		.byte	0x1
 3201 09a4 F50B     		.2byte	0xbf5
 3202 09a6 E0000000 		.4byte	0xe0
 3203 09aa 01       		.uleb128 0x1
 3204 09ab 51       		.byte	0x51
 3205 09ac 12       		.uleb128 0x12
 3206 09ad 5A000000 		.4byte	.LASF88
 3207 09b1 01       		.byte	0x1
 3208 09b2 F70B     		.2byte	0xbf7
 3209 09b4 E0000000 		.4byte	0xe0
 3210 09b8 01       		.uleb128 0x1
 3211 09b9 50       		.byte	0x50
 3212 09ba 00       		.byte	0
 3213 09bb 0F       		.uleb128 0xf
 3214 09bc EC010000 		.4byte	.LASF89
 3215 09c0 01       		.byte	0x1
 3216 09c1 0D0C     		.2byte	0xc0d
 3217 09c3 E0000000 		.4byte	0xe0
 3218 09c7 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 115


 3219 09cb 0C000000 		.4byte	.LFE42-.LFB42
 3220 09cf 01       		.uleb128 0x1
 3221 09d0 9C       		.byte	0x9c
 3222 09d1 E6090000 		.4byte	0x9e6
 3223 09d5 0B       		.uleb128 0xb
 3224 09d6 AC030000 		.4byte	.LASF42
 3225 09da 01       		.byte	0x1
 3226 09db 0D0C     		.2byte	0xc0d
 3227 09dd 83000000 		.4byte	0x83
 3228 09e1 78050000 		.4byte	.LLST40
 3229 09e5 00       		.byte	0
 3230 09e6 0A       		.uleb128 0xa
 3231 09e7 D2020000 		.4byte	.LASF90
 3232 09eb 01       		.byte	0x1
 3233 09ec 3A0C     		.2byte	0xc3a
 3234 09ee 00000000 		.4byte	.LFB44
 3235 09f2 70000000 		.4byte	.LFE44-.LFB44
 3236 09f6 01       		.uleb128 0x1
 3237 09f7 9C       		.byte	0x9c
 3238 09f8 0B0A0000 		.4byte	0xa0b
 3239 09fc 0E       		.uleb128 0xe
 3240 09fd CC050000 		.4byte	.LASF91
 3241 0a01 01       		.byte	0x1
 3242 0a02 3A0C     		.2byte	0xc3a
 3243 0a04 0B0A0000 		.4byte	0xa0b
 3244 0a08 01       		.uleb128 0x1
 3245 0a09 50       		.byte	0x50
 3246 0a0a 00       		.byte	0
 3247 0a0b 06       		.uleb128 0x6
 3248 0a0c 04       		.byte	0x4
 3249 0a0d 83000000 		.4byte	0x83
 3250 0a11 1A       		.uleb128 0x1a
 3251 0a12 E0000000 		.4byte	0xe0
 3252 0a16 210A0000 		.4byte	0xa21
 3253 0a1a 1B       		.uleb128 0x1b
 3254 0a1b D9000000 		.4byte	0xd9
 3255 0a1f 04       		.byte	0x4
 3256 0a20 00       		.byte	0
 3257 0a21 1C       		.uleb128 0x1c
 3258 0a22 B9050000 		.4byte	.LASF92
 3259 0a26 01       		.byte	0x1
 3260 0a27 22       		.byte	0x22
 3261 0a28 110A0000 		.4byte	0xa11
 3262 0a2c 05       		.uleb128 0x5
 3263 0a2d 03       		.byte	0x3
 3264 0a2e 00000000 		.4byte	CySysTickCallbacks
 3265 0a32 1D       		.uleb128 0x1d
 3266 0a33 7E040000 		.4byte	.LASF93
 3267 0a37 01       		.byte	0x1
 3268 0a38 1B       		.byte	0x1b
 3269 0a39 83000000 		.4byte	0x83
 3270 0a3d 05       		.uleb128 0x5
 3271 0a3e 03       		.byte	0x3
 3272 0a3f 00000000 		.4byte	cydelayFreqHz
 3273 0a43 1D       		.uleb128 0x1d
 3274 0a44 07020000 		.4byte	.LASF94
 3275 0a48 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 116


 3276 0a49 1C       		.byte	0x1c
 3277 0a4a 83000000 		.4byte	0x83
 3278 0a4e 05       		.uleb128 0x5
 3279 0a4f 03       		.byte	0x3
 3280 0a50 00000000 		.4byte	cydelayFreqKhz
 3281 0a54 1D       		.uleb128 0x1d
 3282 0a55 07060000 		.4byte	.LASF95
 3283 0a59 01       		.byte	0x1
 3284 0a5a 1D       		.byte	0x1d
 3285 0a5b 6B000000 		.4byte	0x6b
 3286 0a5f 05       		.uleb128 0x5
 3287 0a60 03       		.byte	0x3
 3288 0a61 00000000 		.4byte	cydelayFreqMhz
 3289 0a65 1D       		.uleb128 0x1d
 3290 0a66 76020000 		.4byte	.LASF96
 3291 0a6a 01       		.byte	0x1
 3292 0a6b 1E       		.byte	0x1e
 3293 0a6c 83000000 		.4byte	0x83
 3294 0a70 05       		.uleb128 0x5
 3295 0a71 03       		.byte	0x3
 3296 0a72 00000000 		.4byte	cydelay32kMs
 3297 0a76 1D       		.uleb128 0x1d
 3298 0a77 34010000 		.4byte	.LASF97
 3299 0a7b 01       		.byte	0x1
 3300 0a7c 36       		.byte	0x36
 3301 0a7d 83000000 		.4byte	0x83
 3302 0a81 05       		.uleb128 0x5
 3303 0a82 03       		.byte	0x3
 3304 0a83 00000000 		.4byte	CySysTickInitVar
 3305 0a87 1A       		.uleb128 0x1a
 3306 0a88 970A0000 		.4byte	0xa97
 3307 0a8c 970A0000 		.4byte	0xa97
 3308 0a90 1B       		.uleb128 0x1b
 3309 0a91 D9000000 		.4byte	0xd9
 3310 0a95 2D       		.byte	0x2d
 3311 0a96 00       		.byte	0
 3312 0a97 1E       		.uleb128 0x1e
 3313 0a98 6B000000 		.4byte	0x6b
 3314 0a9c 1D       		.uleb128 0x1d
 3315 0a9d 5B040000 		.4byte	.LASF98
 3316 0aa1 01       		.byte	0x1
 3317 0aa2 3B       		.byte	0x3b
 3318 0aa3 AD0A0000 		.4byte	0xaad
 3319 0aa7 05       		.uleb128 0x5
 3320 0aa8 03       		.byte	0x3
 3321 0aa9 00000000 		.4byte	cyImoFreqMhz2Reg
 3322 0aad 1E       		.uleb128 0x1e
 3323 0aae 870A0000 		.4byte	0xa87
 3324 0ab2 1D       		.uleb128 0x1d
 3325 0ab3 40000000 		.4byte	.LASF99
 3326 0ab7 01       		.byte	0x1
 3327 0ab8 51       		.byte	0x51
 3328 0ab9 83000000 		.4byte	0x83
 3329 0abd 05       		.uleb128 0x5
 3330 0abe 03       		.byte	0x3
 3331 0abf 00000000 		.4byte	CySysClkPumpConfig
 3332 0ac3 1F       		.uleb128 0x1f
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 117


 3333 0ac4 4F030000 		.4byte	.LASF100
 3334 0ac8 4F030000 		.4byte	.LASF100
 3335 0acc 03       		.byte	0x3
 3336 0acd E5       		.byte	0xe5
 3337 0ace 1F       		.uleb128 0x1f
 3338 0acf A3040000 		.4byte	.LASF101
 3339 0ad3 A3040000 		.4byte	.LASF101
 3340 0ad7 03       		.byte	0x3
 3341 0ad8 E6       		.byte	0xe6
 3342 0ad9 1F       		.uleb128 0x1f
 3343 0ada F6040000 		.4byte	.LASF102
 3344 0ade F6040000 		.4byte	.LASF102
 3345 0ae2 03       		.byte	0x3
 3346 0ae3 DC       		.byte	0xdc
 3347 0ae4 00       		.byte	0
 3348              		.section	.debug_abbrev,"",%progbits
 3349              	.Ldebug_abbrev0:
 3350 0000 01       		.uleb128 0x1
 3351 0001 11       		.uleb128 0x11
 3352 0002 01       		.byte	0x1
 3353 0003 25       		.uleb128 0x25
 3354 0004 0E       		.uleb128 0xe
 3355 0005 13       		.uleb128 0x13
 3356 0006 0B       		.uleb128 0xb
 3357 0007 03       		.uleb128 0x3
 3358 0008 0E       		.uleb128 0xe
 3359 0009 1B       		.uleb128 0x1b
 3360 000a 0E       		.uleb128 0xe
 3361 000b 55       		.uleb128 0x55
 3362 000c 17       		.uleb128 0x17
 3363 000d 11       		.uleb128 0x11
 3364 000e 01       		.uleb128 0x1
 3365 000f 10       		.uleb128 0x10
 3366 0010 17       		.uleb128 0x17
 3367 0011 00       		.byte	0
 3368 0012 00       		.byte	0
 3369 0013 02       		.uleb128 0x2
 3370 0014 24       		.uleb128 0x24
 3371 0015 00       		.byte	0
 3372 0016 0B       		.uleb128 0xb
 3373 0017 0B       		.uleb128 0xb
 3374 0018 3E       		.uleb128 0x3e
 3375 0019 0B       		.uleb128 0xb
 3376 001a 03       		.uleb128 0x3
 3377 001b 0E       		.uleb128 0xe
 3378 001c 00       		.byte	0
 3379 001d 00       		.byte	0
 3380 001e 03       		.uleb128 0x3
 3381 001f 24       		.uleb128 0x24
 3382 0020 00       		.byte	0
 3383 0021 0B       		.uleb128 0xb
 3384 0022 0B       		.uleb128 0xb
 3385 0023 3E       		.uleb128 0x3e
 3386 0024 0B       		.uleb128 0xb
 3387 0025 03       		.uleb128 0x3
 3388 0026 08       		.uleb128 0x8
 3389 0027 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 118


 3390 0028 00       		.byte	0
 3391 0029 04       		.uleb128 0x4
 3392 002a 16       		.uleb128 0x16
 3393 002b 00       		.byte	0
 3394 002c 03       		.uleb128 0x3
 3395 002d 0E       		.uleb128 0xe
 3396 002e 3A       		.uleb128 0x3a
 3397 002f 0B       		.uleb128 0xb
 3398 0030 3B       		.uleb128 0x3b
 3399 0031 05       		.uleb128 0x5
 3400 0032 49       		.uleb128 0x49
 3401 0033 13       		.uleb128 0x13
 3402 0034 00       		.byte	0
 3403 0035 00       		.byte	0
 3404 0036 05       		.uleb128 0x5
 3405 0037 35       		.uleb128 0x35
 3406 0038 00       		.byte	0
 3407 0039 49       		.uleb128 0x49
 3408 003a 13       		.uleb128 0x13
 3409 003b 00       		.byte	0
 3410 003c 00       		.byte	0
 3411 003d 06       		.uleb128 0x6
 3412 003e 0F       		.uleb128 0xf
 3413 003f 00       		.byte	0
 3414 0040 0B       		.uleb128 0xb
 3415 0041 0B       		.uleb128 0xb
 3416 0042 49       		.uleb128 0x49
 3417 0043 13       		.uleb128 0x13
 3418 0044 00       		.byte	0
 3419 0045 00       		.byte	0
 3420 0046 07       		.uleb128 0x7
 3421 0047 15       		.uleb128 0x15
 3422 0048 00       		.byte	0
 3423 0049 27       		.uleb128 0x27
 3424 004a 19       		.uleb128 0x19
 3425 004b 00       		.byte	0
 3426 004c 00       		.byte	0
 3427 004d 08       		.uleb128 0x8
 3428 004e 16       		.uleb128 0x16
 3429 004f 00       		.byte	0
 3430 0050 03       		.uleb128 0x3
 3431 0051 0E       		.uleb128 0xe
 3432 0052 3A       		.uleb128 0x3a
 3433 0053 0B       		.uleb128 0xb
 3434 0054 3B       		.uleb128 0x3b
 3435 0055 0B       		.uleb128 0xb
 3436 0056 49       		.uleb128 0x49
 3437 0057 13       		.uleb128 0x13
 3438 0058 00       		.byte	0
 3439 0059 00       		.byte	0
 3440 005a 09       		.uleb128 0x9
 3441 005b 2E       		.uleb128 0x2e
 3442 005c 00       		.byte	0
 3443 005d 3F       		.uleb128 0x3f
 3444 005e 19       		.uleb128 0x19
 3445 005f 03       		.uleb128 0x3
 3446 0060 0E       		.uleb128 0xe
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 119


 3447 0061 3A       		.uleb128 0x3a
 3448 0062 0B       		.uleb128 0xb
 3449 0063 3B       		.uleb128 0x3b
 3450 0064 0B       		.uleb128 0xb
 3451 0065 27       		.uleb128 0x27
 3452 0066 19       		.uleb128 0x19
 3453 0067 11       		.uleb128 0x11
 3454 0068 01       		.uleb128 0x1
 3455 0069 12       		.uleb128 0x12
 3456 006a 06       		.uleb128 0x6
 3457 006b 40       		.uleb128 0x40
 3458 006c 18       		.uleb128 0x18
 3459 006d 9742     		.uleb128 0x2117
 3460 006f 19       		.uleb128 0x19
 3461 0070 00       		.byte	0
 3462 0071 00       		.byte	0
 3463 0072 0A       		.uleb128 0xa
 3464 0073 2E       		.uleb128 0x2e
 3465 0074 01       		.byte	0x1
 3466 0075 3F       		.uleb128 0x3f
 3467 0076 19       		.uleb128 0x19
 3468 0077 03       		.uleb128 0x3
 3469 0078 0E       		.uleb128 0xe
 3470 0079 3A       		.uleb128 0x3a
 3471 007a 0B       		.uleb128 0xb
 3472 007b 3B       		.uleb128 0x3b
 3473 007c 05       		.uleb128 0x5
 3474 007d 27       		.uleb128 0x27
 3475 007e 19       		.uleb128 0x19
 3476 007f 11       		.uleb128 0x11
 3477 0080 01       		.uleb128 0x1
 3478 0081 12       		.uleb128 0x12
 3479 0082 06       		.uleb128 0x6
 3480 0083 40       		.uleb128 0x40
 3481 0084 18       		.uleb128 0x18
 3482 0085 9742     		.uleb128 0x2117
 3483 0087 19       		.uleb128 0x19
 3484 0088 01       		.uleb128 0x1
 3485 0089 13       		.uleb128 0x13
 3486 008a 00       		.byte	0
 3487 008b 00       		.byte	0
 3488 008c 0B       		.uleb128 0xb
 3489 008d 05       		.uleb128 0x5
 3490 008e 00       		.byte	0
 3491 008f 03       		.uleb128 0x3
 3492 0090 0E       		.uleb128 0xe
 3493 0091 3A       		.uleb128 0x3a
 3494 0092 0B       		.uleb128 0xb
 3495 0093 3B       		.uleb128 0x3b
 3496 0094 05       		.uleb128 0x5
 3497 0095 49       		.uleb128 0x49
 3498 0096 13       		.uleb128 0x13
 3499 0097 02       		.uleb128 0x2
 3500 0098 17       		.uleb128 0x17
 3501 0099 00       		.byte	0
 3502 009a 00       		.byte	0
 3503 009b 0C       		.uleb128 0xc
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 120


 3504 009c 34       		.uleb128 0x34
 3505 009d 00       		.byte	0
 3506 009e 03       		.uleb128 0x3
 3507 009f 0E       		.uleb128 0xe
 3508 00a0 3A       		.uleb128 0x3a
 3509 00a1 0B       		.uleb128 0xb
 3510 00a2 3B       		.uleb128 0x3b
 3511 00a3 05       		.uleb128 0x5
 3512 00a4 49       		.uleb128 0x49
 3513 00a5 13       		.uleb128 0x13
 3514 00a6 02       		.uleb128 0x2
 3515 00a7 17       		.uleb128 0x17
 3516 00a8 00       		.byte	0
 3517 00a9 00       		.byte	0
 3518 00aa 0D       		.uleb128 0xd
 3519 00ab 898201   		.uleb128 0x4109
 3520 00ae 00       		.byte	0
 3521 00af 11       		.uleb128 0x11
 3522 00b0 01       		.uleb128 0x1
 3523 00b1 31       		.uleb128 0x31
 3524 00b2 13       		.uleb128 0x13
 3525 00b3 00       		.byte	0
 3526 00b4 00       		.byte	0
 3527 00b5 0E       		.uleb128 0xe
 3528 00b6 05       		.uleb128 0x5
 3529 00b7 00       		.byte	0
 3530 00b8 03       		.uleb128 0x3
 3531 00b9 0E       		.uleb128 0xe
 3532 00ba 3A       		.uleb128 0x3a
 3533 00bb 0B       		.uleb128 0xb
 3534 00bc 3B       		.uleb128 0x3b
 3535 00bd 05       		.uleb128 0x5
 3536 00be 49       		.uleb128 0x49
 3537 00bf 13       		.uleb128 0x13
 3538 00c0 02       		.uleb128 0x2
 3539 00c1 18       		.uleb128 0x18
 3540 00c2 00       		.byte	0
 3541 00c3 00       		.byte	0
 3542 00c4 0F       		.uleb128 0xf
 3543 00c5 2E       		.uleb128 0x2e
 3544 00c6 01       		.byte	0x1
 3545 00c7 3F       		.uleb128 0x3f
 3546 00c8 19       		.uleb128 0x19
 3547 00c9 03       		.uleb128 0x3
 3548 00ca 0E       		.uleb128 0xe
 3549 00cb 3A       		.uleb128 0x3a
 3550 00cc 0B       		.uleb128 0xb
 3551 00cd 3B       		.uleb128 0x3b
 3552 00ce 05       		.uleb128 0x5
 3553 00cf 27       		.uleb128 0x27
 3554 00d0 19       		.uleb128 0x19
 3555 00d1 49       		.uleb128 0x49
 3556 00d2 13       		.uleb128 0x13
 3557 00d3 11       		.uleb128 0x11
 3558 00d4 01       		.uleb128 0x1
 3559 00d5 12       		.uleb128 0x12
 3560 00d6 06       		.uleb128 0x6
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 121


 3561 00d7 40       		.uleb128 0x40
 3562 00d8 18       		.uleb128 0x18
 3563 00d9 9742     		.uleb128 0x2117
 3564 00db 19       		.uleb128 0x19
 3565 00dc 01       		.uleb128 0x1
 3566 00dd 13       		.uleb128 0x13
 3567 00de 00       		.byte	0
 3568 00df 00       		.byte	0
 3569 00e0 10       		.uleb128 0x10
 3570 00e1 2E       		.uleb128 0x2e
 3571 00e2 00       		.byte	0
 3572 00e3 3F       		.uleb128 0x3f
 3573 00e4 19       		.uleb128 0x19
 3574 00e5 03       		.uleb128 0x3
 3575 00e6 0E       		.uleb128 0xe
 3576 00e7 3A       		.uleb128 0x3a
 3577 00e8 0B       		.uleb128 0xb
 3578 00e9 3B       		.uleb128 0x3b
 3579 00ea 05       		.uleb128 0x5
 3580 00eb 27       		.uleb128 0x27
 3581 00ec 19       		.uleb128 0x19
 3582 00ed 11       		.uleb128 0x11
 3583 00ee 01       		.uleb128 0x1
 3584 00ef 12       		.uleb128 0x12
 3585 00f0 06       		.uleb128 0x6
 3586 00f1 40       		.uleb128 0x40
 3587 00f2 18       		.uleb128 0x18
 3588 00f3 9742     		.uleb128 0x2117
 3589 00f5 19       		.uleb128 0x19
 3590 00f6 00       		.byte	0
 3591 00f7 00       		.byte	0
 3592 00f8 11       		.uleb128 0x11
 3593 00f9 2E       		.uleb128 0x2e
 3594 00fa 00       		.byte	0
 3595 00fb 3F       		.uleb128 0x3f
 3596 00fc 19       		.uleb128 0x19
 3597 00fd 03       		.uleb128 0x3
 3598 00fe 0E       		.uleb128 0xe
 3599 00ff 3A       		.uleb128 0x3a
 3600 0100 0B       		.uleb128 0xb
 3601 0101 3B       		.uleb128 0x3b
 3602 0102 05       		.uleb128 0x5
 3603 0103 27       		.uleb128 0x27
 3604 0104 19       		.uleb128 0x19
 3605 0105 49       		.uleb128 0x49
 3606 0106 13       		.uleb128 0x13
 3607 0107 11       		.uleb128 0x11
 3608 0108 01       		.uleb128 0x1
 3609 0109 12       		.uleb128 0x12
 3610 010a 06       		.uleb128 0x6
 3611 010b 40       		.uleb128 0x40
 3612 010c 18       		.uleb128 0x18
 3613 010d 9742     		.uleb128 0x2117
 3614 010f 19       		.uleb128 0x19
 3615 0110 00       		.byte	0
 3616 0111 00       		.byte	0
 3617 0112 12       		.uleb128 0x12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 122


 3618 0113 34       		.uleb128 0x34
 3619 0114 00       		.byte	0
 3620 0115 03       		.uleb128 0x3
 3621 0116 0E       		.uleb128 0xe
 3622 0117 3A       		.uleb128 0x3a
 3623 0118 0B       		.uleb128 0xb
 3624 0119 3B       		.uleb128 0x3b
 3625 011a 05       		.uleb128 0x5
 3626 011b 49       		.uleb128 0x49
 3627 011c 13       		.uleb128 0x13
 3628 011d 02       		.uleb128 0x2
 3629 011e 18       		.uleb128 0x18
 3630 011f 00       		.byte	0
 3631 0120 00       		.byte	0
 3632 0121 13       		.uleb128 0x13
 3633 0122 34       		.uleb128 0x34
 3634 0123 00       		.byte	0
 3635 0124 03       		.uleb128 0x3
 3636 0125 0E       		.uleb128 0xe
 3637 0126 3A       		.uleb128 0x3a
 3638 0127 0B       		.uleb128 0xb
 3639 0128 3B       		.uleb128 0x3b
 3640 0129 05       		.uleb128 0x5
 3641 012a 49       		.uleb128 0x49
 3642 012b 13       		.uleb128 0x13
 3643 012c 1C       		.uleb128 0x1c
 3644 012d 06       		.uleb128 0x6
 3645 012e 00       		.byte	0
 3646 012f 00       		.byte	0
 3647 0130 14       		.uleb128 0x14
 3648 0131 898201   		.uleb128 0x4109
 3649 0134 01       		.byte	0x1
 3650 0135 11       		.uleb128 0x11
 3651 0136 01       		.uleb128 0x1
 3652 0137 31       		.uleb128 0x31
 3653 0138 13       		.uleb128 0x13
 3654 0139 00       		.byte	0
 3655 013a 00       		.byte	0
 3656 013b 15       		.uleb128 0x15
 3657 013c 8A8201   		.uleb128 0x410a
 3658 013f 00       		.byte	0
 3659 0140 02       		.uleb128 0x2
 3660 0141 18       		.uleb128 0x18
 3661 0142 9142     		.uleb128 0x2111
 3662 0144 18       		.uleb128 0x18
 3663 0145 00       		.byte	0
 3664 0146 00       		.byte	0
 3665 0147 16       		.uleb128 0x16
 3666 0148 898201   		.uleb128 0x4109
 3667 014b 01       		.byte	0x1
 3668 014c 11       		.uleb128 0x11
 3669 014d 01       		.uleb128 0x1
 3670 014e 31       		.uleb128 0x31
 3671 014f 13       		.uleb128 0x13
 3672 0150 01       		.uleb128 0x1
 3673 0151 13       		.uleb128 0x13
 3674 0152 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 123


 3675 0153 00       		.byte	0
 3676 0154 17       		.uleb128 0x17
 3677 0155 2E       		.uleb128 0x2e
 3678 0156 01       		.byte	0x1
 3679 0157 3F       		.uleb128 0x3f
 3680 0158 19       		.uleb128 0x19
 3681 0159 03       		.uleb128 0x3
 3682 015a 0E       		.uleb128 0xe
 3683 015b 3A       		.uleb128 0x3a
 3684 015c 0B       		.uleb128 0xb
 3685 015d 3B       		.uleb128 0x3b
 3686 015e 05       		.uleb128 0x5
 3687 015f 27       		.uleb128 0x27
 3688 0160 19       		.uleb128 0x19
 3689 0161 11       		.uleb128 0x11
 3690 0162 01       		.uleb128 0x1
 3691 0163 12       		.uleb128 0x12
 3692 0164 06       		.uleb128 0x6
 3693 0165 40       		.uleb128 0x40
 3694 0166 18       		.uleb128 0x18
 3695 0167 9642     		.uleb128 0x2116
 3696 0169 19       		.uleb128 0x19
 3697 016a 01       		.uleb128 0x1
 3698 016b 13       		.uleb128 0x13
 3699 016c 00       		.byte	0
 3700 016d 00       		.byte	0
 3701 016e 18       		.uleb128 0x18
 3702 016f 2E       		.uleb128 0x2e
 3703 0170 01       		.byte	0x1
 3704 0171 03       		.uleb128 0x3
 3705 0172 0E       		.uleb128 0xe
 3706 0173 3A       		.uleb128 0x3a
 3707 0174 0B       		.uleb128 0xb
 3708 0175 3B       		.uleb128 0x3b
 3709 0176 05       		.uleb128 0x5
 3710 0177 27       		.uleb128 0x27
 3711 0178 19       		.uleb128 0x19
 3712 0179 11       		.uleb128 0x11
 3713 017a 01       		.uleb128 0x1
 3714 017b 12       		.uleb128 0x12
 3715 017c 06       		.uleb128 0x6
 3716 017d 40       		.uleb128 0x40
 3717 017e 18       		.uleb128 0x18
 3718 017f 9642     		.uleb128 0x2116
 3719 0181 19       		.uleb128 0x19
 3720 0182 01       		.uleb128 0x1
 3721 0183 13       		.uleb128 0x13
 3722 0184 00       		.byte	0
 3723 0185 00       		.byte	0
 3724 0186 19       		.uleb128 0x19
 3725 0187 34       		.uleb128 0x34
 3726 0188 00       		.byte	0
 3727 0189 03       		.uleb128 0x3
 3728 018a 08       		.uleb128 0x8
 3729 018b 3A       		.uleb128 0x3a
 3730 018c 0B       		.uleb128 0xb
 3731 018d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 124


 3732 018e 05       		.uleb128 0x5
 3733 018f 49       		.uleb128 0x49
 3734 0190 13       		.uleb128 0x13
 3735 0191 02       		.uleb128 0x2
 3736 0192 17       		.uleb128 0x17
 3737 0193 00       		.byte	0
 3738 0194 00       		.byte	0
 3739 0195 1A       		.uleb128 0x1a
 3740 0196 01       		.uleb128 0x1
 3741 0197 01       		.byte	0x1
 3742 0198 49       		.uleb128 0x49
 3743 0199 13       		.uleb128 0x13
 3744 019a 01       		.uleb128 0x1
 3745 019b 13       		.uleb128 0x13
 3746 019c 00       		.byte	0
 3747 019d 00       		.byte	0
 3748 019e 1B       		.uleb128 0x1b
 3749 019f 21       		.uleb128 0x21
 3750 01a0 00       		.byte	0
 3751 01a1 49       		.uleb128 0x49
 3752 01a2 13       		.uleb128 0x13
 3753 01a3 2F       		.uleb128 0x2f
 3754 01a4 0B       		.uleb128 0xb
 3755 01a5 00       		.byte	0
 3756 01a6 00       		.byte	0
 3757 01a7 1C       		.uleb128 0x1c
 3758 01a8 34       		.uleb128 0x34
 3759 01a9 00       		.byte	0
 3760 01aa 03       		.uleb128 0x3
 3761 01ab 0E       		.uleb128 0xe
 3762 01ac 3A       		.uleb128 0x3a
 3763 01ad 0B       		.uleb128 0xb
 3764 01ae 3B       		.uleb128 0x3b
 3765 01af 0B       		.uleb128 0xb
 3766 01b0 49       		.uleb128 0x49
 3767 01b1 13       		.uleb128 0x13
 3768 01b2 02       		.uleb128 0x2
 3769 01b3 18       		.uleb128 0x18
 3770 01b4 00       		.byte	0
 3771 01b5 00       		.byte	0
 3772 01b6 1D       		.uleb128 0x1d
 3773 01b7 34       		.uleb128 0x34
 3774 01b8 00       		.byte	0
 3775 01b9 03       		.uleb128 0x3
 3776 01ba 0E       		.uleb128 0xe
 3777 01bb 3A       		.uleb128 0x3a
 3778 01bc 0B       		.uleb128 0xb
 3779 01bd 3B       		.uleb128 0x3b
 3780 01be 0B       		.uleb128 0xb
 3781 01bf 49       		.uleb128 0x49
 3782 01c0 13       		.uleb128 0x13
 3783 01c1 3F       		.uleb128 0x3f
 3784 01c2 19       		.uleb128 0x19
 3785 01c3 02       		.uleb128 0x2
 3786 01c4 18       		.uleb128 0x18
 3787 01c5 00       		.byte	0
 3788 01c6 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 125


 3789 01c7 1E       		.uleb128 0x1e
 3790 01c8 26       		.uleb128 0x26
 3791 01c9 00       		.byte	0
 3792 01ca 49       		.uleb128 0x49
 3793 01cb 13       		.uleb128 0x13
 3794 01cc 00       		.byte	0
 3795 01cd 00       		.byte	0
 3796 01ce 1F       		.uleb128 0x1f
 3797 01cf 2E       		.uleb128 0x2e
 3798 01d0 00       		.byte	0
 3799 01d1 3F       		.uleb128 0x3f
 3800 01d2 19       		.uleb128 0x19
 3801 01d3 3C       		.uleb128 0x3c
 3802 01d4 19       		.uleb128 0x19
 3803 01d5 6E       		.uleb128 0x6e
 3804 01d6 0E       		.uleb128 0xe
 3805 01d7 03       		.uleb128 0x3
 3806 01d8 0E       		.uleb128 0xe
 3807 01d9 3A       		.uleb128 0x3a
 3808 01da 0B       		.uleb128 0xb
 3809 01db 3B       		.uleb128 0x3b
 3810 01dc 0B       		.uleb128 0xb
 3811 01dd 00       		.byte	0
 3812 01de 00       		.byte	0
 3813 01df 00       		.byte	0
 3814              		.section	.debug_loc,"",%progbits
 3815              	.Ldebug_loc0:
 3816              	.LLST0:
 3817 0000 00000000 		.4byte	.LVL0
 3818 0004 07000000 		.4byte	.LVL1-1
 3819 0008 0100     		.2byte	0x1
 3820 000a 50       		.byte	0x50
 3821 000b 07000000 		.4byte	.LVL1-1
 3822 000f 12000000 		.4byte	.LVL3
 3823 0013 0100     		.2byte	0x1
 3824 0015 54       		.byte	0x54
 3825 0016 12000000 		.4byte	.LVL3
 3826 001a 20000000 		.4byte	.LFE2
 3827 001e 0400     		.2byte	0x4
 3828 0020 F3       		.byte	0xf3
 3829 0021 01       		.uleb128 0x1
 3830 0022 50       		.byte	0x50
 3831 0023 9F       		.byte	0x9f
 3832 0024 00000000 		.4byte	0
 3833 0028 00000000 		.4byte	0
 3834              	.LLST1:
 3835 002c 08000000 		.4byte	.LVL1
 3836 0030 19000000 		.4byte	.LVL5-1
 3837 0034 0100     		.2byte	0x1
 3838 0036 50       		.byte	0x50
 3839 0037 00000000 		.4byte	0
 3840 003b 00000000 		.4byte	0
 3841              	.LLST2:
 3842 003f 10000000 		.4byte	.LVL2
 3843 0043 14000000 		.4byte	.LVL4
 3844 0047 0100     		.2byte	0x1
 3845 0049 53       		.byte	0x53
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 126


 3846 004a 14000000 		.4byte	.LVL4
 3847 004e 1A000000 		.4byte	.LVL6
 3848 0052 0100     		.2byte	0x1
 3849 0054 54       		.byte	0x54
 3850 0055 00000000 		.4byte	0
 3851 0059 00000000 		.4byte	0
 3852              	.LLST3:
 3853 005d 06000000 		.4byte	.LVL8
 3854 0061 11000000 		.4byte	.LVL10-1
 3855 0065 0100     		.2byte	0x1
 3856 0067 50       		.byte	0x50
 3857 0068 00000000 		.4byte	0
 3858 006c 00000000 		.4byte	0
 3859              	.LLST4:
 3860 0070 0E000000 		.4byte	.LVL9
 3861 0074 14000000 		.4byte	.LVL11
 3862 0078 0100     		.2byte	0x1
 3863 007a 54       		.byte	0x54
 3864 007b 14000000 		.4byte	.LVL11
 3865 007f 1C000000 		.4byte	.LFE4
 3866 0083 0100     		.2byte	0x1
 3867 0085 50       		.byte	0x50
 3868 0086 00000000 		.4byte	0
 3869 008a 00000000 		.4byte	0
 3870              	.LLST5:
 3871 008e 00000000 		.4byte	.LVL12
 3872 0092 07000000 		.4byte	.LVL13-1
 3873 0096 0100     		.2byte	0x1
 3874 0098 50       		.byte	0x50
 3875 0099 07000000 		.4byte	.LVL13-1
 3876 009d 14000000 		.4byte	.LVL14
 3877 00a1 0100     		.2byte	0x1
 3878 00a3 54       		.byte	0x54
 3879 00a4 14000000 		.4byte	.LVL14
 3880 00a8 30000000 		.4byte	.LFE5
 3881 00ac 0400     		.2byte	0x4
 3882 00ae F3       		.byte	0xf3
 3883 00af 01       		.uleb128 0x1
 3884 00b0 50       		.byte	0x50
 3885 00b1 9F       		.byte	0x9f
 3886 00b2 00000000 		.4byte	0
 3887 00b6 00000000 		.4byte	0
 3888              	.LLST6:
 3889 00ba 08000000 		.4byte	.LVL13
 3890 00be 23000000 		.4byte	.LVL15-1
 3891 00c2 0100     		.2byte	0x1
 3892 00c4 50       		.byte	0x50
 3893 00c5 00000000 		.4byte	0
 3894 00c9 00000000 		.4byte	0
 3895              	.LLST7:
 3896 00cd 00000000 		.4byte	.LVL16
 3897 00d1 04000000 		.4byte	.LVL17
 3898 00d5 0100     		.2byte	0x1
 3899 00d7 50       		.byte	0x50
 3900 00d8 04000000 		.4byte	.LVL17
 3901 00dc 14000000 		.4byte	.LFE11
 3902 00e0 0100     		.2byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 127


 3903 00e2 52       		.byte	0x52
 3904 00e3 00000000 		.4byte	0
 3905 00e7 00000000 		.4byte	0
 3906              	.LLST8:
 3907 00eb 00000000 		.4byte	.LVL22
 3908 00ef 04000000 		.4byte	.LVL23
 3909 00f3 0100     		.2byte	0x1
 3910 00f5 50       		.byte	0x50
 3911 00f6 04000000 		.4byte	.LVL23
 3912 00fa 14000000 		.4byte	.LFE20
 3913 00fe 0400     		.2byte	0x4
 3914 0100 F3       		.byte	0xf3
 3915 0101 01       		.uleb128 0x1
 3916 0102 50       		.byte	0x50
 3917 0103 9F       		.byte	0x9f
 3918 0104 00000000 		.4byte	0
 3919 0108 00000000 		.4byte	0
 3920              	.LLST9:
 3921 010c 00000000 		.4byte	.LVL24
 3922 0110 08000000 		.4byte	.LVL25
 3923 0114 0100     		.2byte	0x1
 3924 0116 50       		.byte	0x50
 3925 0117 08000000 		.4byte	.LVL25
 3926 011b 18000000 		.4byte	.LFE21
 3927 011f 0400     		.2byte	0x4
 3928 0121 F3       		.byte	0xf3
 3929 0122 01       		.uleb128 0x1
 3930 0123 50       		.byte	0x50
 3931 0124 9F       		.byte	0x9f
 3932 0125 00000000 		.4byte	0
 3933 0129 00000000 		.4byte	0
 3934              	.LLST10:
 3935 012d 00000000 		.4byte	.LVL26
 3936 0131 04000000 		.4byte	.LVL27
 3937 0135 0100     		.2byte	0x1
 3938 0137 50       		.byte	0x50
 3939 0138 04000000 		.4byte	.LVL27
 3940 013c 14000000 		.4byte	.LFE22
 3941 0140 0400     		.2byte	0x4
 3942 0142 F3       		.byte	0xf3
 3943 0143 01       		.uleb128 0x1
 3944 0144 50       		.byte	0x50
 3945 0145 9F       		.byte	0x9f
 3946 0146 00000000 		.4byte	0
 3947 014a 00000000 		.4byte	0
 3948              	.LLST11:
 3949 014e 00000000 		.4byte	.LVL28
 3950 0152 04000000 		.4byte	.LVL29
 3951 0156 0100     		.2byte	0x1
 3952 0158 50       		.byte	0x50
 3953 0159 04000000 		.4byte	.LVL29
 3954 015d 14000000 		.4byte	.LFE23
 3955 0161 0400     		.2byte	0x4
 3956 0163 F3       		.byte	0xf3
 3957 0164 01       		.uleb128 0x1
 3958 0165 50       		.byte	0x50
 3959 0166 9F       		.byte	0x9f
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 128


 3960 0167 00000000 		.4byte	0
 3961 016b 00000000 		.4byte	0
 3962              	.LLST12:
 3963 016f 00000000 		.4byte	.LVL30
 3964 0173 04000000 		.4byte	.LVL31
 3965 0177 0100     		.2byte	0x1
 3966 0179 50       		.byte	0x50
 3967 017a 04000000 		.4byte	.LVL31
 3968 017e 14000000 		.4byte	.LFE24
 3969 0182 0400     		.2byte	0x4
 3970 0184 F3       		.byte	0xf3
 3971 0185 01       		.uleb128 0x1
 3972 0186 50       		.byte	0x50
 3973 0187 9F       		.byte	0x9f
 3974 0188 00000000 		.4byte	0
 3975 018c 00000000 		.4byte	0
 3976              	.LLST13:
 3977 0190 00000000 		.4byte	.LVL33
 3978 0194 0C000000 		.4byte	.LVL35
 3979 0198 0100     		.2byte	0x1
 3980 019a 50       		.byte	0x50
 3981 019b 0C000000 		.4byte	.LVL35
 3982 019f 20000000 		.4byte	.LFE14
 3983 01a3 0400     		.2byte	0x4
 3984 01a5 F3       		.byte	0xf3
 3985 01a6 01       		.uleb128 0x1
 3986 01a7 50       		.byte	0x50
 3987 01a8 9F       		.byte	0x9f
 3988 01a9 00000000 		.4byte	0
 3989 01ad 00000000 		.4byte	0
 3990              	.LLST14:
 3991 01b1 00000000 		.4byte	.LVL33
 3992 01b5 0F000000 		.4byte	.LVL36-1
 3993 01b9 0100     		.2byte	0x1
 3994 01bb 51       		.byte	0x51
 3995 01bc 0F000000 		.4byte	.LVL36-1
 3996 01c0 1E000000 		.4byte	.LVL38
 3997 01c4 0100     		.2byte	0x1
 3998 01c6 55       		.byte	0x55
 3999 01c7 1E000000 		.4byte	.LVL38
 4000 01cb 20000000 		.4byte	.LFE14
 4001 01cf 0400     		.2byte	0x4
 4002 01d1 F3       		.byte	0xf3
 4003 01d2 01       		.uleb128 0x1
 4004 01d3 51       		.byte	0x51
 4005 01d4 9F       		.byte	0x9f
 4006 01d5 00000000 		.4byte	0
 4007 01d9 00000000 		.4byte	0
 4008              	.LLST15:
 4009 01dd 00000000 		.4byte	.LVL39
 4010 01e1 0A000000 		.4byte	.LVL41
 4011 01e5 0100     		.2byte	0x1
 4012 01e7 50       		.byte	0x50
 4013 01e8 0A000000 		.4byte	.LVL41
 4014 01ec 1C000000 		.4byte	.LFE15
 4015 01f0 0400     		.2byte	0x4
 4016 01f2 F3       		.byte	0xf3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 129


 4017 01f3 01       		.uleb128 0x1
 4018 01f4 50       		.byte	0x50
 4019 01f5 9F       		.byte	0x9f
 4020 01f6 00000000 		.4byte	0
 4021 01fa 00000000 		.4byte	0
 4022              	.LLST16:
 4023 01fe 00000000 		.4byte	.LVL43
 4024 0202 0C000000 		.4byte	.LVL45
 4025 0206 0100     		.2byte	0x1
 4026 0208 50       		.byte	0x50
 4027 0209 0C000000 		.4byte	.LVL45
 4028 020d 22000000 		.4byte	.LFE16
 4029 0211 0400     		.2byte	0x4
 4030 0213 F3       		.byte	0xf3
 4031 0214 01       		.uleb128 0x1
 4032 0215 50       		.byte	0x50
 4033 0216 9F       		.byte	0x9f
 4034 0217 00000000 		.4byte	0
 4035 021b 00000000 		.4byte	0
 4036              	.LLST17:
 4037 021f 00000000 		.4byte	.LVL43
 4038 0223 0F000000 		.4byte	.LVL46-1
 4039 0227 0100     		.2byte	0x1
 4040 0229 51       		.byte	0x51
 4041 022a 0F000000 		.4byte	.LVL46-1
 4042 022e 20000000 		.4byte	.LVL48
 4043 0232 0100     		.2byte	0x1
 4044 0234 55       		.byte	0x55
 4045 0235 20000000 		.4byte	.LVL48
 4046 0239 22000000 		.4byte	.LFE16
 4047 023d 0400     		.2byte	0x4
 4048 023f F3       		.byte	0xf3
 4049 0240 01       		.uleb128 0x1
 4050 0241 51       		.byte	0x51
 4051 0242 9F       		.byte	0x9f
 4052 0243 00000000 		.4byte	0
 4053 0247 00000000 		.4byte	0
 4054              	.LLST18:
 4055 024b 00000000 		.4byte	.LVL49
 4056 024f 0A000000 		.4byte	.LVL51
 4057 0253 0100     		.2byte	0x1
 4058 0255 50       		.byte	0x50
 4059 0256 0A000000 		.4byte	.LVL51
 4060 025a 1E000000 		.4byte	.LFE17
 4061 025e 0400     		.2byte	0x4
 4062 0260 F3       		.byte	0xf3
 4063 0261 01       		.uleb128 0x1
 4064 0262 50       		.byte	0x50
 4065 0263 9F       		.byte	0x9f
 4066 0264 00000000 		.4byte	0
 4067 0268 00000000 		.4byte	0
 4068              	.LLST19:
 4069 026c 00000000 		.4byte	.LVL53
 4070 0270 0C000000 		.4byte	.LVL54
 4071 0274 0100     		.2byte	0x1
 4072 0276 50       		.byte	0x50
 4073 0277 0C000000 		.4byte	.LVL54
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 130


 4074 027b 4C000000 		.4byte	.LFE18
 4075 027f 0400     		.2byte	0x4
 4076 0281 F3       		.byte	0xf3
 4077 0282 01       		.uleb128 0x1
 4078 0283 50       		.byte	0x50
 4079 0284 9F       		.byte	0x9f
 4080 0285 00000000 		.4byte	0
 4081 0289 00000000 		.4byte	0
 4082              	.LLST20:
 4083 028d 00000000 		.4byte	.LVL53
 4084 0291 0F000000 		.4byte	.LVL55-1
 4085 0295 0100     		.2byte	0x1
 4086 0297 51       		.byte	0x51
 4087 0298 0F000000 		.4byte	.LVL55-1
 4088 029c 4C000000 		.4byte	.LFE18
 4089 02a0 0400     		.2byte	0x4
 4090 02a2 F3       		.byte	0xf3
 4091 02a3 01       		.uleb128 0x1
 4092 02a4 51       		.byte	0x51
 4093 02a5 9F       		.byte	0x9f
 4094 02a6 00000000 		.4byte	0
 4095 02aa 00000000 		.4byte	0
 4096              	.LLST21:
 4097 02ae 26000000 		.4byte	.LVL58
 4098 02b2 45000000 		.4byte	.LVL64-1
 4099 02b6 0100     		.2byte	0x1
 4100 02b8 50       		.byte	0x50
 4101 02b9 00000000 		.4byte	0
 4102 02bd 00000000 		.4byte	0
 4103              	.LLST22:
 4104 02c1 22000000 		.4byte	.LVL57
 4105 02c5 46000000 		.4byte	.LVL65
 4106 02c9 0100     		.2byte	0x1
 4107 02cb 55       		.byte	0x55
 4108 02cc 00000000 		.4byte	0
 4109 02d0 00000000 		.4byte	0
 4110              	.LLST23:
 4111 02d4 32000000 		.4byte	.LVL59
 4112 02d8 38000000 		.4byte	.LVL60
 4113 02dc 0100     		.2byte	0x1
 4114 02de 51       		.byte	0x51
 4115 02df 3A000000 		.4byte	.LVL61
 4116 02e3 3C000000 		.4byte	.LVL62
 4117 02e7 0100     		.2byte	0x1
 4118 02e9 51       		.byte	0x51
 4119 02ea 3C000000 		.4byte	.LVL62
 4120 02ee 40000000 		.4byte	.LVL63
 4121 02f2 0100     		.2byte	0x1
 4122 02f4 53       		.byte	0x53
 4123 02f5 40000000 		.4byte	.LVL63
 4124 02f9 45000000 		.4byte	.LVL64-1
 4125 02fd 0100     		.2byte	0x1
 4126 02ff 51       		.byte	0x51
 4127 0300 00000000 		.4byte	0
 4128 0304 00000000 		.4byte	0
 4129              	.LLST24:
 4130 0308 00000000 		.4byte	.LVL66
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 131


 4131 030c 0A000000 		.4byte	.LVL67
 4132 0310 0100     		.2byte	0x1
 4133 0312 50       		.byte	0x50
 4134 0313 0A000000 		.4byte	.LVL67
 4135 0317 2C000000 		.4byte	.LFE19
 4136 031b 0400     		.2byte	0x4
 4137 031d F3       		.byte	0xf3
 4138 031e 01       		.uleb128 0x1
 4139 031f 50       		.byte	0x50
 4140 0320 9F       		.byte	0x9f
 4141 0321 00000000 		.4byte	0
 4142 0325 00000000 		.4byte	0
 4143              	.LLST25:
 4144 0329 24000000 		.4byte	.LVL69
 4145 032d 26000000 		.4byte	.LVL70
 4146 0331 0100     		.2byte	0x1
 4147 0333 50       		.byte	0x50
 4148 0334 00000000 		.4byte	0
 4149 0338 00000000 		.4byte	0
 4150              	.LLST26:
 4151 033c 00000000 		.4byte	.LVL71
 4152 0340 06000000 		.4byte	.LVL72
 4153 0344 0100     		.2byte	0x1
 4154 0346 50       		.byte	0x50
 4155 0347 06000000 		.4byte	.LVL72
 4156 034b 26000000 		.4byte	.LVL76
 4157 034f 0100     		.2byte	0x1
 4158 0351 54       		.byte	0x54
 4159 0352 00000000 		.4byte	0
 4160 0356 00000000 		.4byte	0
 4161              	.LLST27:
 4162 035a 00000000 		.4byte	.LVL77
 4163 035e 08000000 		.4byte	.LVL78
 4164 0362 0100     		.2byte	0x1
 4165 0364 50       		.byte	0x50
 4166 0365 08000000 		.4byte	.LVL78
 4167 0369 14000000 		.4byte	.LFE28
 4168 036d 0400     		.2byte	0x4
 4169 036f F3       		.byte	0xf3
 4170 0370 01       		.uleb128 0x1
 4171 0371 50       		.byte	0x50
 4172 0372 9F       		.byte	0x9f
 4173 0373 00000000 		.4byte	0
 4174 0377 00000000 		.4byte	0
 4175              	.LLST28:
 4176 037b 00000000 		.4byte	.LVL80
 4177 037f 0F000000 		.4byte	.LVL81-1
 4178 0383 0100     		.2byte	0x1
 4179 0385 50       		.byte	0x50
 4180 0386 0F000000 		.4byte	.LVL81-1
 4181 038a D4000000 		.4byte	.LVL103
 4182 038e 0100     		.2byte	0x1
 4183 0390 54       		.byte	0x54
 4184 0391 D4000000 		.4byte	.LVL103
 4185 0395 02010000 		.4byte	.LVL106
 4186 0399 0700     		.2byte	0x7
 4187 039b 74       		.byte	0x74
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 132


 4188 039c B39C8080 		.sleb128 -268431821
 4188      7F
 4189 03a1 9F       		.byte	0x9f
 4190 03a2 02010000 		.4byte	.LVL106
 4191 03a6 08010000 		.4byte	.LVL107
 4192 03aa 0100     		.2byte	0x1
 4193 03ac 54       		.byte	0x54
 4194 03ad 08010000 		.4byte	.LVL107
 4195 03b1 10010000 		.4byte	.LVL109
 4196 03b5 0300     		.2byte	0x3
 4197 03b7 77       		.byte	0x77
 4198 03b8 03       		.sleb128 3
 4199 03b9 9F       		.byte	0x9f
 4200 03ba 10010000 		.4byte	.LVL109
 4201 03be 64010000 		.4byte	.LFE6
 4202 03c2 0400     		.2byte	0x4
 4203 03c4 F3       		.byte	0xf3
 4204 03c5 01       		.uleb128 0x1
 4205 03c6 50       		.byte	0x50
 4206 03c7 9F       		.byte	0x9f
 4207 03c8 00000000 		.4byte	0
 4208 03cc 00000000 		.4byte	0
 4209              	.LLST29:
 4210 03d0 2A000000 		.4byte	.LVL83
 4211 03d4 34000000 		.4byte	.LVL85
 4212 03d8 0100     		.2byte	0x1
 4213 03da 5A       		.byte	0x5a
 4214 03db 46000000 		.4byte	.LVL86
 4215 03df 50000000 		.4byte	.LVL88
 4216 03e3 0100     		.2byte	0x1
 4217 03e5 5A       		.byte	0x5a
 4218 03e6 62000000 		.4byte	.LVL89
 4219 03ea 6C000000 		.4byte	.LVL91
 4220 03ee 0100     		.2byte	0x1
 4221 03f0 5A       		.byte	0x5a
 4222 03f1 7E000000 		.4byte	.LVL92
 4223 03f5 88000000 		.4byte	.LVL94
 4224 03f9 0100     		.2byte	0x1
 4225 03fb 5A       		.byte	0x5a
 4226 03fc 90000000 		.4byte	.LVL95
 4227 0400 02010000 		.4byte	.LVL106
 4228 0404 0100     		.2byte	0x1
 4229 0406 5A       		.byte	0x5a
 4230 0407 00000000 		.4byte	0
 4231 040b 00000000 		.4byte	0
 4232              	.LLST30:
 4233 040f 32000000 		.4byte	.LVL84
 4234 0413 34000000 		.4byte	.LVL85
 4235 0417 0100     		.2byte	0x1
 4236 0419 59       		.byte	0x59
 4237 041a 4E000000 		.4byte	.LVL87
 4238 041e 50000000 		.4byte	.LVL88
 4239 0422 0100     		.2byte	0x1
 4240 0424 59       		.byte	0x59
 4241 0425 6A000000 		.4byte	.LVL90
 4242 0429 6C000000 		.4byte	.LVL91
 4243 042d 0100     		.2byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 133


 4244 042f 59       		.byte	0x59
 4245 0430 86000000 		.4byte	.LVL93
 4246 0434 88000000 		.4byte	.LVL94
 4247 0438 0100     		.2byte	0x1
 4248 043a 59       		.byte	0x59
 4249 043b 98000000 		.4byte	.LVL96
 4250 043f 02010000 		.4byte	.LVL106
 4251 0443 0100     		.2byte	0x1
 4252 0445 59       		.byte	0x59
 4253 0446 00000000 		.4byte	0
 4254 044a 00000000 		.4byte	0
 4255              	.LLST31:
 4256 044e 9C000000 		.4byte	.LVL97
 4257 0452 02010000 		.4byte	.LVL106
 4258 0456 0100     		.2byte	0x1
 4259 0458 56       		.byte	0x56
 4260 0459 00000000 		.4byte	0
 4261 045d 00000000 		.4byte	0
 4262              	.LLST32:
 4263 0461 B0000000 		.4byte	.LVL99
 4264 0465 B4000000 		.4byte	.LVL100
 4265 0469 0200     		.2byte	0x2
 4266 046b 49       		.byte	0x49
 4267 046c 9F       		.byte	0x9f
 4268 046d BC000000 		.4byte	.LVL101
 4269 0471 02010000 		.4byte	.LVL106
 4270 0475 0100     		.2byte	0x1
 4271 0477 55       		.byte	0x55
 4272 0478 00000000 		.4byte	0
 4273 047c 00000000 		.4byte	0
 4274              	.LLST33:
 4275 0480 12000000 		.4byte	.LVL82
 4276 0484 AA000000 		.4byte	.LVL98
 4277 0488 0200     		.2byte	0x2
 4278 048a 91       		.byte	0x91
 4279 048b 5C       		.sleb128 -36
 4280 048c B4000000 		.4byte	.LVL100
 4281 0490 BC000000 		.4byte	.LVL101
 4282 0494 0200     		.2byte	0x2
 4283 0496 91       		.byte	0x91
 4284 0497 5C       		.sleb128 -36
 4285 0498 02010000 		.4byte	.LVL106
 4286 049c 08010000 		.4byte	.LVL107
 4287 04a0 0200     		.2byte	0x2
 4288 04a2 91       		.byte	0x91
 4289 04a3 5C       		.sleb128 -36
 4290 04a4 00000000 		.4byte	0
 4291 04a8 00000000 		.4byte	0
 4292              	.LLST34:
 4293 04ac 00000000 		.4byte	.LVL110
 4294 04b0 14000000 		.4byte	.LVL111
 4295 04b4 0100     		.2byte	0x1
 4296 04b6 50       		.byte	0x50
 4297 04b7 14000000 		.4byte	.LVL111
 4298 04bb 18000000 		.4byte	.LVL112
 4299 04bf 0100     		.2byte	0x1
 4300 04c1 53       		.byte	0x53
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 134


 4301 04c2 18000000 		.4byte	.LVL112
 4302 04c6 44000000 		.4byte	.LFE7
 4303 04ca 0400     		.2byte	0x4
 4304 04cc F3       		.byte	0xf3
 4305 04cd 01       		.uleb128 0x1
 4306 04ce 50       		.byte	0x50
 4307 04cf 9F       		.byte	0x9f
 4308 04d0 00000000 		.4byte	0
 4309 04d4 00000000 		.4byte	0
 4310              	.LLST35:
 4311 04d8 00000000 		.4byte	.LVL115
 4312 04dc 1A000000 		.4byte	.LVL116
 4313 04e0 0100     		.2byte	0x1
 4314 04e2 50       		.byte	0x50
 4315 04e3 1A000000 		.4byte	.LVL116
 4316 04e7 4C000000 		.4byte	.LFE29
 4317 04eb 0400     		.2byte	0x4
 4318 04ed F3       		.byte	0xf3
 4319 04ee 01       		.uleb128 0x1
 4320 04ef 50       		.byte	0x50
 4321 04f0 9F       		.byte	0x9f
 4322 04f1 00000000 		.4byte	0
 4323 04f5 00000000 		.4byte	0
 4324              	.LLST36:
 4325 04f9 00000000 		.4byte	.LVL120
 4326 04fd 02000000 		.4byte	.LVL121
 4327 0501 0100     		.2byte	0x1
 4328 0503 50       		.byte	0x50
 4329 0504 02000000 		.4byte	.LVL121
 4330 0508 10000000 		.4byte	.LFE36
 4331 050c 0400     		.2byte	0x4
 4332 050e F3       		.byte	0xf3
 4333 050f 01       		.uleb128 0x1
 4334 0510 50       		.byte	0x50
 4335 0511 9F       		.byte	0x9f
 4336 0512 00000000 		.4byte	0
 4337 0516 00000000 		.4byte	0
 4338              	.LLST37:
 4339 051a 0C000000 		.4byte	.LVL123
 4340 051e 1C000000 		.4byte	.LVL126
 4341 0522 0100     		.2byte	0x1
 4342 0524 54       		.byte	0x54
 4343 0525 1E000000 		.4byte	.LVL127
 4344 0529 22000000 		.4byte	.LVL128
 4345 052d 0100     		.2byte	0x1
 4346 052f 54       		.byte	0x54
 4347 0530 00000000 		.4byte	0
 4348 0534 00000000 		.4byte	0
 4349              	.LLST38:
 4350 0538 02000000 		.4byte	.LVL129
 4351 053c 06000000 		.4byte	.LVL130
 4352 0540 0200     		.2byte	0x2
 4353 0542 30       		.byte	0x30
 4354 0543 9F       		.byte	0x9f
 4355 0544 06000000 		.4byte	.LVL130
 4356 0548 1B000000 		.4byte	.LVL132-1
 4357 054c 0100     		.2byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 135


 4358 054e 53       		.byte	0x53
 4359 054f 00000000 		.4byte	0
 4360 0553 00000000 		.4byte	0
 4361              	.LLST39:
 4362 0557 00000000 		.4byte	.LVL138
 4363 055b 06000000 		.4byte	.LVL139
 4364 055f 0100     		.2byte	0x1
 4365 0561 50       		.byte	0x50
 4366 0562 06000000 		.4byte	.LVL139
 4367 0566 10000000 		.4byte	.LFE41
 4368 056a 0400     		.2byte	0x4
 4369 056c F3       		.byte	0xf3
 4370 056d 01       		.uleb128 0x1
 4371 056e 50       		.byte	0x50
 4372 056f 9F       		.byte	0x9f
 4373 0570 00000000 		.4byte	0
 4374 0574 00000000 		.4byte	0
 4375              	.LLST40:
 4376 0578 00000000 		.4byte	.LVL140
 4377 057c 02000000 		.4byte	.LVL141
 4378 0580 0100     		.2byte	0x1
 4379 0582 50       		.byte	0x50
 4380 0583 02000000 		.4byte	.LVL141
 4381 0587 0C000000 		.4byte	.LFE42
 4382 058b 0400     		.2byte	0x4
 4383 058d F3       		.byte	0xf3
 4384 058e 01       		.uleb128 0x1
 4385 058f 50       		.byte	0x50
 4386 0590 9F       		.byte	0x9f
 4387 0591 00000000 		.4byte	0
 4388 0595 00000000 		.4byte	0
 4389              		.section	.debug_aranges,"",%progbits
 4390 0000 7C010000 		.4byte	0x17c
 4391 0004 0200     		.2byte	0x2
 4392 0006 00000000 		.4byte	.Ldebug_info0
 4393 000a 04       		.byte	0x4
 4394 000b 00       		.byte	0
 4395 000c 0000     		.2byte	0
 4396 000e 0000     		.2byte	0
 4397 0010 00000000 		.4byte	.LFB0
 4398 0014 14000000 		.4byte	.LFE0-.LFB0
 4399 0018 00000000 		.4byte	.LFB1
 4400 001c 10000000 		.4byte	.LFE1-.LFB1
 4401 0020 00000000 		.4byte	.LFB2
 4402 0024 20000000 		.4byte	.LFE2-.LFB2
 4403 0028 00000000 		.4byte	.LFB3
 4404 002c 38000000 		.4byte	.LFE3-.LFB3
 4405 0030 00000000 		.4byte	.LFB4
 4406 0034 1C000000 		.4byte	.LFE4-.LFB4
 4407 0038 00000000 		.4byte	.LFB5
 4408 003c 30000000 		.4byte	.LFE5-.LFB5
 4409 0040 00000000 		.4byte	.LFB8
 4410 0044 20000000 		.4byte	.LFE8-.LFB8
 4411 0048 00000000 		.4byte	.LFB9
 4412 004c 10000000 		.4byte	.LFE9-.LFB9
 4413 0050 00000000 		.4byte	.LFB10
 4414 0054 0C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 136


 4415 0058 00000000 		.4byte	.LFB11
 4416 005c 14000000 		.4byte	.LFE11-.LFB11
 4417 0060 00000000 		.4byte	.LFB12
 4418 0064 10000000 		.4byte	.LFE12-.LFB12
 4419 0068 00000000 		.4byte	.LFB13
 4420 006c 0C000000 		.4byte	.LFE13-.LFB13
 4421 0070 00000000 		.4byte	.LFB20
 4422 0074 14000000 		.4byte	.LFE20-.LFB20
 4423 0078 00000000 		.4byte	.LFB21
 4424 007c 18000000 		.4byte	.LFE21-.LFB21
 4425 0080 00000000 		.4byte	.LFB22
 4426 0084 14000000 		.4byte	.LFE22-.LFB22
 4427 0088 00000000 		.4byte	.LFB23
 4428 008c 14000000 		.4byte	.LFE23-.LFB23
 4429 0090 00000000 		.4byte	.LFB24
 4430 0094 14000000 		.4byte	.LFE24-.LFB24
 4431 0098 00000000 		.4byte	.LFB25
 4432 009c 04000000 		.4byte	.LFE25-.LFB25
 4433 00a0 00000000 		.4byte	.LFB14
 4434 00a4 20000000 		.4byte	.LFE14-.LFB14
 4435 00a8 00000000 		.4byte	.LFB15
 4436 00ac 1C000000 		.4byte	.LFE15-.LFB15
 4437 00b0 00000000 		.4byte	.LFB16
 4438 00b4 22000000 		.4byte	.LFE16-.LFB16
 4439 00b8 00000000 		.4byte	.LFB17
 4440 00bc 1E000000 		.4byte	.LFE17-.LFB17
 4441 00c0 00000000 		.4byte	.LFB18
 4442 00c4 4C000000 		.4byte	.LFE18-.LFB18
 4443 00c8 00000000 		.4byte	.LFB19
 4444 00cc 2C000000 		.4byte	.LFE19-.LFB19
 4445 00d0 00000000 		.4byte	.LFB26
 4446 00d4 18000000 		.4byte	.LFE26-.LFB26
 4447 00d8 00000000 		.4byte	.LFB27
 4448 00dc 30000000 		.4byte	.LFE27-.LFB27
 4449 00e0 00000000 		.4byte	.LFB28
 4450 00e4 14000000 		.4byte	.LFE28-.LFB28
 4451 00e8 00000000 		.4byte	.LFB6
 4452 00ec 64010000 		.4byte	.LFE6-.LFB6
 4453 00f0 00000000 		.4byte	.LFB7
 4454 00f4 44000000 		.4byte	.LFE7-.LFB7
 4455 00f8 00000000 		.4byte	.LFB29
 4456 00fc 4C000000 		.4byte	.LFE29-.LFB29
 4457 0100 00000000 		.4byte	.LFB33
 4458 0104 10000000 		.4byte	.LFE33-.LFB33
 4459 0108 00000000 		.4byte	.LFB34
 4460 010c 10000000 		.4byte	.LFE34-.LFB34
 4461 0110 00000000 		.4byte	.LFB32
 4462 0114 18000000 		.4byte	.LFE32-.LFB32
 4463 0118 00000000 		.4byte	.LFB35
 4464 011c 10000000 		.4byte	.LFE35-.LFB35
 4465 0120 00000000 		.4byte	.LFB36
 4466 0124 10000000 		.4byte	.LFE36-.LFB36
 4467 0128 00000000 		.4byte	.LFB37
 4468 012c 10000000 		.4byte	.LFE37-.LFB37
 4469 0130 00000000 		.4byte	.LFB38
 4470 0134 10000000 		.4byte	.LFE38-.LFB38
 4471 0138 00000000 		.4byte	.LFB39
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 137


 4472 013c 10000000 		.4byte	.LFE39-.LFB39
 4473 0140 00000000 		.4byte	.LFB43
 4474 0144 28000000 		.4byte	.LFE43-.LFB43
 4475 0148 00000000 		.4byte	.LFB40
 4476 014c 0C000000 		.4byte	.LFE40-.LFB40
 4477 0150 00000000 		.4byte	.LFB31
 4478 0154 40000000 		.4byte	.LFE31-.LFB31
 4479 0158 00000000 		.4byte	.LFB30
 4480 015c 20000000 		.4byte	.LFE30-.LFB30
 4481 0160 00000000 		.4byte	.LFB41
 4482 0164 10000000 		.4byte	.LFE41-.LFB41
 4483 0168 00000000 		.4byte	.LFB42
 4484 016c 0C000000 		.4byte	.LFE42-.LFB42
 4485 0170 00000000 		.4byte	.LFB44
 4486 0174 70000000 		.4byte	.LFE44-.LFB44
 4487 0178 00000000 		.4byte	0
 4488 017c 00000000 		.4byte	0
 4489              		.section	.debug_ranges,"",%progbits
 4490              	.Ldebug_ranges0:
 4491 0000 00000000 		.4byte	.LFB0
 4492 0004 14000000 		.4byte	.LFE0
 4493 0008 00000000 		.4byte	.LFB1
 4494 000c 10000000 		.4byte	.LFE1
 4495 0010 00000000 		.4byte	.LFB2
 4496 0014 20000000 		.4byte	.LFE2
 4497 0018 00000000 		.4byte	.LFB3
 4498 001c 38000000 		.4byte	.LFE3
 4499 0020 00000000 		.4byte	.LFB4
 4500 0024 1C000000 		.4byte	.LFE4
 4501 0028 00000000 		.4byte	.LFB5
 4502 002c 30000000 		.4byte	.LFE5
 4503 0030 00000000 		.4byte	.LFB8
 4504 0034 20000000 		.4byte	.LFE8
 4505 0038 00000000 		.4byte	.LFB9
 4506 003c 10000000 		.4byte	.LFE9
 4507 0040 00000000 		.4byte	.LFB10
 4508 0044 0C000000 		.4byte	.LFE10
 4509 0048 00000000 		.4byte	.LFB11
 4510 004c 14000000 		.4byte	.LFE11
 4511 0050 00000000 		.4byte	.LFB12
 4512 0054 10000000 		.4byte	.LFE12
 4513 0058 00000000 		.4byte	.LFB13
 4514 005c 0C000000 		.4byte	.LFE13
 4515 0060 00000000 		.4byte	.LFB20
 4516 0064 14000000 		.4byte	.LFE20
 4517 0068 00000000 		.4byte	.LFB21
 4518 006c 18000000 		.4byte	.LFE21
 4519 0070 00000000 		.4byte	.LFB22
 4520 0074 14000000 		.4byte	.LFE22
 4521 0078 00000000 		.4byte	.LFB23
 4522 007c 14000000 		.4byte	.LFE23
 4523 0080 00000000 		.4byte	.LFB24
 4524 0084 14000000 		.4byte	.LFE24
 4525 0088 00000000 		.4byte	.LFB25
 4526 008c 04000000 		.4byte	.LFE25
 4527 0090 00000000 		.4byte	.LFB14
 4528 0094 20000000 		.4byte	.LFE14
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 138


 4529 0098 00000000 		.4byte	.LFB15
 4530 009c 1C000000 		.4byte	.LFE15
 4531 00a0 00000000 		.4byte	.LFB16
 4532 00a4 22000000 		.4byte	.LFE16
 4533 00a8 00000000 		.4byte	.LFB17
 4534 00ac 1E000000 		.4byte	.LFE17
 4535 00b0 00000000 		.4byte	.LFB18
 4536 00b4 4C000000 		.4byte	.LFE18
 4537 00b8 00000000 		.4byte	.LFB19
 4538 00bc 2C000000 		.4byte	.LFE19
 4539 00c0 00000000 		.4byte	.LFB26
 4540 00c4 18000000 		.4byte	.LFE26
 4541 00c8 00000000 		.4byte	.LFB27
 4542 00cc 30000000 		.4byte	.LFE27
 4543 00d0 00000000 		.4byte	.LFB28
 4544 00d4 14000000 		.4byte	.LFE28
 4545 00d8 00000000 		.4byte	.LFB6
 4546 00dc 64010000 		.4byte	.LFE6
 4547 00e0 00000000 		.4byte	.LFB7
 4548 00e4 44000000 		.4byte	.LFE7
 4549 00e8 00000000 		.4byte	.LFB29
 4550 00ec 4C000000 		.4byte	.LFE29
 4551 00f0 00000000 		.4byte	.LFB33
 4552 00f4 10000000 		.4byte	.LFE33
 4553 00f8 00000000 		.4byte	.LFB34
 4554 00fc 10000000 		.4byte	.LFE34
 4555 0100 00000000 		.4byte	.LFB32
 4556 0104 18000000 		.4byte	.LFE32
 4557 0108 00000000 		.4byte	.LFB35
 4558 010c 10000000 		.4byte	.LFE35
 4559 0110 00000000 		.4byte	.LFB36
 4560 0114 10000000 		.4byte	.LFE36
 4561 0118 00000000 		.4byte	.LFB37
 4562 011c 10000000 		.4byte	.LFE37
 4563 0120 00000000 		.4byte	.LFB38
 4564 0124 10000000 		.4byte	.LFE38
 4565 0128 00000000 		.4byte	.LFB39
 4566 012c 10000000 		.4byte	.LFE39
 4567 0130 00000000 		.4byte	.LFB43
 4568 0134 28000000 		.4byte	.LFE43
 4569 0138 00000000 		.4byte	.LFB40
 4570 013c 0C000000 		.4byte	.LFE40
 4571 0140 00000000 		.4byte	.LFB31
 4572 0144 40000000 		.4byte	.LFE31
 4573 0148 00000000 		.4byte	.LFB30
 4574 014c 20000000 		.4byte	.LFE30
 4575 0150 00000000 		.4byte	.LFB41
 4576 0154 10000000 		.4byte	.LFE41
 4577 0158 00000000 		.4byte	.LFB42
 4578 015c 0C000000 		.4byte	.LFE42
 4579 0160 00000000 		.4byte	.LFB44
 4580 0164 70000000 		.4byte	.LFE44
 4581 0168 00000000 		.4byte	0
 4582 016c 00000000 		.4byte	0
 4583              		.section	.debug_line,"",%progbits
 4584              	.Ldebug_line0:
 4585 0000 5C040000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 139


 4585      02004D00 
 4585      00000201 
 4585      FB0E0D00 
 4585      01010101 
 4586              	.LASF51:
 4587 0000 72616D56 		.ascii	"ramVectorTable\000"
 4587      6563746F 
 4587      72546162 
 4587      6C6500
 4588              	.LASF67:
 4589 000f 62675472 		.ascii	"bgTrim4\000"
 4589      696D3400 
 4590              	.LASF10:
 4591 0017 75696E74 		.ascii	"uint16\000"
 4591      313600
 4592              	.LASF38:
 4593 001e 696E7453 		.ascii	"intState\000"
 4593      74617465 
 4593      00
 4594              	.LASF24:
 4595 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4595      73436C6B 
 4595      57726974 
 4595      65486663 
 4595      6C6B4469 
 4596              	.LASF99:
 4597 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4597      73436C6B 
 4597      50756D70 
 4597      436F6E66 
 4597      696700
 4598              	.LASF50:
 4599 0053 6F6C6449 		.ascii	"oldIsr\000"
 4599      737200
 4600              	.LASF88:
 4601 005a 72657456 		.ascii	"retVal\000"
 4601      616C00
 4602              	.LASF37:
 4603 0061 43794469 		.ascii	"CyDisableInts\000"
 4603      7361626C 
 4603      65496E74 
 4603      7300
 4604              	.LASF103:
 4605 006f 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4605      43393920 
 4605      352E342E 
 4605      31203230 
 4605      31363036 
 4606 00a2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4606      20726576 
 4606      6973696F 
 4606      6E203233 
 4606      37373135 
 4607 00d5 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 4607      74643D67 
 4607      6E753939 
 4607      202D6666 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 140


 4607      756E6374 
 4608              	.LASF70:
 4609 0108 63757272 		.ascii	"currentImoTrim2Value\000"
 4609      656E7449 
 4609      6D6F5472 
 4609      696D3256 
 4609      616C7565 
 4610              	.LASF7:
 4611 011d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4611      206C6F6E 
 4611      6720756E 
 4611      7369676E 
 4611      65642069 
 4612              	.LASF97:
 4613 0134 43795379 		.ascii	"CySysTickInitVar\000"
 4613      73546963 
 4613      6B496E69 
 4613      74566172 
 4613      00
 4614              	.LASF39:
 4615 0145 4379456E 		.ascii	"CyEnableInts\000"
 4615      61626C65 
 4615      496E7473 
 4615      00
 4616              	.LASF60:
 4617 0152 4379536F 		.ascii	"CySoftwareReset\000"
 4617      66747761 
 4617      72655265 
 4617      73657400 
 4618              	.LASF75:
 4619 0162 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4619      73546963 
 4619      6B456E61 
 4619      626C6549 
 4619      6E746572 
 4620              	.LASF43:
 4621 017b 4379496E 		.ascii	"CyIntGetState\000"
 4621      74476574 
 4621      53746174 
 4621      6500
 4622              	.LASF6:
 4623 0189 6C6F6E67 		.ascii	"long long int\000"
 4623      206C6F6E 
 4623      6720696E 
 4623      7400
 4624              	.LASF0:
 4625 0197 7369676E 		.ascii	"signed char\000"
 4625      65642063 
 4625      68617200 
 4626              	.LASF66:
 4627 01a3 66726571 		.ascii	"freq\000"
 4627      00
 4628              	.LASF73:
 4629 01a8 43794465 		.ascii	"CyDelayFreq\000"
 4629      6C617946 
 4629      72657100 
 4630              	.LASF22:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 141


 4631 01b4 696E7465 		.ascii	"interruptState\000"
 4631      72727570 
 4631      74537461 
 4631      746500
 4632              	.LASF80:
 4633 01c3 43795379 		.ascii	"CySysTickGetReload\000"
 4633      73546963 
 4633      6B476574 
 4633      52656C6F 
 4633      616400
 4634              	.LASF4:
 4635 01d6 6C6F6E67 		.ascii	"long int\000"
 4635      20696E74 
 4635      00
 4636              	.LASF44:
 4637 01df 4379496E 		.ascii	"CyIntDisable\000"
 4637      74446973 
 4637      61626C65 
 4637      00
 4638              	.LASF89:
 4639 01ec 43795379 		.ascii	"CySysTickGetCallback\000"
 4639      73546963 
 4639      6B476574 
 4639      43616C6C 
 4639      6261636B 
 4640              	.LASF9:
 4641 0201 75696E74 		.ascii	"uint8\000"
 4641      3800
 4642              	.LASF94:
 4643 0207 63796465 		.ascii	"cydelayFreqKhz\000"
 4643      6C617946 
 4643      7265714B 
 4643      687A00
 4644              	.LASF27:
 4645 0216 656E6162 		.ascii	"enable\000"
 4645      6C6500
 4646              	.LASF13:
 4647 021d 646F7562 		.ascii	"double\000"
 4647      6C6500
 4648              	.LASF57:
 4649 0224 73686966 		.ascii	"shift\000"
 4649      7400
 4650              	.LASF32:
 4651 022a 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4651      734C7664 
 4651      436C6561 
 4651      72496E74 
 4651      65727275 
 4652              	.LASF11:
 4653 0241 75696E74 		.ascii	"uint32\000"
 4653      333200
 4654              	.LASF40:
 4655 0248 6D61736B 		.ascii	"mask\000"
 4655      00
 4656              	.LASF33:
 4657 024d 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4657      73436C6B 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 142


 4657      47657453 
 4657      7973636C 
 4657      6B536F75 
 4658              	.LASF59:
 4659 0265 4379496E 		.ascii	"CyIntGetPriority\000"
 4659      74476574 
 4659      5072696F 
 4659      72697479 
 4659      00
 4660              	.LASF96:
 4661 0276 63796465 		.ascii	"cydelay32kMs\000"
 4661      6C617933 
 4661      326B4D73 
 4661      00
 4662              	.LASF105:
 4663 0283 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Boot"
 4663      5F776F72 
 4663      6B5C6D79 
 4663      5F70726F 
 4663      6A656374 
 4664 02b1 6C6F6164 		.ascii	"loader.cydsn\000"
 4664      65722E63 
 4664      7964736E 
 4664      00
 4665              	.LASF84:
 4666 02be 43795379 		.ascii	"CySysTickInit\000"
 4666      73546963 
 4666      6B496E69 
 4666      7400
 4667              	.LASF58:
 4668 02cc 76616C75 		.ascii	"value\000"
 4668      6500
 4669              	.LASF90:
 4670 02d2 43794765 		.ascii	"CyGetUniqueId\000"
 4670      74556E69 
 4670      71756549 
 4670      6400
 4671              	.LASF82:
 4672 02e0 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4672      73546963 
 4672      6B476574 
 4672      436F756E 
 4672      74466C61 
 4673              	.LASF8:
 4674 02f6 756E7369 		.ascii	"unsigned int\000"
 4674      676E6564 
 4674      20696E74 
 4674      00
 4675              	.LASF83:
 4676 0303 43795379 		.ascii	"CySysTickClear\000"
 4676      73546963 
 4676      6B436C65 
 4676      617200
 4677              	.LASF5:
 4678 0312 6C6F6E67 		.ascii	"long unsigned int\000"
 4678      20756E73 
 4678      69676E65 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 143


 4678      6420696E 
 4678      7400
 4679              	.LASF79:
 4680 0324 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4680      734C7664 
 4680      47657449 
 4680      6E746572 
 4680      72757074 
 4681              	.LASF21:
 4682 033f 43795379 		.ascii	"CySysClkImoStop\000"
 4682      73436C6B 
 4682      496D6F53 
 4682      746F7000 
 4683              	.LASF100:
 4684 034f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4684      74657243 
 4684      72697469 
 4684      63616C53 
 4684      65637469 
 4685              	.LASF45:
 4686 0366 4379496E 		.ascii	"CyIntSetPending\000"
 4686      74536574 
 4686      50656E64 
 4686      696E6700 
 4687              	.LASF34:
 4688 0376 43795379 		.ascii	"CySysGetResetReason\000"
 4688      73476574 
 4688      52657365 
 4688      74526561 
 4688      736F6E00 
 4689              	.LASF3:
 4690 038a 73686F72 		.ascii	"short unsigned int\000"
 4690      7420756E 
 4690      7369676E 
 4690      65642069 
 4690      6E7400
 4691              	.LASF53:
 4692 039d 4379496E 		.ascii	"CyIntSetVector\000"
 4692      74536574 
 4692      56656374 
 4692      6F7200
 4693              	.LASF42:
 4694 03ac 6E756D62 		.ascii	"number\000"
 4694      657200
 4695              	.LASF56:
 4696 03b3 7072696F 		.ascii	"priority\000"
 4696      72697479 
 4696      00
 4697              	.LASF65:
 4698 03bc 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4698      73436C6B 
 4698      57726974 
 4698      65496D6F 
 4698      46726571 
 4699              	.LASF48:
 4700 03d1 4379496E 		.ascii	"CyIntSetSysVector\000"
 4700      74536574 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 144


 4700      53797356 
 4700      6563746F 
 4700      7200
 4701              	.LASF25:
 4702 03e3 43795379 		.ascii	"CySysEnablePumpClock\000"
 4702      73456E61 
 4702      626C6550 
 4702      756D7043 
 4702      6C6F636B 
 4703              	.LASF16:
 4704 03f8 72656733 		.ascii	"reg32\000"
 4704      3200
 4705              	.LASF85:
 4706 03fe 43795379 		.ascii	"CySysTickStart\000"
 4706      73546963 
 4706      6B537461 
 4706      727400
 4707              	.LASF36:
 4708 040d 72657475 		.ascii	"returnStatus\000"
 4708      726E5374 
 4708      61747573 
 4708      00
 4709              	.LASF18:
 4710 041a 73697A65 		.ascii	"sizetype\000"
 4710      74797065 
 4710      00
 4711              	.LASF46:
 4712 0423 4379496E 		.ascii	"CyIntClearPending\000"
 4712      74436C65 
 4712      61725065 
 4712      6E64696E 
 4712      6700
 4713              	.LASF49:
 4714 0435 61646472 		.ascii	"address\000"
 4714      65737300 
 4715              	.LASF68:
 4716 043d 62675472 		.ascii	"bgTrim5\000"
 4716      696D3500 
 4717              	.LASF28:
 4718 0445 73797363 		.ascii	"sysclkSource\000"
 4718      6C6B536F 
 4718      75726365 
 4718      00
 4719              	.LASF87:
 4720 0452 66756E63 		.ascii	"function\000"
 4720      74696F6E 
 4720      00
 4721              	.LASF98:
 4722 045b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4722      6F467265 
 4722      714D687A 
 4722      32526567 
 4722      00
 4723              	.LASF81:
 4724 046c 43795379 		.ascii	"CySysTickGetValue\000"
 4724      73546963 
 4724      6B476574 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 145


 4724      56616C75 
 4724      6500
 4725              	.LASF93:
 4726 047e 63796465 		.ascii	"cydelayFreqHz\000"
 4726      6C617946 
 4726      72657148 
 4726      7A00
 4727              	.LASF55:
 4728 048c 4379496E 		.ascii	"CyIntSetPriority\000"
 4728      74536574 
 4728      5072696F 
 4728      72697479 
 4728      00
 4729              	.LASF12:
 4730 049d 666C6F61 		.ascii	"float\000"
 4730      7400
 4731              	.LASF101:
 4732 04a3 43794578 		.ascii	"CyExitCriticalSection\000"
 4732      69744372 
 4732      69746963 
 4732      616C5365 
 4732      6374696F 
 4733              	.LASF71:
 4734 04b9 43795379 		.ascii	"CySysLvdEnable\000"
 4734      734C7664 
 4734      456E6162 
 4734      6C6500
 4735              	.LASF19:
 4736 04c8 63795379 		.ascii	"cySysTickCallback\000"
 4736      73546963 
 4736      6B43616C 
 4736      6C626163 
 4736      6B00
 4737              	.LASF54:
 4738 04da 4379496E 		.ascii	"CyIntGetVector\000"
 4738      74476574 
 4738      56656374 
 4738      6F7200
 4739              	.LASF62:
 4740 04e9 6D696C6C 		.ascii	"milliseconds\000"
 4740      69736563 
 4740      6F6E6473 
 4740      00
 4741              	.LASF102:
 4742 04f6 43794465 		.ascii	"CyDelayCycles\000"
 4742      6C617943 
 4742      79636C65 
 4742      7300
 4743              	.LASF15:
 4744 0504 72656738 		.ascii	"reg8\000"
 4744      00
 4745              	.LASF72:
 4746 0509 74687265 		.ascii	"threshold\000"
 4746      73686F6C 
 4746      6400
 4747              	.LASF47:
 4748 0513 43794861 		.ascii	"CyHalt\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 146


 4748      6C7400
 4749              	.LASF1:
 4750 051a 756E7369 		.ascii	"unsigned char\000"
 4750      676E6564 
 4750      20636861 
 4750      7200
 4751              	.LASF2:
 4752 0528 73686F72 		.ascii	"short int\000"
 4752      7420696E 
 4752      7400
 4753              	.LASF41:
 4754 0532 4379496E 		.ascii	"CyIntEnable\000"
 4754      74456E61 
 4754      626C6500 
 4755              	.LASF52:
 4756 053e 4379496E 		.ascii	"CyIntGetSysVector\000"
 4756      74476574 
 4756      53797356 
 4756      6563746F 
 4756      7200
 4757              	.LASF26:
 4758 0550 636C6B53 		.ascii	"clkSelect\000"
 4758      656C6563 
 4758      7400
 4759              	.LASF63:
 4760 055a 43794465 		.ascii	"CyDelayUs\000"
 4760      6C617955 
 4760      7300
 4761              	.LASF35:
 4762 0564 72656173 		.ascii	"reason\000"
 4762      6F6E00
 4763              	.LASF14:
 4764 056b 63686172 		.ascii	"char\000"
 4764      00
 4765              	.LASF17:
 4766 0570 63796973 		.ascii	"cyisraddress\000"
 4766      72616464 
 4766      72657373 
 4766      00
 4767              	.LASF76:
 4768 057d 43795379 		.ascii	"CySysTickEnable\000"
 4768      73546963 
 4768      6B456E61 
 4768      626C6500 
 4769              	.LASF29:
 4770 058d 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4770      73436C6B 
 4770      57726974 
 4770      65537973 
 4770      636C6B44 
 4771              	.LASF86:
 4772 05a4 43795379 		.ascii	"CySysTickSetCallback\000"
 4772      73546963 
 4772      6B536574 
 4772      43616C6C 
 4772      6261636B 
 4773              	.LASF92:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 147


 4774 05b9 43795379 		.ascii	"CySysTickCallbacks\000"
 4774      73546963 
 4774      6B43616C 
 4774      6C626163 
 4774      6B7300
 4775              	.LASF91:
 4776 05cc 756E6971 		.ascii	"uniqueId\000"
 4776      75654964 
 4776      00
 4777              	.LASF61:
 4778 05d5 43794465 		.ascii	"CyDelay\000"
 4778      6C617900 
 4779              	.LASF77:
 4780 05dd 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4780      73546963 
 4780      6B446973 
 4780      61626C65 
 4780      496E7465 
 4781              	.LASF31:
 4782 05f7 43795379 		.ascii	"CySysLvdDisable\000"
 4782      734C7664 
 4782      44697361 
 4782      626C6500 
 4783              	.LASF95:
 4784 0607 63796465 		.ascii	"cydelayFreqMhz\000"
 4784      6C617946 
 4784      7265714D 
 4784      687A00
 4785              	.LASF74:
 4786 0616 43795379 		.ascii	"CySysTickStop\000"
 4786      73546963 
 4786      6B53746F 
 4786      7000
 4787              	.LASF30:
 4788 0624 64697669 		.ascii	"divider\000"
 4788      64657200 
 4789              	.LASF20:
 4790 062c 43795379 		.ascii	"CySysClkImoStart\000"
 4790      73436C6B 
 4790      496D6F53 
 4790      74617274 
 4790      00
 4791              	.LASF69:
 4792 063d 6E657749 		.ascii	"newImoTrim2Value\000"
 4792      6D6F5472 
 4792      696D3256 
 4792      616C7565 
 4792      00
 4793              	.LASF104:
 4794 064e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4794      72617465 
 4794      645F536F 
 4794      75726365 
 4794      5C50536F 
 4795              	.LASF64:
 4796 066d 6D696372 		.ascii	"microseconds\000"
 4796      6F736563 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cczF5dKb.s 			page 148


 4796      6F6E6473 
 4796      00
 4797              	.LASF23:
 4798 067a 746D7052 		.ascii	"tmpReg\000"
 4798      656700
 4799              	.LASF78:
 4800 0681 43795379 		.ascii	"CySysTickSetReload\000"
 4800      73546963 
 4800      6B536574 
 4800      52656C6F 
 4800      616400
 4801              	.LASF106:
 4802 0694 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4802      73546963 
 4802      6B536572 
 4802      76696365 
 4802      43616C6C 
 4803              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
