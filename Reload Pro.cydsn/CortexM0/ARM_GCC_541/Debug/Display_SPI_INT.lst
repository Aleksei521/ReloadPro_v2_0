ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Display_SPI_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Display_SPI_TX_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	Display_SPI_TX_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	Display_SPI_TX_ISR, %function
  25              	Display_SPI_TX_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\Display_SPI_INT.c"
   1:Generated_Source\PSoC4/Display_SPI_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Display_SPI_INT.c **** * File Name: Display_SPI_INT.c
   3:Generated_Source\PSoC4/Display_SPI_INT.c **** * Version 2.50
   4:Generated_Source\PSoC4/Display_SPI_INT.c **** *
   5:Generated_Source\PSoC4/Display_SPI_INT.c **** * Description:
   6:Generated_Source\PSoC4/Display_SPI_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:Generated_Source\PSoC4/Display_SPI_INT.c **** *  component.
   8:Generated_Source\PSoC4/Display_SPI_INT.c **** *
   9:Generated_Source\PSoC4/Display_SPI_INT.c **** * Note:
  10:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
  11:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  12:Generated_Source\PSoC4/Display_SPI_INT.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Display_SPI_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Display_SPI_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Display_SPI_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Display_SPI_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Display_SPI_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  19:Generated_Source\PSoC4/Display_SPI_INT.c **** #include "Display_SPI_PVT.h"
  20:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  21:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  22:Generated_Source\PSoC4/Display_SPI_INT.c **** /* User code required at start of ISR */
  23:Generated_Source\PSoC4/Display_SPI_INT.c **** /* `#START Display_SPI_ISR_START_DEF` */
  24:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  25:Generated_Source\PSoC4/Display_SPI_INT.c **** /* `#END` */
  26:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  27:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  28:Generated_Source\PSoC4/Display_SPI_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC4/Display_SPI_INT.c **** * Function Name: Display_SPI_TX_ISR
  30:Generated_Source\PSoC4/Display_SPI_INT.c **** ********************************************************************************
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 2


  31:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  32:Generated_Source\PSoC4/Display_SPI_INT.c **** * Summary:
  33:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  34:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  35:Generated_Source\PSoC4/Display_SPI_INT.c **** * Parameters:
  36:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
  37:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  38:Generated_Source\PSoC4/Display_SPI_INT.c **** * Return:
  39:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
  40:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  41:Generated_Source\PSoC4/Display_SPI_INT.c **** * Global variables:
  42:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_txBufferWrite - used for the account of the bytes which
  43:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been written down in the TX software buffer.
  44:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_txBufferRead - used for the account of the bytes which
  45:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  46:Generated_Source\PSoC4/Display_SPI_INT.c **** *  sending and FIFO Not Full.
  47:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_txBuffer[Display_SPI_TX_BUFFER_SIZE] - used to store
  48:Generated_Source\PSoC4/Display_SPI_INT.c **** *  data to sending.
  49:Generated_Source\PSoC4/Display_SPI_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  50:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  51:Generated_Source\PSoC4/Display_SPI_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/Display_SPI_INT.c **** CY_ISR(Display_SPI_TX_ISR)
  53:Generated_Source\PSoC4/Display_SPI_INT.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  54:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
  55:Generated_Source\PSoC4/Display_SPI_INT.c ****         uint8 tmpStatus;
  56:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
  57:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  58:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_TX_ISR_ENTRY_CALLBACK
  59:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_TX_ISR_EntryCallback();
  60:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_TX_ISR_ENTRY_CALLBACK */
  61:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  62:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at start of ISR */
  63:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_TX_ISR_START` */
  64:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  65:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
  66:Generated_Source\PSoC4/Display_SPI_INT.c ****     
  67:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
  68:Generated_Source\PSoC4/Display_SPI_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  69:Generated_Source\PSoC4/Display_SPI_INT.c ****         while(Display_SPI_txBufferRead != Display_SPI_txBufferWrite)
  70:Generated_Source\PSoC4/Display_SPI_INT.c ****         {
  71:Generated_Source\PSoC4/Display_SPI_INT.c ****             tmpStatus = Display_SPI_GET_STATUS_TX(Display_SPI_swStatusTx);
  72:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_swStatusTx = tmpStatus;
  73:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  74:Generated_Source\PSoC4/Display_SPI_INT.c ****             if(0u != (Display_SPI_swStatusTx & Display_SPI_STS_TX_FIFO_NOT_FULL))
  75:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
  76:Generated_Source\PSoC4/Display_SPI_INT.c ****                 if(0u == Display_SPI_txBufferFull)
  77:Generated_Source\PSoC4/Display_SPI_INT.c ****                 {
  78:Generated_Source\PSoC4/Display_SPI_INT.c ****                    Display_SPI_txBufferRead++;
  79:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  80:Generated_Source\PSoC4/Display_SPI_INT.c ****                     if(Display_SPI_txBufferRead >= Display_SPI_TX_BUFFER_SIZE)
  81:Generated_Source\PSoC4/Display_SPI_INT.c ****                     {
  82:Generated_Source\PSoC4/Display_SPI_INT.c ****                         Display_SPI_txBufferRead = 0u;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 3


  83:Generated_Source\PSoC4/Display_SPI_INT.c ****                     }
  84:Generated_Source\PSoC4/Display_SPI_INT.c ****                 }
  85:Generated_Source\PSoC4/Display_SPI_INT.c ****                 else
  86:Generated_Source\PSoC4/Display_SPI_INT.c ****                 {
  87:Generated_Source\PSoC4/Display_SPI_INT.c ****                     Display_SPI_txBufferFull = 0u;
  88:Generated_Source\PSoC4/Display_SPI_INT.c ****                 }
  89:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  90:Generated_Source\PSoC4/Display_SPI_INT.c ****                 /* Put data element into the TX FIFO */
  91:Generated_Source\PSoC4/Display_SPI_INT.c ****                 CY_SET_REG8(Display_SPI_TXDATA_PTR, 
  92:Generated_Source\PSoC4/Display_SPI_INT.c ****                                              Display_SPI_txBuffer[Display_SPI_txBufferRead]);
  93:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
  94:Generated_Source\PSoC4/Display_SPI_INT.c ****             else
  95:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
  96:Generated_Source\PSoC4/Display_SPI_INT.c ****                 break;
  97:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
  98:Generated_Source\PSoC4/Display_SPI_INT.c ****         }
  99:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 100:Generated_Source\PSoC4/Display_SPI_INT.c ****         if(Display_SPI_txBufferRead == Display_SPI_txBufferWrite)
 101:Generated_Source\PSoC4/Display_SPI_INT.c ****         {
 102:Generated_Source\PSoC4/Display_SPI_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
 103:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_TX_STATUS_MASK_REG &= ((uint8) ~Display_SPI_STS_TX_FIFO_NOT_FULL);
 104:Generated_Source\PSoC4/Display_SPI_INT.c ****         }
 105:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 106:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
 107:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 108:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at end of ISR (Optional) */
 109:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_TX_ISR_END` */
 110:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 111:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC4/Display_SPI_INT.c ****     
 113:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_TX_ISR_EXIT_CALLBACK
 114:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_TX_ISR_ExitCallback();
 115:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_TX_ISR_EXIT_CALLBACK */
 116:Generated_Source\PSoC4/Display_SPI_INT.c **** }
  33              		.loc 1 116 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE0:
  38              		.size	Display_SPI_TX_ISR, .-Display_SPI_TX_ISR
  39 0002 C046     		.section	.text.Display_SPI_RX_ISR,"ax",%progbits
  40              		.align	2
  41              		.global	Display_SPI_RX_ISR
  42              		.code	16
  43              		.thumb_func
  44              		.type	Display_SPI_RX_ISR, %function
  45              	Display_SPI_RX_ISR:
  46              	.LFB1:
 117:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 118:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 119:Generated_Source\PSoC4/Display_SPI_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/Display_SPI_INT.c **** * Function Name: Display_SPI_RX_ISR
 121:Generated_Source\PSoC4/Display_SPI_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 123:Generated_Source\PSoC4/Display_SPI_INT.c **** * Summary:
 124:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 125:Generated_Source\PSoC4/Display_SPI_INT.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 4


 126:Generated_Source\PSoC4/Display_SPI_INT.c **** * Parameters:
 127:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
 128:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 129:Generated_Source\PSoC4/Display_SPI_INT.c **** * Return:
 130:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
 131:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 132:Generated_Source\PSoC4/Display_SPI_INT.c **** * Global variables:
 133:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_rxBufferWrite - used for the account of the bytes which
 134:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 135:Generated_Source\PSoC4/Display_SPI_INT.c **** *  new data.
 136:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_rxBufferRead - used for the account of the bytes which
 137:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 138:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_rxBuffer[Display_SPI_RX_BUFFER_SIZE] - used to store
 139:Generated_Source\PSoC4/Display_SPI_INT.c **** *  received data, modified when FIFO contains new data.
 140:Generated_Source\PSoC4/Display_SPI_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 141:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 142:Generated_Source\PSoC4/Display_SPI_INT.c **** *******************************************************************************/
 143:Generated_Source\PSoC4/Display_SPI_INT.c **** CY_ISR(Display_SPI_RX_ISR)
 144:Generated_Source\PSoC4/Display_SPI_INT.c **** {
  47              		.loc 1 144 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 145:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 146:Generated_Source\PSoC4/Display_SPI_INT.c ****         uint8 tmpStatus;
 147:Generated_Source\PSoC4/Display_SPI_INT.c ****         uint8 rxData;
 148:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
 149:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 150:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_RX_ISR_ENTRY_CALLBACK
 151:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_RX_ISR_EntryCallback();
 152:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_RX_ISR_ENTRY_CALLBACK */
 153:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 154:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at start of ISR */
 155:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_RX_ISR_START` */
 156:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 157:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
 158:Generated_Source\PSoC4/Display_SPI_INT.c ****     
 159:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 160:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 161:Generated_Source\PSoC4/Display_SPI_INT.c ****         tmpStatus = Display_SPI_GET_STATUS_RX(Display_SPI_swStatusRx);
 162:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_swStatusRx = tmpStatus;
 163:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 164:Generated_Source\PSoC4/Display_SPI_INT.c ****         /* Check if RX data FIFO has some data to be moved into the RX Buffer */
 165:Generated_Source\PSoC4/Display_SPI_INT.c ****         while(0u != (Display_SPI_swStatusRx & Display_SPI_STS_RX_FIFO_NOT_EMPTY))
 166:Generated_Source\PSoC4/Display_SPI_INT.c ****         {
 167:Generated_Source\PSoC4/Display_SPI_INT.c ****             rxData = CY_GET_REG8(Display_SPI_RXDATA_PTR);
 168:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 169:Generated_Source\PSoC4/Display_SPI_INT.c ****             /* Set next pointer. */
 170:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_rxBufferWrite++;
 171:Generated_Source\PSoC4/Display_SPI_INT.c ****             if(Display_SPI_rxBufferWrite >= Display_SPI_RX_BUFFER_SIZE)
 172:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
 173:Generated_Source\PSoC4/Display_SPI_INT.c ****                 Display_SPI_rxBufferWrite = 0u;
 174:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
 175:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 176:Generated_Source\PSoC4/Display_SPI_INT.c ****             if(Display_SPI_rxBufferWrite == Display_SPI_rxBufferRead)
 177:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 5


 178:Generated_Source\PSoC4/Display_SPI_INT.c ****                 Display_SPI_rxBufferRead++;
 179:Generated_Source\PSoC4/Display_SPI_INT.c ****                 if(Display_SPI_rxBufferRead >= Display_SPI_RX_BUFFER_SIZE)
 180:Generated_Source\PSoC4/Display_SPI_INT.c ****                 {
 181:Generated_Source\PSoC4/Display_SPI_INT.c ****                     Display_SPI_rxBufferRead = 0u;
 182:Generated_Source\PSoC4/Display_SPI_INT.c ****                 }
 183:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 184:Generated_Source\PSoC4/Display_SPI_INT.c ****                 Display_SPI_rxBufferFull = 1u;
 185:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
 186:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 187:Generated_Source\PSoC4/Display_SPI_INT.c ****             /* Move data from the FIFO to the Buffer */
 188:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_rxBuffer[Display_SPI_rxBufferWrite] = rxData;
 189:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 190:Generated_Source\PSoC4/Display_SPI_INT.c ****             tmpStatus = Display_SPI_GET_STATUS_RX(Display_SPI_swStatusRx);
 191:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_swStatusRx = tmpStatus;
 192:Generated_Source\PSoC4/Display_SPI_INT.c ****         }
 193:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 194:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
 195:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 196:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at end of ISR (Optional) */
 197:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_RX_ISR_END` */
 198:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 199:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
 200:Generated_Source\PSoC4/Display_SPI_INT.c ****     
 201:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_RX_ISR_EXIT_CALLBACK
 202:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_RX_ISR_ExitCallback();
 203:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_RX_ISR_EXIT_CALLBACK */
 204:Generated_Source\PSoC4/Display_SPI_INT.c **** }
  52              		.loc 1 204 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE1:
  57              		.size	Display_SPI_RX_ISR, .-Display_SPI_RX_ISR
  58 0002 C046     		.text
  59              	.Letext0:
  60              		.section	.debug_info,"",%progbits
  61              	.Ldebug_info0:
  62 0000 A6000000 		.4byte	0xa6
  63 0004 0400     		.2byte	0x4
  64 0006 00000000 		.4byte	.Ldebug_abbrev0
  65 000a 04       		.byte	0x4
  66 000b 01       		.uleb128 0x1
  67 000c C7000000 		.4byte	.LASF15
  68 0010 0C       		.byte	0xc
  69 0011 90010000 		.4byte	.LASF16
  70 0015 1B000000 		.4byte	.LASF17
  71 0019 00000000 		.4byte	.Ldebug_ranges0+0
  72 001d 00000000 		.4byte	0
  73 0021 00000000 		.4byte	.Ldebug_line0
  74 0025 02       		.uleb128 0x2
  75 0026 01       		.byte	0x1
  76 0027 06       		.byte	0x6
  77 0028 BB000000 		.4byte	.LASF0
  78 002c 02       		.uleb128 0x2
  79 002d 01       		.byte	0x1
  80 002e 08       		.byte	0x8
  81 002f 85000000 		.4byte	.LASF1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 6


  82 0033 02       		.uleb128 0x2
  83 0034 02       		.byte	0x2
  84 0035 05       		.byte	0x5
  85 0036 73010000 		.4byte	.LASF2
  86 003a 02       		.uleb128 0x2
  87 003b 02       		.byte	0x2
  88 003c 07       		.byte	0x7
  89 003d A8000000 		.4byte	.LASF3
  90 0041 02       		.uleb128 0x2
  91 0042 04       		.byte	0x4
  92 0043 05       		.byte	0x5
  93 0044 98000000 		.4byte	.LASF4
  94 0048 02       		.uleb128 0x2
  95 0049 04       		.byte	0x4
  96 004a 07       		.byte	0x7
  97 004b 56000000 		.4byte	.LASF5
  98 004f 02       		.uleb128 0x2
  99 0050 08       		.byte	0x8
 100 0051 05       		.byte	0x5
 101 0052 00000000 		.4byte	.LASF6
 102 0056 02       		.uleb128 0x2
 103 0057 08       		.byte	0x8
 104 0058 07       		.byte	0x7
 105 0059 68000000 		.4byte	.LASF7
 106 005d 03       		.uleb128 0x3
 107 005e 04       		.byte	0x4
 108 005f 05       		.byte	0x5
 109 0060 696E7400 		.ascii	"int\000"
 110 0064 02       		.uleb128 0x2
 111 0065 04       		.byte	0x4
 112 0066 07       		.byte	0x7
 113 0067 0E000000 		.4byte	.LASF8
 114 006b 02       		.uleb128 0x2
 115 006c 04       		.byte	0x4
 116 006d 04       		.byte	0x4
 117 006e 7F000000 		.4byte	.LASF9
 118 0072 02       		.uleb128 0x2
 119 0073 08       		.byte	0x8
 120 0074 04       		.byte	0x4
 121 0075 A1000000 		.4byte	.LASF10
 122 0079 02       		.uleb128 0x2
 123 007a 01       		.byte	0x1
 124 007b 08       		.byte	0x8
 125 007c 93000000 		.4byte	.LASF11
 126 0080 02       		.uleb128 0x2
 127 0081 04       		.byte	0x4
 128 0082 07       		.byte	0x7
 129 0083 B9010000 		.4byte	.LASF12
 130 0087 04       		.uleb128 0x4
 131 0088 60010000 		.4byte	.LASF13
 132 008c 01       		.byte	0x1
 133 008d 34       		.byte	0x34
 134 008e 00000000 		.4byte	.LFB0
 135 0092 02000000 		.4byte	.LFE0-.LFB0
 136 0096 01       		.uleb128 0x1
 137 0097 9C       		.byte	0x9c
 138 0098 04       		.uleb128 0x4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 7


 139 0099 7D010000 		.4byte	.LASF14
 140 009d 01       		.byte	0x1
 141 009e 8F       		.byte	0x8f
 142 009f 00000000 		.4byte	.LFB1
 143 00a3 02000000 		.4byte	.LFE1-.LFB1
 144 00a7 01       		.uleb128 0x1
 145 00a8 9C       		.byte	0x9c
 146 00a9 00       		.byte	0
 147              		.section	.debug_abbrev,"",%progbits
 148              	.Ldebug_abbrev0:
 149 0000 01       		.uleb128 0x1
 150 0001 11       		.uleb128 0x11
 151 0002 01       		.byte	0x1
 152 0003 25       		.uleb128 0x25
 153 0004 0E       		.uleb128 0xe
 154 0005 13       		.uleb128 0x13
 155 0006 0B       		.uleb128 0xb
 156 0007 03       		.uleb128 0x3
 157 0008 0E       		.uleb128 0xe
 158 0009 1B       		.uleb128 0x1b
 159 000a 0E       		.uleb128 0xe
 160 000b 55       		.uleb128 0x55
 161 000c 17       		.uleb128 0x17
 162 000d 11       		.uleb128 0x11
 163 000e 01       		.uleb128 0x1
 164 000f 10       		.uleb128 0x10
 165 0010 17       		.uleb128 0x17
 166 0011 00       		.byte	0
 167 0012 00       		.byte	0
 168 0013 02       		.uleb128 0x2
 169 0014 24       		.uleb128 0x24
 170 0015 00       		.byte	0
 171 0016 0B       		.uleb128 0xb
 172 0017 0B       		.uleb128 0xb
 173 0018 3E       		.uleb128 0x3e
 174 0019 0B       		.uleb128 0xb
 175 001a 03       		.uleb128 0x3
 176 001b 0E       		.uleb128 0xe
 177 001c 00       		.byte	0
 178 001d 00       		.byte	0
 179 001e 03       		.uleb128 0x3
 180 001f 24       		.uleb128 0x24
 181 0020 00       		.byte	0
 182 0021 0B       		.uleb128 0xb
 183 0022 0B       		.uleb128 0xb
 184 0023 3E       		.uleb128 0x3e
 185 0024 0B       		.uleb128 0xb
 186 0025 03       		.uleb128 0x3
 187 0026 08       		.uleb128 0x8
 188 0027 00       		.byte	0
 189 0028 00       		.byte	0
 190 0029 04       		.uleb128 0x4
 191 002a 2E       		.uleb128 0x2e
 192 002b 00       		.byte	0
 193 002c 3F       		.uleb128 0x3f
 194 002d 19       		.uleb128 0x19
 195 002e 03       		.uleb128 0x3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 8


 196 002f 0E       		.uleb128 0xe
 197 0030 3A       		.uleb128 0x3a
 198 0031 0B       		.uleb128 0xb
 199 0032 3B       		.uleb128 0x3b
 200 0033 0B       		.uleb128 0xb
 201 0034 27       		.uleb128 0x27
 202 0035 19       		.uleb128 0x19
 203 0036 11       		.uleb128 0x11
 204 0037 01       		.uleb128 0x1
 205 0038 12       		.uleb128 0x12
 206 0039 06       		.uleb128 0x6
 207 003a 40       		.uleb128 0x40
 208 003b 18       		.uleb128 0x18
 209 003c 9742     		.uleb128 0x2117
 210 003e 19       		.uleb128 0x19
 211 003f 00       		.byte	0
 212 0040 00       		.byte	0
 213 0041 00       		.byte	0
 214              		.section	.debug_aranges,"",%progbits
 215 0000 24000000 		.4byte	0x24
 216 0004 0200     		.2byte	0x2
 217 0006 00000000 		.4byte	.Ldebug_info0
 218 000a 04       		.byte	0x4
 219 000b 00       		.byte	0
 220 000c 0000     		.2byte	0
 221 000e 0000     		.2byte	0
 222 0010 00000000 		.4byte	.LFB0
 223 0014 02000000 		.4byte	.LFE0-.LFB0
 224 0018 00000000 		.4byte	.LFB1
 225 001c 02000000 		.4byte	.LFE1-.LFB1
 226 0020 00000000 		.4byte	0
 227 0024 00000000 		.4byte	0
 228              		.section	.debug_ranges,"",%progbits
 229              	.Ldebug_ranges0:
 230 0000 00000000 		.4byte	.LFB0
 231 0004 02000000 		.4byte	.LFE0
 232 0008 00000000 		.4byte	.LFB1
 233 000c 02000000 		.4byte	.LFE1
 234 0010 00000000 		.4byte	0
 235 0014 00000000 		.4byte	0
 236              		.section	.debug_line,"",%progbits
 237              	.Ldebug_line0:
 238 0000 6A000000 		.section	.debug_str,"MS",%progbits,1
 238      02003F00 
 238      00000201 
 238      FB0E0D00 
 238      01010101 
 239              	.LASF6:
 240 0000 6C6F6E67 		.ascii	"long long int\000"
 240      206C6F6E 
 240      6720696E 
 240      7400
 241              	.LASF8:
 242 000e 756E7369 		.ascii	"unsigned int\000"
 242      676E6564 
 242      20696E74 
 242      00
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 9


 243              	.LASF17:
 244 001b 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Relo"
 244      5F776F72 
 244      6B5C6D79 
 244      5F70726F 
 244      6A656374 
 245 0049 61642050 		.ascii	"ad Pro.cydsn\000"
 245      726F2E63 
 245      7964736E 
 245      00
 246              	.LASF5:
 247 0056 6C6F6E67 		.ascii	"long unsigned int\000"
 247      20756E73 
 247      69676E65 
 247      6420696E 
 247      7400
 248              	.LASF7:
 249 0068 6C6F6E67 		.ascii	"long long unsigned int\000"
 249      206C6F6E 
 249      6720756E 
 249      7369676E 
 249      65642069 
 250              	.LASF9:
 251 007f 666C6F61 		.ascii	"float\000"
 251      7400
 252              	.LASF1:
 253 0085 756E7369 		.ascii	"unsigned char\000"
 253      676E6564 
 253      20636861 
 253      7200
 254              	.LASF11:
 255 0093 63686172 		.ascii	"char\000"
 255      00
 256              	.LASF4:
 257 0098 6C6F6E67 		.ascii	"long int\000"
 257      20696E74 
 257      00
 258              	.LASF10:
 259 00a1 646F7562 		.ascii	"double\000"
 259      6C6500
 260              	.LASF3:
 261 00a8 73686F72 		.ascii	"short unsigned int\000"
 261      7420756E 
 261      7369676E 
 261      65642069 
 261      6E7400
 262              	.LASF0:
 263 00bb 7369676E 		.ascii	"signed char\000"
 263      65642063 
 263      68617200 
 264              	.LASF15:
 265 00c7 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 265      43393920 
 265      352E342E 
 265      31203230 
 265      31363036 
 266 00fa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccKVVZIK.s 			page 10


 266      20726576 
 266      6973696F 
 266      6E203233 
 266      37373135 
 267 012d 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 267      74643D67 
 267      6E753939 
 267      202D6666 
 267      756E6374 
 268              	.LASF13:
 269 0160 44697370 		.ascii	"Display_SPI_TX_ISR\000"
 269      6C61795F 
 269      5350495F 
 269      54585F49 
 269      535200
 270              	.LASF2:
 271 0173 73686F72 		.ascii	"short int\000"
 271      7420696E 
 271      7400
 272              	.LASF14:
 273 017d 44697370 		.ascii	"Display_SPI_RX_ISR\000"
 273      6C61795F 
 273      5350495F 
 273      52585F49 
 273      535200
 274              	.LASF16:
 275 0190 47656E65 		.ascii	"Generated_Source\\PSoC4\\Display_SPI_INT.c\000"
 275      72617465 
 275      645F536F 
 275      75726365 
 275      5C50536F 
 276              	.LASF12:
 277 01b9 73697A65 		.ascii	"sizetype\000"
 277      74797065 
 277      00
 278              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
