ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Display_SPI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Display_SPI_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Display_SPI_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	Display_SPI_Enable, %function
  25              	Display_SPI_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\Display_SPI.c"
   1:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Display_SPI.c **** * File Name: Display_SPI.c
   3:Generated_Source\PSoC4/Display_SPI.c **** * Version 2.50
   4:Generated_Source\PSoC4/Display_SPI.c **** *
   5:Generated_Source\PSoC4/Display_SPI.c **** * Description:
   6:Generated_Source\PSoC4/Display_SPI.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/Display_SPI.c **** *
   8:Generated_Source\PSoC4/Display_SPI.c **** * Note:
   9:Generated_Source\PSoC4/Display_SPI.c **** *  None.
  10:Generated_Source\PSoC4/Display_SPI.c **** *
  11:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
  12:Generated_Source\PSoC4/Display_SPI.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/Display_SPI.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/Display_SPI.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/Display_SPI.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/Display_SPI.c **** 
  18:Generated_Source\PSoC4/Display_SPI.c **** #include "Display_SPI_PVT.h"
  19:Generated_Source\PSoC4/Display_SPI.c **** 
  20:Generated_Source\PSoC4/Display_SPI.c **** #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_txBuffer[Display_SPI_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_txBufferFull;
  23:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_txBufferRead;
  24:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_txBufferWrite;
  25:Generated_Source\PSoC4/Display_SPI.c **** #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/Display_SPI.c **** 
  27:Generated_Source\PSoC4/Display_SPI.c **** #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_rxBuffer[Display_SPI_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_rxBufferFull;
  30:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_rxBufferRead;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 2


  31:Generated_Source\PSoC4/Display_SPI.c ****     volatile uint8 Display_SPI_rxBufferWrite;
  32:Generated_Source\PSoC4/Display_SPI.c **** #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/Display_SPI.c **** 
  34:Generated_Source\PSoC4/Display_SPI.c **** uint8 Display_SPI_initVar = 0u;
  35:Generated_Source\PSoC4/Display_SPI.c **** 
  36:Generated_Source\PSoC4/Display_SPI.c **** volatile uint8 Display_SPI_swStatusTx;
  37:Generated_Source\PSoC4/Display_SPI.c **** volatile uint8 Display_SPI_swStatusRx;
  38:Generated_Source\PSoC4/Display_SPI.c **** 
  39:Generated_Source\PSoC4/Display_SPI.c **** 
  40:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_Init
  42:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
  43:Generated_Source\PSoC4/Display_SPI.c **** *
  44:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
  45:Generated_Source\PSoC4/Display_SPI.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/Display_SPI.c **** *
  47:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
  48:Generated_Source\PSoC4/Display_SPI.c **** *  None.
  49:Generated_Source\PSoC4/Display_SPI.c **** *
  50:Generated_Source\PSoC4/Display_SPI.c **** * Return:
  51:Generated_Source\PSoC4/Display_SPI.c **** *  None.
  52:Generated_Source\PSoC4/Display_SPI.c **** *
  53:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
  54:Generated_Source\PSoC4/Display_SPI.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/Display_SPI.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/Display_SPI.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/Display_SPI.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/Display_SPI.c **** *
  59:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
  60:Generated_Source\PSoC4/Display_SPI.c **** *  No.
  61:Generated_Source\PSoC4/Display_SPI.c **** *
  62:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_Init(void) 
  64:Generated_Source\PSoC4/Display_SPI.c **** {
  65:Generated_Source\PSoC4/Display_SPI.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_COUNTER_PERIOD_REG = Display_SPI_BITCTR_INIT;
  67:Generated_Source\PSoC4/Display_SPI.c **** 
  68:Generated_Source\PSoC4/Display_SPI.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC4/Display_SPI.c ****         CyIntDisable         (Display_SPI_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/Display_SPI.c ****         CyIntSetPriority     (Display_SPI_TX_ISR_NUMBER,  Display_SPI_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/Display_SPI.c ****         (void) CyIntSetVector(Display_SPI_TX_ISR_NUMBER, &Display_SPI_TX_ISR);
  73:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/Display_SPI.c **** 
  75:Generated_Source\PSoC4/Display_SPI.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/Display_SPI.c ****         CyIntDisable         (Display_SPI_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/Display_SPI.c ****         CyIntSetPriority     (Display_SPI_RX_ISR_NUMBER,  Display_SPI_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/Display_SPI.c ****         (void) CyIntSetVector(Display_SPI_RX_ISR_NUMBER, &Display_SPI_RX_ISR);
  80:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/Display_SPI.c **** 
  82:Generated_Source\PSoC4/Display_SPI.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_ClearFIFO();
  84:Generated_Source\PSoC4/Display_SPI.c **** 
  85:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_rxBufferRead  = 0u;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 3


  88:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/Display_SPI.c **** 
  91:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/Display_SPI.c **** 
  97:Generated_Source\PSoC4/Display_SPI.c ****     (void) Display_SPI_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC4/Display_SPI.c ****     (void) Display_SPI_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC4/Display_SPI.c **** 
 100:Generated_Source\PSoC4/Display_SPI.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_TX_STATUS_MASK_REG = Display_SPI_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_RX_STATUS_MASK_REG = Display_SPI_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC4/Display_SPI.c **** }
 104:Generated_Source\PSoC4/Display_SPI.c **** 
 105:Generated_Source\PSoC4/Display_SPI.c **** 
 106:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_Enable
 108:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 109:Generated_Source\PSoC4/Display_SPI.c **** *
 110:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 111:Generated_Source\PSoC4/Display_SPI.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/Display_SPI.c **** *
 113:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 114:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 115:Generated_Source\PSoC4/Display_SPI.c **** *
 116:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 117:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 118:Generated_Source\PSoC4/Display_SPI.c **** *
 119:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_Enable(void) 
 121:Generated_Source\PSoC4/Display_SPI.c **** {
  28              		.loc 1 121 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 122:Generated_Source\PSoC4/Display_SPI.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/Display_SPI.c **** 
 124:Generated_Source\PSoC4/Display_SPI.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 124 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 125:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_COUNTER_CONTROL_REG |= Display_SPI_CNTR_ENABLE;
  39              		.loc 1 125 0
  40 0006 0A4A     		ldr	r2, .L2
  41 0008 1178     		ldrb	r1, [r2]
  42 000a 2023     		movs	r3, #32
  43 000c 0B43     		orrs	r3, r1
  44 000e DBB2     		uxtb	r3, r3
  45 0010 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_TX_STATUS_ACTL_REG  |= Display_SPI_INT_ENABLE;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 4


  46              		.loc 1 126 0
  47 0012 0849     		ldr	r1, .L2+4
  48 0014 0A78     		ldrb	r2, [r1]
  49 0016 1023     		movs	r3, #16
  50 0018 1A43     		orrs	r2, r3
  51 001a D2B2     		uxtb	r2, r2
  52 001c 0A70     		strb	r2, [r1]
 127:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_RX_STATUS_ACTL_REG  |= Display_SPI_INT_ENABLE;
  53              		.loc 1 127 0
  54 001e 064A     		ldr	r2, .L2+8
  55 0020 1178     		ldrb	r1, [r2]
  56 0022 0B43     		orrs	r3, r1
  57 0024 DBB2     		uxtb	r3, r3
  58 0026 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/Display_SPI.c ****     CyExitCriticalSection(enableInterrupts);
  59              		.loc 1 128 0
  60 0028 FFF7FEFF 		bl	CyExitCriticalSection
  61              	.LVL1:
 129:Generated_Source\PSoC4/Display_SPI.c **** 
 130:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_IntClock_Enable();
 132:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/Display_SPI.c **** 
 134:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_EnableTxInt();
 135:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_EnableRxInt();
 136:Generated_Source\PSoC4/Display_SPI.c **** }
  62              		.loc 1 136 0
  63              		@ sp needed
  64 002c 10BD     		pop	{r4, pc}
  65              	.L3:
  66 002e C046     		.align	2
  67              	.L2:
  68 0030 91000F40 		.word	1074725009
  69 0034 92000F40 		.word	1074725010
  70 0038 93000F40 		.word	1074725011
  71              		.cfi_endproc
  72              	.LFE1:
  73              		.size	Display_SPI_Enable, .-Display_SPI_Enable
  74              		.section	.text.Display_SPI_Stop,"ax",%progbits
  75              		.align	2
  76              		.global	Display_SPI_Stop
  77              		.code	16
  78              		.thumb_func
  79              		.type	Display_SPI_Stop, %function
  80              	Display_SPI_Stop:
  81              	.LFB3:
 137:Generated_Source\PSoC4/Display_SPI.c **** 
 138:Generated_Source\PSoC4/Display_SPI.c **** 
 139:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_Start
 141:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 142:Generated_Source\PSoC4/Display_SPI.c **** *
 143:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 144:Generated_Source\PSoC4/Display_SPI.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC4/Display_SPI.c **** *
 146:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 147:Generated_Source\PSoC4/Display_SPI.c **** *  None.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 5


 148:Generated_Source\PSoC4/Display_SPI.c **** *
 149:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 150:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 151:Generated_Source\PSoC4/Display_SPI.c **** *
 152:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 153:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/Display_SPI.c **** *  first function call.
 155:Generated_Source\PSoC4/Display_SPI.c **** *
 156:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 157:Generated_Source\PSoC4/Display_SPI.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/Display_SPI.c **** *
 159:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 160:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 161:Generated_Source\PSoC4/Display_SPI.c **** *
 162:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_Start(void) 
 164:Generated_Source\PSoC4/Display_SPI.c **** {
 165:Generated_Source\PSoC4/Display_SPI.c ****     if(0u == Display_SPI_initVar)
 166:Generated_Source\PSoC4/Display_SPI.c ****     {
 167:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_Init();
 168:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_initVar = 1u;
 169:Generated_Source\PSoC4/Display_SPI.c ****     }
 170:Generated_Source\PSoC4/Display_SPI.c **** 
 171:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_Enable();
 172:Generated_Source\PSoC4/Display_SPI.c **** }
 173:Generated_Source\PSoC4/Display_SPI.c **** 
 174:Generated_Source\PSoC4/Display_SPI.c **** 
 175:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_Stop
 177:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 178:Generated_Source\PSoC4/Display_SPI.c **** *
 179:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 180:Generated_Source\PSoC4/Display_SPI.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/Display_SPI.c **** *
 182:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 183:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 184:Generated_Source\PSoC4/Display_SPI.c **** *
 185:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 186:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 187:Generated_Source\PSoC4/Display_SPI.c **** *
 188:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 189:Generated_Source\PSoC4/Display_SPI.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/Display_SPI.c **** *
 191:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_Stop(void) 
 193:Generated_Source\PSoC4/Display_SPI.c **** {
  82              		.loc 1 193 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
 194:Generated_Source\PSoC4/Display_SPI.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/Display_SPI.c **** 
 196:Generated_Source\PSoC4/Display_SPI.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 6


  90              		.loc 1 196 0
  91 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  92              	.LVL2:
 197:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_TX_STATUS_ACTL_REG &= ((uint8) ~Display_SPI_INT_ENABLE);
  93              		.loc 1 197 0
  94 0006 064A     		ldr	r2, .L5
  95 0008 1378     		ldrb	r3, [r2]
  96 000a 1021     		movs	r1, #16
  97 000c 8B43     		bics	r3, r1
  98 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_RX_STATUS_ACTL_REG &= ((uint8) ~Display_SPI_INT_ENABLE);
  99              		.loc 1 198 0
 100 0010 044A     		ldr	r2, .L5+4
 101 0012 1378     		ldrb	r3, [r2]
 102 0014 8B43     		bics	r3, r1
 103 0016 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/Display_SPI.c ****     CyExitCriticalSection(enableInterrupts);
 104              		.loc 1 199 0
 105 0018 FFF7FEFF 		bl	CyExitCriticalSection
 106              	.LVL3:
 200:Generated_Source\PSoC4/Display_SPI.c **** 
 201:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_CLOCK)
 202:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_IntClock_Disable();
 203:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/Display_SPI.c **** 
 205:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_DisableTxInt();
 206:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_DisableRxInt();
 207:Generated_Source\PSoC4/Display_SPI.c **** }
 107              		.loc 1 207 0
 108              		@ sp needed
 109 001c 10BD     		pop	{r4, pc}
 110              	.L6:
 111 001e C046     		.align	2
 112              	.L5:
 113 0020 92000F40 		.word	1074725010
 114 0024 93000F40 		.word	1074725011
 115              		.cfi_endproc
 116              	.LFE3:
 117              		.size	Display_SPI_Stop, .-Display_SPI_Stop
 118              		.section	.text.Display_SPI_EnableTxInt,"ax",%progbits
 119              		.align	2
 120              		.global	Display_SPI_EnableTxInt
 121              		.code	16
 122              		.thumb_func
 123              		.type	Display_SPI_EnableTxInt, %function
 124              	Display_SPI_EnableTxInt:
 125              	.LFB4:
 208:Generated_Source\PSoC4/Display_SPI.c **** 
 209:Generated_Source\PSoC4/Display_SPI.c **** 
 210:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_EnableTxInt
 212:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 213:Generated_Source\PSoC4/Display_SPI.c **** *
 214:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 215:Generated_Source\PSoC4/Display_SPI.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/Display_SPI.c **** *
 217:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 7


 218:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 219:Generated_Source\PSoC4/Display_SPI.c **** *
 220:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 221:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 222:Generated_Source\PSoC4/Display_SPI.c **** *
 223:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 224:Generated_Source\PSoC4/Display_SPI.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/Display_SPI.c **** *
 226:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_EnableTxInt(void) 
 228:Generated_Source\PSoC4/Display_SPI.c **** {
 126              		.loc 1 228 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 229:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/Display_SPI.c ****         CyIntEnable(Display_SPI_TX_ISR_NUMBER);
 231:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/Display_SPI.c **** }
 131              		.loc 1 232 0
 132              		@ sp needed
 133 0000 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE4:
 136              		.size	Display_SPI_EnableTxInt, .-Display_SPI_EnableTxInt
 137 0002 C046     		.section	.text.Display_SPI_EnableRxInt,"ax",%progbits
 138              		.align	2
 139              		.global	Display_SPI_EnableRxInt
 140              		.code	16
 141              		.thumb_func
 142              		.type	Display_SPI_EnableRxInt, %function
 143              	Display_SPI_EnableRxInt:
 144              	.LFB5:
 233:Generated_Source\PSoC4/Display_SPI.c **** 
 234:Generated_Source\PSoC4/Display_SPI.c **** 
 235:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_EnableRxInt
 237:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 238:Generated_Source\PSoC4/Display_SPI.c **** *
 239:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 240:Generated_Source\PSoC4/Display_SPI.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/Display_SPI.c **** *
 242:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 243:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 244:Generated_Source\PSoC4/Display_SPI.c **** *
 245:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 246:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 247:Generated_Source\PSoC4/Display_SPI.c **** *
 248:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 249:Generated_Source\PSoC4/Display_SPI.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC4/Display_SPI.c **** *
 251:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_EnableRxInt(void) 
 253:Generated_Source\PSoC4/Display_SPI.c **** {
 145              		.loc 1 253 0
 146              		.cfi_startproc
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 8


 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 254:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/Display_SPI.c ****         CyIntEnable(Display_SPI_RX_ISR_NUMBER);
 256:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC4/Display_SPI.c **** }
 150              		.loc 1 257 0
 151              		@ sp needed
 152 0000 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE5:
 155              		.size	Display_SPI_EnableRxInt, .-Display_SPI_EnableRxInt
 156 0002 C046     		.section	.text.Display_SPI_DisableTxInt,"ax",%progbits
 157              		.align	2
 158              		.global	Display_SPI_DisableTxInt
 159              		.code	16
 160              		.thumb_func
 161              		.type	Display_SPI_DisableTxInt, %function
 162              	Display_SPI_DisableTxInt:
 163              	.LFB6:
 258:Generated_Source\PSoC4/Display_SPI.c **** 
 259:Generated_Source\PSoC4/Display_SPI.c **** 
 260:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_DisableTxInt
 262:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 263:Generated_Source\PSoC4/Display_SPI.c **** *
 264:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 265:Generated_Source\PSoC4/Display_SPI.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC4/Display_SPI.c **** *
 267:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 268:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 269:Generated_Source\PSoC4/Display_SPI.c **** *
 270:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 271:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 272:Generated_Source\PSoC4/Display_SPI.c **** *
 273:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 274:Generated_Source\PSoC4/Display_SPI.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/Display_SPI.c **** *
 276:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_DisableTxInt(void) 
 278:Generated_Source\PSoC4/Display_SPI.c **** {
 164              		.loc 1 278 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 279:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/Display_SPI.c ****         CyIntDisable(Display_SPI_TX_ISR_NUMBER);
 281:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC4/Display_SPI.c **** }
 169              		.loc 1 282 0
 170              		@ sp needed
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE6:
 174              		.size	Display_SPI_DisableTxInt, .-Display_SPI_DisableTxInt
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 9


 175 0002 C046     		.section	.text.Display_SPI_DisableRxInt,"ax",%progbits
 176              		.align	2
 177              		.global	Display_SPI_DisableRxInt
 178              		.code	16
 179              		.thumb_func
 180              		.type	Display_SPI_DisableRxInt, %function
 181              	Display_SPI_DisableRxInt:
 182              	.LFB7:
 283:Generated_Source\PSoC4/Display_SPI.c **** 
 284:Generated_Source\PSoC4/Display_SPI.c **** 
 285:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_DisableRxInt
 287:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 288:Generated_Source\PSoC4/Display_SPI.c **** *
 289:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 290:Generated_Source\PSoC4/Display_SPI.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/Display_SPI.c **** *
 292:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 293:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 294:Generated_Source\PSoC4/Display_SPI.c **** *
 295:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 296:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 297:Generated_Source\PSoC4/Display_SPI.c **** *
 298:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 299:Generated_Source\PSoC4/Display_SPI.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC4/Display_SPI.c **** *
 301:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_DisableRxInt(void) 
 303:Generated_Source\PSoC4/Display_SPI.c **** {
 183              		.loc 1 303 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 304:Generated_Source\PSoC4/Display_SPI.c ****     #if(0u != Display_SPI_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/Display_SPI.c ****         CyIntDisable(Display_SPI_RX_ISR_NUMBER);
 306:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (0u != Display_SPI_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/Display_SPI.c **** }
 188              		.loc 1 307 0
 189              		@ sp needed
 190 0000 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE7:
 193              		.size	Display_SPI_DisableRxInt, .-Display_SPI_DisableRxInt
 194 0002 C046     		.section	.text.Display_SPI_SetTxInterruptMode,"ax",%progbits
 195              		.align	2
 196              		.global	Display_SPI_SetTxInterruptMode
 197              		.code	16
 198              		.thumb_func
 199              		.type	Display_SPI_SetTxInterruptMode, %function
 200              	Display_SPI_SetTxInterruptMode:
 201              	.LFB8:
 308:Generated_Source\PSoC4/Display_SPI.c **** 
 309:Generated_Source\PSoC4/Display_SPI.c **** 
 310:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_SetTxInterruptMode
 312:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 10


 313:Generated_Source\PSoC4/Display_SPI.c **** *
 314:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 315:Generated_Source\PSoC4/Display_SPI.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/Display_SPI.c **** *
 317:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 318:Generated_Source\PSoC4/Display_SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/Display_SPI.c **** *  header file).
 320:Generated_Source\PSoC4/Display_SPI.c **** *
 321:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 322:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 323:Generated_Source\PSoC4/Display_SPI.c **** *
 324:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 325:Generated_Source\PSoC4/Display_SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/Display_SPI.c **** *
 327:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC4/Display_SPI.c **** {
 202              		.loc 1 329 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL4:
 330:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_TX_STATUS_MASK_REG = intSrc;
 208              		.loc 1 330 0
 209 0000 014B     		ldr	r3, .L12
 210 0002 1870     		strb	r0, [r3]
 331:Generated_Source\PSoC4/Display_SPI.c **** }
 211              		.loc 1 331 0
 212              		@ sp needed
 213 0004 7047     		bx	lr
 214              	.L13:
 215 0006 C046     		.align	2
 216              	.L12:
 217 0008 82000F40 		.word	1074724994
 218              		.cfi_endproc
 219              	.LFE8:
 220              		.size	Display_SPI_SetTxInterruptMode, .-Display_SPI_SetTxInterruptMode
 221              		.section	.text.Display_SPI_SetRxInterruptMode,"ax",%progbits
 222              		.align	2
 223              		.global	Display_SPI_SetRxInterruptMode
 224              		.code	16
 225              		.thumb_func
 226              		.type	Display_SPI_SetRxInterruptMode, %function
 227              	Display_SPI_SetRxInterruptMode:
 228              	.LFB9:
 332:Generated_Source\PSoC4/Display_SPI.c **** 
 333:Generated_Source\PSoC4/Display_SPI.c **** 
 334:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_SetRxInterruptMode
 336:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 337:Generated_Source\PSoC4/Display_SPI.c **** *
 338:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 339:Generated_Source\PSoC4/Display_SPI.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/Display_SPI.c **** *
 341:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 342:Generated_Source\PSoC4/Display_SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 11


 343:Generated_Source\PSoC4/Display_SPI.c **** *  header file).
 344:Generated_Source\PSoC4/Display_SPI.c **** *
 345:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 346:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 347:Generated_Source\PSoC4/Display_SPI.c **** *
 348:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 349:Generated_Source\PSoC4/Display_SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/Display_SPI.c **** *
 351:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC4/Display_SPI.c **** {
 229              		.loc 1 353 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL5:
 354:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_RX_STATUS_MASK_REG  = intSrc;
 235              		.loc 1 354 0
 236 0000 014B     		ldr	r3, .L15
 237 0002 1870     		strb	r0, [r3]
 355:Generated_Source\PSoC4/Display_SPI.c **** }
 238              		.loc 1 355 0
 239              		@ sp needed
 240 0004 7047     		bx	lr
 241              	.L16:
 242 0006 C046     		.align	2
 243              	.L15:
 244 0008 83000F40 		.word	1074724995
 245              		.cfi_endproc
 246              	.LFE9:
 247              		.size	Display_SPI_SetRxInterruptMode, .-Display_SPI_SetRxInterruptMode
 248              		.section	.text.Display_SPI_ReadTxStatus,"ax",%progbits
 249              		.align	2
 250              		.global	Display_SPI_ReadTxStatus
 251              		.code	16
 252              		.thumb_func
 253              		.type	Display_SPI_ReadTxStatus, %function
 254              	Display_SPI_ReadTxStatus:
 255              	.LFB10:
 356:Generated_Source\PSoC4/Display_SPI.c **** 
 357:Generated_Source\PSoC4/Display_SPI.c **** 
 358:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_ReadTxStatus
 360:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 361:Generated_Source\PSoC4/Display_SPI.c **** *
 362:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 363:Generated_Source\PSoC4/Display_SPI.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/Display_SPI.c **** *
 365:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 366:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 367:Generated_Source\PSoC4/Display_SPI.c **** *
 368:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 369:Generated_Source\PSoC4/Display_SPI.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/Display_SPI.c **** *
 371:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 372:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_swStatusTx - used to store in software status register,
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 12


 373:Generated_Source\PSoC4/Display_SPI.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/Display_SPI.c **** *
 375:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 376:Generated_Source\PSoC4/Display_SPI.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/Display_SPI.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/Display_SPI.c **** *
 379:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 380:Generated_Source\PSoC4/Display_SPI.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/Display_SPI.c **** *
 382:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 383:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 384:Generated_Source\PSoC4/Display_SPI.c **** *
 385:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/Display_SPI.c **** uint8 Display_SPI_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/Display_SPI.c **** {
 256              		.loc 1 387 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 388:Generated_Source\PSoC4/Display_SPI.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/Display_SPI.c **** 
 390:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableTxInt();
 393:Generated_Source\PSoC4/Display_SPI.c **** 
 394:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus = Display_SPI_GET_STATUS_TX(Display_SPI_swStatusTx);
 395:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_swStatusTx = 0u;
 396:Generated_Source\PSoC4/Display_SPI.c **** 
 397:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableTxInt();
 398:Generated_Source\PSoC4/Display_SPI.c **** 
 399:Generated_Source\PSoC4/Display_SPI.c ****     #else
 400:Generated_Source\PSoC4/Display_SPI.c **** 
 401:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus = Display_SPI_TX_STATUS_REG;
 261              		.loc 1 401 0
 262 0000 014B     		ldr	r3, .L18
 263 0002 1878     		ldrb	r0, [r3]
 264 0004 C0B2     		uxtb	r0, r0
 265              	.LVL6:
 402:Generated_Source\PSoC4/Display_SPI.c **** 
 403:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC4/Display_SPI.c **** 
 405:Generated_Source\PSoC4/Display_SPI.c ****     return(tmpStatus);
 406:Generated_Source\PSoC4/Display_SPI.c **** }
 266              		.loc 1 406 0
 267              		@ sp needed
 268 0006 7047     		bx	lr
 269              	.L19:
 270              		.align	2
 271              	.L18:
 272 0008 62000F40 		.word	1074724962
 273              		.cfi_endproc
 274              	.LFE10:
 275              		.size	Display_SPI_ReadTxStatus, .-Display_SPI_ReadTxStatus
 276              		.section	.text.Display_SPI_ReadRxStatus,"ax",%progbits
 277              		.align	2
 278              		.global	Display_SPI_ReadRxStatus
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 13


 279              		.code	16
 280              		.thumb_func
 281              		.type	Display_SPI_ReadRxStatus, %function
 282              	Display_SPI_ReadRxStatus:
 283              	.LFB11:
 407:Generated_Source\PSoC4/Display_SPI.c **** 
 408:Generated_Source\PSoC4/Display_SPI.c **** 
 409:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_ReadRxStatus
 411:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Display_SPI.c **** *
 413:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 414:Generated_Source\PSoC4/Display_SPI.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/Display_SPI.c **** *
 416:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 417:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 418:Generated_Source\PSoC4/Display_SPI.c **** *
 419:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 420:Generated_Source\PSoC4/Display_SPI.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/Display_SPI.c **** *
 422:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 423:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/Display_SPI.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/Display_SPI.c **** *
 426:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 427:Generated_Source\PSoC4/Display_SPI.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/Display_SPI.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/Display_SPI.c **** *
 430:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 431:Generated_Source\PSoC4/Display_SPI.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/Display_SPI.c **** *
 433:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 434:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 435:Generated_Source\PSoC4/Display_SPI.c **** *
 436:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/Display_SPI.c **** uint8 Display_SPI_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/Display_SPI.c **** {
 284              		.loc 1 438 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 439:Generated_Source\PSoC4/Display_SPI.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/Display_SPI.c **** 
 441:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableRxInt();
 444:Generated_Source\PSoC4/Display_SPI.c **** 
 445:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus = Display_SPI_GET_STATUS_RX(Display_SPI_swStatusRx);
 446:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_swStatusRx = 0u;
 447:Generated_Source\PSoC4/Display_SPI.c **** 
 448:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableRxInt();
 449:Generated_Source\PSoC4/Display_SPI.c **** 
 450:Generated_Source\PSoC4/Display_SPI.c ****     #else
 451:Generated_Source\PSoC4/Display_SPI.c **** 
 452:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus = Display_SPI_RX_STATUS_REG;
 289              		.loc 1 452 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 14


 290 0000 014B     		ldr	r3, .L21
 291 0002 1878     		ldrb	r0, [r3]
 292 0004 C0B2     		uxtb	r0, r0
 293              	.LVL7:
 453:Generated_Source\PSoC4/Display_SPI.c **** 
 454:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/Display_SPI.c **** 
 456:Generated_Source\PSoC4/Display_SPI.c ****     return(tmpStatus);
 457:Generated_Source\PSoC4/Display_SPI.c **** }
 294              		.loc 1 457 0
 295              		@ sp needed
 296 0006 7047     		bx	lr
 297              	.L22:
 298              		.align	2
 299              	.L21:
 300 0008 63000F40 		.word	1074724963
 301              		.cfi_endproc
 302              	.LFE11:
 303              		.size	Display_SPI_ReadRxStatus, .-Display_SPI_ReadRxStatus
 304              		.section	.text.Display_SPI_WriteTxData,"ax",%progbits
 305              		.align	2
 306              		.global	Display_SPI_WriteTxData
 307              		.code	16
 308              		.thumb_func
 309              		.type	Display_SPI_WriteTxData, %function
 310              	Display_SPI_WriteTxData:
 311              	.LFB12:
 458:Generated_Source\PSoC4/Display_SPI.c **** 
 459:Generated_Source\PSoC4/Display_SPI.c **** 
 460:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_WriteTxData
 462:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 463:Generated_Source\PSoC4/Display_SPI.c **** *
 464:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 465:Generated_Source\PSoC4/Display_SPI.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/Display_SPI.c **** *
 467:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 468:Generated_Source\PSoC4/Display_SPI.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/Display_SPI.c **** *
 470:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 471:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 472:Generated_Source\PSoC4/Display_SPI.c **** *
 473:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 474:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/Display_SPI.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/Display_SPI.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/Display_SPI.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_txBuffer[Display_SPI_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/Display_SPI.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC4/Display_SPI.c **** *
 482:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 483:Generated_Source\PSoC4/Display_SPI.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/Display_SPI.c **** *
 485:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 486:Generated_Source\PSoC4/Display_SPI.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/Display_SPI.c **** *  the next byte will be appended to the transfer with no time between
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 15


 488:Generated_Source\PSoC4/Display_SPI.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/Display_SPI.c **** *
 490:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 491:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 492:Generated_Source\PSoC4/Display_SPI.c **** *
 493:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC4/Display_SPI.c **** {
 312              		.loc 1 495 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL8:
 318              	.L24:
 496:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/Display_SPI.c **** 
 498:Generated_Source\PSoC4/Display_SPI.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/Display_SPI.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/Display_SPI.c **** 
 501:Generated_Source\PSoC4/Display_SPI.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/Display_SPI.c ****         do
 503:Generated_Source\PSoC4/Display_SPI.c ****         {
 504:Generated_Source\PSoC4/Display_SPI.c ****             tmpTxBufferRead = Display_SPI_txBufferRead;
 505:Generated_Source\PSoC4/Display_SPI.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC4/Display_SPI.c ****             {
 507:Generated_Source\PSoC4/Display_SPI.c ****                 tmpTxBufferRead = (Display_SPI_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/Display_SPI.c ****             }
 509:Generated_Source\PSoC4/Display_SPI.c ****             else
 510:Generated_Source\PSoC4/Display_SPI.c ****             {
 511:Generated_Source\PSoC4/Display_SPI.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC4/Display_SPI.c ****             }
 513:Generated_Source\PSoC4/Display_SPI.c **** 
 514:Generated_Source\PSoC4/Display_SPI.c ****         }while(tmpTxBufferRead == Display_SPI_txBufferWrite);
 515:Generated_Source\PSoC4/Display_SPI.c **** 
 516:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableTxInt();
 518:Generated_Source\PSoC4/Display_SPI.c **** 
 519:Generated_Source\PSoC4/Display_SPI.c ****         tempStatus = Display_SPI_GET_STATUS_TX(Display_SPI_swStatusTx);
 520:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_swStatusTx = tempStatus;
 521:Generated_Source\PSoC4/Display_SPI.c **** 
 522:Generated_Source\PSoC4/Display_SPI.c **** 
 523:Generated_Source\PSoC4/Display_SPI.c ****         if((Display_SPI_txBufferRead == Display_SPI_txBufferWrite) &&
 524:Generated_Source\PSoC4/Display_SPI.c ****            (0u != (Display_SPI_swStatusTx & Display_SPI_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC4/Display_SPI.c ****         {
 526:Generated_Source\PSoC4/Display_SPI.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/Display_SPI.c ****             CY_SET_REG8(Display_SPI_TXDATA_PTR, txData);
 528:Generated_Source\PSoC4/Display_SPI.c ****         }
 529:Generated_Source\PSoC4/Display_SPI.c ****         else
 530:Generated_Source\PSoC4/Display_SPI.c ****         {
 531:Generated_Source\PSoC4/Display_SPI.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC4/Display_SPI.c ****             Display_SPI_txBufferWrite++;
 533:Generated_Source\PSoC4/Display_SPI.c ****             if(Display_SPI_txBufferWrite >= Display_SPI_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC4/Display_SPI.c ****             {
 535:Generated_Source\PSoC4/Display_SPI.c ****                 Display_SPI_txBufferWrite = 0u;
 536:Generated_Source\PSoC4/Display_SPI.c ****             }
 537:Generated_Source\PSoC4/Display_SPI.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 16


 538:Generated_Source\PSoC4/Display_SPI.c ****             if(Display_SPI_txBufferWrite == Display_SPI_txBufferRead)
 539:Generated_Source\PSoC4/Display_SPI.c ****             {
 540:Generated_Source\PSoC4/Display_SPI.c ****                 Display_SPI_txBufferRead++;
 541:Generated_Source\PSoC4/Display_SPI.c ****                 if(Display_SPI_txBufferRead >= Display_SPI_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC4/Display_SPI.c ****                 {
 543:Generated_Source\PSoC4/Display_SPI.c ****                     Display_SPI_txBufferRead = 0u;
 544:Generated_Source\PSoC4/Display_SPI.c ****                 }
 545:Generated_Source\PSoC4/Display_SPI.c ****                 Display_SPI_txBufferFull = 1u;
 546:Generated_Source\PSoC4/Display_SPI.c ****             }
 547:Generated_Source\PSoC4/Display_SPI.c **** 
 548:Generated_Source\PSoC4/Display_SPI.c ****             Display_SPI_txBuffer[Display_SPI_txBufferWrite] = txData;
 549:Generated_Source\PSoC4/Display_SPI.c **** 
 550:Generated_Source\PSoC4/Display_SPI.c ****             Display_SPI_TX_STATUS_MASK_REG |= Display_SPI_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC4/Display_SPI.c ****         }
 552:Generated_Source\PSoC4/Display_SPI.c **** 
 553:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableTxInt();
 554:Generated_Source\PSoC4/Display_SPI.c **** 
 555:Generated_Source\PSoC4/Display_SPI.c ****     #else
 556:Generated_Source\PSoC4/Display_SPI.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/Display_SPI.c ****         while(0u == (Display_SPI_TX_STATUS_REG & Display_SPI_STS_TX_FIFO_NOT_FULL))
 319              		.loc 1 557 0 discriminator 1
 320 0000 034B     		ldr	r3, .L25
 321 0002 1B78     		ldrb	r3, [r3]
 322 0004 5B07     		lsls	r3, r3, #29
 323 0006 FBD5     		bpl	.L24
 558:Generated_Source\PSoC4/Display_SPI.c ****         {
 559:Generated_Source\PSoC4/Display_SPI.c ****         }
 560:Generated_Source\PSoC4/Display_SPI.c **** 
 561:Generated_Source\PSoC4/Display_SPI.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/Display_SPI.c ****         CY_SET_REG8(Display_SPI_TXDATA_PTR, txData);
 324              		.loc 1 562 0
 325 0008 024B     		ldr	r3, .L25+4
 326 000a 1870     		strb	r0, [r3]
 563:Generated_Source\PSoC4/Display_SPI.c **** 
 564:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/Display_SPI.c **** }
 327              		.loc 1 565 0
 328              		@ sp needed
 329 000c 7047     		bx	lr
 330              	.L26:
 331 000e C046     		.align	2
 332              	.L25:
 333 0010 62000F40 		.word	1074724962
 334 0014 41000F40 		.word	1074724929
 335              		.cfi_endproc
 336              	.LFE12:
 337              		.size	Display_SPI_WriteTxData, .-Display_SPI_WriteTxData
 338              		.section	.text.Display_SPI_ReadRxData,"ax",%progbits
 339              		.align	2
 340              		.global	Display_SPI_ReadRxData
 341              		.code	16
 342              		.thumb_func
 343              		.type	Display_SPI_ReadRxData, %function
 344              	Display_SPI_ReadRxData:
 345              	.LFB13:
 566:Generated_Source\PSoC4/Display_SPI.c **** 
 567:Generated_Source\PSoC4/Display_SPI.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 17


 568:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_ReadRxData
 570:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 571:Generated_Source\PSoC4/Display_SPI.c **** *
 572:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 573:Generated_Source\PSoC4/Display_SPI.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/Display_SPI.c **** *
 575:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 576:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 577:Generated_Source\PSoC4/Display_SPI.c **** *
 578:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 579:Generated_Source\PSoC4/Display_SPI.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/Display_SPI.c **** *
 581:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 582:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/Display_SPI.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/Display_SPI.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC4/Display_SPI.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_rxBuffer[Display_SPI_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/Display_SPI.c **** *  received data.
 589:Generated_Source\PSoC4/Display_SPI.c **** *
 590:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 591:Generated_Source\PSoC4/Display_SPI.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/Display_SPI.c **** *
 593:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 594:Generated_Source\PSoC4/Display_SPI.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/Display_SPI.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/Display_SPI.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/Display_SPI.c **** *
 598:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 599:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 600:Generated_Source\PSoC4/Display_SPI.c **** *
 601:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/Display_SPI.c **** uint8 Display_SPI_ReadRxData(void) 
 603:Generated_Source\PSoC4/Display_SPI.c **** {
 346              		.loc 1 603 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 604:Generated_Source\PSoC4/Display_SPI.c ****     uint8 rxData;
 605:Generated_Source\PSoC4/Display_SPI.c **** 
 606:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/Display_SPI.c **** 
 608:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableRxInt();
 610:Generated_Source\PSoC4/Display_SPI.c **** 
 611:Generated_Source\PSoC4/Display_SPI.c ****         if(Display_SPI_rxBufferRead != Display_SPI_rxBufferWrite)
 612:Generated_Source\PSoC4/Display_SPI.c ****         {
 613:Generated_Source\PSoC4/Display_SPI.c ****             if(0u == Display_SPI_rxBufferFull)
 614:Generated_Source\PSoC4/Display_SPI.c ****             {
 615:Generated_Source\PSoC4/Display_SPI.c ****                 Display_SPI_rxBufferRead++;
 616:Generated_Source\PSoC4/Display_SPI.c ****                 if(Display_SPI_rxBufferRead >= Display_SPI_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC4/Display_SPI.c ****                 {
 618:Generated_Source\PSoC4/Display_SPI.c ****                     Display_SPI_rxBufferRead = 0u;
 619:Generated_Source\PSoC4/Display_SPI.c ****                 }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 18


 620:Generated_Source\PSoC4/Display_SPI.c ****             }
 621:Generated_Source\PSoC4/Display_SPI.c ****             else
 622:Generated_Source\PSoC4/Display_SPI.c ****             {
 623:Generated_Source\PSoC4/Display_SPI.c ****                 Display_SPI_rxBufferFull = 0u;
 624:Generated_Source\PSoC4/Display_SPI.c ****             }
 625:Generated_Source\PSoC4/Display_SPI.c ****         }
 626:Generated_Source\PSoC4/Display_SPI.c **** 
 627:Generated_Source\PSoC4/Display_SPI.c ****         rxData = Display_SPI_rxBuffer[Display_SPI_rxBufferRead];
 628:Generated_Source\PSoC4/Display_SPI.c **** 
 629:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableRxInt();
 630:Generated_Source\PSoC4/Display_SPI.c **** 
 631:Generated_Source\PSoC4/Display_SPI.c ****     #else
 632:Generated_Source\PSoC4/Display_SPI.c **** 
 633:Generated_Source\PSoC4/Display_SPI.c ****         rxData = CY_GET_REG8(Display_SPI_RXDATA_PTR);
 351              		.loc 1 633 0
 352 0000 014B     		ldr	r3, .L28
 353 0002 1878     		ldrb	r0, [r3]
 354 0004 C0B2     		uxtb	r0, r0
 355              	.LVL9:
 634:Generated_Source\PSoC4/Display_SPI.c **** 
 635:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/Display_SPI.c **** 
 637:Generated_Source\PSoC4/Display_SPI.c ****     return(rxData);
 638:Generated_Source\PSoC4/Display_SPI.c **** }
 356              		.loc 1 638 0
 357              		@ sp needed
 358 0006 7047     		bx	lr
 359              	.L29:
 360              		.align	2
 361              	.L28:
 362 0008 51000F40 		.word	1074724945
 363              		.cfi_endproc
 364              	.LFE13:
 365              		.size	Display_SPI_ReadRxData, .-Display_SPI_ReadRxData
 366              		.section	.text.Display_SPI_GetRxBufferSize,"ax",%progbits
 367              		.align	2
 368              		.global	Display_SPI_GetRxBufferSize
 369              		.code	16
 370              		.thumb_func
 371              		.type	Display_SPI_GetRxBufferSize, %function
 372              	Display_SPI_GetRxBufferSize:
 373              	.LFB14:
 639:Generated_Source\PSoC4/Display_SPI.c **** 
 640:Generated_Source\PSoC4/Display_SPI.c **** 
 641:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_GetRxBufferSize
 643:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Display_SPI.c **** *
 645:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 646:Generated_Source\PSoC4/Display_SPI.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC4/Display_SPI.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC4/Display_SPI.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/Display_SPI.c **** *
 650:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 651:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 652:Generated_Source\PSoC4/Display_SPI.c **** *
 653:Generated_Source\PSoC4/Display_SPI.c **** * Return:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 19


 654:Generated_Source\PSoC4/Display_SPI.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/Display_SPI.c **** *
 656:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 657:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/Display_SPI.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/Display_SPI.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC4/Display_SPI.c **** *
 662:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 663:Generated_Source\PSoC4/Display_SPI.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/Display_SPI.c **** *
 665:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/Display_SPI.c **** uint8 Display_SPI_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/Display_SPI.c **** {
 374              		.loc 1 667 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 668:Generated_Source\PSoC4/Display_SPI.c ****     uint8 size;
 669:Generated_Source\PSoC4/Display_SPI.c **** 
 670:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/Display_SPI.c **** 
 672:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableRxInt();
 674:Generated_Source\PSoC4/Display_SPI.c **** 
 675:Generated_Source\PSoC4/Display_SPI.c ****         if(Display_SPI_rxBufferRead == Display_SPI_rxBufferWrite)
 676:Generated_Source\PSoC4/Display_SPI.c ****         {
 677:Generated_Source\PSoC4/Display_SPI.c ****             size = 0u;
 678:Generated_Source\PSoC4/Display_SPI.c ****         }
 679:Generated_Source\PSoC4/Display_SPI.c ****         else if(Display_SPI_rxBufferRead < Display_SPI_rxBufferWrite)
 680:Generated_Source\PSoC4/Display_SPI.c ****         {
 681:Generated_Source\PSoC4/Display_SPI.c ****             size = (Display_SPI_rxBufferWrite - Display_SPI_rxBufferRead);
 682:Generated_Source\PSoC4/Display_SPI.c ****         }
 683:Generated_Source\PSoC4/Display_SPI.c ****         else
 684:Generated_Source\PSoC4/Display_SPI.c ****         {
 685:Generated_Source\PSoC4/Display_SPI.c ****             size = (Display_SPI_RX_BUFFER_SIZE - Display_SPI_rxBufferRead) + Display_SPI_rxBufferWr
 686:Generated_Source\PSoC4/Display_SPI.c ****         }
 687:Generated_Source\PSoC4/Display_SPI.c **** 
 688:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableRxInt();
 689:Generated_Source\PSoC4/Display_SPI.c **** 
 690:Generated_Source\PSoC4/Display_SPI.c ****     #else
 691:Generated_Source\PSoC4/Display_SPI.c **** 
 692:Generated_Source\PSoC4/Display_SPI.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/Display_SPI.c ****         size = (0u != (Display_SPI_RX_STATUS_REG & Display_SPI_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 379              		.loc 1 693 0
 380 0000 034B     		ldr	r3, .L33
 381 0002 1B78     		ldrb	r3, [r3]
 382 0004 9B06     		lsls	r3, r3, #26
 383 0006 01D5     		bpl	.L32
 384 0008 0120     		movs	r0, #1
 385 000a 00E0     		b	.L31
 386              	.L32:
 387 000c 0020     		movs	r0, #0
 388              	.L31:
 389              	.LVL10:
 694:Generated_Source\PSoC4/Display_SPI.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 20


 695:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/Display_SPI.c **** 
 697:Generated_Source\PSoC4/Display_SPI.c ****     return(size);
 698:Generated_Source\PSoC4/Display_SPI.c **** }
 390              		.loc 1 698 0 discriminator 4
 391              		@ sp needed
 392 000e 7047     		bx	lr
 393              	.L34:
 394              		.align	2
 395              	.L33:
 396 0010 63000F40 		.word	1074724963
 397              		.cfi_endproc
 398              	.LFE14:
 399              		.size	Display_SPI_GetRxBufferSize, .-Display_SPI_GetRxBufferSize
 400              		.section	.text.Display_SPI_GetTxBufferSize,"ax",%progbits
 401              		.align	2
 402              		.global	Display_SPI_GetTxBufferSize
 403              		.code	16
 404              		.thumb_func
 405              		.type	Display_SPI_GetTxBufferSize, %function
 406              	Display_SPI_GetTxBufferSize:
 407              	.LFB15:
 699:Generated_Source\PSoC4/Display_SPI.c **** 
 700:Generated_Source\PSoC4/Display_SPI.c **** 
 701:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_GetTxBufferSize
 703:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 704:Generated_Source\PSoC4/Display_SPI.c **** *
 705:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 706:Generated_Source\PSoC4/Display_SPI.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/Display_SPI.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/Display_SPI.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/Display_SPI.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/Display_SPI.c **** *
 711:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 712:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 713:Generated_Source\PSoC4/Display_SPI.c **** *
 714:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 715:Generated_Source\PSoC4/Display_SPI.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/Display_SPI.c **** *
 717:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 718:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/Display_SPI.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/Display_SPI.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/Display_SPI.c **** *
 723:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 724:Generated_Source\PSoC4/Display_SPI.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/Display_SPI.c **** *
 726:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/Display_SPI.c **** uint8  Display_SPI_GetTxBufferSize(void) 
 728:Generated_Source\PSoC4/Display_SPI.c **** {
 408              		.loc 1 728 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 21


 729:Generated_Source\PSoC4/Display_SPI.c ****     uint8 size;
 730:Generated_Source\PSoC4/Display_SPI.c **** 
 731:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableTxInt();
 734:Generated_Source\PSoC4/Display_SPI.c **** 
 735:Generated_Source\PSoC4/Display_SPI.c ****         if(Display_SPI_txBufferRead == Display_SPI_txBufferWrite)
 736:Generated_Source\PSoC4/Display_SPI.c ****         {
 737:Generated_Source\PSoC4/Display_SPI.c ****             size = 0u;
 738:Generated_Source\PSoC4/Display_SPI.c ****         }
 739:Generated_Source\PSoC4/Display_SPI.c ****         else if(Display_SPI_txBufferRead < Display_SPI_txBufferWrite)
 740:Generated_Source\PSoC4/Display_SPI.c ****         {
 741:Generated_Source\PSoC4/Display_SPI.c ****             size = (Display_SPI_txBufferWrite - Display_SPI_txBufferRead);
 742:Generated_Source\PSoC4/Display_SPI.c ****         }
 743:Generated_Source\PSoC4/Display_SPI.c ****         else
 744:Generated_Source\PSoC4/Display_SPI.c ****         {
 745:Generated_Source\PSoC4/Display_SPI.c ****             size = (Display_SPI_TX_BUFFER_SIZE - Display_SPI_txBufferRead) + Display_SPI_txBufferWr
 746:Generated_Source\PSoC4/Display_SPI.c ****         }
 747:Generated_Source\PSoC4/Display_SPI.c **** 
 748:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableTxInt();
 749:Generated_Source\PSoC4/Display_SPI.c **** 
 750:Generated_Source\PSoC4/Display_SPI.c ****     #else
 751:Generated_Source\PSoC4/Display_SPI.c **** 
 752:Generated_Source\PSoC4/Display_SPI.c ****         size = Display_SPI_TX_STATUS_REG;
 413              		.loc 1 752 0
 414 0000 064B     		ldr	r3, .L39
 415 0002 1B78     		ldrb	r3, [r3]
 416 0004 DBB2     		uxtb	r3, r3
 417              	.LVL11:
 753:Generated_Source\PSoC4/Display_SPI.c **** 
 754:Generated_Source\PSoC4/Display_SPI.c ****         if(0u != (size & Display_SPI_STS_TX_FIFO_EMPTY))
 418              		.loc 1 754 0
 419 0006 9A07     		lsls	r2, r3, #30
 420 0008 03D4     		bmi	.L37
 755:Generated_Source\PSoC4/Display_SPI.c ****         {
 756:Generated_Source\PSoC4/Display_SPI.c ****             size = 0u;
 757:Generated_Source\PSoC4/Display_SPI.c ****         }
 758:Generated_Source\PSoC4/Display_SPI.c ****         else if(0u != (size & Display_SPI_STS_TX_FIFO_NOT_FULL))
 421              		.loc 1 758 0
 422 000a 5B07     		lsls	r3, r3, #29
 423 000c 03D5     		bpl	.L38
 424              	.LVL12:
 759:Generated_Source\PSoC4/Display_SPI.c ****         {
 760:Generated_Source\PSoC4/Display_SPI.c ****             size = 1u;
 425              		.loc 1 760 0
 426 000e 0120     		movs	r0, #1
 427 0010 02E0     		b	.L36
 428              	.LVL13:
 429              	.L37:
 756:Generated_Source\PSoC4/Display_SPI.c ****         }
 430              		.loc 1 756 0
 431 0012 0020     		movs	r0, #0
 432 0014 00E0     		b	.L36
 433              	.LVL14:
 434              	.L38:
 761:Generated_Source\PSoC4/Display_SPI.c ****         }
 762:Generated_Source\PSoC4/Display_SPI.c ****         else
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 22


 763:Generated_Source\PSoC4/Display_SPI.c ****         {
 764:Generated_Source\PSoC4/Display_SPI.c ****             size = Display_SPI_FIFO_SIZE;
 435              		.loc 1 764 0
 436 0016 0420     		movs	r0, #4
 437              	.L36:
 438              	.LVL15:
 765:Generated_Source\PSoC4/Display_SPI.c ****         }
 766:Generated_Source\PSoC4/Display_SPI.c **** 
 767:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/Display_SPI.c **** 
 769:Generated_Source\PSoC4/Display_SPI.c ****     return(size);
 770:Generated_Source\PSoC4/Display_SPI.c **** }
 439              		.loc 1 770 0
 440              		@ sp needed
 441 0018 7047     		bx	lr
 442              	.L40:
 443 001a C046     		.align	2
 444              	.L39:
 445 001c 62000F40 		.word	1074724962
 446              		.cfi_endproc
 447              	.LFE15:
 448              		.size	Display_SPI_GetTxBufferSize, .-Display_SPI_GetTxBufferSize
 449              		.section	.text.Display_SPI_ClearRxBuffer,"ax",%progbits
 450              		.align	2
 451              		.global	Display_SPI_ClearRxBuffer
 452              		.code	16
 453              		.thumb_func
 454              		.type	Display_SPI_ClearRxBuffer, %function
 455              	Display_SPI_ClearRxBuffer:
 456              	.LFB16:
 771:Generated_Source\PSoC4/Display_SPI.c **** 
 772:Generated_Source\PSoC4/Display_SPI.c **** 
 773:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_ClearRxBuffer
 775:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 776:Generated_Source\PSoC4/Display_SPI.c **** *
 777:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 778:Generated_Source\PSoC4/Display_SPI.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/Display_SPI.c **** *
 780:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 781:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 782:Generated_Source\PSoC4/Display_SPI.c **** *
 783:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 784:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 785:Generated_Source\PSoC4/Display_SPI.c **** *
 786:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 787:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/Display_SPI.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/Display_SPI.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC4/Display_SPI.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC4/Display_SPI.c **** *  resets to zero.
 793:Generated_Source\PSoC4/Display_SPI.c **** *
 794:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 795:Generated_Source\PSoC4/Display_SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/Display_SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/Display_SPI.c **** *  remained in the RAM.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 23


 798:Generated_Source\PSoC4/Display_SPI.c **** *
 799:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 800:Generated_Source\PSoC4/Display_SPI.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/Display_SPI.c **** *
 802:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 803:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 804:Generated_Source\PSoC4/Display_SPI.c **** *
 805:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/Display_SPI.c **** {
 457              		.loc 1 807 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 808:Generated_Source\PSoC4/Display_SPI.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/Display_SPI.c ****     while(0u !=(Display_SPI_RX_STATUS_REG & Display_SPI_STS_RX_FIFO_NOT_EMPTY))
 462              		.loc 1 809 0
 463 0000 01E0     		b	.L42
 464              	.L43:
 810:Generated_Source\PSoC4/Display_SPI.c ****     {
 811:Generated_Source\PSoC4/Display_SPI.c ****         (void) CY_GET_REG8(Display_SPI_RXDATA_PTR);
 465              		.loc 1 811 0
 466 0002 034B     		ldr	r3, .L44
 467 0004 1B78     		ldrb	r3, [r3]
 468              	.L42:
 809:Generated_Source\PSoC4/Display_SPI.c ****     {
 469              		.loc 1 809 0
 470 0006 034B     		ldr	r3, .L44+4
 471 0008 1B78     		ldrb	r3, [r3]
 472 000a 9B06     		lsls	r3, r3, #26
 473 000c F9D4     		bmi	.L43
 812:Generated_Source\PSoC4/Display_SPI.c ****     }
 813:Generated_Source\PSoC4/Display_SPI.c **** 
 814:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableRxInt();
 817:Generated_Source\PSoC4/Display_SPI.c **** 
 818:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_rxBufferFull  = 0u;
 819:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_rxBufferRead  = 0u;
 820:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_rxBufferWrite = 0u;
 821:Generated_Source\PSoC4/Display_SPI.c **** 
 822:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableRxInt();
 823:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/Display_SPI.c **** }
 474              		.loc 1 824 0
 475              		@ sp needed
 476 000e 7047     		bx	lr
 477              	.L45:
 478              		.align	2
 479              	.L44:
 480 0010 51000F40 		.word	1074724945
 481 0014 63000F40 		.word	1074724963
 482              		.cfi_endproc
 483              	.LFE16:
 484              		.size	Display_SPI_ClearRxBuffer, .-Display_SPI_ClearRxBuffer
 485              		.section	.text.Display_SPI_ClearTxBuffer,"ax",%progbits
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 24


 486              		.align	2
 487              		.global	Display_SPI_ClearTxBuffer
 488              		.code	16
 489              		.thumb_func
 490              		.type	Display_SPI_ClearTxBuffer, %function
 491              	Display_SPI_ClearTxBuffer:
 492              	.LFB17:
 825:Generated_Source\PSoC4/Display_SPI.c **** 
 826:Generated_Source\PSoC4/Display_SPI.c **** 
 827:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_ClearTxBuffer
 829:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 830:Generated_Source\PSoC4/Display_SPI.c **** *
 831:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 832:Generated_Source\PSoC4/Display_SPI.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/Display_SPI.c **** *
 834:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 835:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 836:Generated_Source\PSoC4/Display_SPI.c **** *
 837:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 838:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 839:Generated_Source\PSoC4/Display_SPI.c **** *
 840:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
 841:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/Display_SPI.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC4/Display_SPI.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/Display_SPI.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/Display_SPI.c **** *  resets to zero.
 847:Generated_Source\PSoC4/Display_SPI.c **** *
 848:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
 849:Generated_Source\PSoC4/Display_SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/Display_SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/Display_SPI.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/Display_SPI.c **** *
 853:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 854:Generated_Source\PSoC4/Display_SPI.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/Display_SPI.c **** *  overwritten.
 856:Generated_Source\PSoC4/Display_SPI.c **** *
 857:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 858:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 859:Generated_Source\PSoC4/Display_SPI.c **** *
 860:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/Display_SPI.c **** {
 493              		.loc 1 862 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497 0000 10B5     		push	{r4, lr}
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 4, -8
 500              		.cfi_offset 14, -4
 863:Generated_Source\PSoC4/Display_SPI.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/Display_SPI.c **** 
 865:Generated_Source\PSoC4/Display_SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 501              		.loc 1 865 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 25


 502 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 503              	.LVL16:
 866:Generated_Source\PSoC4/Display_SPI.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_AUX_CONTROL_DP0_REG |= ((uint8)  Display_SPI_TX_FIFO_CLR);
 504              		.loc 1 867 0
 505 0006 064A     		ldr	r2, .L47
 506 0008 1178     		ldrb	r1, [r2]
 507 000a 0123     		movs	r3, #1
 508 000c 0B43     		orrs	r3, r1
 509 000e DBB2     		uxtb	r3, r3
 510 0010 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~Display_SPI_TX_FIFO_CLR);
 511              		.loc 1 868 0
 512 0012 1378     		ldrb	r3, [r2]
 513 0014 0121     		movs	r1, #1
 514 0016 8B43     		bics	r3, r1
 515 0018 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC4/Display_SPI.c **** 
 870:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/Display_SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_AUX_CONTROL_DP1_REG |= ((uint8)  Display_SPI_TX_FIFO_CLR);
 873:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~Display_SPI_TX_FIFO_CLR);
 874:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/Display_SPI.c ****     CyExitCriticalSection(enableInterrupts);
 516              		.loc 1 875 0
 517 001a FFF7FEFF 		bl	CyExitCriticalSection
 518              	.LVL17:
 876:Generated_Source\PSoC4/Display_SPI.c **** 
 877:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/Display_SPI.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableTxInt();
 880:Generated_Source\PSoC4/Display_SPI.c **** 
 881:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_txBufferFull  = 0u;
 882:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_txBufferRead  = 0u;
 883:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_txBufferWrite = 0u;
 884:Generated_Source\PSoC4/Display_SPI.c **** 
 885:Generated_Source\PSoC4/Display_SPI.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_TX_STATUS_MASK_REG &= ((uint8) ~Display_SPI_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC4/Display_SPI.c **** 
 888:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableTxInt();
 889:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/Display_SPI.c **** }
 519              		.loc 1 890 0
 520              		@ sp needed
 521 001e 10BD     		pop	{r4, pc}
 522              	.L48:
 523              		.align	2
 524              	.L47:
 525 0020 91000F40 		.word	1074725009
 526              		.cfi_endproc
 527              	.LFE17:
 528              		.size	Display_SPI_ClearTxBuffer, .-Display_SPI_ClearTxBuffer
 529              		.section	.text.Display_SPI_PutArray,"ax",%progbits
 530              		.align	2
 531              		.global	Display_SPI_PutArray
 532              		.code	16
 533              		.thumb_func
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 26


 534              		.type	Display_SPI_PutArray, %function
 535              	Display_SPI_PutArray:
 536              	.LFB18:
 891:Generated_Source\PSoC4/Display_SPI.c **** 
 892:Generated_Source\PSoC4/Display_SPI.c **** 
 893:Generated_Source\PSoC4/Display_SPI.c **** #if(0u != Display_SPI_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC4/Display_SPI.c ****     /*******************************************************************************
 895:Generated_Source\PSoC4/Display_SPI.c ****     * Function Name: Display_SPI_TxEnable
 896:Generated_Source\PSoC4/Display_SPI.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/Display_SPI.c ****     *
 898:Generated_Source\PSoC4/Display_SPI.c ****     * Summary:
 899:Generated_Source\PSoC4/Display_SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC4/Display_SPI.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/Display_SPI.c ****     *
 902:Generated_Source\PSoC4/Display_SPI.c ****     * Parameters:
 903:Generated_Source\PSoC4/Display_SPI.c ****     *  None.
 904:Generated_Source\PSoC4/Display_SPI.c ****     *
 905:Generated_Source\PSoC4/Display_SPI.c ****     * Return:
 906:Generated_Source\PSoC4/Display_SPI.c ****     *  None.
 907:Generated_Source\PSoC4/Display_SPI.c ****     *
 908:Generated_Source\PSoC4/Display_SPI.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/Display_SPI.c ****     void Display_SPI_TxEnable(void) 
 910:Generated_Source\PSoC4/Display_SPI.c ****     {
 911:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_CONTROL_REG |= Display_SPI_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/Display_SPI.c ****     }
 913:Generated_Source\PSoC4/Display_SPI.c **** 
 914:Generated_Source\PSoC4/Display_SPI.c **** 
 915:Generated_Source\PSoC4/Display_SPI.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/Display_SPI.c ****     * Function Name: Display_SPI_TxDisable
 917:Generated_Source\PSoC4/Display_SPI.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/Display_SPI.c ****     *
 919:Generated_Source\PSoC4/Display_SPI.c ****     * Summary:
 920:Generated_Source\PSoC4/Display_SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/Display_SPI.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/Display_SPI.c ****     *
 923:Generated_Source\PSoC4/Display_SPI.c ****     * Parameters:
 924:Generated_Source\PSoC4/Display_SPI.c ****     *  None.
 925:Generated_Source\PSoC4/Display_SPI.c ****     *
 926:Generated_Source\PSoC4/Display_SPI.c ****     * Return:
 927:Generated_Source\PSoC4/Display_SPI.c ****     *  None.
 928:Generated_Source\PSoC4/Display_SPI.c ****     *
 929:Generated_Source\PSoC4/Display_SPI.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/Display_SPI.c ****     void Display_SPI_TxDisable(void) 
 931:Generated_Source\PSoC4/Display_SPI.c ****     {
 932:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_CONTROL_REG &= ((uint8) ~Display_SPI_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/Display_SPI.c ****     }
 934:Generated_Source\PSoC4/Display_SPI.c **** 
 935:Generated_Source\PSoC4/Display_SPI.c **** #endif /* (0u != Display_SPI_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/Display_SPI.c **** 
 937:Generated_Source\PSoC4/Display_SPI.c **** 
 938:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_PutArray
 940:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 941:Generated_Source\PSoC4/Display_SPI.c **** *
 942:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 943:Generated_Source\PSoC4/Display_SPI.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/Display_SPI.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 27


 945:Generated_Source\PSoC4/Display_SPI.c **** *
 946:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 947:Generated_Source\PSoC4/Display_SPI.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/Display_SPI.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/Display_SPI.c **** *
 950:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 951:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 952:Generated_Source\PSoC4/Display_SPI.c **** *
 953:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 954:Generated_Source\PSoC4/Display_SPI.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/Display_SPI.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/Display_SPI.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC4/Display_SPI.c **** *
 958:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
 959:Generated_Source\PSoC4/Display_SPI.c **** *  No.
 960:Generated_Source\PSoC4/Display_SPI.c **** *
 961:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/Display_SPI.c ****                                                                           
 964:Generated_Source\PSoC4/Display_SPI.c **** {
 537              		.loc 1 964 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              	.LVL18:
 542 0000 70B5     		push	{r4, r5, r6, lr}
 543              		.cfi_def_cfa_offset 16
 544              		.cfi_offset 4, -16
 545              		.cfi_offset 5, -12
 546              		.cfi_offset 6, -8
 547              		.cfi_offset 14, -4
 548 0002 0600     		movs	r6, r0
 549 0004 0C00     		movs	r4, r1
 550              	.LVL19:
 965:Generated_Source\PSoC4/Display_SPI.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/Display_SPI.c **** 
 967:Generated_Source\PSoC4/Display_SPI.c ****     bufIndex = 0u;
 551              		.loc 1 967 0
 552 0006 0025     		movs	r5, #0
 968:Generated_Source\PSoC4/Display_SPI.c **** 
 969:Generated_Source\PSoC4/Display_SPI.c ****     while(byteCount > 0u)
 553              		.loc 1 969 0
 554 0008 06E0     		b	.L50
 555              	.LVL20:
 556              	.L51:
 970:Generated_Source\PSoC4/Display_SPI.c ****     {
 971:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_WriteTxData(buffer[bufIndex]);
 557              		.loc 1 971 0
 558 000a 705D     		ldrb	r0, [r6, r5]
 559 000c FFF7FEFF 		bl	Display_SPI_WriteTxData
 560              	.LVL21:
 972:Generated_Source\PSoC4/Display_SPI.c ****         bufIndex++;
 561              		.loc 1 972 0
 562 0010 0135     		adds	r5, r5, #1
 563              	.LVL22:
 564 0012 EDB2     		uxtb	r5, r5
 565              	.LVL23:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 28


 973:Generated_Source\PSoC4/Display_SPI.c ****         byteCount--;
 566              		.loc 1 973 0
 567 0014 013C     		subs	r4, r4, #1
 568              	.LVL24:
 569 0016 E4B2     		uxtb	r4, r4
 570              	.LVL25:
 571              	.L50:
 969:Generated_Source\PSoC4/Display_SPI.c ****     {
 572              		.loc 1 969 0
 573 0018 002C     		cmp	r4, #0
 574 001a F6D1     		bne	.L51
 974:Generated_Source\PSoC4/Display_SPI.c ****     }
 975:Generated_Source\PSoC4/Display_SPI.c **** }
 575              		.loc 1 975 0
 576              		@ sp needed
 577              	.LVL26:
 578              	.LVL27:
 579              	.LVL28:
 580 001c 70BD     		pop	{r4, r5, r6, pc}
 581              		.cfi_endproc
 582              	.LFE18:
 583              		.size	Display_SPI_PutArray, .-Display_SPI_PutArray
 584 001e C046     		.section	.text.Display_SPI_ClearFIFO,"ax",%progbits
 585              		.align	2
 586              		.global	Display_SPI_ClearFIFO
 587              		.code	16
 588              		.thumb_func
 589              		.type	Display_SPI_ClearFIFO, %function
 590              	Display_SPI_ClearFIFO:
 591              	.LFB19:
 976:Generated_Source\PSoC4/Display_SPI.c **** 
 977:Generated_Source\PSoC4/Display_SPI.c **** 
 978:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_ClearFIFO
 980:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
 981:Generated_Source\PSoC4/Display_SPI.c **** *
 982:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
 983:Generated_Source\PSoC4/Display_SPI.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC4/Display_SPI.c **** *
 985:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
 986:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 987:Generated_Source\PSoC4/Display_SPI.c **** *
 988:Generated_Source\PSoC4/Display_SPI.c **** * Return:
 989:Generated_Source\PSoC4/Display_SPI.c **** *  None.
 990:Generated_Source\PSoC4/Display_SPI.c **** *
 991:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
 992:Generated_Source\PSoC4/Display_SPI.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/Display_SPI.c **** *
 994:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
 995:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_ClearFIFO(void) 
 996:Generated_Source\PSoC4/Display_SPI.c **** {
 592              		.loc 1 996 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596 0000 10B5     		push	{r4, lr}
 597              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 29


 598              		.cfi_offset 4, -8
 599              		.cfi_offset 14, -4
 997:Generated_Source\PSoC4/Display_SPI.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/Display_SPI.c **** 
 999:Generated_Source\PSoC4/Display_SPI.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/Display_SPI.c ****     while(0u !=(Display_SPI_RX_STATUS_REG & Display_SPI_STS_RX_FIFO_NOT_EMPTY))
 600              		.loc 1 1000 0
 601 0002 01E0     		b	.L53
 602              	.L54:
1001:Generated_Source\PSoC4/Display_SPI.c ****     {
1002:Generated_Source\PSoC4/Display_SPI.c ****         (void) CY_GET_REG8(Display_SPI_RXDATA_PTR);
 603              		.loc 1 1002 0
 604 0004 0A4B     		ldr	r3, .L55
 605 0006 1B78     		ldrb	r3, [r3]
 606              	.L53:
1000:Generated_Source\PSoC4/Display_SPI.c ****     {
 607              		.loc 1 1000 0
 608 0008 0A4B     		ldr	r3, .L55+4
 609 000a 1B78     		ldrb	r3, [r3]
 610 000c 9B06     		lsls	r3, r3, #26
 611 000e F9D4     		bmi	.L54
1003:Generated_Source\PSoC4/Display_SPI.c ****     }
1004:Generated_Source\PSoC4/Display_SPI.c **** 
1005:Generated_Source\PSoC4/Display_SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 612              		.loc 1 1005 0
 613 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 614              	.LVL29:
1006:Generated_Source\PSoC4/Display_SPI.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_AUX_CONTROL_DP0_REG |= ((uint8)  Display_SPI_TX_FIFO_CLR);
 615              		.loc 1 1007 0
 616 0014 084A     		ldr	r2, .L55+8
 617 0016 1178     		ldrb	r1, [r2]
 618 0018 0123     		movs	r3, #1
 619 001a 0B43     		orrs	r3, r1
 620 001c DBB2     		uxtb	r3, r3
 621 001e 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~Display_SPI_TX_FIFO_CLR);
 622              		.loc 1 1008 0
 623 0020 1378     		ldrb	r3, [r2]
 624 0022 0121     		movs	r1, #1
 625 0024 8B43     		bics	r3, r1
 626 0026 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC4/Display_SPI.c **** 
1010:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/Display_SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_AUX_CONTROL_DP1_REG |= ((uint8)  Display_SPI_TX_FIFO_CLR);
1013:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~Display_SPI_TX_FIFO_CLR);
1014:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/Display_SPI.c ****     CyExitCriticalSection(enableInterrupts);
 627              		.loc 1 1015 0
 628 0028 FFF7FEFF 		bl	CyExitCriticalSection
 629              	.LVL30:
1016:Generated_Source\PSoC4/Display_SPI.c **** }
 630              		.loc 1 1016 0
 631              		@ sp needed
 632 002c 10BD     		pop	{r4, pc}
 633              	.L56:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 30


 634 002e C046     		.align	2
 635              	.L55:
 636 0030 51000F40 		.word	1074724945
 637 0034 63000F40 		.word	1074724963
 638 0038 91000F40 		.word	1074725009
 639              		.cfi_endproc
 640              	.LFE19:
 641              		.size	Display_SPI_ClearFIFO, .-Display_SPI_ClearFIFO
 642              		.section	.text.Display_SPI_Init,"ax",%progbits
 643              		.align	2
 644              		.global	Display_SPI_Init
 645              		.code	16
 646              		.thumb_func
 647              		.type	Display_SPI_Init, %function
 648              	Display_SPI_Init:
 649              	.LFB0:
  64:Generated_Source\PSoC4/Display_SPI.c ****     /* Initialize the Bit counter */
 650              		.loc 1 64 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654 0000 10B5     		push	{r4, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 4, -8
 657              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/Display_SPI.c **** 
 658              		.loc 1 66 0
 659 0002 0F22     		movs	r2, #15
 660 0004 064B     		ldr	r3, .L58
 661 0006 1A70     		strb	r2, [r3]
  83:Generated_Source\PSoC4/Display_SPI.c **** 
 662              		.loc 1 83 0
 663 0008 FFF7FEFF 		bl	Display_SPI_ClearFIFO
 664              	.LVL31:
  97:Generated_Source\PSoC4/Display_SPI.c ****     (void) Display_SPI_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 665              		.loc 1 97 0
 666 000c FFF7FEFF 		bl	Display_SPI_ReadTxStatus
 667              	.LVL32:
  98:Generated_Source\PSoC4/Display_SPI.c **** 
 668              		.loc 1 98 0
 669 0010 FFF7FEFF 		bl	Display_SPI_ReadRxStatus
 670              	.LVL33:
 101:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_RX_STATUS_MASK_REG = Display_SPI_RX_INIT_INTERRUPTS_MASK;
 671              		.loc 1 101 0
 672 0014 0023     		movs	r3, #0
 673 0016 034A     		ldr	r2, .L58+4
 674 0018 1370     		strb	r3, [r2]
 102:Generated_Source\PSoC4/Display_SPI.c **** }
 675              		.loc 1 102 0
 676 001a 034A     		ldr	r2, .L58+8
 677 001c 1370     		strb	r3, [r2]
 103:Generated_Source\PSoC4/Display_SPI.c **** 
 678              		.loc 1 103 0
 679              		@ sp needed
 680 001e 10BD     		pop	{r4, pc}
 681              	.L59:
 682              		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 31


 683              	.L58:
 684 0020 81000F40 		.word	1074724993
 685 0024 82000F40 		.word	1074724994
 686 0028 83000F40 		.word	1074724995
 687              		.cfi_endproc
 688              	.LFE0:
 689              		.size	Display_SPI_Init, .-Display_SPI_Init
 690              		.section	.text.Display_SPI_Start,"ax",%progbits
 691              		.align	2
 692              		.global	Display_SPI_Start
 693              		.code	16
 694              		.thumb_func
 695              		.type	Display_SPI_Start, %function
 696              	Display_SPI_Start:
 697              	.LFB2:
 164:Generated_Source\PSoC4/Display_SPI.c ****     if(0u == Display_SPI_initVar)
 698              		.loc 1 164 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 10B5     		push	{r4, lr}
 703              		.cfi_def_cfa_offset 8
 704              		.cfi_offset 4, -8
 705              		.cfi_offset 14, -4
 165:Generated_Source\PSoC4/Display_SPI.c ****     {
 706              		.loc 1 165 0
 707 0002 064B     		ldr	r3, .L62
 708 0004 1B78     		ldrb	r3, [r3]
 709 0006 002B     		cmp	r3, #0
 710 0008 04D1     		bne	.L61
 167:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_initVar = 1u;
 711              		.loc 1 167 0
 712 000a FFF7FEFF 		bl	Display_SPI_Init
 713              	.LVL34:
 168:Generated_Source\PSoC4/Display_SPI.c ****     }
 714              		.loc 1 168 0
 715 000e 0122     		movs	r2, #1
 716 0010 024B     		ldr	r3, .L62
 717 0012 1A70     		strb	r2, [r3]
 718              	.L61:
 171:Generated_Source\PSoC4/Display_SPI.c **** }
 719              		.loc 1 171 0
 720 0014 FFF7FEFF 		bl	Display_SPI_Enable
 721              	.LVL35:
 172:Generated_Source\PSoC4/Display_SPI.c **** 
 722              		.loc 1 172 0
 723              		@ sp needed
 724 0018 10BD     		pop	{r4, pc}
 725              	.L63:
 726 001a C046     		.align	2
 727              	.L62:
 728 001c 00000000 		.word	.LANCHOR0
 729              		.cfi_endproc
 730              	.LFE2:
 731              		.size	Display_SPI_Start, .-Display_SPI_Start
 732              		.section	.text.Display_SPI_EnableInt,"ax",%progbits
 733              		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 32


 734              		.global	Display_SPI_EnableInt
 735              		.code	16
 736              		.thumb_func
 737              		.type	Display_SPI_EnableInt, %function
 738              	Display_SPI_EnableInt:
 739              	.LFB20:
1017:Generated_Source\PSoC4/Display_SPI.c **** 
1018:Generated_Source\PSoC4/Display_SPI.c **** 
1019:Generated_Source\PSoC4/Display_SPI.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/Display_SPI.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/Display_SPI.c **** */
1022:Generated_Source\PSoC4/Display_SPI.c **** 
1023:Generated_Source\PSoC4/Display_SPI.c **** 
1024:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_EnableInt
1026:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
1027:Generated_Source\PSoC4/Display_SPI.c **** *
1028:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
1029:Generated_Source\PSoC4/Display_SPI.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/Display_SPI.c **** *
1031:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
1032:Generated_Source\PSoC4/Display_SPI.c **** *  None.
1033:Generated_Source\PSoC4/Display_SPI.c **** *
1034:Generated_Source\PSoC4/Display_SPI.c **** * Return:
1035:Generated_Source\PSoC4/Display_SPI.c **** *  None.
1036:Generated_Source\PSoC4/Display_SPI.c **** *
1037:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
1038:Generated_Source\PSoC4/Display_SPI.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/Display_SPI.c **** *
1040:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_EnableInt(void) 
1042:Generated_Source\PSoC4/Display_SPI.c **** {
 740              		.loc 1 1042 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
1043:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_EnableRxInt();
1044:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_EnableTxInt();
1045:Generated_Source\PSoC4/Display_SPI.c **** }
 745              		.loc 1 1045 0
 746              		@ sp needed
 747 0000 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE20:
 750              		.size	Display_SPI_EnableInt, .-Display_SPI_EnableInt
 751 0002 C046     		.section	.text.Display_SPI_DisableInt,"ax",%progbits
 752              		.align	2
 753              		.global	Display_SPI_DisableInt
 754              		.code	16
 755              		.thumb_func
 756              		.type	Display_SPI_DisableInt, %function
 757              	Display_SPI_DisableInt:
 758              	.LFB21:
1046:Generated_Source\PSoC4/Display_SPI.c **** 
1047:Generated_Source\PSoC4/Display_SPI.c **** 
1048:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 33


1049:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_DisableInt
1050:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
1051:Generated_Source\PSoC4/Display_SPI.c **** *
1052:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
1053:Generated_Source\PSoC4/Display_SPI.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/Display_SPI.c **** *
1055:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
1056:Generated_Source\PSoC4/Display_SPI.c **** *  None.
1057:Generated_Source\PSoC4/Display_SPI.c **** *
1058:Generated_Source\PSoC4/Display_SPI.c **** * Return:
1059:Generated_Source\PSoC4/Display_SPI.c **** *  None.
1060:Generated_Source\PSoC4/Display_SPI.c **** *
1061:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
1062:Generated_Source\PSoC4/Display_SPI.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/Display_SPI.c **** *
1064:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_DisableInt(void) 
1066:Generated_Source\PSoC4/Display_SPI.c **** {
 759              		.loc 1 1066 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
1067:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_DisableTxInt();
1068:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_DisableRxInt();
1069:Generated_Source\PSoC4/Display_SPI.c **** }
 764              		.loc 1 1069 0
 765              		@ sp needed
 766 0000 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE21:
 769              		.size	Display_SPI_DisableInt, .-Display_SPI_DisableInt
 770 0002 C046     		.section	.text.Display_SPI_SetInterruptMode,"ax",%progbits
 771              		.align	2
 772              		.global	Display_SPI_SetInterruptMode
 773              		.code	16
 774              		.thumb_func
 775              		.type	Display_SPI_SetInterruptMode, %function
 776              	Display_SPI_SetInterruptMode:
 777              	.LFB22:
1070:Generated_Source\PSoC4/Display_SPI.c **** 
1071:Generated_Source\PSoC4/Display_SPI.c **** 
1072:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_SetInterruptMode
1074:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
1075:Generated_Source\PSoC4/Display_SPI.c **** *
1076:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
1077:Generated_Source\PSoC4/Display_SPI.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/Display_SPI.c **** *
1079:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
1080:Generated_Source\PSoC4/Display_SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC4/Display_SPI.c **** *  header file).
1082:Generated_Source\PSoC4/Display_SPI.c **** *
1083:Generated_Source\PSoC4/Display_SPI.c **** * Return:
1084:Generated_Source\PSoC4/Display_SPI.c **** *  None.
1085:Generated_Source\PSoC4/Display_SPI.c **** *
1086:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 34


1087:Generated_Source\PSoC4/Display_SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC4/Display_SPI.c **** *
1089:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/Display_SPI.c **** void Display_SPI_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/Display_SPI.c **** {
 778              		.loc 1 1091 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783              	.LVL36:
1092:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~Display_SPI_STS_SPI_IDLE));
 784              		.loc 1 1092 0
 785 0000 1023     		movs	r3, #16
 786 0002 0200     		movs	r2, r0
 787 0004 9A43     		bics	r2, r3
 788 0006 024B     		ldr	r3, .L67
 789 0008 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC4/Display_SPI.c ****     Display_SPI_RX_STATUS_MASK_REG  =  intSrc;
 790              		.loc 1 1093 0
 791 000a 024B     		ldr	r3, .L67+4
 792 000c 1870     		strb	r0, [r3]
1094:Generated_Source\PSoC4/Display_SPI.c **** }
 793              		.loc 1 1094 0
 794              		@ sp needed
 795 000e 7047     		bx	lr
 796              	.L68:
 797              		.align	2
 798              	.L67:
 799 0010 82000F40 		.word	1074724994
 800 0014 83000F40 		.word	1074724995
 801              		.cfi_endproc
 802              	.LFE22:
 803              		.size	Display_SPI_SetInterruptMode, .-Display_SPI_SetInterruptMode
 804              		.section	.text.Display_SPI_ReadStatus,"ax",%progbits
 805              		.align	2
 806              		.global	Display_SPI_ReadStatus
 807              		.code	16
 808              		.thumb_func
 809              		.type	Display_SPI_ReadStatus, %function
 810              	Display_SPI_ReadStatus:
 811              	.LFB23:
1095:Generated_Source\PSoC4/Display_SPI.c **** 
1096:Generated_Source\PSoC4/Display_SPI.c **** 
1097:Generated_Source\PSoC4/Display_SPI.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/Display_SPI.c **** * Function Name: Display_SPI_ReadStatus
1099:Generated_Source\PSoC4/Display_SPI.c **** ********************************************************************************
1100:Generated_Source\PSoC4/Display_SPI.c **** *
1101:Generated_Source\PSoC4/Display_SPI.c **** * Summary:
1102:Generated_Source\PSoC4/Display_SPI.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/Display_SPI.c **** *
1104:Generated_Source\PSoC4/Display_SPI.c **** * Parameters:
1105:Generated_Source\PSoC4/Display_SPI.c **** *  None.
1106:Generated_Source\PSoC4/Display_SPI.c **** *
1107:Generated_Source\PSoC4/Display_SPI.c **** * Return:
1108:Generated_Source\PSoC4/Display_SPI.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/Display_SPI.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 35


1110:Generated_Source\PSoC4/Display_SPI.c **** * Global variables:
1111:Generated_Source\PSoC4/Display_SPI.c **** *  Display_SPI_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/Display_SPI.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/Display_SPI.c **** *
1114:Generated_Source\PSoC4/Display_SPI.c **** * Theory:
1115:Generated_Source\PSoC4/Display_SPI.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/Display_SPI.c **** *  and flow control.
1117:Generated_Source\PSoC4/Display_SPI.c **** *
1118:Generated_Source\PSoC4/Display_SPI.c **** * Side Effects:
1119:Generated_Source\PSoC4/Display_SPI.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/Display_SPI.c **** *
1121:Generated_Source\PSoC4/Display_SPI.c **** * Reentrant:
1122:Generated_Source\PSoC4/Display_SPI.c **** *  No.
1123:Generated_Source\PSoC4/Display_SPI.c **** *
1124:Generated_Source\PSoC4/Display_SPI.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/Display_SPI.c **** uint8 Display_SPI_ReadStatus(void) 
1126:Generated_Source\PSoC4/Display_SPI.c **** {
 812              		.loc 1 1126 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
1127:Generated_Source\PSoC4/Display_SPI.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/Display_SPI.c **** 
1129:Generated_Source\PSoC4/Display_SPI.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED || Display_SPI_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/Display_SPI.c **** 
1131:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_DisableInt();
1132:Generated_Source\PSoC4/Display_SPI.c **** 
1133:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus  = Display_SPI_GET_STATUS_RX(Display_SPI_swStatusRx);
1134:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus |= Display_SPI_GET_STATUS_TX(Display_SPI_swStatusTx);
1135:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus &= ((uint8) ~Display_SPI_STS_SPI_IDLE);
1136:Generated_Source\PSoC4/Display_SPI.c **** 
1137:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_swStatusTx = 0u;
1138:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_swStatusRx = 0u;
1139:Generated_Source\PSoC4/Display_SPI.c **** 
1140:Generated_Source\PSoC4/Display_SPI.c ****         Display_SPI_EnableInt();
1141:Generated_Source\PSoC4/Display_SPI.c **** 
1142:Generated_Source\PSoC4/Display_SPI.c ****     #else
1143:Generated_Source\PSoC4/Display_SPI.c **** 
1144:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus  = Display_SPI_RX_STATUS_REG;
 817              		.loc 1 1144 0
 818 0000 034B     		ldr	r3, .L70
 819 0002 1B78     		ldrb	r3, [r3]
 820              	.LVL37:
1145:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus |= Display_SPI_TX_STATUS_REG;
 821              		.loc 1 1145 0
 822 0004 034A     		ldr	r2, .L70+4
 823 0006 1078     		ldrb	r0, [r2]
 824 0008 1843     		orrs	r0, r3
 825              	.LVL38:
1146:Generated_Source\PSoC4/Display_SPI.c ****         tmpStatus &= ((uint8) ~Display_SPI_STS_SPI_IDLE);
 826              		.loc 1 1146 0
 827 000a 1023     		movs	r3, #16
 828 000c 9843     		bics	r0, r3
 829              	.LVL39:
1147:Generated_Source\PSoC4/Display_SPI.c **** 
1148:Generated_Source\PSoC4/Display_SPI.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED || Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 36


1149:Generated_Source\PSoC4/Display_SPI.c **** 
1150:Generated_Source\PSoC4/Display_SPI.c ****     return(tmpStatus);
1151:Generated_Source\PSoC4/Display_SPI.c **** }
 830              		.loc 1 1151 0
 831              		@ sp needed
 832 000e 7047     		bx	lr
 833              	.L71:
 834              		.align	2
 835              	.L70:
 836 0010 63000F40 		.word	1074724963
 837 0014 62000F40 		.word	1074724962
 838              		.cfi_endproc
 839              	.LFE23:
 840              		.size	Display_SPI_ReadStatus, .-Display_SPI_ReadStatus
 841              		.comm	Display_SPI_swStatusRx,1,1
 842              		.comm	Display_SPI_swStatusTx,1,1
 843              		.global	Display_SPI_initVar
 844              		.bss
 845              		.set	.LANCHOR0,. + 0
 846              		.type	Display_SPI_initVar, %object
 847              		.size	Display_SPI_initVar, 1
 848              	Display_SPI_initVar:
 849 0000 00       		.space	1
 850              		.text
 851              	.Letext0:
 852              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 853              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 854              		.section	.debug_info,"",%progbits
 855              	.Ldebug_info0:
 856 0000 88040000 		.4byte	0x488
 857 0004 0400     		.2byte	0x4
 858 0006 00000000 		.4byte	.Ldebug_abbrev0
 859 000a 04       		.byte	0x4
 860 000b 01       		.uleb128 0x1
 861 000c CC000000 		.4byte	.LASF53
 862 0010 0C       		.byte	0xc
 863 0011 1F000000 		.4byte	.LASF54
 864 0015 60030000 		.4byte	.LASF55
 865 0019 00000000 		.4byte	.Ldebug_ranges0+0
 866 001d 00000000 		.4byte	0
 867 0021 00000000 		.4byte	.Ldebug_line0
 868 0025 02       		.uleb128 0x2
 869 0026 01       		.byte	0x1
 870 0027 06       		.byte	0x6
 871 0028 5E040000 		.4byte	.LASF0
 872 002c 02       		.uleb128 0x2
 873 002d 01       		.byte	0x1
 874 002e 08       		.byte	0x8
 875 002f 64020000 		.4byte	.LASF1
 876 0033 02       		.uleb128 0x2
 877 0034 02       		.byte	0x2
 878 0035 05       		.byte	0x5
 879 0036 F1030000 		.4byte	.LASF2
 880 003a 02       		.uleb128 0x2
 881 003b 02       		.byte	0x2
 882 003c 07       		.byte	0x7
 883 003d 6A040000 		.4byte	.LASF3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 37


 884 0041 02       		.uleb128 0x2
 885 0042 04       		.byte	0x4
 886 0043 05       		.byte	0x5
 887 0044 1B040000 		.4byte	.LASF4
 888 0048 02       		.uleb128 0x2
 889 0049 04       		.byte	0x4
 890 004a 07       		.byte	0x7
 891 004b 01020000 		.4byte	.LASF5
 892 004f 02       		.uleb128 0x2
 893 0050 08       		.byte	0x8
 894 0051 05       		.byte	0x5
 895 0052 BB030000 		.4byte	.LASF6
 896 0056 02       		.uleb128 0x2
 897 0057 08       		.byte	0x8
 898 0058 07       		.byte	0x7
 899 0059 8B010000 		.4byte	.LASF7
 900 005d 03       		.uleb128 0x3
 901 005e 04       		.byte	0x4
 902 005f 05       		.byte	0x5
 903 0060 696E7400 		.ascii	"int\000"
 904 0064 02       		.uleb128 0x2
 905 0065 04       		.byte	0x4
 906 0066 07       		.byte	0x7
 907 0067 EA020000 		.4byte	.LASF8
 908 006b 04       		.uleb128 0x4
 909 006c 2B020000 		.4byte	.LASF12
 910 0070 02       		.byte	0x2
 911 0071 E401     		.2byte	0x1e4
 912 0073 2C000000 		.4byte	0x2c
 913 0077 02       		.uleb128 0x2
 914 0078 04       		.byte	0x4
 915 0079 04       		.byte	0x4
 916 007a 85010000 		.4byte	.LASF9
 917 007e 02       		.uleb128 0x2
 918 007f 08       		.byte	0x8
 919 0080 04       		.byte	0x4
 920 0081 72020000 		.4byte	.LASF10
 921 0085 02       		.uleb128 0x2
 922 0086 01       		.byte	0x1
 923 0087 08       		.byte	0x8
 924 0088 C9030000 		.4byte	.LASF11
 925 008c 04       		.uleb128 0x4
 926 008d DD010000 		.4byte	.LASF13
 927 0091 02       		.byte	0x2
 928 0092 8E02     		.2byte	0x28e
 929 0094 98000000 		.4byte	0x98
 930 0098 05       		.uleb128 0x5
 931 0099 6B000000 		.4byte	0x6b
 932 009d 02       		.uleb128 0x2
 933 009e 04       		.byte	0x4
 934 009f 07       		.byte	0x7
 935 00a0 9B030000 		.4byte	.LASF14
 936 00a4 06       		.uleb128 0x6
 937 00a5 8E040000 		.4byte	.LASF15
 938 00a9 01       		.byte	0x1
 939 00aa 78       		.byte	0x78
 940 00ab 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 38


 941 00af 3C000000 		.4byte	.LFE1-.LFB1
 942 00b3 01       		.uleb128 0x1
 943 00b4 9C       		.byte	0x9c
 944 00b5 DB000000 		.4byte	0xdb
 945 00b9 07       		.uleb128 0x7
 946 00ba 53020000 		.4byte	.LASF17
 947 00be 01       		.byte	0x1
 948 00bf 7A       		.byte	0x7a
 949 00c0 6B000000 		.4byte	0x6b
 950 00c4 00000000 		.4byte	.LLST0
 951 00c8 08       		.uleb128 0x8
 952 00c9 06000000 		.4byte	.LVL0
 953 00cd 75040000 		.4byte	0x475
 954 00d1 08       		.uleb128 0x8
 955 00d2 2C000000 		.4byte	.LVL1
 956 00d6 80040000 		.4byte	0x480
 957 00da 00       		.byte	0
 958 00db 06       		.uleb128 0x6
 959 00dc 7D040000 		.4byte	.LASF16
 960 00e0 01       		.byte	0x1
 961 00e1 C0       		.byte	0xc0
 962 00e2 00000000 		.4byte	.LFB3
 963 00e6 28000000 		.4byte	.LFE3-.LFB3
 964 00ea 01       		.uleb128 0x1
 965 00eb 9C       		.byte	0x9c
 966 00ec 12010000 		.4byte	0x112
 967 00f0 07       		.uleb128 0x7
 968 00f1 53020000 		.4byte	.LASF17
 969 00f5 01       		.byte	0x1
 970 00f6 C2       		.byte	0xc2
 971 00f7 6B000000 		.4byte	0x6b
 972 00fb 13000000 		.4byte	.LLST1
 973 00ff 08       		.uleb128 0x8
 974 0100 06000000 		.4byte	.LVL2
 975 0104 75040000 		.4byte	0x475
 976 0108 08       		.uleb128 0x8
 977 0109 1C000000 		.4byte	.LVL3
 978 010d 80040000 		.4byte	0x480
 979 0111 00       		.byte	0
 980 0112 09       		.uleb128 0x9
 981 0113 13020000 		.4byte	.LASF18
 982 0117 01       		.byte	0x1
 983 0118 E3       		.byte	0xe3
 984 0119 00000000 		.4byte	.LFB4
 985 011d 02000000 		.4byte	.LFE4-.LFB4
 986 0121 01       		.uleb128 0x1
 987 0122 9C       		.byte	0x9c
 988 0123 09       		.uleb128 0x9
 989 0124 31020000 		.4byte	.LASF19
 990 0128 01       		.byte	0x1
 991 0129 FC       		.byte	0xfc
 992 012a 00000000 		.4byte	.LFB5
 993 012e 02000000 		.4byte	.LFE5-.LFB5
 994 0132 01       		.uleb128 0x1
 995 0133 9C       		.byte	0x9c
 996 0134 0A       		.uleb128 0xa
 997 0135 65010000 		.4byte	.LASF20
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 39


 998 0139 01       		.byte	0x1
 999 013a 1501     		.2byte	0x115
 1000 013c 00000000 		.4byte	.LFB6
 1001 0140 02000000 		.4byte	.LFE6-.LFB6
 1002 0144 01       		.uleb128 0x1
 1003 0145 9C       		.byte	0x9c
 1004 0146 0A       		.uleb128 0xa
 1005 0147 44000000 		.4byte	.LASF21
 1006 014b 01       		.byte	0x1
 1007 014c 2E01     		.2byte	0x12e
 1008 014e 00000000 		.4byte	.LFB7
 1009 0152 02000000 		.4byte	.LFE7-.LFB7
 1010 0156 01       		.uleb128 0x1
 1011 0157 9C       		.byte	0x9c
 1012 0158 0B       		.uleb128 0xb
 1013 0159 BE010000 		.4byte	.LASF22
 1014 015d 01       		.byte	0x1
 1015 015e 4801     		.2byte	0x148
 1016 0160 00000000 		.4byte	.LFB8
 1017 0164 0C000000 		.4byte	.LFE8-.LFB8
 1018 0168 01       		.uleb128 0x1
 1019 0169 9C       		.byte	0x9c
 1020 016a 7D010000 		.4byte	0x17d
 1021 016e 0C       		.uleb128 0xc
 1022 016f 79020000 		.4byte	.LASF24
 1023 0173 01       		.byte	0x1
 1024 0174 4801     		.2byte	0x148
 1025 0176 6B000000 		.4byte	0x6b
 1026 017a 01       		.uleb128 0x1
 1027 017b 50       		.byte	0x50
 1028 017c 00       		.byte	0
 1029 017d 0B       		.uleb128 0xb
 1030 017e E2010000 		.4byte	.LASF23
 1031 0182 01       		.byte	0x1
 1032 0183 6001     		.2byte	0x160
 1033 0185 00000000 		.4byte	.LFB9
 1034 0189 0C000000 		.4byte	.LFE9-.LFB9
 1035 018d 01       		.uleb128 0x1
 1036 018e 9C       		.byte	0x9c
 1037 018f A2010000 		.4byte	0x1a2
 1038 0193 0C       		.uleb128 0xc
 1039 0194 79020000 		.4byte	.LASF24
 1040 0198 01       		.byte	0x1
 1041 0199 6001     		.2byte	0x160
 1042 019b 6B000000 		.4byte	0x6b
 1043 019f 01       		.uleb128 0x1
 1044 01a0 50       		.byte	0x50
 1045 01a1 00       		.byte	0
 1046 01a2 0D       		.uleb128 0xd
 1047 01a3 5D000000 		.4byte	.LASF26
 1048 01a7 01       		.byte	0x1
 1049 01a8 8201     		.2byte	0x182
 1050 01aa 6B000000 		.4byte	0x6b
 1051 01ae 00000000 		.4byte	.LFB10
 1052 01b2 0C000000 		.4byte	.LFE10-.LFB10
 1053 01b6 01       		.uleb128 0x1
 1054 01b7 9C       		.byte	0x9c
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 40


 1055 01b8 CB010000 		.4byte	0x1cb
 1056 01bc 0E       		.uleb128 0xe
 1057 01bd 24040000 		.4byte	.LASF25
 1058 01c1 01       		.byte	0x1
 1059 01c2 8401     		.2byte	0x184
 1060 01c4 6B000000 		.4byte	0x6b
 1061 01c8 01       		.uleb128 0x1
 1062 01c9 50       		.byte	0x50
 1063 01ca 00       		.byte	0
 1064 01cb 0D       		.uleb128 0xd
 1065 01cc 02040000 		.4byte	.LASF27
 1066 01d0 01       		.byte	0x1
 1067 01d1 B501     		.2byte	0x1b5
 1068 01d3 6B000000 		.4byte	0x6b
 1069 01d7 00000000 		.4byte	.LFB11
 1070 01db 0C000000 		.4byte	.LFE11-.LFB11
 1071 01df 01       		.uleb128 0x1
 1072 01e0 9C       		.byte	0x9c
 1073 01e1 F4010000 		.4byte	0x1f4
 1074 01e5 0E       		.uleb128 0xe
 1075 01e6 24040000 		.4byte	.LASF25
 1076 01ea 01       		.byte	0x1
 1077 01eb B701     		.2byte	0x1b7
 1078 01ed 6B000000 		.4byte	0x6b
 1079 01f1 01       		.uleb128 0x1
 1080 01f2 50       		.byte	0x50
 1081 01f3 00       		.byte	0
 1082 01f4 0B       		.uleb128 0xb
 1083 01f5 00000000 		.4byte	.LASF28
 1084 01f9 01       		.byte	0x1
 1085 01fa EE01     		.2byte	0x1ee
 1086 01fc 00000000 		.4byte	.LFB12
 1087 0200 18000000 		.4byte	.LFE12-.LFB12
 1088 0204 01       		.uleb128 0x1
 1089 0205 9C       		.byte	0x9c
 1090 0206 19020000 		.4byte	0x219
 1091 020a 0C       		.uleb128 0xc
 1092 020b 18000000 		.4byte	.LASF29
 1093 020f 01       		.byte	0x1
 1094 0210 EE01     		.2byte	0x1ee
 1095 0212 6B000000 		.4byte	0x6b
 1096 0216 01       		.uleb128 0x1
 1097 0217 50       		.byte	0x50
 1098 0218 00       		.byte	0
 1099 0219 0D       		.uleb128 0xd
 1100 021a 24030000 		.4byte	.LASF30
 1101 021e 01       		.byte	0x1
 1102 021f 5A02     		.2byte	0x25a
 1103 0221 6B000000 		.4byte	0x6b
 1104 0225 00000000 		.4byte	.LFB13
 1105 0229 0C000000 		.4byte	.LFE13-.LFB13
 1106 022d 01       		.uleb128 0x1
 1107 022e 9C       		.byte	0x9c
 1108 022f 42020000 		.4byte	0x242
 1109 0233 0E       		.uleb128 0xe
 1110 0234 7E010000 		.4byte	.LASF31
 1111 0238 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 41


 1112 0239 5C02     		.2byte	0x25c
 1113 023b 6B000000 		.4byte	0x6b
 1114 023f 01       		.uleb128 0x1
 1115 0240 50       		.byte	0x50
 1116 0241 00       		.byte	0
 1117 0242 0D       		.uleb128 0xd
 1118 0243 3B030000 		.4byte	.LASF32
 1119 0247 01       		.byte	0x1
 1120 0248 9A02     		.2byte	0x29a
 1121 024a 6B000000 		.4byte	0x6b
 1122 024e 00000000 		.4byte	.LFB14
 1123 0252 14000000 		.4byte	.LFE14-.LFB14
 1124 0256 01       		.uleb128 0x1
 1125 0257 9C       		.byte	0x9c
 1126 0258 6B020000 		.4byte	0x26b
 1127 025c 0E       		.uleb128 0xe
 1128 025d B9010000 		.4byte	.LASF33
 1129 0261 01       		.byte	0x1
 1130 0262 9C02     		.2byte	0x29c
 1131 0264 6B000000 		.4byte	0x6b
 1132 0268 01       		.uleb128 0x1
 1133 0269 50       		.byte	0x50
 1134 026a 00       		.byte	0
 1135 026b 0D       		.uleb128 0xd
 1136 026c 80020000 		.4byte	.LASF34
 1137 0270 01       		.byte	0x1
 1138 0271 D702     		.2byte	0x2d7
 1139 0273 6B000000 		.4byte	0x6b
 1140 0277 00000000 		.4byte	.LFB15
 1141 027b 20000000 		.4byte	.LFE15-.LFB15
 1142 027f 01       		.uleb128 0x1
 1143 0280 9C       		.byte	0x9c
 1144 0281 96020000 		.4byte	0x296
 1145 0285 0F       		.uleb128 0xf
 1146 0286 B9010000 		.4byte	.LASF33
 1147 028a 01       		.byte	0x1
 1148 028b D902     		.2byte	0x2d9
 1149 028d 6B000000 		.4byte	0x6b
 1150 0291 26000000 		.4byte	.LLST2
 1151 0295 00       		.byte	0
 1152 0296 0A       		.uleb128 0xa
 1153 0297 44040000 		.4byte	.LASF35
 1154 029b 01       		.byte	0x1
 1155 029c 2603     		.2byte	0x326
 1156 029e 00000000 		.4byte	.LFB16
 1157 02a2 18000000 		.4byte	.LFE16-.LFB16
 1158 02a6 01       		.uleb128 0x1
 1159 02a7 9C       		.byte	0x9c
 1160 02a8 0B       		.uleb128 0xb
 1161 02a9 D0020000 		.4byte	.LASF36
 1162 02ad 01       		.byte	0x1
 1163 02ae 5D03     		.2byte	0x35d
 1164 02b0 00000000 		.4byte	.LFB17
 1165 02b4 24000000 		.4byte	.LFE17-.LFB17
 1166 02b8 01       		.uleb128 0x1
 1167 02b9 9C       		.byte	0x9c
 1168 02ba E1020000 		.4byte	0x2e1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 42


 1169 02be 0F       		.uleb128 0xf
 1170 02bf 53020000 		.4byte	.LASF17
 1171 02c3 01       		.byte	0x1
 1172 02c4 5F03     		.2byte	0x35f
 1173 02c6 6B000000 		.4byte	0x6b
 1174 02ca 4F000000 		.4byte	.LLST3
 1175 02ce 08       		.uleb128 0x8
 1176 02cf 06000000 		.4byte	.LVL16
 1177 02d3 75040000 		.4byte	0x475
 1178 02d7 08       		.uleb128 0x8
 1179 02d8 1E000000 		.4byte	.LVL17
 1180 02dc 80040000 		.4byte	0x480
 1181 02e0 00       		.byte	0
 1182 02e1 0B       		.uleb128 0xb
 1183 02e2 B7000000 		.4byte	.LASF37
 1184 02e6 01       		.byte	0x1
 1185 02e7 C203     		.2byte	0x3c2
 1186 02e9 00000000 		.4byte	.LFB18
 1187 02ed 1E000000 		.4byte	.LFE18-.LFB18
 1188 02f1 01       		.uleb128 0x1
 1189 02f2 9C       		.byte	0x9c
 1190 02f3 31030000 		.4byte	0x331
 1191 02f7 10       		.uleb128 0x10
 1192 02f8 FB030000 		.4byte	.LASF38
 1193 02fc 01       		.byte	0x1
 1194 02fd C203     		.2byte	0x3c2
 1195 02ff 31030000 		.4byte	0x331
 1196 0303 62000000 		.4byte	.LLST4
 1197 0307 10       		.uleb128 0x10
 1198 0308 49020000 		.4byte	.LASF39
 1199 030c 01       		.byte	0x1
 1200 030d C203     		.2byte	0x3c2
 1201 030f 6B000000 		.4byte	0x6b
 1202 0313 8E000000 		.4byte	.LLST5
 1203 0317 0F       		.uleb128 0xf
 1204 0318 57030000 		.4byte	.LASF40
 1205 031c 01       		.byte	0x1
 1206 031d C503     		.2byte	0x3c5
 1207 031f 6B000000 		.4byte	0x6b
 1208 0323 B7000000 		.4byte	.LLST6
 1209 0327 08       		.uleb128 0x8
 1210 0328 10000000 		.4byte	.LVL21
 1211 032c F4010000 		.4byte	0x1f4
 1212 0330 00       		.byte	0
 1213 0331 11       		.uleb128 0x11
 1214 0332 04       		.byte	0x4
 1215 0333 37030000 		.4byte	0x337
 1216 0337 12       		.uleb128 0x12
 1217 0338 6B000000 		.4byte	0x6b
 1218 033c 0B       		.uleb128 0xb
 1219 033d 2E040000 		.4byte	.LASF41
 1220 0341 01       		.byte	0x1
 1221 0342 E303     		.2byte	0x3e3
 1222 0344 00000000 		.4byte	.LFB19
 1223 0348 3C000000 		.4byte	.LFE19-.LFB19
 1224 034c 01       		.uleb128 0x1
 1225 034d 9C       		.byte	0x9c
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 43


 1226 034e 75030000 		.4byte	0x375
 1227 0352 0F       		.uleb128 0xf
 1228 0353 53020000 		.4byte	.LASF17
 1229 0357 01       		.byte	0x1
 1230 0358 E503     		.2byte	0x3e5
 1231 035a 6B000000 		.4byte	0x6b
 1232 035e E1000000 		.4byte	.LLST7
 1233 0362 08       		.uleb128 0x8
 1234 0363 14000000 		.4byte	.LVL29
 1235 0367 75040000 		.4byte	0x475
 1236 036b 08       		.uleb128 0x8
 1237 036c 2C000000 		.4byte	.LVL30
 1238 0370 80040000 		.4byte	0x480
 1239 0374 00       		.byte	0
 1240 0375 06       		.uleb128 0x6
 1241 0376 CE030000 		.4byte	.LASF42
 1242 037a 01       		.byte	0x1
 1243 037b 3F       		.byte	0x3f
 1244 037c 00000000 		.4byte	.LFB0
 1245 0380 2C000000 		.4byte	.LFE0-.LFB0
 1246 0384 01       		.uleb128 0x1
 1247 0385 9C       		.byte	0x9c
 1248 0386 A6030000 		.4byte	0x3a6
 1249 038a 08       		.uleb128 0x8
 1250 038b 0C000000 		.4byte	.LVL31
 1251 038f 3C030000 		.4byte	0x33c
 1252 0393 08       		.uleb128 0x8
 1253 0394 10000000 		.4byte	.LVL32
 1254 0398 A2010000 		.4byte	0x1a2
 1255 039c 08       		.uleb128 0x8
 1256 039d 14000000 		.4byte	.LVL33
 1257 03a1 CB010000 		.4byte	0x1cb
 1258 03a5 00       		.byte	0
 1259 03a6 06       		.uleb128 0x6
 1260 03a7 DF030000 		.4byte	.LASF43
 1261 03ab 01       		.byte	0x1
 1262 03ac A3       		.byte	0xa3
 1263 03ad 00000000 		.4byte	.LFB2
 1264 03b1 20000000 		.4byte	.LFE2-.LFB2
 1265 03b5 01       		.uleb128 0x1
 1266 03b6 9C       		.byte	0x9c
 1267 03b7 CE030000 		.4byte	0x3ce
 1268 03bb 08       		.uleb128 0x8
 1269 03bc 0E000000 		.4byte	.LVL34
 1270 03c0 75030000 		.4byte	0x375
 1271 03c4 08       		.uleb128 0x8
 1272 03c5 18000000 		.4byte	.LVL35
 1273 03c9 A4000000 		.4byte	0xa4
 1274 03cd 00       		.byte	0
 1275 03ce 0A       		.uleb128 0xa
 1276 03cf A1000000 		.4byte	.LASF44
 1277 03d3 01       		.byte	0x1
 1278 03d4 1104     		.2byte	0x411
 1279 03d6 00000000 		.4byte	.LFB20
 1280 03da 02000000 		.4byte	.LFE20-.LFB20
 1281 03de 01       		.uleb128 0x1
 1282 03df 9C       		.byte	0x9c
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 44


 1283 03e0 0A       		.uleb128 0xa
 1284 03e1 76000000 		.4byte	.LASF45
 1285 03e5 01       		.byte	0x1
 1286 03e6 2904     		.2byte	0x429
 1287 03e8 00000000 		.4byte	.LFB21
 1288 03ec 02000000 		.4byte	.LFE21-.LFB21
 1289 03f0 01       		.uleb128 0x1
 1290 03f1 9C       		.byte	0x9c
 1291 03f2 0B       		.uleb128 0xb
 1292 03f3 9C020000 		.4byte	.LASF46
 1293 03f7 01       		.byte	0x1
 1294 03f8 4204     		.2byte	0x442
 1295 03fa 00000000 		.4byte	.LFB22
 1296 03fe 18000000 		.4byte	.LFE22-.LFB22
 1297 0402 01       		.uleb128 0x1
 1298 0403 9C       		.byte	0x9c
 1299 0404 17040000 		.4byte	0x417
 1300 0408 0C       		.uleb128 0xc
 1301 0409 79020000 		.4byte	.LASF24
 1302 040d 01       		.byte	0x1
 1303 040e 4204     		.2byte	0x442
 1304 0410 6B000000 		.4byte	0x6b
 1305 0414 01       		.uleb128 0x1
 1306 0415 50       		.byte	0x50
 1307 0416 00       		.byte	0
 1308 0417 0D       		.uleb128 0xd
 1309 0418 A2010000 		.4byte	.LASF47
 1310 041c 01       		.byte	0x1
 1311 041d 6504     		.2byte	0x465
 1312 041f 6B000000 		.4byte	0x6b
 1313 0423 00000000 		.4byte	.LFB23
 1314 0427 18000000 		.4byte	.LFE23-.LFB23
 1315 042b 01       		.uleb128 0x1
 1316 042c 9C       		.byte	0x9c
 1317 042d 42040000 		.4byte	0x442
 1318 0431 0F       		.uleb128 0xf
 1319 0432 24040000 		.4byte	.LASF25
 1320 0436 01       		.byte	0x1
 1321 0437 6704     		.2byte	0x467
 1322 0439 6B000000 		.4byte	0x6b
 1323 043d F4000000 		.4byte	.LLST8
 1324 0441 00       		.byte	0
 1325 0442 13       		.uleb128 0x13
 1326 0443 8D000000 		.4byte	.LASF48
 1327 0447 01       		.byte	0x1
 1328 0448 22       		.byte	0x22
 1329 0449 6B000000 		.4byte	0x6b
 1330 044d 05       		.uleb128 0x5
 1331 044e 03       		.byte	0x3
 1332 044f 00000000 		.4byte	Display_SPI_initVar
 1333 0453 13       		.uleb128 0x13
 1334 0454 0D030000 		.4byte	.LASF49
 1335 0458 01       		.byte	0x1
 1336 0459 24       		.byte	0x24
 1337 045a 98000000 		.4byte	0x98
 1338 045e 05       		.uleb128 0x5
 1339 045f 03       		.byte	0x3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 45


 1340 0460 00000000 		.4byte	Display_SPI_swStatusTx
 1341 0464 13       		.uleb128 0x13
 1342 0465 A4030000 		.4byte	.LASF50
 1343 0469 01       		.byte	0x1
 1344 046a 25       		.byte	0x25
 1345 046b 98000000 		.4byte	0x98
 1346 046f 05       		.uleb128 0x5
 1347 0470 03       		.byte	0x3
 1348 0471 00000000 		.4byte	Display_SPI_swStatusRx
 1349 0475 14       		.uleb128 0x14
 1350 0476 B9020000 		.4byte	.LASF51
 1351 047a B9020000 		.4byte	.LASF51
 1352 047e 03       		.byte	0x3
 1353 047f E5       		.byte	0xe5
 1354 0480 14       		.uleb128 0x14
 1355 0481 F7020000 		.4byte	.LASF52
 1356 0485 F7020000 		.4byte	.LASF52
 1357 0489 03       		.byte	0x3
 1358 048a E6       		.byte	0xe6
 1359 048b 00       		.byte	0
 1360              		.section	.debug_abbrev,"",%progbits
 1361              	.Ldebug_abbrev0:
 1362 0000 01       		.uleb128 0x1
 1363 0001 11       		.uleb128 0x11
 1364 0002 01       		.byte	0x1
 1365 0003 25       		.uleb128 0x25
 1366 0004 0E       		.uleb128 0xe
 1367 0005 13       		.uleb128 0x13
 1368 0006 0B       		.uleb128 0xb
 1369 0007 03       		.uleb128 0x3
 1370 0008 0E       		.uleb128 0xe
 1371 0009 1B       		.uleb128 0x1b
 1372 000a 0E       		.uleb128 0xe
 1373 000b 55       		.uleb128 0x55
 1374 000c 17       		.uleb128 0x17
 1375 000d 11       		.uleb128 0x11
 1376 000e 01       		.uleb128 0x1
 1377 000f 10       		.uleb128 0x10
 1378 0010 17       		.uleb128 0x17
 1379 0011 00       		.byte	0
 1380 0012 00       		.byte	0
 1381 0013 02       		.uleb128 0x2
 1382 0014 24       		.uleb128 0x24
 1383 0015 00       		.byte	0
 1384 0016 0B       		.uleb128 0xb
 1385 0017 0B       		.uleb128 0xb
 1386 0018 3E       		.uleb128 0x3e
 1387 0019 0B       		.uleb128 0xb
 1388 001a 03       		.uleb128 0x3
 1389 001b 0E       		.uleb128 0xe
 1390 001c 00       		.byte	0
 1391 001d 00       		.byte	0
 1392 001e 03       		.uleb128 0x3
 1393 001f 24       		.uleb128 0x24
 1394 0020 00       		.byte	0
 1395 0021 0B       		.uleb128 0xb
 1396 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 46


 1397 0023 3E       		.uleb128 0x3e
 1398 0024 0B       		.uleb128 0xb
 1399 0025 03       		.uleb128 0x3
 1400 0026 08       		.uleb128 0x8
 1401 0027 00       		.byte	0
 1402 0028 00       		.byte	0
 1403 0029 04       		.uleb128 0x4
 1404 002a 16       		.uleb128 0x16
 1405 002b 00       		.byte	0
 1406 002c 03       		.uleb128 0x3
 1407 002d 0E       		.uleb128 0xe
 1408 002e 3A       		.uleb128 0x3a
 1409 002f 0B       		.uleb128 0xb
 1410 0030 3B       		.uleb128 0x3b
 1411 0031 05       		.uleb128 0x5
 1412 0032 49       		.uleb128 0x49
 1413 0033 13       		.uleb128 0x13
 1414 0034 00       		.byte	0
 1415 0035 00       		.byte	0
 1416 0036 05       		.uleb128 0x5
 1417 0037 35       		.uleb128 0x35
 1418 0038 00       		.byte	0
 1419 0039 49       		.uleb128 0x49
 1420 003a 13       		.uleb128 0x13
 1421 003b 00       		.byte	0
 1422 003c 00       		.byte	0
 1423 003d 06       		.uleb128 0x6
 1424 003e 2E       		.uleb128 0x2e
 1425 003f 01       		.byte	0x1
 1426 0040 3F       		.uleb128 0x3f
 1427 0041 19       		.uleb128 0x19
 1428 0042 03       		.uleb128 0x3
 1429 0043 0E       		.uleb128 0xe
 1430 0044 3A       		.uleb128 0x3a
 1431 0045 0B       		.uleb128 0xb
 1432 0046 3B       		.uleb128 0x3b
 1433 0047 0B       		.uleb128 0xb
 1434 0048 27       		.uleb128 0x27
 1435 0049 19       		.uleb128 0x19
 1436 004a 11       		.uleb128 0x11
 1437 004b 01       		.uleb128 0x1
 1438 004c 12       		.uleb128 0x12
 1439 004d 06       		.uleb128 0x6
 1440 004e 40       		.uleb128 0x40
 1441 004f 18       		.uleb128 0x18
 1442 0050 9742     		.uleb128 0x2117
 1443 0052 19       		.uleb128 0x19
 1444 0053 01       		.uleb128 0x1
 1445 0054 13       		.uleb128 0x13
 1446 0055 00       		.byte	0
 1447 0056 00       		.byte	0
 1448 0057 07       		.uleb128 0x7
 1449 0058 34       		.uleb128 0x34
 1450 0059 00       		.byte	0
 1451 005a 03       		.uleb128 0x3
 1452 005b 0E       		.uleb128 0xe
 1453 005c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 47


 1454 005d 0B       		.uleb128 0xb
 1455 005e 3B       		.uleb128 0x3b
 1456 005f 0B       		.uleb128 0xb
 1457 0060 49       		.uleb128 0x49
 1458 0061 13       		.uleb128 0x13
 1459 0062 02       		.uleb128 0x2
 1460 0063 17       		.uleb128 0x17
 1461 0064 00       		.byte	0
 1462 0065 00       		.byte	0
 1463 0066 08       		.uleb128 0x8
 1464 0067 898201   		.uleb128 0x4109
 1465 006a 00       		.byte	0
 1466 006b 11       		.uleb128 0x11
 1467 006c 01       		.uleb128 0x1
 1468 006d 31       		.uleb128 0x31
 1469 006e 13       		.uleb128 0x13
 1470 006f 00       		.byte	0
 1471 0070 00       		.byte	0
 1472 0071 09       		.uleb128 0x9
 1473 0072 2E       		.uleb128 0x2e
 1474 0073 00       		.byte	0
 1475 0074 3F       		.uleb128 0x3f
 1476 0075 19       		.uleb128 0x19
 1477 0076 03       		.uleb128 0x3
 1478 0077 0E       		.uleb128 0xe
 1479 0078 3A       		.uleb128 0x3a
 1480 0079 0B       		.uleb128 0xb
 1481 007a 3B       		.uleb128 0x3b
 1482 007b 0B       		.uleb128 0xb
 1483 007c 27       		.uleb128 0x27
 1484 007d 19       		.uleb128 0x19
 1485 007e 11       		.uleb128 0x11
 1486 007f 01       		.uleb128 0x1
 1487 0080 12       		.uleb128 0x12
 1488 0081 06       		.uleb128 0x6
 1489 0082 40       		.uleb128 0x40
 1490 0083 18       		.uleb128 0x18
 1491 0084 9742     		.uleb128 0x2117
 1492 0086 19       		.uleb128 0x19
 1493 0087 00       		.byte	0
 1494 0088 00       		.byte	0
 1495 0089 0A       		.uleb128 0xa
 1496 008a 2E       		.uleb128 0x2e
 1497 008b 00       		.byte	0
 1498 008c 3F       		.uleb128 0x3f
 1499 008d 19       		.uleb128 0x19
 1500 008e 03       		.uleb128 0x3
 1501 008f 0E       		.uleb128 0xe
 1502 0090 3A       		.uleb128 0x3a
 1503 0091 0B       		.uleb128 0xb
 1504 0092 3B       		.uleb128 0x3b
 1505 0093 05       		.uleb128 0x5
 1506 0094 27       		.uleb128 0x27
 1507 0095 19       		.uleb128 0x19
 1508 0096 11       		.uleb128 0x11
 1509 0097 01       		.uleb128 0x1
 1510 0098 12       		.uleb128 0x12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 48


 1511 0099 06       		.uleb128 0x6
 1512 009a 40       		.uleb128 0x40
 1513 009b 18       		.uleb128 0x18
 1514 009c 9742     		.uleb128 0x2117
 1515 009e 19       		.uleb128 0x19
 1516 009f 00       		.byte	0
 1517 00a0 00       		.byte	0
 1518 00a1 0B       		.uleb128 0xb
 1519 00a2 2E       		.uleb128 0x2e
 1520 00a3 01       		.byte	0x1
 1521 00a4 3F       		.uleb128 0x3f
 1522 00a5 19       		.uleb128 0x19
 1523 00a6 03       		.uleb128 0x3
 1524 00a7 0E       		.uleb128 0xe
 1525 00a8 3A       		.uleb128 0x3a
 1526 00a9 0B       		.uleb128 0xb
 1527 00aa 3B       		.uleb128 0x3b
 1528 00ab 05       		.uleb128 0x5
 1529 00ac 27       		.uleb128 0x27
 1530 00ad 19       		.uleb128 0x19
 1531 00ae 11       		.uleb128 0x11
 1532 00af 01       		.uleb128 0x1
 1533 00b0 12       		.uleb128 0x12
 1534 00b1 06       		.uleb128 0x6
 1535 00b2 40       		.uleb128 0x40
 1536 00b3 18       		.uleb128 0x18
 1537 00b4 9742     		.uleb128 0x2117
 1538 00b6 19       		.uleb128 0x19
 1539 00b7 01       		.uleb128 0x1
 1540 00b8 13       		.uleb128 0x13
 1541 00b9 00       		.byte	0
 1542 00ba 00       		.byte	0
 1543 00bb 0C       		.uleb128 0xc
 1544 00bc 05       		.uleb128 0x5
 1545 00bd 00       		.byte	0
 1546 00be 03       		.uleb128 0x3
 1547 00bf 0E       		.uleb128 0xe
 1548 00c0 3A       		.uleb128 0x3a
 1549 00c1 0B       		.uleb128 0xb
 1550 00c2 3B       		.uleb128 0x3b
 1551 00c3 05       		.uleb128 0x5
 1552 00c4 49       		.uleb128 0x49
 1553 00c5 13       		.uleb128 0x13
 1554 00c6 02       		.uleb128 0x2
 1555 00c7 18       		.uleb128 0x18
 1556 00c8 00       		.byte	0
 1557 00c9 00       		.byte	0
 1558 00ca 0D       		.uleb128 0xd
 1559 00cb 2E       		.uleb128 0x2e
 1560 00cc 01       		.byte	0x1
 1561 00cd 3F       		.uleb128 0x3f
 1562 00ce 19       		.uleb128 0x19
 1563 00cf 03       		.uleb128 0x3
 1564 00d0 0E       		.uleb128 0xe
 1565 00d1 3A       		.uleb128 0x3a
 1566 00d2 0B       		.uleb128 0xb
 1567 00d3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 49


 1568 00d4 05       		.uleb128 0x5
 1569 00d5 27       		.uleb128 0x27
 1570 00d6 19       		.uleb128 0x19
 1571 00d7 49       		.uleb128 0x49
 1572 00d8 13       		.uleb128 0x13
 1573 00d9 11       		.uleb128 0x11
 1574 00da 01       		.uleb128 0x1
 1575 00db 12       		.uleb128 0x12
 1576 00dc 06       		.uleb128 0x6
 1577 00dd 40       		.uleb128 0x40
 1578 00de 18       		.uleb128 0x18
 1579 00df 9742     		.uleb128 0x2117
 1580 00e1 19       		.uleb128 0x19
 1581 00e2 01       		.uleb128 0x1
 1582 00e3 13       		.uleb128 0x13
 1583 00e4 00       		.byte	0
 1584 00e5 00       		.byte	0
 1585 00e6 0E       		.uleb128 0xe
 1586 00e7 34       		.uleb128 0x34
 1587 00e8 00       		.byte	0
 1588 00e9 03       		.uleb128 0x3
 1589 00ea 0E       		.uleb128 0xe
 1590 00eb 3A       		.uleb128 0x3a
 1591 00ec 0B       		.uleb128 0xb
 1592 00ed 3B       		.uleb128 0x3b
 1593 00ee 05       		.uleb128 0x5
 1594 00ef 49       		.uleb128 0x49
 1595 00f0 13       		.uleb128 0x13
 1596 00f1 02       		.uleb128 0x2
 1597 00f2 18       		.uleb128 0x18
 1598 00f3 00       		.byte	0
 1599 00f4 00       		.byte	0
 1600 00f5 0F       		.uleb128 0xf
 1601 00f6 34       		.uleb128 0x34
 1602 00f7 00       		.byte	0
 1603 00f8 03       		.uleb128 0x3
 1604 00f9 0E       		.uleb128 0xe
 1605 00fa 3A       		.uleb128 0x3a
 1606 00fb 0B       		.uleb128 0xb
 1607 00fc 3B       		.uleb128 0x3b
 1608 00fd 05       		.uleb128 0x5
 1609 00fe 49       		.uleb128 0x49
 1610 00ff 13       		.uleb128 0x13
 1611 0100 02       		.uleb128 0x2
 1612 0101 17       		.uleb128 0x17
 1613 0102 00       		.byte	0
 1614 0103 00       		.byte	0
 1615 0104 10       		.uleb128 0x10
 1616 0105 05       		.uleb128 0x5
 1617 0106 00       		.byte	0
 1618 0107 03       		.uleb128 0x3
 1619 0108 0E       		.uleb128 0xe
 1620 0109 3A       		.uleb128 0x3a
 1621 010a 0B       		.uleb128 0xb
 1622 010b 3B       		.uleb128 0x3b
 1623 010c 05       		.uleb128 0x5
 1624 010d 49       		.uleb128 0x49
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 50


 1625 010e 13       		.uleb128 0x13
 1626 010f 02       		.uleb128 0x2
 1627 0110 17       		.uleb128 0x17
 1628 0111 00       		.byte	0
 1629 0112 00       		.byte	0
 1630 0113 11       		.uleb128 0x11
 1631 0114 0F       		.uleb128 0xf
 1632 0115 00       		.byte	0
 1633 0116 0B       		.uleb128 0xb
 1634 0117 0B       		.uleb128 0xb
 1635 0118 49       		.uleb128 0x49
 1636 0119 13       		.uleb128 0x13
 1637 011a 00       		.byte	0
 1638 011b 00       		.byte	0
 1639 011c 12       		.uleb128 0x12
 1640 011d 26       		.uleb128 0x26
 1641 011e 00       		.byte	0
 1642 011f 49       		.uleb128 0x49
 1643 0120 13       		.uleb128 0x13
 1644 0121 00       		.byte	0
 1645 0122 00       		.byte	0
 1646 0123 13       		.uleb128 0x13
 1647 0124 34       		.uleb128 0x34
 1648 0125 00       		.byte	0
 1649 0126 03       		.uleb128 0x3
 1650 0127 0E       		.uleb128 0xe
 1651 0128 3A       		.uleb128 0x3a
 1652 0129 0B       		.uleb128 0xb
 1653 012a 3B       		.uleb128 0x3b
 1654 012b 0B       		.uleb128 0xb
 1655 012c 49       		.uleb128 0x49
 1656 012d 13       		.uleb128 0x13
 1657 012e 3F       		.uleb128 0x3f
 1658 012f 19       		.uleb128 0x19
 1659 0130 02       		.uleb128 0x2
 1660 0131 18       		.uleb128 0x18
 1661 0132 00       		.byte	0
 1662 0133 00       		.byte	0
 1663 0134 14       		.uleb128 0x14
 1664 0135 2E       		.uleb128 0x2e
 1665 0136 00       		.byte	0
 1666 0137 3F       		.uleb128 0x3f
 1667 0138 19       		.uleb128 0x19
 1668 0139 3C       		.uleb128 0x3c
 1669 013a 19       		.uleb128 0x19
 1670 013b 6E       		.uleb128 0x6e
 1671 013c 0E       		.uleb128 0xe
 1672 013d 03       		.uleb128 0x3
 1673 013e 0E       		.uleb128 0xe
 1674 013f 3A       		.uleb128 0x3a
 1675 0140 0B       		.uleb128 0xb
 1676 0141 3B       		.uleb128 0x3b
 1677 0142 0B       		.uleb128 0xb
 1678 0143 00       		.byte	0
 1679 0144 00       		.byte	0
 1680 0145 00       		.byte	0
 1681              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 51


 1682              	.Ldebug_loc0:
 1683              	.LLST0:
 1684 0000 06000000 		.4byte	.LVL0
 1685 0004 2B000000 		.4byte	.LVL1-1
 1686 0008 0100     		.2byte	0x1
 1687 000a 50       		.byte	0x50
 1688 000b 00000000 		.4byte	0
 1689 000f 00000000 		.4byte	0
 1690              	.LLST1:
 1691 0013 06000000 		.4byte	.LVL2
 1692 0017 1B000000 		.4byte	.LVL3-1
 1693 001b 0100     		.2byte	0x1
 1694 001d 50       		.byte	0x50
 1695 001e 00000000 		.4byte	0
 1696 0022 00000000 		.4byte	0
 1697              	.LLST2:
 1698 0026 06000000 		.4byte	.LVL11
 1699 002a 0E000000 		.4byte	.LVL12
 1700 002e 0100     		.2byte	0x1
 1701 0030 53       		.byte	0x53
 1702 0031 12000000 		.4byte	.LVL13
 1703 0035 16000000 		.4byte	.LVL14
 1704 0039 0100     		.2byte	0x1
 1705 003b 53       		.byte	0x53
 1706 003c 18000000 		.4byte	.LVL15
 1707 0040 20000000 		.4byte	.LFE15
 1708 0044 0100     		.2byte	0x1
 1709 0046 50       		.byte	0x50
 1710 0047 00000000 		.4byte	0
 1711 004b 00000000 		.4byte	0
 1712              	.LLST3:
 1713 004f 06000000 		.4byte	.LVL16
 1714 0053 1D000000 		.4byte	.LVL17-1
 1715 0057 0100     		.2byte	0x1
 1716 0059 50       		.byte	0x50
 1717 005a 00000000 		.4byte	0
 1718 005e 00000000 		.4byte	0
 1719              	.LLST4:
 1720 0062 00000000 		.4byte	.LVL18
 1721 0066 0A000000 		.4byte	.LVL20
 1722 006a 0100     		.2byte	0x1
 1723 006c 50       		.byte	0x50
 1724 006d 0A000000 		.4byte	.LVL20
 1725 0071 1C000000 		.4byte	.LVL28
 1726 0075 0100     		.2byte	0x1
 1727 0077 56       		.byte	0x56
 1728 0078 1C000000 		.4byte	.LVL28
 1729 007c 1E000000 		.4byte	.LFE18
 1730 0080 0400     		.2byte	0x4
 1731 0082 F3       		.byte	0xf3
 1732 0083 01       		.uleb128 0x1
 1733 0084 50       		.byte	0x50
 1734 0085 9F       		.byte	0x9f
 1735 0086 00000000 		.4byte	0
 1736 008a 00000000 		.4byte	0
 1737              	.LLST5:
 1738 008e 00000000 		.4byte	.LVL18
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 52


 1739 0092 0A000000 		.4byte	.LVL20
 1740 0096 0100     		.2byte	0x1
 1741 0098 51       		.byte	0x51
 1742 0099 0A000000 		.4byte	.LVL20
 1743 009d 16000000 		.4byte	.LVL24
 1744 00a1 0100     		.2byte	0x1
 1745 00a3 54       		.byte	0x54
 1746 00a4 18000000 		.4byte	.LVL25
 1747 00a8 1C000000 		.4byte	.LVL26
 1748 00ac 0100     		.2byte	0x1
 1749 00ae 54       		.byte	0x54
 1750 00af 00000000 		.4byte	0
 1751 00b3 00000000 		.4byte	0
 1752              	.LLST6:
 1753 00b7 06000000 		.4byte	.LVL19
 1754 00bb 0A000000 		.4byte	.LVL20
 1755 00bf 0200     		.2byte	0x2
 1756 00c1 30       		.byte	0x30
 1757 00c2 9F       		.byte	0x9f
 1758 00c3 0A000000 		.4byte	.LVL20
 1759 00c7 12000000 		.4byte	.LVL22
 1760 00cb 0100     		.2byte	0x1
 1761 00cd 55       		.byte	0x55
 1762 00ce 14000000 		.4byte	.LVL23
 1763 00d2 1C000000 		.4byte	.LVL27
 1764 00d6 0100     		.2byte	0x1
 1765 00d8 55       		.byte	0x55
 1766 00d9 00000000 		.4byte	0
 1767 00dd 00000000 		.4byte	0
 1768              	.LLST7:
 1769 00e1 14000000 		.4byte	.LVL29
 1770 00e5 2B000000 		.4byte	.LVL30-1
 1771 00e9 0100     		.2byte	0x1
 1772 00eb 50       		.byte	0x50
 1773 00ec 00000000 		.4byte	0
 1774 00f0 00000000 		.4byte	0
 1775              	.LLST8:
 1776 00f4 04000000 		.4byte	.LVL37
 1777 00f8 0A000000 		.4byte	.LVL38
 1778 00fc 0100     		.2byte	0x1
 1779 00fe 53       		.byte	0x53
 1780 00ff 0A000000 		.4byte	.LVL38
 1781 0103 18000000 		.4byte	.LFE23
 1782 0107 0100     		.2byte	0x1
 1783 0109 50       		.byte	0x50
 1784 010a 00000000 		.4byte	0
 1785 010e 00000000 		.4byte	0
 1786              		.section	.debug_aranges,"",%progbits
 1787 0000 D4000000 		.4byte	0xd4
 1788 0004 0200     		.2byte	0x2
 1789 0006 00000000 		.4byte	.Ldebug_info0
 1790 000a 04       		.byte	0x4
 1791 000b 00       		.byte	0
 1792 000c 0000     		.2byte	0
 1793 000e 0000     		.2byte	0
 1794 0010 00000000 		.4byte	.LFB1
 1795 0014 3C000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 53


 1796 0018 00000000 		.4byte	.LFB3
 1797 001c 28000000 		.4byte	.LFE3-.LFB3
 1798 0020 00000000 		.4byte	.LFB4
 1799 0024 02000000 		.4byte	.LFE4-.LFB4
 1800 0028 00000000 		.4byte	.LFB5
 1801 002c 02000000 		.4byte	.LFE5-.LFB5
 1802 0030 00000000 		.4byte	.LFB6
 1803 0034 02000000 		.4byte	.LFE6-.LFB6
 1804 0038 00000000 		.4byte	.LFB7
 1805 003c 02000000 		.4byte	.LFE7-.LFB7
 1806 0040 00000000 		.4byte	.LFB8
 1807 0044 0C000000 		.4byte	.LFE8-.LFB8
 1808 0048 00000000 		.4byte	.LFB9
 1809 004c 0C000000 		.4byte	.LFE9-.LFB9
 1810 0050 00000000 		.4byte	.LFB10
 1811 0054 0C000000 		.4byte	.LFE10-.LFB10
 1812 0058 00000000 		.4byte	.LFB11
 1813 005c 0C000000 		.4byte	.LFE11-.LFB11
 1814 0060 00000000 		.4byte	.LFB12
 1815 0064 18000000 		.4byte	.LFE12-.LFB12
 1816 0068 00000000 		.4byte	.LFB13
 1817 006c 0C000000 		.4byte	.LFE13-.LFB13
 1818 0070 00000000 		.4byte	.LFB14
 1819 0074 14000000 		.4byte	.LFE14-.LFB14
 1820 0078 00000000 		.4byte	.LFB15
 1821 007c 20000000 		.4byte	.LFE15-.LFB15
 1822 0080 00000000 		.4byte	.LFB16
 1823 0084 18000000 		.4byte	.LFE16-.LFB16
 1824 0088 00000000 		.4byte	.LFB17
 1825 008c 24000000 		.4byte	.LFE17-.LFB17
 1826 0090 00000000 		.4byte	.LFB18
 1827 0094 1E000000 		.4byte	.LFE18-.LFB18
 1828 0098 00000000 		.4byte	.LFB19
 1829 009c 3C000000 		.4byte	.LFE19-.LFB19
 1830 00a0 00000000 		.4byte	.LFB0
 1831 00a4 2C000000 		.4byte	.LFE0-.LFB0
 1832 00a8 00000000 		.4byte	.LFB2
 1833 00ac 20000000 		.4byte	.LFE2-.LFB2
 1834 00b0 00000000 		.4byte	.LFB20
 1835 00b4 02000000 		.4byte	.LFE20-.LFB20
 1836 00b8 00000000 		.4byte	.LFB21
 1837 00bc 02000000 		.4byte	.LFE21-.LFB21
 1838 00c0 00000000 		.4byte	.LFB22
 1839 00c4 18000000 		.4byte	.LFE22-.LFB22
 1840 00c8 00000000 		.4byte	.LFB23
 1841 00cc 18000000 		.4byte	.LFE23-.LFB23
 1842 00d0 00000000 		.4byte	0
 1843 00d4 00000000 		.4byte	0
 1844              		.section	.debug_ranges,"",%progbits
 1845              	.Ldebug_ranges0:
 1846 0000 00000000 		.4byte	.LFB1
 1847 0004 3C000000 		.4byte	.LFE1
 1848 0008 00000000 		.4byte	.LFB3
 1849 000c 28000000 		.4byte	.LFE3
 1850 0010 00000000 		.4byte	.LFB4
 1851 0014 02000000 		.4byte	.LFE4
 1852 0018 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 54


 1853 001c 02000000 		.4byte	.LFE5
 1854 0020 00000000 		.4byte	.LFB6
 1855 0024 02000000 		.4byte	.LFE6
 1856 0028 00000000 		.4byte	.LFB7
 1857 002c 02000000 		.4byte	.LFE7
 1858 0030 00000000 		.4byte	.LFB8
 1859 0034 0C000000 		.4byte	.LFE8
 1860 0038 00000000 		.4byte	.LFB9
 1861 003c 0C000000 		.4byte	.LFE9
 1862 0040 00000000 		.4byte	.LFB10
 1863 0044 0C000000 		.4byte	.LFE10
 1864 0048 00000000 		.4byte	.LFB11
 1865 004c 0C000000 		.4byte	.LFE11
 1866 0050 00000000 		.4byte	.LFB12
 1867 0054 18000000 		.4byte	.LFE12
 1868 0058 00000000 		.4byte	.LFB13
 1869 005c 0C000000 		.4byte	.LFE13
 1870 0060 00000000 		.4byte	.LFB14
 1871 0064 14000000 		.4byte	.LFE14
 1872 0068 00000000 		.4byte	.LFB15
 1873 006c 20000000 		.4byte	.LFE15
 1874 0070 00000000 		.4byte	.LFB16
 1875 0074 18000000 		.4byte	.LFE16
 1876 0078 00000000 		.4byte	.LFB17
 1877 007c 24000000 		.4byte	.LFE17
 1878 0080 00000000 		.4byte	.LFB18
 1879 0084 1E000000 		.4byte	.LFE18
 1880 0088 00000000 		.4byte	.LFB19
 1881 008c 3C000000 		.4byte	.LFE19
 1882 0090 00000000 		.4byte	.LFB0
 1883 0094 2C000000 		.4byte	.LFE0
 1884 0098 00000000 		.4byte	.LFB2
 1885 009c 20000000 		.4byte	.LFE2
 1886 00a0 00000000 		.4byte	.LFB20
 1887 00a4 02000000 		.4byte	.LFE20
 1888 00a8 00000000 		.4byte	.LFB21
 1889 00ac 02000000 		.4byte	.LFE21
 1890 00b0 00000000 		.4byte	.LFB22
 1891 00b4 18000000 		.4byte	.LFE22
 1892 00b8 00000000 		.4byte	.LFB23
 1893 00bc 18000000 		.4byte	.LFE23
 1894 00c0 00000000 		.4byte	0
 1895 00c4 00000000 		.4byte	0
 1896              		.section	.debug_line,"",%progbits
 1897              	.Ldebug_line0:
 1898 0000 48020000 		.section	.debug_str,"MS",%progbits,1
 1898      02005300 
 1898      00000201 
 1898      FB0E0D00 
 1898      01010101 
 1899              	.LASF28:
 1900 0000 44697370 		.ascii	"Display_SPI_WriteTxData\000"
 1900      6C61795F 
 1900      5350495F 
 1900      57726974 
 1900      65547844 
 1901              	.LASF29:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 55


 1902 0018 74784461 		.ascii	"txData\000"
 1902      746100
 1903              	.LASF54:
 1904 001f 47656E65 		.ascii	"Generated_Source\\PSoC4\\Display_SPI.c\000"
 1904      72617465 
 1904      645F536F 
 1904      75726365 
 1904      5C50536F 
 1905              	.LASF21:
 1906 0044 44697370 		.ascii	"Display_SPI_DisableRxInt\000"
 1906      6C61795F 
 1906      5350495F 
 1906      44697361 
 1906      626C6552 
 1907              	.LASF26:
 1908 005d 44697370 		.ascii	"Display_SPI_ReadTxStatus\000"
 1908      6C61795F 
 1908      5350495F 
 1908      52656164 
 1908      54785374 
 1909              	.LASF45:
 1910 0076 44697370 		.ascii	"Display_SPI_DisableInt\000"
 1910      6C61795F 
 1910      5350495F 
 1910      44697361 
 1910      626C6549 
 1911              	.LASF48:
 1912 008d 44697370 		.ascii	"Display_SPI_initVar\000"
 1912      6C61795F 
 1912      5350495F 
 1912      696E6974 
 1912      56617200 
 1913              	.LASF44:
 1914 00a1 44697370 		.ascii	"Display_SPI_EnableInt\000"
 1914      6C61795F 
 1914      5350495F 
 1914      456E6162 
 1914      6C65496E 
 1915              	.LASF37:
 1916 00b7 44697370 		.ascii	"Display_SPI_PutArray\000"
 1916      6C61795F 
 1916      5350495F 
 1916      50757441 
 1916      72726179 
 1917              	.LASF53:
 1918 00cc 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1918      43393920 
 1918      352E342E 
 1918      31203230 
 1918      31363036 
 1919 00ff 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1919      20726576 
 1919      6973696F 
 1919      6E203233 
 1919      37373135 
 1920 0132 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 1920      74643D67 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 56


 1920      6E753939 
 1920      202D6666 
 1920      756E6374 
 1921              	.LASF20:
 1922 0165 44697370 		.ascii	"Display_SPI_DisableTxInt\000"
 1922      6C61795F 
 1922      5350495F 
 1922      44697361 
 1922      626C6554 
 1923              	.LASF31:
 1924 017e 72784461 		.ascii	"rxData\000"
 1924      746100
 1925              	.LASF9:
 1926 0185 666C6F61 		.ascii	"float\000"
 1926      7400
 1927              	.LASF7:
 1928 018b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1928      206C6F6E 
 1928      6720756E 
 1928      7369676E 
 1928      65642069 
 1929              	.LASF47:
 1930 01a2 44697370 		.ascii	"Display_SPI_ReadStatus\000"
 1930      6C61795F 
 1930      5350495F 
 1930      52656164 
 1930      53746174 
 1931              	.LASF33:
 1932 01b9 73697A65 		.ascii	"size\000"
 1932      00
 1933              	.LASF22:
 1934 01be 44697370 		.ascii	"Display_SPI_SetTxInterruptMode\000"
 1934      6C61795F 
 1934      5350495F 
 1934      53657454 
 1934      78496E74 
 1935              	.LASF13:
 1936 01dd 72656738 		.ascii	"reg8\000"
 1936      00
 1937              	.LASF23:
 1938 01e2 44697370 		.ascii	"Display_SPI_SetRxInterruptMode\000"
 1938      6C61795F 
 1938      5350495F 
 1938      53657452 
 1938      78496E74 
 1939              	.LASF5:
 1940 0201 6C6F6E67 		.ascii	"long unsigned int\000"
 1940      20756E73 
 1940      69676E65 
 1940      6420696E 
 1940      7400
 1941              	.LASF18:
 1942 0213 44697370 		.ascii	"Display_SPI_EnableTxInt\000"
 1942      6C61795F 
 1942      5350495F 
 1942      456E6162 
 1942      6C655478 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 57


 1943              	.LASF12:
 1944 022b 75696E74 		.ascii	"uint8\000"
 1944      3800
 1945              	.LASF19:
 1946 0231 44697370 		.ascii	"Display_SPI_EnableRxInt\000"
 1946      6C61795F 
 1946      5350495F 
 1946      456E6162 
 1946      6C655278 
 1947              	.LASF39:
 1948 0249 62797465 		.ascii	"byteCount\000"
 1948      436F756E 
 1948      7400
 1949              	.LASF17:
 1950 0253 656E6162 		.ascii	"enableInterrupts\000"
 1950      6C65496E 
 1950      74657272 
 1950      75707473 
 1950      00
 1951              	.LASF1:
 1952 0264 756E7369 		.ascii	"unsigned char\000"
 1952      676E6564 
 1952      20636861 
 1952      7200
 1953              	.LASF10:
 1954 0272 646F7562 		.ascii	"double\000"
 1954      6C6500
 1955              	.LASF24:
 1956 0279 696E7453 		.ascii	"intSrc\000"
 1956      726300
 1957              	.LASF34:
 1958 0280 44697370 		.ascii	"Display_SPI_GetTxBufferSize\000"
 1958      6C61795F 
 1958      5350495F 
 1958      47657454 
 1958      78427566 
 1959              	.LASF46:
 1960 029c 44697370 		.ascii	"Display_SPI_SetInterruptMode\000"
 1960      6C61795F 
 1960      5350495F 
 1960      53657449 
 1960      6E746572 
 1961              	.LASF51:
 1962 02b9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1962      74657243 
 1962      72697469 
 1962      63616C53 
 1962      65637469 
 1963              	.LASF36:
 1964 02d0 44697370 		.ascii	"Display_SPI_ClearTxBuffer\000"
 1964      6C61795F 
 1964      5350495F 
 1964      436C6561 
 1964      72547842 
 1965              	.LASF8:
 1966 02ea 756E7369 		.ascii	"unsigned int\000"
 1966      676E6564 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 58


 1966      20696E74 
 1966      00
 1967              	.LASF52:
 1968 02f7 43794578 		.ascii	"CyExitCriticalSection\000"
 1968      69744372 
 1968      69746963 
 1968      616C5365 
 1968      6374696F 
 1969              	.LASF49:
 1970 030d 44697370 		.ascii	"Display_SPI_swStatusTx\000"
 1970      6C61795F 
 1970      5350495F 
 1970      73775374 
 1970      61747573 
 1971              	.LASF30:
 1972 0324 44697370 		.ascii	"Display_SPI_ReadRxData\000"
 1972      6C61795F 
 1972      5350495F 
 1972      52656164 
 1972      52784461 
 1973              	.LASF32:
 1974 033b 44697370 		.ascii	"Display_SPI_GetRxBufferSize\000"
 1974      6C61795F 
 1974      5350495F 
 1974      47657452 
 1974      78427566 
 1975              	.LASF40:
 1976 0357 62756649 		.ascii	"bufIndex\000"
 1976      6E646578 
 1976      00
 1977              	.LASF55:
 1978 0360 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Relo"
 1978      5F776F72 
 1978      6B5C6D79 
 1978      5F70726F 
 1978      6A656374 
 1979 038e 61642050 		.ascii	"ad Pro.cydsn\000"
 1979      726F2E63 
 1979      7964736E 
 1979      00
 1980              	.LASF14:
 1981 039b 73697A65 		.ascii	"sizetype\000"
 1981      74797065 
 1981      00
 1982              	.LASF50:
 1983 03a4 44697370 		.ascii	"Display_SPI_swStatusRx\000"
 1983      6C61795F 
 1983      5350495F 
 1983      73775374 
 1983      61747573 
 1984              	.LASF6:
 1985 03bb 6C6F6E67 		.ascii	"long long int\000"
 1985      206C6F6E 
 1985      6720696E 
 1985      7400
 1986              	.LASF11:
 1987 03c9 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 59


 1987      00
 1988              	.LASF42:
 1989 03ce 44697370 		.ascii	"Display_SPI_Init\000"
 1989      6C61795F 
 1989      5350495F 
 1989      496E6974 
 1989      00
 1990              	.LASF43:
 1991 03df 44697370 		.ascii	"Display_SPI_Start\000"
 1991      6C61795F 
 1991      5350495F 
 1991      53746172 
 1991      7400
 1992              	.LASF2:
 1993 03f1 73686F72 		.ascii	"short int\000"
 1993      7420696E 
 1993      7400
 1994              	.LASF38:
 1995 03fb 62756666 		.ascii	"buffer\000"
 1995      657200
 1996              	.LASF27:
 1997 0402 44697370 		.ascii	"Display_SPI_ReadRxStatus\000"
 1997      6C61795F 
 1997      5350495F 
 1997      52656164 
 1997      52785374 
 1998              	.LASF4:
 1999 041b 6C6F6E67 		.ascii	"long int\000"
 1999      20696E74 
 1999      00
 2000              	.LASF25:
 2001 0424 746D7053 		.ascii	"tmpStatus\000"
 2001      74617475 
 2001      7300
 2002              	.LASF41:
 2003 042e 44697370 		.ascii	"Display_SPI_ClearFIFO\000"
 2003      6C61795F 
 2003      5350495F 
 2003      436C6561 
 2003      72464946 
 2004              	.LASF35:
 2005 0444 44697370 		.ascii	"Display_SPI_ClearRxBuffer\000"
 2005      6C61795F 
 2005      5350495F 
 2005      436C6561 
 2005      72527842 
 2006              	.LASF0:
 2007 045e 7369676E 		.ascii	"signed char\000"
 2007      65642063 
 2007      68617200 
 2008              	.LASF3:
 2009 046a 73686F72 		.ascii	"short unsigned int\000"
 2009      7420756E 
 2009      7369676E 
 2009      65642069 
 2009      6E7400
 2010              	.LASF16:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccirioEh.s 			page 60


 2011 047d 44697370 		.ascii	"Display_SPI_Stop\000"
 2011      6C61795F 
 2011      5350495F 
 2011      53746F70 
 2011      00
 2012              	.LASF15:
 2013 048e 44697370 		.ascii	"Display_SPI_Enable\000"
 2013      6C61795F 
 2013      5350495F 
 2013      456E6162 
 2013      6C6500
 2014              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
