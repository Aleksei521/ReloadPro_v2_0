ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvCopyDataToQueue,"ax",%progbits
  20              		.align	1
  21              		.code	16
  22              		.thumb_func
  23              		.type	prvCopyDataToQueue, %function
  24              	prvCopyDataToQueue:
  25              	.LFB44:
  26              		.file 1 "freertos\\src\\queue.c"
   1:freertos\src/queue.c **** /*
   2:freertos\src/queue.c ****     FreeRTOS V7.6.0 - Copyright (C) 2013 Real Time Engineers Ltd.
   3:freertos\src/queue.c ****     All rights reserved
   4:freertos\src/queue.c **** 
   5:freertos\src/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:freertos\src/queue.c **** 
   7:freertos\src/queue.c ****     ***************************************************************************
   8:freertos\src/queue.c ****      *                                                                       *
   9:freertos\src/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  10:freertos\src/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  11:freertos\src/queue.c ****      *    platform software that has become a de facto standard.             *
  12:freertos\src/queue.c ****      *                                                                       *
  13:freertos\src/queue.c ****      *    Help yourself get started quickly and support the FreeRTOS         *
  14:freertos\src/queue.c ****      *    project by purchasing a FreeRTOS tutorial book, reference          *
  15:freertos\src/queue.c ****      *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
  16:freertos\src/queue.c ****      *                                                                       *
  17:freertos\src/queue.c ****      *    Thank you!                                                         *
  18:freertos\src/queue.c ****      *                                                                       *
  19:freertos\src/queue.c ****     ***************************************************************************
  20:freertos\src/queue.c **** 
  21:freertos\src/queue.c ****     This file is part of the FreeRTOS distribution.
  22:freertos\src/queue.c **** 
  23:freertos\src/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  24:freertos\src/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  25:freertos\src/queue.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  26:freertos\src/queue.c **** 
  27:freertos\src/queue.c ****     >>! NOTE: The modification to the GPL is included to allow you to distribute
  28:freertos\src/queue.c ****     >>! a combined work that includes FreeRTOS without being obliged to provide
  29:freertos\src/queue.c ****     >>! the source code for proprietary components outside of the FreeRTOS
  30:freertos\src/queue.c ****     >>! kernel.
  31:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 2


  32:freertos\src/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  33:freertos\src/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  34:freertos\src/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available from the following
  35:freertos\src/queue.c ****     link: http://www.freertos.org/a00114.html
  36:freertos\src/queue.c **** 
  37:freertos\src/queue.c ****     1 tab == 4 spaces!
  38:freertos\src/queue.c **** 
  39:freertos\src/queue.c ****     ***************************************************************************
  40:freertos\src/queue.c ****      *                                                                       *
  41:freertos\src/queue.c ****      *    Having a problem?  Start by reading the FAQ "My application does   *
  42:freertos\src/queue.c ****      *    not run, what could be wrong?"                                     *
  43:freertos\src/queue.c ****      *                                                                       *
  44:freertos\src/queue.c ****      *    http://www.FreeRTOS.org/FAQHelp.html                               *
  45:freertos\src/queue.c ****      *                                                                       *
  46:freertos\src/queue.c ****     ***************************************************************************
  47:freertos\src/queue.c **** 
  48:freertos\src/queue.c ****     http://www.FreeRTOS.org - Documentation, books, training, latest versions,
  49:freertos\src/queue.c ****     license and Real Time Engineers Ltd. contact details.
  50:freertos\src/queue.c **** 
  51:freertos\src/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  52:freertos\src/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  53:freertos\src/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  54:freertos\src/queue.c **** 
  55:freertos\src/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
  56:freertos\src/queue.c ****     Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
  57:freertos\src/queue.c ****     licenses offer ticketed support, indemnification and middleware.
  58:freertos\src/queue.c **** 
  59:freertos\src/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  60:freertos\src/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  61:freertos\src/queue.c ****     mission critical applications that require provable dependability.
  62:freertos\src/queue.c **** 
  63:freertos\src/queue.c ****     1 tab == 4 spaces!
  64:freertos\src/queue.c **** */
  65:freertos\src/queue.c **** 
  66:freertos\src/queue.c **** #include <stdlib.h>
  67:freertos\src/queue.c **** #include <string.h>
  68:freertos\src/queue.c **** 
  69:freertos\src/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  70:freertos\src/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  71:freertos\src/queue.c **** task.h is included from an application file. */
  72:freertos\src/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  73:freertos\src/queue.c **** 
  74:freertos\src/queue.c **** #include "FreeRTOS.h"
  75:freertos\src/queue.c **** #include "task.h"
  76:freertos\src/queue.c **** #include "queue.h"
  77:freertos\src/queue.c **** 
  78:freertos\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  79:freertos\src/queue.c **** 	#include "croutine.h"
  80:freertos\src/queue.c **** #endif
  81:freertos\src/queue.c **** 
  82:freertos\src/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  83:freertos\src/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  84:freertos\src/queue.c **** header files above, but not in this file, in order to generate the correct
  85:freertos\src/queue.c **** privileged Vs unprivileged linkage and placement. */
  86:freertos\src/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  87:freertos\src/queue.c **** 
  88:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 3


  89:freertos\src/queue.c **** /* Constants used with the cRxLock and xTxLock structure members. */
  90:freertos\src/queue.c **** #define queueUNLOCKED					( ( signed portBASE_TYPE ) -1 )
  91:freertos\src/queue.c **** #define queueLOCKED_UNMODIFIED			( ( signed portBASE_TYPE ) 0 )
  92:freertos\src/queue.c **** 
  93:freertos\src/queue.c **** /* When the xQUEUE structure is used to represent a base queue its pcHead and
  94:freertos\src/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  95:freertos\src/queue.c **** xQUEUE structure is used to represent a mutex pcHead and pcTail pointers are
  96:freertos\src/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  97:freertos\src/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  98:freertos\src/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  99:freertos\src/queue.c **** the code is maintained despite this dual use of two structure members.  An
 100:freertos\src/queue.c **** alternative implementation would be to use a union, but use of a union is
 101:freertos\src/queue.c **** against the coding standard (although an exception to the standard has been
 102:freertos\src/queue.c **** permitted where the dual use also significantly changes the type of the
 103:freertos\src/queue.c **** structure member). */
 104:freertos\src/queue.c **** #define pxMutexHolder					pcTail
 105:freertos\src/queue.c **** #define uxQueueType						pcHead
 106:freertos\src/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 107:freertos\src/queue.c **** 
 108:freertos\src/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 109:freertos\src/queue.c **** zero. */
 110:freertos\src/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( unsigned portBASE_TYPE ) 0 )
 111:freertos\src/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( portTickType ) 0U )
 112:freertos\src/queue.c **** 
 113:freertos\src/queue.c **** #if( configUSE_PREEMPTION == 0 )
 114:freertos\src/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 115:freertos\src/queue.c **** 	performed just because a higher priority task has been woken. */
 116:freertos\src/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 117:freertos\src/queue.c **** #else
 118:freertos\src/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 119:freertos\src/queue.c **** #endif
 120:freertos\src/queue.c **** 
 121:freertos\src/queue.c **** /*
 122:freertos\src/queue.c ****  * Definition of the queue used by the scheduler.
 123:freertos\src/queue.c ****  * Items are queued by copy, not reference.
 124:freertos\src/queue.c ****  */
 125:freertos\src/queue.c **** typedef struct QueueDefinition
 126:freertos\src/queue.c **** {
 127:freertos\src/queue.c **** 	signed char *pcHead;					/*< Points to the beginning of the queue storage area. */
 128:freertos\src/queue.c **** 	signed char *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more b
 129:freertos\src/queue.c **** 
 130:freertos\src/queue.c **** 	signed char *pcWriteTo;					/*< Points to the free next place in the storage area. */
 131:freertos\src/queue.c **** 
 132:freertos\src/queue.c **** 	union									/* Use of a union is an exception to the coding standard to ensure two mutually excl
 133:freertos\src/queue.c **** 	{
 134:freertos\src/queue.c **** 		signed char *pcReadFrom;			/*< Points to the last place that a queued item was read from when the
 135:freertos\src/queue.c **** 		unsigned portBASE_TYPE uxRecursiveCallCount;/*< Maintains a count of the numebr of times a recurs
 136:freertos\src/queue.c **** 	} u;
 137:freertos\src/queue.c **** 
 138:freertos\src/queue.c **** 	xList xTasksWaitingToSend;				/*< List of tasks that are blocked waiting to post onto this queue. 
 139:freertos\src/queue.c **** 	xList xTasksWaitingToReceive;			/*< List of tasks that are blocked waiting to read from this queue
 140:freertos\src/queue.c **** 
 141:freertos\src/queue.c **** 	volatile unsigned portBASE_TYPE uxMessagesWaiting;/*< The number of items currently in the queue. 
 142:freertos\src/queue.c **** 	unsigned portBASE_TYPE uxLength;		/*< The length of the queue defined as the number of items it wi
 143:freertos\src/queue.c **** 	unsigned portBASE_TYPE uxItemSize;		/*< The size of each items that the queue will hold. */
 144:freertos\src/queue.c **** 
 145:freertos\src/queue.c **** 	volatile signed portBASE_TYPE xRxLock;	/*< Stores the number of items received from the queue (rem
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 4


 146:freertos\src/queue.c **** 	volatile signed portBASE_TYPE xTxLock;	/*< Stores the number of items transmitted to the queue (ad
 147:freertos\src/queue.c **** 
 148:freertos\src/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 149:freertos\src/queue.c **** 		unsigned char ucQueueNumber;
 150:freertos\src/queue.c **** 		unsigned char ucQueueType;
 151:freertos\src/queue.c **** 	#endif
 152:freertos\src/queue.c **** 
 153:freertos\src/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 154:freertos\src/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 155:freertos\src/queue.c **** 	#endif
 156:freertos\src/queue.c **** 
 157:freertos\src/queue.c **** } xQUEUE;
 158:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 159:freertos\src/queue.c **** 
 160:freertos\src/queue.c **** /*
 161:freertos\src/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 162:freertos\src/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 163:freertos\src/queue.c ****  */
 164:freertos\src/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 165:freertos\src/queue.c **** 
 166:freertos\src/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 167:freertos\src/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 168:freertos\src/queue.c **** 	more user friendly. */
 169:freertos\src/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 170:freertos\src/queue.c **** 	{
 171:freertos\src/queue.c **** 		signed char *pcQueueName;
 172:freertos\src/queue.c **** 		xQueueHandle xHandle;
 173:freertos\src/queue.c **** 	} xQueueRegistryItem;
 174:freertos\src/queue.c **** 
 175:freertos\src/queue.c **** 	/* The queue registry is simply an array of xQueueRegistryItem structures.
 176:freertos\src/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 177:freertos\src/queue.c **** 	array position being vacant. */
 178:freertos\src/queue.c **** 	xQueueRegistryItem xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 179:freertos\src/queue.c **** 
 180:freertos\src/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 181:freertos\src/queue.c **** 
 182:freertos\src/queue.c **** /*
 183:freertos\src/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 184:freertos\src/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 185:freertos\src/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 186:freertos\src/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 187:freertos\src/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 188:freertos\src/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 189:freertos\src/queue.c ****  */
 190:freertos\src/queue.c **** static void prvUnlockQueue( xQUEUE *pxQueue ) PRIVILEGED_FUNCTION;
 191:freertos\src/queue.c **** 
 192:freertos\src/queue.c **** /*
 193:freertos\src/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 194:freertos\src/queue.c ****  *
 195:freertos\src/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 196:freertos\src/queue.c ****  */
 197:freertos\src/queue.c **** static signed portBASE_TYPE prvIsQueueEmpty( const xQUEUE *pxQueue ) PRIVILEGED_FUNCTION;
 198:freertos\src/queue.c **** 
 199:freertos\src/queue.c **** /*
 200:freertos\src/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 201:freertos\src/queue.c ****  *
 202:freertos\src/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 5


 203:freertos\src/queue.c ****  */
 204:freertos\src/queue.c **** static signed portBASE_TYPE prvIsQueueFull( const xQUEUE *pxQueue ) PRIVILEGED_FUNCTION;
 205:freertos\src/queue.c **** 
 206:freertos\src/queue.c **** /*
 207:freertos\src/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 208:freertos\src/queue.c ****  * back of the queue.
 209:freertos\src/queue.c ****  */
 210:freertos\src/queue.c **** static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition
 211:freertos\src/queue.c **** 
 212:freertos\src/queue.c **** /*
 213:freertos\src/queue.c ****  * Copies an item out of a queue.
 214:freertos\src/queue.c ****  */
 215:freertos\src/queue.c **** static void prvCopyDataFromQueue( xQUEUE * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCTI
 216:freertos\src/queue.c **** 
 217:freertos\src/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 218:freertos\src/queue.c **** 	/*
 219:freertos\src/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 220:freertos\src/queue.c **** 	 * the queue set that the queue contains data.
 221:freertos\src/queue.c **** 	 */
 222:freertos\src/queue.c **** 	static portBASE_TYPE prvNotifyQueueSetContainer( const xQUEUE * const pxQueue, portBASE_TYPE xCopy
 223:freertos\src/queue.c **** #endif
 224:freertos\src/queue.c **** 
 225:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 226:freertos\src/queue.c **** 
 227:freertos\src/queue.c **** /*
 228:freertos\src/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 229:freertos\src/queue.c ****  * accessing the queue event lists.
 230:freertos\src/queue.c ****  */
 231:freertos\src/queue.c **** #define prvLockQueue( pxQueue )								\
 232:freertos\src/queue.c **** 	taskENTER_CRITICAL();									\
 233:freertos\src/queue.c **** 	{														\
 234:freertos\src/queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 235:freertos\src/queue.c **** 		{													\
 236:freertos\src/queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 237:freertos\src/queue.c **** 		}													\
 238:freertos\src/queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 239:freertos\src/queue.c **** 		{													\
 240:freertos\src/queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 241:freertos\src/queue.c **** 		}													\
 242:freertos\src/queue.c **** 	}														\
 243:freertos\src/queue.c **** 	taskEXIT_CRITICAL()
 244:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 245:freertos\src/queue.c **** 
 246:freertos\src/queue.c **** portBASE_TYPE xQueueGenericReset( xQueueHandle xQueue, portBASE_TYPE xNewQueue )
 247:freertos\src/queue.c **** {
 248:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 249:freertos\src/queue.c **** 
 250:freertos\src/queue.c **** 	configASSERT( pxQueue );
 251:freertos\src/queue.c **** 
 252:freertos\src/queue.c **** 	taskENTER_CRITICAL();
 253:freertos\src/queue.c **** 	{
 254:freertos\src/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 255:freertos\src/queue.c **** 		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 256:freertos\src/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 257:freertos\src/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( unsigned portBASE_TYPE ) 1U )
 258:freertos\src/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 259:freertos\src/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 6


 260:freertos\src/queue.c **** 
 261:freertos\src/queue.c **** 		if( xNewQueue == pdFALSE )
 262:freertos\src/queue.c **** 		{
 263:freertos\src/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 264:freertos\src/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 265:freertos\src/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 266:freertos\src/queue.c **** 			the queue, then one should be unblocked as after this function exits
 267:freertos\src/queue.c **** 			it will be possible to write to it. */
 268:freertos\src/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 269:freertos\src/queue.c **** 			{
 270:freertos\src/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 271:freertos\src/queue.c **** 				{
 272:freertos\src/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 273:freertos\src/queue.c **** 				}
 274:freertos\src/queue.c **** 			}
 275:freertos\src/queue.c **** 		}
 276:freertos\src/queue.c **** 		else
 277:freertos\src/queue.c **** 		{
 278:freertos\src/queue.c **** 			/* Ensure the event queues start in the correct state. */
 279:freertos\src/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 280:freertos\src/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 281:freertos\src/queue.c **** 		}
 282:freertos\src/queue.c **** 	}
 283:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
 284:freertos\src/queue.c **** 
 285:freertos\src/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 286:freertos\src/queue.c **** 	versions. */
 287:freertos\src/queue.c **** 	return pdPASS;
 288:freertos\src/queue.c **** }
 289:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 290:freertos\src/queue.c **** 
 291:freertos\src/queue.c **** xQueueHandle xQueueGenericCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxIt
 292:freertos\src/queue.c **** {
 293:freertos\src/queue.c **** xQUEUE *pxNewQueue;
 294:freertos\src/queue.c **** size_t xQueueSizeInBytes;
 295:freertos\src/queue.c **** xQueueHandle xReturn = NULL;
 296:freertos\src/queue.c **** 
 297:freertos\src/queue.c **** 	/* Remove compiler warnings about unused parameters should
 298:freertos\src/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 299:freertos\src/queue.c **** 	( void ) ucQueueType;
 300:freertos\src/queue.c **** 
 301:freertos\src/queue.c **** 	/* Allocate the new queue structure. */
 302:freertos\src/queue.c **** 	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
 303:freertos\src/queue.c **** 	{
 304:freertos\src/queue.c **** 		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
 305:freertos\src/queue.c **** 		if( pxNewQueue != NULL )
 306:freertos\src/queue.c **** 		{
 307:freertos\src/queue.c **** 			/* Create the list of pointers to queue items.  The queue is one byte
 308:freertos\src/queue.c **** 			longer than asked for to make wrap checking easier/faster. */
 309:freertos\src/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA
 310:freertos\src/queue.c **** 
 311:freertos\src/queue.c **** 			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
 312:freertos\src/queue.c **** 			if( pxNewQueue->pcHead != NULL )
 313:freertos\src/queue.c **** 			{
 314:freertos\src/queue.c **** 				/* Initialise the queue members as described above where the
 315:freertos\src/queue.c **** 				queue type is defined. */
 316:freertos\src/queue.c **** 				pxNewQueue->uxLength = uxQueueLength;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 7


 317:freertos\src/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
 318:freertos\src/queue.c **** 				( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 319:freertos\src/queue.c **** 
 320:freertos\src/queue.c **** 				#if ( configUSE_TRACE_FACILITY == 1 )
 321:freertos\src/queue.c **** 				{
 322:freertos\src/queue.c **** 					pxNewQueue->ucQueueType = ucQueueType;
 323:freertos\src/queue.c **** 				}
 324:freertos\src/queue.c **** 				#endif /* configUSE_TRACE_FACILITY */
 325:freertos\src/queue.c **** 
 326:freertos\src/queue.c **** 				#if( configUSE_QUEUE_SETS == 1 )
 327:freertos\src/queue.c **** 				{
 328:freertos\src/queue.c **** 					pxNewQueue->pxQueueSetContainer = NULL;
 329:freertos\src/queue.c **** 				}
 330:freertos\src/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 331:freertos\src/queue.c **** 
 332:freertos\src/queue.c **** 				traceQUEUE_CREATE( pxNewQueue );
 333:freertos\src/queue.c **** 				xReturn = pxNewQueue;
 334:freertos\src/queue.c **** 			}
 335:freertos\src/queue.c **** 			else
 336:freertos\src/queue.c **** 			{
 337:freertos\src/queue.c **** 				traceQUEUE_CREATE_FAILED( ucQueueType );
 338:freertos\src/queue.c **** 				vPortFree( pxNewQueue );
 339:freertos\src/queue.c **** 			}
 340:freertos\src/queue.c **** 		}
 341:freertos\src/queue.c **** 	}
 342:freertos\src/queue.c **** 
 343:freertos\src/queue.c **** 	configASSERT( xReturn );
 344:freertos\src/queue.c **** 
 345:freertos\src/queue.c **** 	return xReturn;
 346:freertos\src/queue.c **** }
 347:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 348:freertos\src/queue.c **** 
 349:freertos\src/queue.c **** #if ( configUSE_MUTEXES == 1 )
 350:freertos\src/queue.c **** 
 351:freertos\src/queue.c **** 	xQueueHandle xQueueCreateMutex( unsigned char ucQueueType )
 352:freertos\src/queue.c **** 	{
 353:freertos\src/queue.c **** 	xQUEUE *pxNewQueue;
 354:freertos\src/queue.c **** 
 355:freertos\src/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 356:freertos\src/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 357:freertos\src/queue.c **** 		( void ) ucQueueType;
 358:freertos\src/queue.c **** 
 359:freertos\src/queue.c **** 		/* Allocate the new queue structure. */
 360:freertos\src/queue.c **** 		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
 361:freertos\src/queue.c **** 		if( pxNewQueue != NULL )
 362:freertos\src/queue.c **** 		{
 363:freertos\src/queue.c **** 			/* Information required for priority inheritance. */
 364:freertos\src/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 365:freertos\src/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 366:freertos\src/queue.c **** 
 367:freertos\src/queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 368:freertos\src/queue.c **** 			of the queue. */
 369:freertos\src/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 370:freertos\src/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 371:freertos\src/queue.c **** 
 372:freertos\src/queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 373:freertos\src/queue.c **** 			an item size of 0 as nothing is actually copied into or out
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 8


 374:freertos\src/queue.c **** 			of the mutex. */
 375:freertos\src/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 376:freertos\src/queue.c **** 			pxNewQueue->uxLength = ( unsigned portBASE_TYPE ) 1U;
 377:freertos\src/queue.c **** 			pxNewQueue->uxItemSize = ( unsigned portBASE_TYPE ) 0U;
 378:freertos\src/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 379:freertos\src/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 380:freertos\src/queue.c **** 
 381:freertos\src/queue.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 382:freertos\src/queue.c **** 			{
 383:freertos\src/queue.c **** 				pxNewQueue->ucQueueType = ucQueueType;
 384:freertos\src/queue.c **** 			}
 385:freertos\src/queue.c **** 			#endif
 386:freertos\src/queue.c **** 
 387:freertos\src/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
 388:freertos\src/queue.c **** 			{
 389:freertos\src/queue.c **** 				pxNewQueue->pxQueueSetContainer = NULL;
 390:freertos\src/queue.c **** 			}
 391:freertos\src/queue.c **** 			#endif
 392:freertos\src/queue.c **** 
 393:freertos\src/queue.c **** 			/* Ensure the event queues start with the correct state. */
 394:freertos\src/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 395:freertos\src/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 396:freertos\src/queue.c **** 
 397:freertos\src/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 398:freertos\src/queue.c **** 
 399:freertos\src/queue.c **** 			/* Start with the semaphore in the expected state. */
 400:freertos\src/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( portTickType ) 0U, queueSEND_TO_BACK );
 401:freertos\src/queue.c **** 		}
 402:freertos\src/queue.c **** 		else
 403:freertos\src/queue.c **** 		{
 404:freertos\src/queue.c **** 			traceCREATE_MUTEX_FAILED();
 405:freertos\src/queue.c **** 		}
 406:freertos\src/queue.c **** 
 407:freertos\src/queue.c **** 		configASSERT( pxNewQueue );
 408:freertos\src/queue.c **** 		return pxNewQueue;
 409:freertos\src/queue.c **** 	}
 410:freertos\src/queue.c **** 
 411:freertos\src/queue.c **** #endif /* configUSE_MUTEXES */
 412:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 413:freertos\src/queue.c **** 
 414:freertos\src/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 415:freertos\src/queue.c **** 
 416:freertos\src/queue.c **** 	void* xQueueGetMutexHolder( xQueueHandle xSemaphore )
 417:freertos\src/queue.c **** 	{
 418:freertos\src/queue.c **** 	void *pxReturn;
 419:freertos\src/queue.c **** 
 420:freertos\src/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 421:freertos\src/queue.c **** 		be called directly.  Note:  This is is a good way of determining if the
 422:freertos\src/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 423:freertos\src/queue.c **** 		identity of the mutex holder, as the holder may change between the
 424:freertos\src/queue.c **** 		following critical section exiting and the function returning. */
 425:freertos\src/queue.c **** 		taskENTER_CRITICAL();
 426:freertos\src/queue.c **** 		{
 427:freertos\src/queue.c **** 			if( ( ( xQUEUE * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 428:freertos\src/queue.c **** 			{
 429:freertos\src/queue.c **** 				pxReturn = ( void * ) ( ( xQUEUE * ) xSemaphore )->pxMutexHolder;
 430:freertos\src/queue.c **** 			}
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 9


 431:freertos\src/queue.c **** 			else
 432:freertos\src/queue.c **** 			{
 433:freertos\src/queue.c **** 				pxReturn = NULL;
 434:freertos\src/queue.c **** 			}
 435:freertos\src/queue.c **** 		}
 436:freertos\src/queue.c **** 		taskEXIT_CRITICAL();
 437:freertos\src/queue.c **** 
 438:freertos\src/queue.c **** 		return pxReturn;
 439:freertos\src/queue.c **** 	}
 440:freertos\src/queue.c **** 
 441:freertos\src/queue.c **** #endif
 442:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 443:freertos\src/queue.c **** 
 444:freertos\src/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 445:freertos\src/queue.c **** 
 446:freertos\src/queue.c **** 	portBASE_TYPE xQueueGiveMutexRecursive( xQueueHandle xMutex )
 447:freertos\src/queue.c **** 	{
 448:freertos\src/queue.c **** 	portBASE_TYPE xReturn;
 449:freertos\src/queue.c **** 	xQUEUE * const pxMutex = ( xQUEUE * ) xMutex;
 450:freertos\src/queue.c **** 
 451:freertos\src/queue.c **** 		configASSERT( pxMutex );
 452:freertos\src/queue.c **** 
 453:freertos\src/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 454:freertos\src/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 455:freertos\src/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 456:freertos\src/queue.c **** 		this is the only condition we are interested in it does not matter if
 457:freertos\src/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 458:freertos\src/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 459:freertos\src/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 460:freertos\src/queue.c **** 		{
 461:freertos\src/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 462:freertos\src/queue.c **** 
 463:freertos\src/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 464:freertos\src/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 465:freertos\src/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 466:freertos\src/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 467:freertos\src/queue.c **** 			uxRecursiveCallCount member. */
 468:freertos\src/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 469:freertos\src/queue.c **** 
 470:freertos\src/queue.c **** 			/* Have we unwound the call count? */
 471:freertos\src/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( unsigned portBASE_TYPE ) 0 )
 472:freertos\src/queue.c **** 			{
 473:freertos\src/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 474:freertos\src/queue.c **** 				task that might be waiting to access the mutex. */
 475:freertos\src/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 476:freertos\src/queue.c **** 			}
 477:freertos\src/queue.c **** 
 478:freertos\src/queue.c **** 			xReturn = pdPASS;
 479:freertos\src/queue.c **** 		}
 480:freertos\src/queue.c **** 		else
 481:freertos\src/queue.c **** 		{
 482:freertos\src/queue.c **** 			/* We cannot give the mutex because we are not the holder. */
 483:freertos\src/queue.c **** 			xReturn = pdFAIL;
 484:freertos\src/queue.c **** 
 485:freertos\src/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 486:freertos\src/queue.c **** 		}
 487:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 10


 488:freertos\src/queue.c **** 		return xReturn;
 489:freertos\src/queue.c **** 	}
 490:freertos\src/queue.c **** 
 491:freertos\src/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 492:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 493:freertos\src/queue.c **** 
 494:freertos\src/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 495:freertos\src/queue.c **** 
 496:freertos\src/queue.c **** 	portBASE_TYPE xQueueTakeMutexRecursive( xQueueHandle xMutex, portTickType xBlockTime )
 497:freertos\src/queue.c **** 	{
 498:freertos\src/queue.c **** 	portBASE_TYPE xReturn;
 499:freertos\src/queue.c **** 	xQUEUE * const pxMutex = ( xQUEUE * ) xMutex;
 500:freertos\src/queue.c **** 
 501:freertos\src/queue.c **** 		configASSERT( pxMutex );
 502:freertos\src/queue.c **** 
 503:freertos\src/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 504:freertos\src/queue.c **** 		xQueueGiveMutexRecursive(). */
 505:freertos\src/queue.c **** 
 506:freertos\src/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 507:freertos\src/queue.c **** 
 508:freertos\src/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 509:freertos\src/queue.c **** 		{
 510:freertos\src/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 511:freertos\src/queue.c **** 			xReturn = pdPASS;
 512:freertos\src/queue.c **** 		}
 513:freertos\src/queue.c **** 		else
 514:freertos\src/queue.c **** 		{
 515:freertos\src/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xBlockTime, pdFALSE );
 516:freertos\src/queue.c **** 
 517:freertos\src/queue.c **** 			/* pdPASS will only be returned if we successfully obtained the mutex,
 518:freertos\src/queue.c **** 			we may have blocked to reach here. */
 519:freertos\src/queue.c **** 			if( xReturn == pdPASS )
 520:freertos\src/queue.c **** 			{
 521:freertos\src/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 522:freertos\src/queue.c **** 			}
 523:freertos\src/queue.c **** 			else
 524:freertos\src/queue.c **** 			{
 525:freertos\src/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 526:freertos\src/queue.c **** 			}
 527:freertos\src/queue.c **** 		}
 528:freertos\src/queue.c **** 
 529:freertos\src/queue.c **** 		return xReturn;
 530:freertos\src/queue.c **** 	}
 531:freertos\src/queue.c **** 
 532:freertos\src/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 533:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 534:freertos\src/queue.c **** 
 535:freertos\src/queue.c **** #if ( configUSE_COUNTING_SEMAPHORES == 1 )
 536:freertos\src/queue.c **** 
 537:freertos\src/queue.c **** 	xQueueHandle xQueueCreateCountingSemaphore( unsigned portBASE_TYPE uxMaxCount, unsigned portBASE_T
 538:freertos\src/queue.c **** 	{
 539:freertos\src/queue.c **** 	xQueueHandle xHandle;
 540:freertos\src/queue.c **** 
 541:freertos\src/queue.c **** 		configASSERT( uxMaxCount != 0 );
 542:freertos\src/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 543:freertos\src/queue.c **** 
 544:freertos\src/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 11


 545:freertos\src/queue.c **** 
 546:freertos\src/queue.c **** 		if( xHandle != NULL )
 547:freertos\src/queue.c **** 		{
 548:freertos\src/queue.c **** 			( ( xQUEUE * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 549:freertos\src/queue.c **** 
 550:freertos\src/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 551:freertos\src/queue.c **** 		}
 552:freertos\src/queue.c **** 		else
 553:freertos\src/queue.c **** 		{
 554:freertos\src/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 555:freertos\src/queue.c **** 		}
 556:freertos\src/queue.c **** 
 557:freertos\src/queue.c **** 		configASSERT( xHandle );
 558:freertos\src/queue.c **** 		return xHandle;
 559:freertos\src/queue.c **** 	}
 560:freertos\src/queue.c **** 
 561:freertos\src/queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 562:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 563:freertos\src/queue.c **** 
 564:freertos\src/queue.c **** signed portBASE_TYPE xQueueGenericSend( xQueueHandle xQueue, const void * const pvItemToQueue, port
 565:freertos\src/queue.c **** {
 566:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 567:freertos\src/queue.c **** xTimeOutType xTimeOut;
 568:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 569:freertos\src/queue.c **** 
 570:freertos\src/queue.c **** 	configASSERT( pxQueue );
 571:freertos\src/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 
 572:freertos\src/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 573:freertos\src/queue.c **** 
 574:freertos\src/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 575:freertos\src/queue.c **** 	statements within the function itself.  This is done in the interest
 576:freertos\src/queue.c **** 	of execution time efficiency. */
 577:freertos\src/queue.c **** 	for( ;; )
 578:freertos\src/queue.c **** 	{
 579:freertos\src/queue.c **** 		taskENTER_CRITICAL();
 580:freertos\src/queue.c **** 		{
 581:freertos\src/queue.c **** 			/* Is there room on the queue now?  The running task must be
 582:freertos\src/queue.c **** 			the highest priority task wanting to access the queue.  If
 583:freertos\src/queue.c **** 			the head item in the queue is to be overwritten then it does
 584:freertos\src/queue.c **** 			not matter if the queue is full. */
 585:freertos\src/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 586:freertos\src/queue.c **** 			{
 587:freertos\src/queue.c **** 				traceQUEUE_SEND( pxQueue );
 588:freertos\src/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 589:freertos\src/queue.c **** 
 590:freertos\src/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 591:freertos\src/queue.c **** 				{
 592:freertos\src/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 593:freertos\src/queue.c **** 					{
 594:freertos\src/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 595:freertos\src/queue.c **** 						{
 596:freertos\src/queue.c **** 							/* The queue is a member of a queue set, and posting
 597:freertos\src/queue.c **** 							to the queue set caused a higher priority task to
 598:freertos\src/queue.c **** 							unblock. A context switch is required. */
 599:freertos\src/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 600:freertos\src/queue.c **** 						}
 601:freertos\src/queue.c **** 					}
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 12


 602:freertos\src/queue.c **** 					else
 603:freertos\src/queue.c **** 					{
 604:freertos\src/queue.c **** 						/* If there was a task waiting for data to arrive on the
 605:freertos\src/queue.c **** 						queue then unblock it now. */
 606:freertos\src/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 607:freertos\src/queue.c **** 						{
 608:freertos\src/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 609:freertos\src/queue.c **** 							{
 610:freertos\src/queue.c **** 								/* The unblocked task has a priority higher than
 611:freertos\src/queue.c **** 								our own so yield immediately.  Yes it is ok to
 612:freertos\src/queue.c **** 								do this from within the critical section - the
 613:freertos\src/queue.c **** 								kernel takes care of that. */
 614:freertos\src/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 615:freertos\src/queue.c **** 							}
 616:freertos\src/queue.c **** 						}
 617:freertos\src/queue.c **** 					}
 618:freertos\src/queue.c **** 				}
 619:freertos\src/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 620:freertos\src/queue.c **** 				{
 621:freertos\src/queue.c **** 					/* If there was a task waiting for data to arrive on the
 622:freertos\src/queue.c **** 					queue then unblock it now. */
 623:freertos\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 624:freertos\src/queue.c **** 					{
 625:freertos\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 626:freertos\src/queue.c **** 						{
 627:freertos\src/queue.c **** 							/* The unblocked task has a priority higher than
 628:freertos\src/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 629:freertos\src/queue.c **** 							this from within the critical section - the kernel
 630:freertos\src/queue.c **** 							takes care of that. */
 631:freertos\src/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 632:freertos\src/queue.c **** 						}
 633:freertos\src/queue.c **** 					}
 634:freertos\src/queue.c **** 				}
 635:freertos\src/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 636:freertos\src/queue.c **** 
 637:freertos\src/queue.c **** 				taskEXIT_CRITICAL();
 638:freertos\src/queue.c **** 
 639:freertos\src/queue.c **** 				/* Return to the original privilege level before exiting the
 640:freertos\src/queue.c **** 				function. */
 641:freertos\src/queue.c **** 				return pdPASS;
 642:freertos\src/queue.c **** 			}
 643:freertos\src/queue.c **** 			else
 644:freertos\src/queue.c **** 			{
 645:freertos\src/queue.c **** 				if( xTicksToWait == ( portTickType ) 0 )
 646:freertos\src/queue.c **** 				{
 647:freertos\src/queue.c **** 					/* The queue was full and no block time is specified (or
 648:freertos\src/queue.c **** 					the block time has expired) so leave now. */
 649:freertos\src/queue.c **** 					taskEXIT_CRITICAL();
 650:freertos\src/queue.c **** 
 651:freertos\src/queue.c **** 					/* Return to the original privilege level before exiting
 652:freertos\src/queue.c **** 					the function. */
 653:freertos\src/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 654:freertos\src/queue.c **** 					return errQUEUE_FULL;
 655:freertos\src/queue.c **** 				}
 656:freertos\src/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 657:freertos\src/queue.c **** 				{
 658:freertos\src/queue.c **** 					/* The queue was full and a block time was specified so
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 13


 659:freertos\src/queue.c **** 					configure the timeout structure. */
 660:freertos\src/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 661:freertos\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 662:freertos\src/queue.c **** 				}
 663:freertos\src/queue.c **** 				else
 664:freertos\src/queue.c **** 				{
 665:freertos\src/queue.c **** 					/* Entry time was already set. */
 666:freertos\src/queue.c **** 				}
 667:freertos\src/queue.c **** 			}
 668:freertos\src/queue.c **** 		}
 669:freertos\src/queue.c **** 		taskEXIT_CRITICAL();
 670:freertos\src/queue.c **** 
 671:freertos\src/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 672:freertos\src/queue.c **** 		now the critical section has been exited. */
 673:freertos\src/queue.c **** 
 674:freertos\src/queue.c **** 		vTaskSuspendAll();
 675:freertos\src/queue.c **** 		prvLockQueue( pxQueue );
 676:freertos\src/queue.c **** 
 677:freertos\src/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 678:freertos\src/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 679:freertos\src/queue.c **** 		{
 680:freertos\src/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 681:freertos\src/queue.c **** 			{
 682:freertos\src/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 683:freertos\src/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 684:freertos\src/queue.c **** 
 685:freertos\src/queue.c **** 				/* Unlocking the queue means queue events can effect the
 686:freertos\src/queue.c **** 				event list.  It is possible	that interrupts occurring now
 687:freertos\src/queue.c **** 				remove this task from the event	list again - but as the
 688:freertos\src/queue.c **** 				scheduler is suspended the task will go onto the pending
 689:freertos\src/queue.c **** 				ready last instead of the actual ready list. */
 690:freertos\src/queue.c **** 				prvUnlockQueue( pxQueue );
 691:freertos\src/queue.c **** 
 692:freertos\src/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 693:freertos\src/queue.c **** 				ready list into the ready list - so it is feasible that this
 694:freertos\src/queue.c **** 				task is already in a ready list before it yields - in which
 695:freertos\src/queue.c **** 				case the yield will not cause a context switch unless there
 696:freertos\src/queue.c **** 				is also a higher priority task in the pending ready list. */
 697:freertos\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 698:freertos\src/queue.c **** 				{
 699:freertos\src/queue.c **** 					portYIELD_WITHIN_API();
 700:freertos\src/queue.c **** 				}
 701:freertos\src/queue.c **** 			}
 702:freertos\src/queue.c **** 			else
 703:freertos\src/queue.c **** 			{
 704:freertos\src/queue.c **** 				/* Try again. */
 705:freertos\src/queue.c **** 				prvUnlockQueue( pxQueue );
 706:freertos\src/queue.c **** 				( void ) xTaskResumeAll();
 707:freertos\src/queue.c **** 			}
 708:freertos\src/queue.c **** 		}
 709:freertos\src/queue.c **** 		else
 710:freertos\src/queue.c **** 		{
 711:freertos\src/queue.c **** 			/* The timeout has expired. */
 712:freertos\src/queue.c **** 			prvUnlockQueue( pxQueue );
 713:freertos\src/queue.c **** 			( void ) xTaskResumeAll();
 714:freertos\src/queue.c **** 
 715:freertos\src/queue.c **** 			/* Return to the original privilege level before exiting the
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 14


 716:freertos\src/queue.c **** 			function. */
 717:freertos\src/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 718:freertos\src/queue.c **** 			return errQUEUE_FULL;
 719:freertos\src/queue.c **** 		}
 720:freertos\src/queue.c **** 	}
 721:freertos\src/queue.c **** }
 722:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 723:freertos\src/queue.c **** 
 724:freertos\src/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 725:freertos\src/queue.c **** 
 726:freertos\src/queue.c **** 	signed portBASE_TYPE xQueueAltGenericSend( xQueueHandle xQueue, const void * const pvItemToQueue, 
 727:freertos\src/queue.c **** 	{
 728:freertos\src/queue.c **** 	signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 729:freertos\src/queue.c **** 	xTimeOutType xTimeOut;
 730:freertos\src/queue.c **** 	xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 731:freertos\src/queue.c **** 
 732:freertos\src/queue.c **** 		configASSERT( pxQueue );
 733:freertos\src/queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE )
 734:freertos\src/queue.c **** 
 735:freertos\src/queue.c **** 		for( ;; )
 736:freertos\src/queue.c **** 		{
 737:freertos\src/queue.c **** 			taskENTER_CRITICAL();
 738:freertos\src/queue.c **** 			{
 739:freertos\src/queue.c **** 				/* Is there room on the queue now?  To be running we must be
 740:freertos\src/queue.c **** 				the highest priority task wanting to access the queue. */
 741:freertos\src/queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 742:freertos\src/queue.c **** 				{
 743:freertos\src/queue.c **** 					traceQUEUE_SEND( pxQueue );
 744:freertos\src/queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 745:freertos\src/queue.c **** 
 746:freertos\src/queue.c **** 					/* If there was a task waiting for data to arrive on the
 747:freertos\src/queue.c **** 					queue then unblock it now. */
 748:freertos\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 749:freertos\src/queue.c **** 					{
 750:freertos\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 751:freertos\src/queue.c **** 						{
 752:freertos\src/queue.c **** 							/* The unblocked task has a priority higher than
 753:freertos\src/queue.c **** 							our own so yield immediately. */
 754:freertos\src/queue.c **** 							portYIELD_WITHIN_API();
 755:freertos\src/queue.c **** 						}
 756:freertos\src/queue.c **** 					}
 757:freertos\src/queue.c **** 
 758:freertos\src/queue.c **** 					taskEXIT_CRITICAL();
 759:freertos\src/queue.c **** 					return pdPASS;
 760:freertos\src/queue.c **** 				}
 761:freertos\src/queue.c **** 				else
 762:freertos\src/queue.c **** 				{
 763:freertos\src/queue.c **** 					if( xTicksToWait == ( portTickType ) 0 )
 764:freertos\src/queue.c **** 					{
 765:freertos\src/queue.c **** 						taskEXIT_CRITICAL();
 766:freertos\src/queue.c **** 						return errQUEUE_FULL;
 767:freertos\src/queue.c **** 					}
 768:freertos\src/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 769:freertos\src/queue.c **** 					{
 770:freertos\src/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 771:freertos\src/queue.c **** 						xEntryTimeSet = pdTRUE;
 772:freertos\src/queue.c **** 					}
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 15


 773:freertos\src/queue.c **** 				}
 774:freertos\src/queue.c **** 			}
 775:freertos\src/queue.c **** 			taskEXIT_CRITICAL();
 776:freertos\src/queue.c **** 
 777:freertos\src/queue.c **** 			taskENTER_CRITICAL();
 778:freertos\src/queue.c **** 			{
 779:freertos\src/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 780:freertos\src/queue.c **** 				{
 781:freertos\src/queue.c **** 					if( prvIsQueueFull( pxQueue ) != pdFALSE )
 782:freertos\src/queue.c **** 					{
 783:freertos\src/queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 784:freertos\src/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 785:freertos\src/queue.c **** 						portYIELD_WITHIN_API();
 786:freertos\src/queue.c **** 					}
 787:freertos\src/queue.c **** 				}
 788:freertos\src/queue.c **** 				else
 789:freertos\src/queue.c **** 				{
 790:freertos\src/queue.c **** 					taskEXIT_CRITICAL();
 791:freertos\src/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 792:freertos\src/queue.c **** 					return errQUEUE_FULL;
 793:freertos\src/queue.c **** 				}
 794:freertos\src/queue.c **** 			}
 795:freertos\src/queue.c **** 			taskEXIT_CRITICAL();
 796:freertos\src/queue.c **** 		}
 797:freertos\src/queue.c **** 	}
 798:freertos\src/queue.c **** 
 799:freertos\src/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 800:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 801:freertos\src/queue.c **** 
 802:freertos\src/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 803:freertos\src/queue.c **** 
 804:freertos\src/queue.c **** 	signed portBASE_TYPE xQueueAltGenericReceive( xQueueHandle xQueue, void * const pvBuffer, portTick
 805:freertos\src/queue.c **** 	{
 806:freertos\src/queue.c **** 	signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 807:freertos\src/queue.c **** 	xTimeOutType xTimeOut;
 808:freertos\src/queue.c **** 	signed char *pcOriginalReadPosition;
 809:freertos\src/queue.c **** 	xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 810:freertos\src/queue.c **** 
 811:freertos\src/queue.c **** 		configASSERT( pxQueue );
 812:freertos\src/queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U )
 813:freertos\src/queue.c **** 
 814:freertos\src/queue.c **** 		for( ;; )
 815:freertos\src/queue.c **** 		{
 816:freertos\src/queue.c **** 			taskENTER_CRITICAL();
 817:freertos\src/queue.c **** 			{
 818:freertos\src/queue.c **** 				if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 819:freertos\src/queue.c **** 				{
 820:freertos\src/queue.c **** 					/* Remember our read position in case we are just peeking. */
 821:freertos\src/queue.c **** 					pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 822:freertos\src/queue.c **** 
 823:freertos\src/queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 824:freertos\src/queue.c **** 
 825:freertos\src/queue.c **** 					if( xJustPeeking == pdFALSE )
 826:freertos\src/queue.c **** 					{
 827:freertos\src/queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 828:freertos\src/queue.c **** 
 829:freertos\src/queue.c **** 						/* Data is actually being removed (not just peeked). */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 16


 830:freertos\src/queue.c **** 						--( pxQueue->uxMessagesWaiting );
 831:freertos\src/queue.c **** 
 832:freertos\src/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 833:freertos\src/queue.c **** 						{
 834:freertos\src/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 835:freertos\src/queue.c **** 							{
 836:freertos\src/queue.c **** 								/* Record the information required to implement
 837:freertos\src/queue.c **** 								priority inheritance should it become necessary. */
 838:freertos\src/queue.c **** 								pxQueue->pxMutexHolder = ( signed char * ) xTaskGetCurrentTaskHandle();
 839:freertos\src/queue.c **** 							}
 840:freertos\src/queue.c **** 						}
 841:freertos\src/queue.c **** 						#endif
 842:freertos\src/queue.c **** 
 843:freertos\src/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 844:freertos\src/queue.c **** 						{
 845:freertos\src/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 846:freertos\src/queue.c **** 							{
 847:freertos\src/queue.c **** 								portYIELD_WITHIN_API();
 848:freertos\src/queue.c **** 							}
 849:freertos\src/queue.c **** 						}
 850:freertos\src/queue.c **** 					}
 851:freertos\src/queue.c **** 					else
 852:freertos\src/queue.c **** 					{
 853:freertos\src/queue.c **** 						traceQUEUE_PEEK( pxQueue );
 854:freertos\src/queue.c **** 
 855:freertos\src/queue.c **** 						/* We are not removing the data, so reset our read
 856:freertos\src/queue.c **** 						pointer. */
 857:freertos\src/queue.c **** 						pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 858:freertos\src/queue.c **** 
 859:freertos\src/queue.c **** 						/* The data is being left in the queue, so see if there are
 860:freertos\src/queue.c **** 						any other tasks waiting for the data. */
 861:freertos\src/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 862:freertos\src/queue.c **** 						{
 863:freertos\src/queue.c **** 							/* Tasks that are removed from the event list will get added to
 864:freertos\src/queue.c **** 							the pending ready list as the scheduler is still suspended. */
 865:freertos\src/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 866:freertos\src/queue.c **** 							{
 867:freertos\src/queue.c **** 								/* The task waiting has a higher priority than this task. */
 868:freertos\src/queue.c **** 								portYIELD_WITHIN_API();
 869:freertos\src/queue.c **** 							}
 870:freertos\src/queue.c **** 						}
 871:freertos\src/queue.c **** 
 872:freertos\src/queue.c **** 					}
 873:freertos\src/queue.c **** 
 874:freertos\src/queue.c **** 					taskEXIT_CRITICAL();
 875:freertos\src/queue.c **** 					return pdPASS;
 876:freertos\src/queue.c **** 				}
 877:freertos\src/queue.c **** 				else
 878:freertos\src/queue.c **** 				{
 879:freertos\src/queue.c **** 					if( xTicksToWait == ( portTickType ) 0 )
 880:freertos\src/queue.c **** 					{
 881:freertos\src/queue.c **** 						taskEXIT_CRITICAL();
 882:freertos\src/queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 883:freertos\src/queue.c **** 						return errQUEUE_EMPTY;
 884:freertos\src/queue.c **** 					}
 885:freertos\src/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 886:freertos\src/queue.c **** 					{
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 17


 887:freertos\src/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 888:freertos\src/queue.c **** 						xEntryTimeSet = pdTRUE;
 889:freertos\src/queue.c **** 					}
 890:freertos\src/queue.c **** 				}
 891:freertos\src/queue.c **** 			}
 892:freertos\src/queue.c **** 			taskEXIT_CRITICAL();
 893:freertos\src/queue.c **** 
 894:freertos\src/queue.c **** 			taskENTER_CRITICAL();
 895:freertos\src/queue.c **** 			{
 896:freertos\src/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 897:freertos\src/queue.c **** 				{
 898:freertos\src/queue.c **** 					if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 899:freertos\src/queue.c **** 					{
 900:freertos\src/queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
 901:freertos\src/queue.c **** 
 902:freertos\src/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 903:freertos\src/queue.c **** 						{
 904:freertos\src/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 905:freertos\src/queue.c **** 							{
 906:freertos\src/queue.c **** 								portENTER_CRITICAL();
 907:freertos\src/queue.c **** 								{
 908:freertos\src/queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 909:freertos\src/queue.c **** 								}
 910:freertos\src/queue.c **** 								portEXIT_CRITICAL();
 911:freertos\src/queue.c **** 							}
 912:freertos\src/queue.c **** 						}
 913:freertos\src/queue.c **** 						#endif
 914:freertos\src/queue.c **** 
 915:freertos\src/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 916:freertos\src/queue.c **** 						portYIELD_WITHIN_API();
 917:freertos\src/queue.c **** 					}
 918:freertos\src/queue.c **** 				}
 919:freertos\src/queue.c **** 				else
 920:freertos\src/queue.c **** 				{
 921:freertos\src/queue.c **** 					taskEXIT_CRITICAL();
 922:freertos\src/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 923:freertos\src/queue.c **** 					return errQUEUE_EMPTY;
 924:freertos\src/queue.c **** 				}
 925:freertos\src/queue.c **** 			}
 926:freertos\src/queue.c **** 			taskEXIT_CRITICAL();
 927:freertos\src/queue.c **** 		}
 928:freertos\src/queue.c **** 	}
 929:freertos\src/queue.c **** 
 930:freertos\src/queue.c **** 
 931:freertos\src/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 932:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 933:freertos\src/queue.c **** 
 934:freertos\src/queue.c **** signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle xQueue, const void * const pvItemToQueu
 935:freertos\src/queue.c **** {
 936:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 937:freertos\src/queue.c **** unsigned portBASE_TYPE uxSavedInterruptStatus;
 938:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 939:freertos\src/queue.c **** 
 940:freertos\src/queue.c **** 	configASSERT( pxQueue );
 941:freertos\src/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 
 942:freertos\src/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 943:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 18


 944:freertos\src/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 945:freertos\src/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 946:freertos\src/queue.c **** 	above the maximum system call priority are keep permanently enabled, even
 947:freertos\src/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 948:freertos\src/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 949:freertos\src/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 950:freertos\src/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 951:freertos\src/queue.c **** 	assigned a priority above the configured maximum system call priority.
 952:freertos\src/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 953:freertos\src/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 954:freertos\src/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 955:freertos\src/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 956:freertos\src/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 957:freertos\src/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 958:freertos\src/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 959:freertos\src/queue.c **** 
 960:freertos\src/queue.c **** 	/* Similar to xQueueGenericSend, except we don't block if there is no room
 961:freertos\src/queue.c **** 	in the queue.  Also we don't directly wake a task that was blocked on a
 962:freertos\src/queue.c **** 	queue read, instead we return a flag to say whether a context switch is
 963:freertos\src/queue.c **** 	required or not (i.e. has a task with a higher priority than us been woken
 964:freertos\src/queue.c **** 	by this	post). */
 965:freertos\src/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 966:freertos\src/queue.c **** 	{
 967:freertos\src/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 968:freertos\src/queue.c **** 		{
 969:freertos\src/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 970:freertos\src/queue.c **** 
 971:freertos\src/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 972:freertos\src/queue.c **** 
 973:freertos\src/queue.c **** 			/* If the queue is locked we do not alter the event list.  This will
 974:freertos\src/queue.c **** 			be done when the queue is unlocked later. */
 975:freertos\src/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 976:freertos\src/queue.c **** 			{
 977:freertos\src/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 978:freertos\src/queue.c **** 				{
 979:freertos\src/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 980:freertos\src/queue.c **** 					{
 981:freertos\src/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 982:freertos\src/queue.c **** 						{
 983:freertos\src/queue.c **** 							/* The queue is a member of a queue set, and posting
 984:freertos\src/queue.c **** 							to the queue set caused a higher priority task to
 985:freertos\src/queue.c **** 							unblock.  A context switch is required. */
 986:freertos\src/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 987:freertos\src/queue.c **** 							{
 988:freertos\src/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 989:freertos\src/queue.c **** 							}
 990:freertos\src/queue.c **** 						}
 991:freertos\src/queue.c **** 					}
 992:freertos\src/queue.c **** 					else
 993:freertos\src/queue.c **** 					{
 994:freertos\src/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 995:freertos\src/queue.c **** 						{
 996:freertos\src/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 997:freertos\src/queue.c **** 							{
 998:freertos\src/queue.c **** 								/* The task waiting has a higher priority so record that a
 999:freertos\src/queue.c **** 								context	switch is required. */
1000:freertos\src/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 19


1001:freertos\src/queue.c **** 								{
1002:freertos\src/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1003:freertos\src/queue.c **** 								}
1004:freertos\src/queue.c **** 							}
1005:freertos\src/queue.c **** 						}
1006:freertos\src/queue.c **** 					}
1007:freertos\src/queue.c **** 				}
1008:freertos\src/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1009:freertos\src/queue.c **** 				{
1010:freertos\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1011:freertos\src/queue.c **** 					{
1012:freertos\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1013:freertos\src/queue.c **** 						{
1014:freertos\src/queue.c **** 							/* The task waiting has a higher priority so record that a
1015:freertos\src/queue.c **** 							context	switch is required. */
1016:freertos\src/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1017:freertos\src/queue.c **** 							{
1018:freertos\src/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1019:freertos\src/queue.c **** 							}
1020:freertos\src/queue.c **** 						}
1021:freertos\src/queue.c **** 					}
1022:freertos\src/queue.c **** 				}
1023:freertos\src/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1024:freertos\src/queue.c **** 			}
1025:freertos\src/queue.c **** 			else
1026:freertos\src/queue.c **** 			{
1027:freertos\src/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1028:freertos\src/queue.c **** 				knows that data was posted while it was locked. */
1029:freertos\src/queue.c **** 				++( pxQueue->xTxLock );
1030:freertos\src/queue.c **** 			}
1031:freertos\src/queue.c **** 
1032:freertos\src/queue.c **** 			xReturn = pdPASS;
1033:freertos\src/queue.c **** 		}
1034:freertos\src/queue.c **** 		else
1035:freertos\src/queue.c **** 		{
1036:freertos\src/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1037:freertos\src/queue.c **** 			xReturn = errQUEUE_FULL;
1038:freertos\src/queue.c **** 		}
1039:freertos\src/queue.c **** 	}
1040:freertos\src/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1041:freertos\src/queue.c **** 
1042:freertos\src/queue.c **** 	return xReturn;
1043:freertos\src/queue.c **** }
1044:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1045:freertos\src/queue.c **** 
1046:freertos\src/queue.c **** signed portBASE_TYPE xQueueGenericReceive( xQueueHandle xQueue, void * const pvBuffer, portTickType
1047:freertos\src/queue.c **** {
1048:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
1049:freertos\src/queue.c **** xTimeOutType xTimeOut;
1050:freertos\src/queue.c **** signed char *pcOriginalReadPosition;
1051:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1052:freertos\src/queue.c **** 
1053:freertos\src/queue.c **** 	configASSERT( pxQueue );
1054:freertos\src/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) 
1055:freertos\src/queue.c **** 
1056:freertos\src/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1057:freertos\src/queue.c **** 	statements within the function itself.  This is done in the interest
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 20


1058:freertos\src/queue.c **** 	of execution time efficiency. */
1059:freertos\src/queue.c **** 
1060:freertos\src/queue.c **** 	for( ;; )
1061:freertos\src/queue.c **** 	{
1062:freertos\src/queue.c **** 		taskENTER_CRITICAL();
1063:freertos\src/queue.c **** 		{
1064:freertos\src/queue.c **** 			/* Is there data in the queue now?  To be running we must be
1065:freertos\src/queue.c **** 			the highest priority task wanting to access the queue. */
1066:freertos\src/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
1067:freertos\src/queue.c **** 			{
1068:freertos\src/queue.c **** 				/* Remember the read position in case the queue is only being
1069:freertos\src/queue.c **** 				peeked. */
1070:freertos\src/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1071:freertos\src/queue.c **** 
1072:freertos\src/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1073:freertos\src/queue.c **** 
1074:freertos\src/queue.c **** 				if( xJustPeeking == pdFALSE )
1075:freertos\src/queue.c **** 				{
1076:freertos\src/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1077:freertos\src/queue.c **** 
1078:freertos\src/queue.c **** 					/* Actually removing data, not just peeking. */
1079:freertos\src/queue.c **** 					--( pxQueue->uxMessagesWaiting );
1080:freertos\src/queue.c **** 
1081:freertos\src/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1082:freertos\src/queue.c **** 					{
1083:freertos\src/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1084:freertos\src/queue.c **** 						{
1085:freertos\src/queue.c **** 							/* Record the information required to implement
1086:freertos\src/queue.c **** 							priority inheritance should it become necessary. */
1087:freertos\src/queue.c **** 							pxQueue->pxMutexHolder = ( signed char * ) xTaskGetCurrentTaskHandle(); /*lint !e961 Cast is
1088:freertos\src/queue.c **** 						}
1089:freertos\src/queue.c **** 					}
1090:freertos\src/queue.c **** 					#endif
1091:freertos\src/queue.c **** 
1092:freertos\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1093:freertos\src/queue.c **** 					{
1094:freertos\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
1095:freertos\src/queue.c **** 						{
1096:freertos\src/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1097:freertos\src/queue.c **** 						}
1098:freertos\src/queue.c **** 					}
1099:freertos\src/queue.c **** 				}
1100:freertos\src/queue.c **** 				else
1101:freertos\src/queue.c **** 				{
1102:freertos\src/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1103:freertos\src/queue.c **** 
1104:freertos\src/queue.c **** 					/* The data is not being removed, so reset the read
1105:freertos\src/queue.c **** 					pointer. */
1106:freertos\src/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1107:freertos\src/queue.c **** 
1108:freertos\src/queue.c **** 					/* The data is being left in the queue, so see if there are
1109:freertos\src/queue.c **** 					any other tasks waiting for the data. */
1110:freertos\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1111:freertos\src/queue.c **** 					{
1112:freertos\src/queue.c **** 						/* Tasks that are removed from the event list will get added to
1113:freertos\src/queue.c **** 						the pending ready list as the scheduler is still suspended. */
1114:freertos\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 21


1115:freertos\src/queue.c **** 						{
1116:freertos\src/queue.c **** 							/* The task waiting has a higher priority than this task. */
1117:freertos\src/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1118:freertos\src/queue.c **** 						}
1119:freertos\src/queue.c **** 					}
1120:freertos\src/queue.c **** 				}
1121:freertos\src/queue.c **** 
1122:freertos\src/queue.c **** 				taskEXIT_CRITICAL();
1123:freertos\src/queue.c **** 				return pdPASS;
1124:freertos\src/queue.c **** 			}
1125:freertos\src/queue.c **** 			else
1126:freertos\src/queue.c **** 			{
1127:freertos\src/queue.c **** 				if( xTicksToWait == ( portTickType ) 0 )
1128:freertos\src/queue.c **** 				{
1129:freertos\src/queue.c **** 					/* The queue was empty and no block time is specified (or
1130:freertos\src/queue.c **** 					the block time has expired) so leave now. */
1131:freertos\src/queue.c **** 					taskEXIT_CRITICAL();
1132:freertos\src/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1133:freertos\src/queue.c **** 					return errQUEUE_EMPTY;
1134:freertos\src/queue.c **** 				}
1135:freertos\src/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1136:freertos\src/queue.c **** 				{
1137:freertos\src/queue.c **** 					/* The queue was empty and a block time was specified so
1138:freertos\src/queue.c **** 					configure the timeout structure. */
1139:freertos\src/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1140:freertos\src/queue.c **** 					xEntryTimeSet = pdTRUE;
1141:freertos\src/queue.c **** 				}
1142:freertos\src/queue.c **** 				else
1143:freertos\src/queue.c **** 				{
1144:freertos\src/queue.c **** 					/* Entry time was already set. */
1145:freertos\src/queue.c **** 				}
1146:freertos\src/queue.c **** 			}
1147:freertos\src/queue.c **** 		}
1148:freertos\src/queue.c **** 		taskEXIT_CRITICAL();
1149:freertos\src/queue.c **** 
1150:freertos\src/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1151:freertos\src/queue.c **** 		now the critical section has been exited. */
1152:freertos\src/queue.c **** 
1153:freertos\src/queue.c **** 		vTaskSuspendAll();
1154:freertos\src/queue.c **** 		prvLockQueue( pxQueue );
1155:freertos\src/queue.c **** 
1156:freertos\src/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1157:freertos\src/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1158:freertos\src/queue.c **** 		{
1159:freertos\src/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1160:freertos\src/queue.c **** 			{
1161:freertos\src/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1162:freertos\src/queue.c **** 
1163:freertos\src/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1164:freertos\src/queue.c **** 				{
1165:freertos\src/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1166:freertos\src/queue.c **** 					{
1167:freertos\src/queue.c **** 						portENTER_CRITICAL();
1168:freertos\src/queue.c **** 						{
1169:freertos\src/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1170:freertos\src/queue.c **** 						}
1171:freertos\src/queue.c **** 						portEXIT_CRITICAL();
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 22


1172:freertos\src/queue.c **** 					}
1173:freertos\src/queue.c **** 				}
1174:freertos\src/queue.c **** 				#endif
1175:freertos\src/queue.c **** 
1176:freertos\src/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1177:freertos\src/queue.c **** 				prvUnlockQueue( pxQueue );
1178:freertos\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1179:freertos\src/queue.c **** 				{
1180:freertos\src/queue.c **** 					portYIELD_WITHIN_API();
1181:freertos\src/queue.c **** 				}
1182:freertos\src/queue.c **** 			}
1183:freertos\src/queue.c **** 			else
1184:freertos\src/queue.c **** 			{
1185:freertos\src/queue.c **** 				/* Try again. */
1186:freertos\src/queue.c **** 				prvUnlockQueue( pxQueue );
1187:freertos\src/queue.c **** 				( void ) xTaskResumeAll();
1188:freertos\src/queue.c **** 			}
1189:freertos\src/queue.c **** 		}
1190:freertos\src/queue.c **** 		else
1191:freertos\src/queue.c **** 		{
1192:freertos\src/queue.c **** 			prvUnlockQueue( pxQueue );
1193:freertos\src/queue.c **** 			( void ) xTaskResumeAll();
1194:freertos\src/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
1195:freertos\src/queue.c **** 			return errQUEUE_EMPTY;
1196:freertos\src/queue.c **** 		}
1197:freertos\src/queue.c **** 	}
1198:freertos\src/queue.c **** }
1199:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1200:freertos\src/queue.c **** 
1201:freertos\src/queue.c **** signed portBASE_TYPE xQueueReceiveFromISR( xQueueHandle xQueue, void * const pvBuffer, signed portB
1202:freertos\src/queue.c **** {
1203:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
1204:freertos\src/queue.c **** unsigned portBASE_TYPE uxSavedInterruptStatus;
1205:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1206:freertos\src/queue.c **** 
1207:freertos\src/queue.c **** 	configASSERT( pxQueue );
1208:freertos\src/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) 
1209:freertos\src/queue.c **** 
1210:freertos\src/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1211:freertos\src/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1212:freertos\src/queue.c **** 	above the maximum system call priority are keep permanently enabled, even
1213:freertos\src/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1214:freertos\src/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1215:freertos\src/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1216:freertos\src/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1217:freertos\src/queue.c **** 	assigned a priority above the configured maximum system call priority.
1218:freertos\src/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1219:freertos\src/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1220:freertos\src/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1221:freertos\src/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1222:freertos\src/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1223:freertos\src/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1224:freertos\src/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1225:freertos\src/queue.c **** 
1226:freertos\src/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1227:freertos\src/queue.c **** 	{
1228:freertos\src/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 23


1229:freertos\src/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
1230:freertos\src/queue.c **** 		{
1231:freertos\src/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1232:freertos\src/queue.c **** 
1233:freertos\src/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1234:freertos\src/queue.c **** 			--( pxQueue->uxMessagesWaiting );
1235:freertos\src/queue.c **** 
1236:freertos\src/queue.c **** 			/* If the queue is locked the event list will not be modified.
1237:freertos\src/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1238:freertos\src/queue.c **** 			will know that an ISR has removed data while the queue was
1239:freertos\src/queue.c **** 			locked. */
1240:freertos\src/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
1241:freertos\src/queue.c **** 			{
1242:freertos\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1243:freertos\src/queue.c **** 				{
1244:freertos\src/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1245:freertos\src/queue.c **** 					{
1246:freertos\src/queue.c **** 						/* The task waiting has a higher priority than us so
1247:freertos\src/queue.c **** 						force a context switch. */
1248:freertos\src/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1249:freertos\src/queue.c **** 						{
1250:freertos\src/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1251:freertos\src/queue.c **** 						}
1252:freertos\src/queue.c **** 					}
1253:freertos\src/queue.c **** 				}
1254:freertos\src/queue.c **** 			}
1255:freertos\src/queue.c **** 			else
1256:freertos\src/queue.c **** 			{
1257:freertos\src/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1258:freertos\src/queue.c **** 				knows that data was removed while it was locked. */
1259:freertos\src/queue.c **** 				++( pxQueue->xRxLock );
1260:freertos\src/queue.c **** 			}
1261:freertos\src/queue.c **** 
1262:freertos\src/queue.c **** 			xReturn = pdPASS;
1263:freertos\src/queue.c **** 		}
1264:freertos\src/queue.c **** 		else
1265:freertos\src/queue.c **** 		{
1266:freertos\src/queue.c **** 			xReturn = pdFAIL;
1267:freertos\src/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1268:freertos\src/queue.c **** 		}
1269:freertos\src/queue.c **** 	}
1270:freertos\src/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1271:freertos\src/queue.c **** 
1272:freertos\src/queue.c **** 	return xReturn;
1273:freertos\src/queue.c **** }
1274:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1275:freertos\src/queue.c **** 
1276:freertos\src/queue.c **** signed portBASE_TYPE xQueuePeekFromISR( xQueueHandle xQueue,  void * const pvBuffer )
1277:freertos\src/queue.c **** {
1278:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
1279:freertos\src/queue.c **** unsigned portBASE_TYPE uxSavedInterruptStatus;
1280:freertos\src/queue.c **** signed char *pcOriginalReadPosition;
1281:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1282:freertos\src/queue.c **** 
1283:freertos\src/queue.c **** 	configASSERT( pxQueue );
1284:freertos\src/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) 
1285:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 24


1286:freertos\src/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1287:freertos\src/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1288:freertos\src/queue.c **** 	above the maximum system call priority are keep permanently enabled, even
1289:freertos\src/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1290:freertos\src/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1291:freertos\src/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1292:freertos\src/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1293:freertos\src/queue.c **** 	assigned a priority above the configured maximum system call priority.
1294:freertos\src/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1295:freertos\src/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1296:freertos\src/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1297:freertos\src/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1298:freertos\src/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1299:freertos\src/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1300:freertos\src/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1301:freertos\src/queue.c **** 
1302:freertos\src/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1303:freertos\src/queue.c **** 	{
1304:freertos\src/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1305:freertos\src/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
1306:freertos\src/queue.c **** 		{
1307:freertos\src/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1308:freertos\src/queue.c **** 
1309:freertos\src/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1310:freertos\src/queue.c **** 			actually being removed from the queue. */
1311:freertos\src/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1312:freertos\src/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1313:freertos\src/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1314:freertos\src/queue.c **** 
1315:freertos\src/queue.c **** 			xReturn = pdPASS;
1316:freertos\src/queue.c **** 		}
1317:freertos\src/queue.c **** 		else
1318:freertos\src/queue.c **** 		{
1319:freertos\src/queue.c **** 			xReturn = pdFAIL;
1320:freertos\src/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1321:freertos\src/queue.c **** 		}
1322:freertos\src/queue.c **** 	}
1323:freertos\src/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1324:freertos\src/queue.c **** 
1325:freertos\src/queue.c **** 	return xReturn;
1326:freertos\src/queue.c **** }
1327:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1328:freertos\src/queue.c **** 
1329:freertos\src/queue.c **** unsigned portBASE_TYPE uxQueueMessagesWaiting( const xQueueHandle xQueue )
1330:freertos\src/queue.c **** {
1331:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
1332:freertos\src/queue.c **** 
1333:freertos\src/queue.c **** 	configASSERT( xQueue );
1334:freertos\src/queue.c **** 
1335:freertos\src/queue.c **** 	taskENTER_CRITICAL();
1336:freertos\src/queue.c **** 		uxReturn = ( ( xQUEUE * ) xQueue )->uxMessagesWaiting;
1337:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
1338:freertos\src/queue.c **** 
1339:freertos\src/queue.c **** 	return uxReturn;
1340:freertos\src/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1341:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1342:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 25


1343:freertos\src/queue.c **** unsigned portBASE_TYPE uxQueueSpacesAvailable( const xQueueHandle xQueue )
1344:freertos\src/queue.c **** {
1345:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
1346:freertos\src/queue.c **** xQUEUE *pxQueue;
1347:freertos\src/queue.c **** 
1348:freertos\src/queue.c **** 	pxQueue = ( xQUEUE * ) xQueue;
1349:freertos\src/queue.c **** 	configASSERT( pxQueue );
1350:freertos\src/queue.c **** 
1351:freertos\src/queue.c **** 	taskENTER_CRITICAL();
1352:freertos\src/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1353:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
1354:freertos\src/queue.c **** 
1355:freertos\src/queue.c **** 	return uxReturn;
1356:freertos\src/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1357:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1358:freertos\src/queue.c **** 
1359:freertos\src/queue.c **** unsigned portBASE_TYPE uxQueueMessagesWaitingFromISR( const xQueueHandle xQueue )
1360:freertos\src/queue.c **** {
1361:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
1362:freertos\src/queue.c **** 
1363:freertos\src/queue.c **** 	configASSERT( xQueue );
1364:freertos\src/queue.c **** 
1365:freertos\src/queue.c **** 	uxReturn = ( ( xQUEUE * ) xQueue )->uxMessagesWaiting;
1366:freertos\src/queue.c **** 
1367:freertos\src/queue.c **** 	return uxReturn;
1368:freertos\src/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1369:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1370:freertos\src/queue.c **** 
1371:freertos\src/queue.c **** void vQueueDelete( xQueueHandle xQueue )
1372:freertos\src/queue.c **** {
1373:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1374:freertos\src/queue.c **** 
1375:freertos\src/queue.c **** 	configASSERT( pxQueue );
1376:freertos\src/queue.c **** 
1377:freertos\src/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1378:freertos\src/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1379:freertos\src/queue.c **** 	{
1380:freertos\src/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1381:freertos\src/queue.c **** 	}
1382:freertos\src/queue.c **** 	#endif
1383:freertos\src/queue.c **** 	vPortFree( pxQueue->pcHead );
1384:freertos\src/queue.c **** 	vPortFree( pxQueue );
1385:freertos\src/queue.c **** }
1386:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1387:freertos\src/queue.c **** 
1388:freertos\src/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1389:freertos\src/queue.c **** 
1390:freertos\src/queue.c **** 	unsigned char ucQueueGetQueueNumber( xQueueHandle xQueue )
1391:freertos\src/queue.c **** 	{
1392:freertos\src/queue.c **** 		return ( ( xQUEUE * ) xQueue )->ucQueueNumber;
1393:freertos\src/queue.c **** 	}
1394:freertos\src/queue.c **** 
1395:freertos\src/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1396:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1397:freertos\src/queue.c **** 
1398:freertos\src/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1399:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 26


1400:freertos\src/queue.c **** 	void vQueueSetQueueNumber( xQueueHandle xQueue, unsigned char ucQueueNumber )
1401:freertos\src/queue.c **** 	{
1402:freertos\src/queue.c **** 		( ( xQUEUE * ) xQueue )->ucQueueNumber = ucQueueNumber;
1403:freertos\src/queue.c **** 	}
1404:freertos\src/queue.c **** 
1405:freertos\src/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1406:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1407:freertos\src/queue.c **** 
1408:freertos\src/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1409:freertos\src/queue.c **** 
1410:freertos\src/queue.c **** 	unsigned char ucQueueGetQueueType( xQueueHandle xQueue )
1411:freertos\src/queue.c **** 	{
1412:freertos\src/queue.c **** 		return ( ( xQUEUE * ) xQueue )->ucQueueType;
1413:freertos\src/queue.c **** 	}
1414:freertos\src/queue.c **** 
1415:freertos\src/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1416:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1417:freertos\src/queue.c **** 
1418:freertos\src/queue.c **** static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition
1419:freertos\src/queue.c **** {
  27              		.loc 1 1419 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 1419 0
  39 0002 1500     		movs	r5, r2
1420:freertos\src/queue.c **** 	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
  40              		.loc 1 1420 0
  41 0004 026C     		ldr	r2, [r0, #64]
  42              	.LVL1:
1419:freertos\src/queue.c **** 	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
  43              		.loc 1 1419 0
  44 0006 0400     		movs	r4, r0
  45              		.loc 1 1420 0
  46 0008 002A     		cmp	r2, #0
  47 000a 07D1     		bne	.L2
1421:freertos\src/queue.c **** 	{
1422:freertos\src/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1423:freertos\src/queue.c **** 		{
1424:freertos\src/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  48              		.loc 1 1424 0
  49 000c 0568     		ldr	r5, [r0]
  50              	.LVL2:
  51 000e 002D     		cmp	r5, #0
  52 0010 29D1     		bne	.L4
1425:freertos\src/queue.c **** 			{
1426:freertos\src/queue.c **** 				/* The mutex is no longer being held. */
1427:freertos\src/queue.c **** 				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
  53              		.loc 1 1427 0
  54 0012 4068     		ldr	r0, [r0, #4]
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 27


  55              	.LVL3:
  56 0014 FFF7FEFF 		bl	vTaskPriorityDisinherit
  57              	.LVL4:
1428:freertos\src/queue.c **** 				pxQueue->pxMutexHolder = NULL;
  58              		.loc 1 1428 0
  59 0018 6560     		str	r5, [r4, #4]
  60 001a 24E0     		b	.L4
  61              	.LVL5:
  62              	.L2:
1429:freertos\src/queue.c **** 			}
1430:freertos\src/queue.c **** 		}
1431:freertos\src/queue.c **** 		#endif /* configUSE_MUTEXES */
1432:freertos\src/queue.c **** 	}
1433:freertos\src/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
  63              		.loc 1 1433 0
  64 001c 002D     		cmp	r5, #0
  65 001e 0CD1     		bne	.L5
1434:freertos\src/queue.c **** 	{
1435:freertos\src/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
  66              		.loc 1 1435 0
  67 0020 8068     		ldr	r0, [r0, #8]
  68              	.LVL6:
  69 0022 FFF7FEFF 		bl	memcpy
  70              	.LVL7:
1436:freertos\src/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  71              		.loc 1 1436 0
  72 0026 A368     		ldr	r3, [r4, #8]
  73 0028 226C     		ldr	r2, [r4, #64]
  74 002a 9B18     		adds	r3, r3, r2
1437:freertos\src/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
  75              		.loc 1 1437 0
  76 002c 6268     		ldr	r2, [r4, #4]
1436:freertos\src/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  77              		.loc 1 1436 0
  78 002e A360     		str	r3, [r4, #8]
  79              		.loc 1 1437 0
  80 0030 9342     		cmp	r3, r2
  81 0032 18D3     		bcc	.L4
1438:freertos\src/queue.c **** 		{
1439:freertos\src/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
  82              		.loc 1 1439 0
  83 0034 2368     		ldr	r3, [r4]
  84 0036 A360     		str	r3, [r4, #8]
  85 0038 15E0     		b	.L4
  86              	.LVL8:
  87              	.L5:
1440:freertos\src/queue.c **** 		}
1441:freertos\src/queue.c **** 	}
1442:freertos\src/queue.c **** 	else
1443:freertos\src/queue.c **** 	{
1444:freertos\src/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
  88              		.loc 1 1444 0
  89 003a C068     		ldr	r0, [r0, #12]
  90              	.LVL9:
  91 003c FFF7FEFF 		bl	memcpy
  92              	.LVL10:
1445:freertos\src/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 28


  93              		.loc 1 1445 0
  94 0040 236C     		ldr	r3, [r4, #64]
  95 0042 E268     		ldr	r2, [r4, #12]
  96 0044 5B42     		rsbs	r3, r3, #0
1446:freertos\src/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
  97              		.loc 1 1446 0
  98 0046 2168     		ldr	r1, [r4]
1445:freertos\src/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
  99              		.loc 1 1445 0
 100 0048 D218     		adds	r2, r2, r3
 101 004a E260     		str	r2, [r4, #12]
 102              		.loc 1 1446 0
 103 004c 8A42     		cmp	r2, r1
 104 004e 02D2     		bcs	.L7
1447:freertos\src/queue.c **** 		{
1448:freertos\src/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 105              		.loc 1 1448 0
 106 0050 6268     		ldr	r2, [r4, #4]
 107 0052 D318     		adds	r3, r2, r3
 108 0054 E360     		str	r3, [r4, #12]
 109              	.L7:
1449:freertos\src/queue.c **** 		}
1450:freertos\src/queue.c **** 
1451:freertos\src/queue.c **** 		if( xPosition == queueOVERWRITE )
 110              		.loc 1 1451 0
 111 0056 022D     		cmp	r5, #2
 112 0058 05D1     		bne	.L4
1452:freertos\src/queue.c **** 		{
1453:freertos\src/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 113              		.loc 1 1453 0
 114 005a A36B     		ldr	r3, [r4, #56]
 115 005c 002B     		cmp	r3, #0
 116 005e 02D0     		beq	.L4
1454:freertos\src/queue.c **** 			{
1455:freertos\src/queue.c **** 				/* An item is not being added but overwritten, so subtract
1456:freertos\src/queue.c **** 				one from the recorded number of items in the queue so when
1457:freertos\src/queue.c **** 				one is added again below the number of recorded items remains
1458:freertos\src/queue.c **** 				correct. */
1459:freertos\src/queue.c **** 				--( pxQueue->uxMessagesWaiting );
 117              		.loc 1 1459 0
 118 0060 A36B     		ldr	r3, [r4, #56]
 119 0062 013B     		subs	r3, r3, #1
 120 0064 A363     		str	r3, [r4, #56]
 121              	.LVL11:
 122              	.L4:
1460:freertos\src/queue.c **** 			}
1461:freertos\src/queue.c **** 		}
1462:freertos\src/queue.c **** 	}
1463:freertos\src/queue.c **** 
1464:freertos\src/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 123              		.loc 1 1464 0
 124 0066 A36B     		ldr	r3, [r4, #56]
1465:freertos\src/queue.c **** }
 125              		.loc 1 1465 0
 126              		@ sp needed
1464:freertos\src/queue.c **** }
 127              		.loc 1 1464 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 29


 128 0068 0133     		adds	r3, r3, #1
 129 006a A363     		str	r3, [r4, #56]
 130              	.LVL12:
 131              		.loc 1 1465 0
 132 006c 70BD     		pop	{r4, r5, r6, pc}
 133              		.cfi_endproc
 134              	.LFE44:
 135              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 136              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 137              		.align	1
 138              		.code	16
 139              		.thumb_func
 140              		.type	prvCopyDataFromQueue, %function
 141              	prvCopyDataFromQueue:
 142              	.LFB45:
1466:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1467:freertos\src/queue.c **** 
1468:freertos\src/queue.c **** static void prvCopyDataFromQueue( xQUEUE * const pxQueue, void * const pvBuffer )
1469:freertos\src/queue.c **** {
 143              		.loc 1 1469 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL13:
 148 0000 0300     		movs	r3, r0
 149 0002 70B5     		push	{r4, r5, r6, lr}
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 4, -16
 152              		.cfi_offset 5, -12
 153              		.cfi_offset 6, -8
 154              		.cfi_offset 14, -4
1470:freertos\src/queue.c **** 	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
 155              		.loc 1 1470 0
 156 0004 1C68     		ldr	r4, [r3]
1469:freertos\src/queue.c **** 	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
 157              		.loc 1 1469 0
 158 0006 0800     		movs	r0, r1
 159              	.LVL14:
 160              		.loc 1 1470 0
 161 0008 002C     		cmp	r4, #0
 162 000a 0AD0     		beq	.L12
1471:freertos\src/queue.c **** 	{
1472:freertos\src/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 163              		.loc 1 1472 0
 164 000c D968     		ldr	r1, [r3, #12]
 165              	.LVL15:
 166 000e 1A6C     		ldr	r2, [r3, #64]
1473:freertos\src/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 167              		.loc 1 1473 0
 168 0010 5D68     		ldr	r5, [r3, #4]
1472:freertos\src/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 169              		.loc 1 1472 0
 170 0012 8918     		adds	r1, r1, r2
 171 0014 D960     		str	r1, [r3, #12]
 172              		.loc 1 1473 0
 173 0016 A942     		cmp	r1, r5
 174 0018 00D3     		bcc	.L14
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 30


1474:freertos\src/queue.c **** 		{
1475:freertos\src/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 175              		.loc 1 1475 0
 176 001a DC60     		str	r4, [r3, #12]
 177              	.L14:
1476:freertos\src/queue.c **** 		}
1477:freertos\src/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 178              		.loc 1 1477 0
 179 001c D968     		ldr	r1, [r3, #12]
 180 001e FFF7FEFF 		bl	memcpy
 181              	.LVL16:
 182              	.L12:
1478:freertos\src/queue.c **** 	}
1479:freertos\src/queue.c **** }
 183              		.loc 1 1479 0
 184              		@ sp needed
 185 0022 70BD     		pop	{r4, r5, r6, pc}
 186              		.cfi_endproc
 187              	.LFE45:
 188              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 189              		.section	.text.prvUnlockQueue,"ax",%progbits
 190              		.align	1
 191              		.code	16
 192              		.thumb_func
 193              		.type	prvUnlockQueue, %function
 194              	prvUnlockQueue:
 195              	.LFB46:
1480:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1481:freertos\src/queue.c **** 
1482:freertos\src/queue.c **** static void prvUnlockQueue( xQUEUE *pxQueue )
1483:freertos\src/queue.c **** {
 196              		.loc 1 1483 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              	.LVL17:
 201 0000 10B5     		push	{r4, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 205              		.loc 1 1483 0
 206 0002 0400     		movs	r4, r0
1484:freertos\src/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1485:freertos\src/queue.c **** 
1486:freertos\src/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1487:freertos\src/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1488:freertos\src/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1489:freertos\src/queue.c **** 	updated. */
1490:freertos\src/queue.c **** 	taskENTER_CRITICAL();
 207              		.loc 1 1490 0
 208 0004 FFF7FEFF 		bl	vPortEnterCritical
 209              	.LVL18:
 210              	.L19:
1491:freertos\src/queue.c **** 	{
1492:freertos\src/queue.c **** 		/* See if data was added to the queue while it was locked. */
1493:freertos\src/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 211              		.loc 1 1493 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 31


 212 0008 A36C     		ldr	r3, [r4, #72]
 213 000a 002B     		cmp	r3, #0
 214 000c 0EDD     		ble	.L20
1494:freertos\src/queue.c **** 		{
1495:freertos\src/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1496:freertos\src/queue.c **** 			blocked waiting for data to become available? */
1497:freertos\src/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1498:freertos\src/queue.c **** 			{
1499:freertos\src/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1500:freertos\src/queue.c **** 				{
1501:freertos\src/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1502:freertos\src/queue.c **** 					{
1503:freertos\src/queue.c **** 						/* The queue is a member of a queue set, and posting to
1504:freertos\src/queue.c **** 						the queue set caused a higher priority task to unblock.
1505:freertos\src/queue.c **** 						A context switch is required. */
1506:freertos\src/queue.c **** 						vTaskMissedYield();
1507:freertos\src/queue.c **** 					}
1508:freertos\src/queue.c **** 				}
1509:freertos\src/queue.c **** 				else
1510:freertos\src/queue.c **** 				{
1511:freertos\src/queue.c **** 					/* Tasks that are removed from the event list will get added to
1512:freertos\src/queue.c **** 					the pending ready list as the scheduler is still suspended. */
1513:freertos\src/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1514:freertos\src/queue.c **** 					{
1515:freertos\src/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1516:freertos\src/queue.c **** 						{
1517:freertos\src/queue.c **** 							/* The task waiting has a higher priority so record that a
1518:freertos\src/queue.c **** 							context	switch is required. */
1519:freertos\src/queue.c **** 							vTaskMissedYield();
1520:freertos\src/queue.c **** 						}
1521:freertos\src/queue.c **** 					}
1522:freertos\src/queue.c **** 					else
1523:freertos\src/queue.c **** 					{
1524:freertos\src/queue.c **** 						break;
1525:freertos\src/queue.c **** 					}
1526:freertos\src/queue.c **** 				}
1527:freertos\src/queue.c **** 			}
1528:freertos\src/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1529:freertos\src/queue.c **** 			{
1530:freertos\src/queue.c **** 				/* Tasks that are removed from the event list will get added to
1531:freertos\src/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1532:freertos\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 215              		.loc 1 1532 0
 216 000e 636A     		ldr	r3, [r4, #36]
 217 0010 002B     		cmp	r3, #0
 218 0012 0BD0     		beq	.L20
1533:freertos\src/queue.c **** 				{
1534:freertos\src/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 219              		.loc 1 1534 0
 220 0014 2000     		movs	r0, r4
 221 0016 2430     		adds	r0, r0, #36
 222 0018 FFF7FEFF 		bl	xTaskRemoveFromEventList
 223              	.LVL19:
 224 001c 0028     		cmp	r0, #0
 225 001e 01D0     		beq	.L21
1535:freertos\src/queue.c **** 					{
1536:freertos\src/queue.c **** 						/* The task waiting has a higher priority so record that a
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 32


1537:freertos\src/queue.c **** 						context	switch is required. */
1538:freertos\src/queue.c **** 						vTaskMissedYield();
 226              		.loc 1 1538 0
 227 0020 FFF7FEFF 		bl	vTaskMissedYield
 228              	.LVL20:
 229              	.L21:
1539:freertos\src/queue.c **** 					}
1540:freertos\src/queue.c **** 				}
1541:freertos\src/queue.c **** 				else
1542:freertos\src/queue.c **** 				{
1543:freertos\src/queue.c **** 					break;
1544:freertos\src/queue.c **** 				}
1545:freertos\src/queue.c **** 			}
1546:freertos\src/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1547:freertos\src/queue.c **** 
1548:freertos\src/queue.c **** 			--( pxQueue->xTxLock );
 230              		.loc 1 1548 0
 231 0024 A36C     		ldr	r3, [r4, #72]
 232 0026 013B     		subs	r3, r3, #1
 233 0028 A364     		str	r3, [r4, #72]
 234 002a EDE7     		b	.L19
 235              	.L20:
1549:freertos\src/queue.c **** 		}
1550:freertos\src/queue.c **** 
1551:freertos\src/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 236              		.loc 1 1551 0
 237 002c 0123     		movs	r3, #1
 238 002e 5B42     		rsbs	r3, r3, #0
 239 0030 A364     		str	r3, [r4, #72]
1552:freertos\src/queue.c **** 	}
1553:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
 240              		.loc 1 1553 0
 241 0032 FFF7FEFF 		bl	vPortExitCritical
 242              	.LVL21:
1554:freertos\src/queue.c **** 
1555:freertos\src/queue.c **** 	/* Do the same for the Rx lock. */
1556:freertos\src/queue.c **** 	taskENTER_CRITICAL();
 243              		.loc 1 1556 0
 244 0036 FFF7FEFF 		bl	vPortEnterCritical
 245              	.LVL22:
 246              	.L23:
1557:freertos\src/queue.c **** 	{
1558:freertos\src/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 247              		.loc 1 1558 0
 248 003a 636C     		ldr	r3, [r4, #68]
 249 003c 002B     		cmp	r3, #0
 250 003e 0EDD     		ble	.L24
1559:freertos\src/queue.c **** 		{
1560:freertos\src/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 251              		.loc 1 1560 0
 252 0040 2369     		ldr	r3, [r4, #16]
 253 0042 002B     		cmp	r3, #0
 254 0044 0BD0     		beq	.L24
1561:freertos\src/queue.c **** 			{
1562:freertos\src/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 255              		.loc 1 1562 0
 256 0046 2000     		movs	r0, r4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 33


 257 0048 1030     		adds	r0, r0, #16
 258 004a FFF7FEFF 		bl	xTaskRemoveFromEventList
 259              	.LVL23:
 260 004e 0028     		cmp	r0, #0
 261 0050 01D0     		beq	.L25
1563:freertos\src/queue.c **** 				{
1564:freertos\src/queue.c **** 					vTaskMissedYield();
 262              		.loc 1 1564 0
 263 0052 FFF7FEFF 		bl	vTaskMissedYield
 264              	.LVL24:
 265              	.L25:
1565:freertos\src/queue.c **** 				}
1566:freertos\src/queue.c **** 
1567:freertos\src/queue.c **** 				--( pxQueue->xRxLock );
 266              		.loc 1 1567 0
 267 0056 636C     		ldr	r3, [r4, #68]
 268 0058 013B     		subs	r3, r3, #1
 269 005a 6364     		str	r3, [r4, #68]
 270 005c EDE7     		b	.L23
 271              	.L24:
1568:freertos\src/queue.c **** 			}
1569:freertos\src/queue.c **** 			else
1570:freertos\src/queue.c **** 			{
1571:freertos\src/queue.c **** 				break;
1572:freertos\src/queue.c **** 			}
1573:freertos\src/queue.c **** 		}
1574:freertos\src/queue.c **** 
1575:freertos\src/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 272              		.loc 1 1575 0
 273 005e 0123     		movs	r3, #1
 274 0060 5B42     		rsbs	r3, r3, #0
 275 0062 6364     		str	r3, [r4, #68]
1576:freertos\src/queue.c **** 	}
1577:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
 276              		.loc 1 1577 0
 277 0064 FFF7FEFF 		bl	vPortExitCritical
 278              	.LVL25:
1578:freertos\src/queue.c **** }
 279              		.loc 1 1578 0
 280              		@ sp needed
 281              	.LVL26:
 282 0068 10BD     		pop	{r4, pc}
 283              		.cfi_endproc
 284              	.LFE46:
 285              		.size	prvUnlockQueue, .-prvUnlockQueue
 286              		.section	.text.xQueueGenericReset,"ax",%progbits
 287              		.align	1
 288              		.global	xQueueGenericReset
 289              		.code	16
 290              		.thumb_func
 291              		.type	xQueueGenericReset, %function
 292              	xQueueGenericReset:
 293              	.LFB32:
 247:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 294              		.loc 1 247 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 34


 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              	.LVL27:
 299 0000 70B5     		push	{r4, r5, r6, lr}
 300              		.cfi_def_cfa_offset 16
 301              		.cfi_offset 4, -16
 302              		.cfi_offset 5, -12
 303              		.cfi_offset 6, -8
 304              		.cfi_offset 14, -4
 247:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 305              		.loc 1 247 0
 306 0002 0400     		movs	r4, r0
 307              	.LVL28:
 308 0004 0D00     		movs	r5, r1
 252:freertos\src/queue.c **** 	{
 309              		.loc 1 252 0
 310 0006 FFF7FEFF 		bl	vPortEnterCritical
 311              	.LVL29:
 254:freertos\src/queue.c **** 		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 312              		.loc 1 254 0
 313 000a 216C     		ldr	r1, [r4, #64]
 314 000c E36B     		ldr	r3, [r4, #60]
 315 000e 2268     		ldr	r2, [r4]
 316 0010 4B43     		muls	r3, r1
 317 0012 D018     		adds	r0, r2, r3
 257:freertos\src/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 318              		.loc 1 257 0
 319 0014 5B1A     		subs	r3, r3, r1
 320 0016 D318     		adds	r3, r2, r3
 321 0018 E360     		str	r3, [r4, #12]
 258:freertos\src/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 322              		.loc 1 258 0
 323 001a 0123     		movs	r3, #1
 254:freertos\src/queue.c **** 		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 324              		.loc 1 254 0
 325 001c 6060     		str	r0, [r4, #4]
 255:freertos\src/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 326              		.loc 1 255 0
 327 001e 0020     		movs	r0, #0
 258:freertos\src/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 328              		.loc 1 258 0
 329 0020 5B42     		rsbs	r3, r3, #0
 255:freertos\src/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 330              		.loc 1 255 0
 331 0022 A063     		str	r0, [r4, #56]
 256:freertos\src/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( unsigned portBASE_TYPE ) 1U )
 332              		.loc 1 256 0
 333 0024 A260     		str	r2, [r4, #8]
 258:freertos\src/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 334              		.loc 1 258 0
 335 0026 6364     		str	r3, [r4, #68]
 259:freertos\src/queue.c **** 
 336              		.loc 1 259 0
 337 0028 A364     		str	r3, [r4, #72]
 261:freertos\src/queue.c **** 		{
 338              		.loc 1 261 0
 339 002a 8542     		cmp	r5, r0
 340 002c 0BD1     		bne	.L40
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 35


 268:freertos\src/queue.c **** 			{
 341              		.loc 1 268 0
 342 002e 2369     		ldr	r3, [r4, #16]
 343 0030 8342     		cmp	r3, r0
 344 0032 10D0     		beq	.L42
 270:freertos\src/queue.c **** 				{
 345              		.loc 1 270 0
 346 0034 2000     		movs	r0, r4
 347 0036 1030     		adds	r0, r0, #16
 348 0038 FFF7FEFF 		bl	xTaskRemoveFromEventList
 349              	.LVL30:
 350 003c 0128     		cmp	r0, #1
 351 003e 0AD1     		bne	.L42
 272:freertos\src/queue.c **** 				}
 352              		.loc 1 272 0
 353 0040 FFF7FEFF 		bl	vPortYield
 354              	.LVL31:
 355 0044 07E0     		b	.L42
 356              	.L40:
 279:freertos\src/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 357              		.loc 1 279 0
 358 0046 2000     		movs	r0, r4
 359 0048 1030     		adds	r0, r0, #16
 360 004a FFF7FEFF 		bl	vListInitialise
 361              	.LVL32:
 280:freertos\src/queue.c **** 		}
 362              		.loc 1 280 0
 363 004e 2000     		movs	r0, r4
 364 0050 2430     		adds	r0, r0, #36
 365 0052 FFF7FEFF 		bl	vListInitialise
 366              	.LVL33:
 367              	.L42:
 283:freertos\src/queue.c **** 
 368              		.loc 1 283 0
 369 0056 FFF7FEFF 		bl	vPortExitCritical
 370              	.LVL34:
 288:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 371              		.loc 1 288 0
 372              		@ sp needed
 373 005a 0120     		movs	r0, #1
 374              	.LVL35:
 375              	.LVL36:
 376 005c 70BD     		pop	{r4, r5, r6, pc}
 377              		.cfi_endproc
 378              	.LFE32:
 379              		.size	xQueueGenericReset, .-xQueueGenericReset
 380              		.section	.text.xQueueGenericCreate,"ax",%progbits
 381              		.align	1
 382              		.global	xQueueGenericCreate
 383              		.code	16
 384              		.thumb_func
 385              		.type	xQueueGenericCreate, %function
 386              	xQueueGenericCreate:
 387              	.LFB33:
 292:freertos\src/queue.c **** xQUEUE *pxNewQueue;
 388              		.loc 1 292 0
 389              		.cfi_startproc
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 36


 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              	.LVL37:
 393 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 394              		.cfi_def_cfa_offset 24
 395              		.cfi_offset 3, -24
 396              		.cfi_offset 4, -20
 397              		.cfi_offset 5, -16
 398              		.cfi_offset 6, -12
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 292:freertos\src/queue.c **** xQUEUE *pxNewQueue;
 401              		.loc 1 292 0
 402 0002 0600     		movs	r6, r0
 403 0004 0F00     		movs	r7, r1
 302:freertos\src/queue.c **** 	{
 404              		.loc 1 302 0
 405 0006 0028     		cmp	r0, #0
 406 0008 01D1     		bne	.L45
 407              	.LVL38:
 408              	.L47:
 295:freertos\src/queue.c **** 
 409              		.loc 1 295 0
 410 000a 0024     		movs	r4, #0
 411 000c 17E0     		b	.L46
 412              	.LVL39:
 413              	.L45:
 304:freertos\src/queue.c **** 		if( pxNewQueue != NULL )
 414              		.loc 1 304 0
 415 000e 4C20     		movs	r0, #76
 416              	.LVL40:
 417 0010 FFF7FEFF 		bl	pvPortMalloc
 418              	.LVL41:
 419 0014 041E     		subs	r4, r0, #0
 420              	.LVL42:
 305:freertos\src/queue.c **** 		{
 421              		.loc 1 305 0
 422 0016 F8D0     		beq	.L47
 423              	.LVL43:
 311:freertos\src/queue.c **** 			if( pxNewQueue->pcHead != NULL )
 424              		.loc 1 311 0
 425 0018 3800     		movs	r0, r7
 426              	.LVL44:
 427 001a 7043     		muls	r0, r6
 428 001c 0130     		adds	r0, r0, #1
 429              	.LVL45:
 430 001e FFF7FEFF 		bl	pvPortMalloc
 431              	.LVL46:
 432 0022 051E     		subs	r5, r0, #0
 433 0024 2060     		str	r0, [r4]
 312:freertos\src/queue.c **** 			{
 434              		.loc 1 312 0
 435 0026 06D0     		beq	.L48
 316:freertos\src/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
 436              		.loc 1 316 0
 437 0028 E663     		str	r6, [r4, #60]
 317:freertos\src/queue.c **** 				( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 37


 438              		.loc 1 317 0
 439 002a 2764     		str	r7, [r4, #64]
 318:freertos\src/queue.c **** 
 440              		.loc 1 318 0
 441 002c 0121     		movs	r1, #1
 442 002e 2000     		movs	r0, r4
 443 0030 FFF7FEFF 		bl	xQueueGenericReset
 444              	.LVL47:
 445 0034 03E0     		b	.L46
 446              	.LVL48:
 447              	.L48:
 338:freertos\src/queue.c **** 			}
 448              		.loc 1 338 0
 449 0036 2000     		movs	r0, r4
 450 0038 FFF7FEFF 		bl	vPortFree
 451              	.LVL49:
 295:freertos\src/queue.c **** 
 452              		.loc 1 295 0
 453 003c 2C00     		movs	r4, r5
 454              	.LVL50:
 455              	.L46:
 346:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 456              		.loc 1 346 0
 457 003e 2000     		movs	r0, r4
 458              		@ sp needed
 459              	.LVL51:
 460              	.LVL52:
 461              	.LVL53:
 462 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 463              		.cfi_endproc
 464              	.LFE33:
 465              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 466              		.section	.text.xQueueGenericSend,"ax",%progbits
 467              		.align	1
 468              		.global	xQueueGenericSend
 469              		.code	16
 470              		.thumb_func
 471              		.type	xQueueGenericSend, %function
 472              	xQueueGenericSend:
 473              	.LFB35:
 565:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 474              		.loc 1 565 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 16
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL54:
 479 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 480              		.cfi_def_cfa_offset 20
 481              		.cfi_offset 4, -20
 482              		.cfi_offset 5, -16
 483              		.cfi_offset 6, -12
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 0400     		movs	r4, r0
 487              	.LVL55:
 488 0004 1F00     		movs	r7, r3
 566:freertos\src/queue.c **** xTimeOutType xTimeOut;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 38


 489              		.loc 1 566 0
 490 0006 0026     		movs	r6, #0
 565:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 491              		.loc 1 565 0
 492 0008 85B0     		sub	sp, sp, #20
 493              		.cfi_def_cfa_offset 40
 565:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 494              		.loc 1 565 0
 495 000a 0091     		str	r1, [sp]
 496 000c 0192     		str	r2, [sp, #4]
 497              	.LVL56:
 498              	.L53:
 579:freertos\src/queue.c **** 		{
 499              		.loc 1 579 0
 500 000e FFF7FEFF 		bl	vPortEnterCritical
 501              	.LVL57:
 585:freertos\src/queue.c **** 			{
 502              		.loc 1 585 0
 503 0012 A36B     		ldr	r3, [r4, #56]
 504 0014 E26B     		ldr	r2, [r4, #60]
 505 0016 9342     		cmp	r3, r2
 506 0018 01D3     		bcc	.L54
 585:freertos\src/queue.c **** 			{
 507              		.loc 1 585 0 is_stmt 0 discriminator 1
 508 001a 022F     		cmp	r7, #2
 509 001c 13D1     		bne	.L55
 510              	.L54:
 588:freertos\src/queue.c **** 
 511              		.loc 1 588 0 is_stmt 1
 512 001e 3A00     		movs	r2, r7
 513 0020 0099     		ldr	r1, [sp]
 514 0022 2000     		movs	r0, r4
 515 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 516              	.LVL58:
 623:freertos\src/queue.c **** 					{
 517              		.loc 1 623 0
 518 0028 636A     		ldr	r3, [r4, #36]
 519 002a 002B     		cmp	r3, #0
 520 002c 07D0     		beq	.L57
 625:freertos\src/queue.c **** 						{
 521              		.loc 1 625 0
 522 002e 2000     		movs	r0, r4
 523 0030 2430     		adds	r0, r0, #36
 524 0032 FFF7FEFF 		bl	xTaskRemoveFromEventList
 525              	.LVL59:
 526 0036 0128     		cmp	r0, #1
 527 0038 01D1     		bne	.L57
 631:freertos\src/queue.c **** 						}
 528              		.loc 1 631 0
 529 003a FFF7FEFF 		bl	vPortYield
 530              	.LVL60:
 531              	.L57:
 637:freertos\src/queue.c **** 
 532              		.loc 1 637 0
 533 003e FFF7FEFF 		bl	vPortExitCritical
 534              	.LVL61:
 641:freertos\src/queue.c **** 			}
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 39


 535              		.loc 1 641 0
 536 0042 0120     		movs	r0, #1
 537 0044 48E0     		b	.L59
 538              	.L55:
 645:freertos\src/queue.c **** 				{
 539              		.loc 1 645 0
 540 0046 019D     		ldr	r5, [sp, #4]
 541 0048 002D     		cmp	r5, #0
 542 004a 03D1     		bne	.L60
 649:freertos\src/queue.c **** 
 543              		.loc 1 649 0
 544 004c FFF7FEFF 		bl	vPortExitCritical
 545              	.LVL62:
 654:freertos\src/queue.c **** 				}
 546              		.loc 1 654 0
 547 0050 2800     		movs	r0, r5
 548 0052 41E0     		b	.L59
 549              	.L60:
 656:freertos\src/queue.c **** 				{
 550              		.loc 1 656 0
 551 0054 002E     		cmp	r6, #0
 552 0056 02D1     		bne	.L61
 660:freertos\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 553              		.loc 1 660 0
 554 0058 02A8     		add	r0, sp, #8
 555 005a FFF7FEFF 		bl	vTaskSetTimeOutState
 556              	.LVL63:
 557              	.L61:
 669:freertos\src/queue.c **** 
 558              		.loc 1 669 0
 559 005e FFF7FEFF 		bl	vPortExitCritical
 560              	.LVL64:
 674:freertos\src/queue.c **** 		prvLockQueue( pxQueue );
 561              		.loc 1 674 0
 562 0062 FFF7FEFF 		bl	vTaskSuspendAll
 563              	.LVL65:
 675:freertos\src/queue.c **** 
 564              		.loc 1 675 0
 565 0066 FFF7FEFF 		bl	vPortEnterCritical
 566              	.LVL66:
 567 006a 636C     		ldr	r3, [r4, #68]
 568 006c 0133     		adds	r3, r3, #1
 569 006e 01D1     		bne	.L62
 675:freertos\src/queue.c **** 
 570              		.loc 1 675 0 is_stmt 0 discriminator 1
 571 0070 0023     		movs	r3, #0
 572 0072 6364     		str	r3, [r4, #68]
 573              	.L62:
 675:freertos\src/queue.c **** 
 574              		.loc 1 675 0 discriminator 3
 575 0074 A36C     		ldr	r3, [r4, #72]
 576 0076 0133     		adds	r3, r3, #1
 577 0078 01D1     		bne	.L63
 675:freertos\src/queue.c **** 
 578              		.loc 1 675 0 discriminator 4
 579 007a 0023     		movs	r3, #0
 580 007c A364     		str	r3, [r4, #72]
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 40


 581              	.L63:
 675:freertos\src/queue.c **** 
 582              		.loc 1 675 0 discriminator 6
 583 007e FFF7FEFF 		bl	vPortExitCritical
 584              	.LVL67:
 678:freertos\src/queue.c **** 		{
 585              		.loc 1 678 0 is_stmt 1 discriminator 6
 586 0082 01A9     		add	r1, sp, #4
 587              	.LVL68:
 588 0084 02A8     		add	r0, sp, #8
 589 0086 FFF7FEFF 		bl	xTaskCheckForTimeOut
 590              	.LVL69:
 591 008a 0028     		cmp	r0, #0
 592 008c 1ED1     		bne	.L64
 593              	.LVL70:
 594              	.LBB4:
 595              	.LBB5:
1579:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1580:freertos\src/queue.c **** 
1581:freertos\src/queue.c **** static signed portBASE_TYPE prvIsQueueEmpty( const xQUEUE *pxQueue )
1582:freertos\src/queue.c **** {
1583:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
1584:freertos\src/queue.c **** 
1585:freertos\src/queue.c **** 	taskENTER_CRITICAL();
1586:freertos\src/queue.c **** 	{
1587:freertos\src/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE )  0 )
1588:freertos\src/queue.c **** 		{
1589:freertos\src/queue.c **** 			xReturn = pdTRUE;
1590:freertos\src/queue.c **** 		}
1591:freertos\src/queue.c **** 		else
1592:freertos\src/queue.c **** 		{
1593:freertos\src/queue.c **** 			xReturn = pdFALSE;
1594:freertos\src/queue.c **** 		}
1595:freertos\src/queue.c **** 	}
1596:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
1597:freertos\src/queue.c **** 
1598:freertos\src/queue.c **** 	return xReturn;
1599:freertos\src/queue.c **** }
1600:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1601:freertos\src/queue.c **** 
1602:freertos\src/queue.c **** signed portBASE_TYPE xQueueIsQueueEmptyFromISR( const xQueueHandle xQueue )
1603:freertos\src/queue.c **** {
1604:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
1605:freertos\src/queue.c **** 
1606:freertos\src/queue.c **** 	configASSERT( xQueue );
1607:freertos\src/queue.c **** 	if( ( ( xQUEUE * ) xQueue )->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 )
1608:freertos\src/queue.c **** 	{
1609:freertos\src/queue.c **** 		xReturn = pdTRUE;
1610:freertos\src/queue.c **** 	}
1611:freertos\src/queue.c **** 	else
1612:freertos\src/queue.c **** 	{
1613:freertos\src/queue.c **** 		xReturn = pdFALSE;
1614:freertos\src/queue.c **** 	}
1615:freertos\src/queue.c **** 
1616:freertos\src/queue.c **** 	return xReturn;
1617:freertos\src/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
1618:freertos\src/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 41


1619:freertos\src/queue.c **** 
1620:freertos\src/queue.c **** static signed portBASE_TYPE prvIsQueueFull( const xQUEUE *pxQueue )
1621:freertos\src/queue.c **** {
1622:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
1623:freertos\src/queue.c **** 
1624:freertos\src/queue.c **** 	taskENTER_CRITICAL();
 596              		.loc 1 1624 0
 597 008e FFF7FEFF 		bl	vPortEnterCritical
 598              	.LVL71:
1625:freertos\src/queue.c **** 	{
1626:freertos\src/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 599              		.loc 1 1626 0
 600 0092 A66B     		ldr	r6, [r4, #56]
 601 0094 E56B     		ldr	r5, [r4, #60]
 602              	.LVL72:
1627:freertos\src/queue.c **** 		{
1628:freertos\src/queue.c **** 			xReturn = pdTRUE;
1629:freertos\src/queue.c **** 		}
1630:freertos\src/queue.c **** 		else
1631:freertos\src/queue.c **** 		{
1632:freertos\src/queue.c **** 			xReturn = pdFALSE;
1633:freertos\src/queue.c **** 		}
1634:freertos\src/queue.c **** 	}
1635:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
 603              		.loc 1 1635 0
 604 0096 FFF7FEFF 		bl	vPortExitCritical
 605              	.LVL73:
 606              	.LBE5:
 607              	.LBE4:
 680:freertos\src/queue.c **** 			{
 608              		.loc 1 680 0
 609 009a AE42     		cmp	r6, r5
 610 009c 10D1     		bne	.L65
 683:freertos\src/queue.c **** 
 611              		.loc 1 683 0
 612 009e 2000     		movs	r0, r4
 613 00a0 0199     		ldr	r1, [sp, #4]
 614 00a2 1030     		adds	r0, r0, #16
 615 00a4 FFF7FEFF 		bl	vTaskPlaceOnEventList
 616              	.LVL74:
 690:freertos\src/queue.c **** 
 617              		.loc 1 690 0
 618 00a8 2000     		movs	r0, r4
 619 00aa FFF7FEFF 		bl	prvUnlockQueue
 620              	.LVL75:
 697:freertos\src/queue.c **** 				{
 621              		.loc 1 697 0
 622 00ae FFF7FEFF 		bl	xTaskResumeAll
 623              	.LVL76:
 624 00b2 0028     		cmp	r0, #0
 625 00b4 01D0     		beq	.L67
 626              	.L66:
 627 00b6 0126     		movs	r6, #1
 628 00b8 A9E7     		b	.L53
 629              	.L67:
 699:freertos\src/queue.c **** 				}
 630              		.loc 1 699 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 42


 631 00ba FFF7FEFF 		bl	vPortYield
 632              	.LVL77:
 633 00be FAE7     		b	.L66
 634              	.L65:
 705:freertos\src/queue.c **** 				( void ) xTaskResumeAll();
 635              		.loc 1 705 0
 636 00c0 2000     		movs	r0, r4
 637 00c2 FFF7FEFF 		bl	prvUnlockQueue
 638              	.LVL78:
 706:freertos\src/queue.c **** 			}
 639              		.loc 1 706 0
 640 00c6 FFF7FEFF 		bl	xTaskResumeAll
 641              	.LVL79:
 642 00ca F4E7     		b	.L66
 643              	.L64:
 712:freertos\src/queue.c **** 			( void ) xTaskResumeAll();
 644              		.loc 1 712 0
 645 00cc 2000     		movs	r0, r4
 646 00ce FFF7FEFF 		bl	prvUnlockQueue
 647              	.LVL80:
 713:freertos\src/queue.c **** 
 648              		.loc 1 713 0
 649 00d2 FFF7FEFF 		bl	xTaskResumeAll
 650              	.LVL81:
 718:freertos\src/queue.c **** 		}
 651              		.loc 1 718 0
 652 00d6 0020     		movs	r0, #0
 653              	.LVL82:
 654              	.L59:
 721:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 655              		.loc 1 721 0
 656 00d8 05B0     		add	sp, sp, #20
 657              	.LVL83:
 658              		@ sp needed
 659              	.LVL84:
 660              	.LVL85:
 661 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 662              		.cfi_endproc
 663              	.LFE35:
 664              		.size	xQueueGenericSend, .-xQueueGenericSend
 665              		.section	.text.xQueueCreateMutex,"ax",%progbits
 666              		.align	1
 667              		.global	xQueueCreateMutex
 668              		.code	16
 669              		.thumb_func
 670              		.type	xQueueCreateMutex, %function
 671              	xQueueCreateMutex:
 672              	.LFB34:
 352:freertos\src/queue.c **** 	xQUEUE *pxNewQueue;
 673              		.loc 1 352 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              	.LVL86:
 678 0000 70B5     		push	{r4, r5, r6, lr}
 679              		.cfi_def_cfa_offset 16
 680              		.cfi_offset 4, -16
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 43


 681              		.cfi_offset 5, -12
 682              		.cfi_offset 6, -8
 683              		.cfi_offset 14, -4
 360:freertos\src/queue.c **** 		if( pxNewQueue != NULL )
 684              		.loc 1 360 0
 685 0002 4C20     		movs	r0, #76
 686              	.LVL87:
 687 0004 FFF7FEFF 		bl	pvPortMalloc
 688              	.LVL88:
 689 0008 041E     		subs	r4, r0, #0
 690              	.LVL89:
 361:freertos\src/queue.c **** 		{
 691              		.loc 1 361 0
 692 000a 18D0     		beq	.L69
 376:freertos\src/queue.c **** 			pxNewQueue->uxItemSize = ( unsigned portBASE_TYPE ) 0U;
 693              		.loc 1 376 0
 694 000c 0123     		movs	r3, #1
 364:freertos\src/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 695              		.loc 1 364 0
 696 000e 0025     		movs	r5, #0
 376:freertos\src/queue.c **** 			pxNewQueue->uxItemSize = ( unsigned portBASE_TYPE ) 0U;
 697              		.loc 1 376 0
 698 0010 C363     		str	r3, [r0, #60]
 378:freertos\src/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 699              		.loc 1 378 0
 700 0012 023B     		subs	r3, r3, #2
 375:freertos\src/queue.c **** 			pxNewQueue->uxLength = ( unsigned portBASE_TYPE ) 1U;
 701              		.loc 1 375 0
 702 0014 8563     		str	r5, [r0, #56]
 377:freertos\src/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 703              		.loc 1 377 0
 704 0016 0564     		str	r5, [r0, #64]
 378:freertos\src/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 705              		.loc 1 378 0
 706 0018 4364     		str	r3, [r0, #68]
 364:freertos\src/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 707              		.loc 1 364 0
 708 001a 4560     		str	r5, [r0, #4]
 379:freertos\src/queue.c **** 
 709              		.loc 1 379 0
 710 001c 8364     		str	r3, [r0, #72]
 365:freertos\src/queue.c **** 
 711              		.loc 1 365 0
 712 001e 0560     		str	r5, [r0]
 369:freertos\src/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 713              		.loc 1 369 0
 714 0020 8560     		str	r5, [r0, #8]
 370:freertos\src/queue.c **** 
 715              		.loc 1 370 0
 716 0022 C560     		str	r5, [r0, #12]
 394:freertos\src/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 717              		.loc 1 394 0
 718 0024 1030     		adds	r0, r0, #16
 719              	.LVL90:
 720 0026 FFF7FEFF 		bl	vListInitialise
 721              	.LVL91:
 395:freertos\src/queue.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 44


 722              		.loc 1 395 0
 723 002a 2000     		movs	r0, r4
 724 002c 2430     		adds	r0, r0, #36
 725 002e FFF7FEFF 		bl	vListInitialise
 726              	.LVL92:
 400:freertos\src/queue.c **** 		}
 727              		.loc 1 400 0
 728 0032 2B00     		movs	r3, r5
 729 0034 2A00     		movs	r2, r5
 730 0036 2900     		movs	r1, r5
 731 0038 2000     		movs	r0, r4
 732 003a FFF7FEFF 		bl	xQueueGenericSend
 733              	.LVL93:
 734              	.L69:
 409:freertos\src/queue.c **** 
 735              		.loc 1 409 0
 736 003e 2000     		movs	r0, r4
 737              		@ sp needed
 738              	.LVL94:
 739 0040 70BD     		pop	{r4, r5, r6, pc}
 740              		.cfi_endproc
 741              	.LFE34:
 742              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 743              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 744              		.align	1
 745              		.global	xQueueGenericSendFromISR
 746              		.code	16
 747              		.thumb_func
 748              		.type	xQueueGenericSendFromISR, %function
 749              	xQueueGenericSendFromISR:
 750              	.LFB36:
 935:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 751              		.loc 1 935 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              	.LVL95:
 756 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 757              		.cfi_def_cfa_offset 32
 758              		.cfi_offset 0, -32
 759              		.cfi_offset 1, -28
 760              		.cfi_offset 2, -24
 761              		.cfi_offset 4, -20
 762              		.cfi_offset 5, -16
 763              		.cfi_offset 6, -12
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 935:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 766              		.loc 1 935 0
 767 0002 0400     		movs	r4, r0
 768              	.LVL96:
 769 0004 1600     		movs	r6, r2
 770 0006 1F00     		movs	r7, r3
 771 0008 0191     		str	r1, [sp, #4]
 965:freertos\src/queue.c **** 	{
 772              		.loc 1 965 0
 773 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 45


 774              	.LVL97:
 967:freertos\src/queue.c **** 		{
 775              		.loc 1 967 0
 776 000e A36B     		ldr	r3, [r4, #56]
 777 0010 E26B     		ldr	r2, [r4, #60]
 965:freertos\src/queue.c **** 	{
 778              		.loc 1 965 0
 779 0012 0090     		str	r0, [sp]
 780              	.LVL98:
 967:freertos\src/queue.c **** 		{
 781              		.loc 1 967 0
 782 0014 9342     		cmp	r3, r2
 783 0016 02D3     		bcc	.L74
1037:freertos\src/queue.c **** 		}
 784              		.loc 1 1037 0 discriminator 1
 785 0018 0025     		movs	r5, #0
 967:freertos\src/queue.c **** 		{
 786              		.loc 1 967 0 discriminator 1
 787 001a 022F     		cmp	r7, #2
 788 001c 19D1     		bne	.L75
 789              	.L74:
 971:freertos\src/queue.c **** 
 790              		.loc 1 971 0
 791 001e 3A00     		movs	r2, r7
 792 0020 0199     		ldr	r1, [sp, #4]
 793 0022 2000     		movs	r0, r4
 794              	.LVL99:
 795 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 796              	.LVL100:
 975:freertos\src/queue.c **** 			{
 797              		.loc 1 975 0
 798 0028 A36C     		ldr	r3, [r4, #72]
 799 002a 0133     		adds	r3, r3, #1
 800 002c 0DD1     		bne	.L76
1010:freertos\src/queue.c **** 					{
 801              		.loc 1 1010 0
 802 002e 636A     		ldr	r3, [r4, #36]
 803 0030 002B     		cmp	r3, #0
 804 0032 0DD0     		beq	.L86
1012:freertos\src/queue.c **** 						{
 805              		.loc 1 1012 0
 806 0034 2000     		movs	r0, r4
 807 0036 2430     		adds	r0, r0, #36
 808 0038 FFF7FEFF 		bl	xTaskRemoveFromEventList
 809              	.LVL101:
 810 003c 0028     		cmp	r0, #0
 811 003e 07D0     		beq	.L86
1016:freertos\src/queue.c **** 							{
 812              		.loc 1 1016 0
 813 0040 002E     		cmp	r6, #0
 814 0042 05D0     		beq	.L86
1018:freertos\src/queue.c **** 							}
 815              		.loc 1 1018 0
 816 0044 0125     		movs	r5, #1
 817 0046 3560     		str	r5, [r6]
 818 0048 03E0     		b	.L75
 819              	.L76:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 46


1029:freertos\src/queue.c **** 			}
 820              		.loc 1 1029 0
 821 004a A36C     		ldr	r3, [r4, #72]
 822 004c 0133     		adds	r3, r3, #1
 823 004e A364     		str	r3, [r4, #72]
 824              	.L86:
1032:freertos\src/queue.c **** 		}
 825              		.loc 1 1032 0
 826 0050 0125     		movs	r5, #1
 827              	.L75:
 828              	.LVL102:
1040:freertos\src/queue.c **** 
 829              		.loc 1 1040 0
 830 0052 0098     		ldr	r0, [sp]
 831 0054 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 832              	.LVL103:
1043:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 833              		.loc 1 1043 0
 834              		@ sp needed
 835 0058 2800     		movs	r0, r5
 836              	.LVL104:
 837              	.LVL105:
 838              	.LVL106:
 839              	.LVL107:
 840 005a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 841              		.cfi_endproc
 842              	.LFE36:
 843              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 844              		.section	.text.xQueueGenericReceive,"ax",%progbits
 845              		.align	1
 846              		.global	xQueueGenericReceive
 847              		.code	16
 848              		.thumb_func
 849              		.type	xQueueGenericReceive, %function
 850              	xQueueGenericReceive:
 851              	.LFB37:
1047:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 852              		.loc 1 1047 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 16
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              	.LVL108:
 857 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 858              		.cfi_def_cfa_offset 20
 859              		.cfi_offset 4, -20
 860              		.cfi_offset 5, -16
 861              		.cfi_offset 6, -12
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
 864 0002 0400     		movs	r4, r0
 865              	.LVL109:
 866 0004 0F00     		movs	r7, r1
1048:freertos\src/queue.c **** xTimeOutType xTimeOut;
 867              		.loc 1 1048 0
 868 0006 0026     		movs	r6, #0
1047:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 869              		.loc 1 1047 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 47


 870 0008 85B0     		sub	sp, sp, #20
 871              		.cfi_def_cfa_offset 40
1047:freertos\src/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 872              		.loc 1 1047 0
 873 000a 0192     		str	r2, [sp, #4]
 874 000c 0093     		str	r3, [sp]
 875              	.LVL110:
 876              	.L88:
1062:freertos\src/queue.c **** 		{
 877              		.loc 1 1062 0
 878 000e FFF7FEFF 		bl	vPortEnterCritical
 879              	.LVL111:
1066:freertos\src/queue.c **** 			{
 880              		.loc 1 1066 0
 881 0012 A36B     		ldr	r3, [r4, #56]
 882 0014 002B     		cmp	r3, #0
 883 0016 2AD0     		beq	.L89
1072:freertos\src/queue.c **** 
 884              		.loc 1 1072 0
 885 0018 3900     		movs	r1, r7
 886 001a 2000     		movs	r0, r4
1070:freertos\src/queue.c **** 
 887              		.loc 1 1070 0
 888 001c E568     		ldr	r5, [r4, #12]
 889              	.LVL112:
1072:freertos\src/queue.c **** 
 890              		.loc 1 1072 0
 891 001e FFF7FEFF 		bl	prvCopyDataFromQueue
 892              	.LVL113:
1074:freertos\src/queue.c **** 				{
 893              		.loc 1 1074 0
 894 0022 009B     		ldr	r3, [sp]
 895 0024 002B     		cmp	r3, #0
 896 0026 14D1     		bne	.L90
1079:freertos\src/queue.c **** 
 897              		.loc 1 1079 0
 898 0028 A36B     		ldr	r3, [r4, #56]
 899 002a 013B     		subs	r3, r3, #1
 900 002c A363     		str	r3, [r4, #56]
1083:freertos\src/queue.c **** 						{
 901              		.loc 1 1083 0
 902 002e 2368     		ldr	r3, [r4]
 903 0030 002B     		cmp	r3, #0
 904 0032 02D1     		bne	.L91
1087:freertos\src/queue.c **** 						}
 905              		.loc 1 1087 0
 906 0034 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 907              	.LVL114:
 908 0038 6060     		str	r0, [r4, #4]
 909              	.L91:
1092:freertos\src/queue.c **** 					{
 910              		.loc 1 1092 0
 911 003a 2369     		ldr	r3, [r4, #16]
 912 003c 002B     		cmp	r3, #0
 913 003e 12D0     		beq	.L93
1094:freertos\src/queue.c **** 						{
 914              		.loc 1 1094 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 48


 915 0040 2000     		movs	r0, r4
 916 0042 1030     		adds	r0, r0, #16
 917 0044 FFF7FEFF 		bl	xTaskRemoveFromEventList
 918              	.LVL115:
 919 0048 0128     		cmp	r0, #1
 920 004a 0CD1     		bne	.L93
 921              	.L95:
1096:freertos\src/queue.c **** 						}
 922              		.loc 1 1096 0
 923 004c FFF7FEFF 		bl	vPortYield
 924              	.LVL116:
 925 0050 09E0     		b	.L93
 926              	.L90:
1110:freertos\src/queue.c **** 					{
 927              		.loc 1 1110 0
 928 0052 636A     		ldr	r3, [r4, #36]
1106:freertos\src/queue.c **** 
 929              		.loc 1 1106 0
 930 0054 E560     		str	r5, [r4, #12]
1110:freertos\src/queue.c **** 					{
 931              		.loc 1 1110 0
 932 0056 002B     		cmp	r3, #0
 933 0058 05D0     		beq	.L93
1114:freertos\src/queue.c **** 						{
 934              		.loc 1 1114 0
 935 005a 2000     		movs	r0, r4
 936 005c 2430     		adds	r0, r0, #36
 937 005e FFF7FEFF 		bl	xTaskRemoveFromEventList
 938              	.LVL117:
 939 0062 0028     		cmp	r0, #0
 940 0064 F2D1     		bne	.L95
 941              	.L93:
1122:freertos\src/queue.c **** 				return pdPASS;
 942              		.loc 1 1122 0
 943 0066 FFF7FEFF 		bl	vPortExitCritical
 944              	.LVL118:
1123:freertos\src/queue.c **** 			}
 945              		.loc 1 1123 0
 946 006a 0120     		movs	r0, #1
 947 006c 51E0     		b	.L96
 948              	.LVL119:
 949              	.L89:
1127:freertos\src/queue.c **** 				{
 950              		.loc 1 1127 0
 951 006e 019D     		ldr	r5, [sp, #4]
 952 0070 002D     		cmp	r5, #0
 953 0072 03D1     		bne	.L97
1131:freertos\src/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 954              		.loc 1 1131 0
 955 0074 FFF7FEFF 		bl	vPortExitCritical
 956              	.LVL120:
1133:freertos\src/queue.c **** 				}
 957              		.loc 1 1133 0
 958 0078 2800     		movs	r0, r5
 959 007a 4AE0     		b	.L96
 960              	.L97:
1135:freertos\src/queue.c **** 				{
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 49


 961              		.loc 1 1135 0
 962 007c 002E     		cmp	r6, #0
 963 007e 02D1     		bne	.L98
1139:freertos\src/queue.c **** 					xEntryTimeSet = pdTRUE;
 964              		.loc 1 1139 0
 965 0080 02A8     		add	r0, sp, #8
 966 0082 FFF7FEFF 		bl	vTaskSetTimeOutState
 967              	.LVL121:
 968              	.L98:
1148:freertos\src/queue.c **** 
 969              		.loc 1 1148 0
 970 0086 FFF7FEFF 		bl	vPortExitCritical
 971              	.LVL122:
1153:freertos\src/queue.c **** 		prvLockQueue( pxQueue );
 972              		.loc 1 1153 0
 973 008a FFF7FEFF 		bl	vTaskSuspendAll
 974              	.LVL123:
1154:freertos\src/queue.c **** 
 975              		.loc 1 1154 0
 976 008e FFF7FEFF 		bl	vPortEnterCritical
 977              	.LVL124:
 978 0092 636C     		ldr	r3, [r4, #68]
 979 0094 0133     		adds	r3, r3, #1
 980 0096 01D1     		bne	.L99
1154:freertos\src/queue.c **** 
 981              		.loc 1 1154 0 is_stmt 0 discriminator 1
 982 0098 0023     		movs	r3, #0
 983 009a 6364     		str	r3, [r4, #68]
 984              	.L99:
1154:freertos\src/queue.c **** 
 985              		.loc 1 1154 0 discriminator 3
 986 009c A36C     		ldr	r3, [r4, #72]
 987 009e 0133     		adds	r3, r3, #1
 988 00a0 01D1     		bne	.L100
1154:freertos\src/queue.c **** 
 989              		.loc 1 1154 0 discriminator 4
 990 00a2 0023     		movs	r3, #0
 991 00a4 A364     		str	r3, [r4, #72]
 992              	.L100:
1154:freertos\src/queue.c **** 
 993              		.loc 1 1154 0 discriminator 6
 994 00a6 FFF7FEFF 		bl	vPortExitCritical
 995              	.LVL125:
1157:freertos\src/queue.c **** 		{
 996              		.loc 1 1157 0 is_stmt 1 discriminator 6
 997 00aa 01A9     		add	r1, sp, #4
 998              	.LVL126:
 999 00ac 02A8     		add	r0, sp, #8
 1000 00ae FFF7FEFF 		bl	xTaskCheckForTimeOut
 1001              	.LVL127:
 1002 00b2 0028     		cmp	r0, #0
 1003 00b4 27D1     		bne	.L101
 1004              	.LVL128:
 1005              	.LBB8:
 1006              	.LBB9:
1585:freertos\src/queue.c **** 	{
 1007              		.loc 1 1585 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 50


 1008 00b6 FFF7FEFF 		bl	vPortEnterCritical
 1009              	.LVL129:
1587:freertos\src/queue.c **** 		{
 1010              		.loc 1 1587 0
 1011 00ba A56B     		ldr	r5, [r4, #56]
 1012              	.LVL130:
1596:freertos\src/queue.c **** 
 1013              		.loc 1 1596 0
 1014 00bc FFF7FEFF 		bl	vPortExitCritical
 1015              	.LVL131:
 1016              	.LBE9:
 1017              	.LBE8:
1159:freertos\src/queue.c **** 			{
 1018              		.loc 1 1159 0
 1019 00c0 002D     		cmp	r5, #0
 1020 00c2 1AD1     		bne	.L102
1165:freertos\src/queue.c **** 					{
 1021              		.loc 1 1165 0
 1022 00c4 2368     		ldr	r3, [r4]
 1023 00c6 002B     		cmp	r3, #0
 1024 00c8 06D1     		bne	.L103
1167:freertos\src/queue.c **** 						{
 1025              		.loc 1 1167 0
 1026 00ca FFF7FEFF 		bl	vPortEnterCritical
 1027              	.LVL132:
1169:freertos\src/queue.c **** 						}
 1028              		.loc 1 1169 0
 1029 00ce 6068     		ldr	r0, [r4, #4]
 1030 00d0 FFF7FEFF 		bl	vTaskPriorityInherit
 1031              	.LVL133:
1171:freertos\src/queue.c **** 					}
 1032              		.loc 1 1171 0
 1033 00d4 FFF7FEFF 		bl	vPortExitCritical
 1034              	.LVL134:
 1035              	.L103:
1176:freertos\src/queue.c **** 				prvUnlockQueue( pxQueue );
 1036              		.loc 1 1176 0
 1037 00d8 2000     		movs	r0, r4
 1038 00da 0199     		ldr	r1, [sp, #4]
 1039 00dc 2430     		adds	r0, r0, #36
 1040 00de FFF7FEFF 		bl	vTaskPlaceOnEventList
 1041              	.LVL135:
1177:freertos\src/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1042              		.loc 1 1177 0
 1043 00e2 2000     		movs	r0, r4
 1044 00e4 FFF7FEFF 		bl	prvUnlockQueue
 1045              	.LVL136:
1178:freertos\src/queue.c **** 				{
 1046              		.loc 1 1178 0
 1047 00e8 FFF7FEFF 		bl	xTaskResumeAll
 1048              	.LVL137:
 1049 00ec 0028     		cmp	r0, #0
 1050 00ee 01D0     		beq	.L108
 1051              	.L104:
 1052 00f0 0126     		movs	r6, #1
 1053 00f2 8CE7     		b	.L88
 1054              	.L108:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 51


1180:freertos\src/queue.c **** 				}
 1055              		.loc 1 1180 0
 1056 00f4 FFF7FEFF 		bl	vPortYield
 1057              	.LVL138:
 1058 00f8 FAE7     		b	.L104
 1059              	.L102:
1186:freertos\src/queue.c **** 				( void ) xTaskResumeAll();
 1060              		.loc 1 1186 0
 1061 00fa 2000     		movs	r0, r4
 1062 00fc FFF7FEFF 		bl	prvUnlockQueue
 1063              	.LVL139:
1187:freertos\src/queue.c **** 			}
 1064              		.loc 1 1187 0
 1065 0100 FFF7FEFF 		bl	xTaskResumeAll
 1066              	.LVL140:
 1067 0104 F4E7     		b	.L104
 1068              	.L101:
1192:freertos\src/queue.c **** 			( void ) xTaskResumeAll();
 1069              		.loc 1 1192 0
 1070 0106 2000     		movs	r0, r4
 1071 0108 FFF7FEFF 		bl	prvUnlockQueue
 1072              	.LVL141:
1193:freertos\src/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
 1073              		.loc 1 1193 0
 1074 010c FFF7FEFF 		bl	xTaskResumeAll
 1075              	.LVL142:
1195:freertos\src/queue.c **** 		}
 1076              		.loc 1 1195 0
 1077 0110 0020     		movs	r0, #0
 1078              	.LVL143:
 1079              	.L96:
1198:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1080              		.loc 1 1198 0
 1081 0112 05B0     		add	sp, sp, #20
 1082              	.LVL144:
 1083              		@ sp needed
 1084              	.LVL145:
 1085              	.LVL146:
 1086 0114 F0BD     		pop	{r4, r5, r6, r7, pc}
 1087              		.cfi_endproc
 1088              	.LFE37:
 1089              		.size	xQueueGenericReceive, .-xQueueGenericReceive
 1090              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1091              		.align	1
 1092              		.global	xQueueReceiveFromISR
 1093              		.code	16
 1094              		.thumb_func
 1095              		.type	xQueueReceiveFromISR, %function
 1096              	xQueueReceiveFromISR:
 1097              	.LFB38:
1202:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 1098              		.loc 1 1202 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 8
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 1102              	.LVL147:
 1103 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 52


 1104              		.cfi_def_cfa_offset 32
 1105              		.cfi_offset 0, -32
 1106              		.cfi_offset 1, -28
 1107              		.cfi_offset 2, -24
 1108              		.cfi_offset 4, -20
 1109              		.cfi_offset 5, -16
 1110              		.cfi_offset 6, -12
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
1202:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 1113              		.loc 1 1202 0
 1114 0002 0400     		movs	r4, r0
 1115              	.LVL148:
 1116 0004 0191     		str	r1, [sp, #4]
 1117 0006 1600     		movs	r6, r2
1266:freertos\src/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 1118              		.loc 1 1266 0
 1119 0008 0025     		movs	r5, #0
1226:freertos\src/queue.c **** 	{
 1120              		.loc 1 1226 0
 1121 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1122              	.LVL149:
1229:freertos\src/queue.c **** 		{
 1123              		.loc 1 1229 0
 1124 000e A36B     		ldr	r3, [r4, #56]
1226:freertos\src/queue.c **** 	{
 1125              		.loc 1 1226 0
 1126 0010 0700     		movs	r7, r0
 1127              	.LVL150:
1229:freertos\src/queue.c **** 		{
 1128              		.loc 1 1229 0
 1129 0012 AB42     		cmp	r3, r5
 1130 0014 1BD0     		beq	.L110
1233:freertos\src/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 1131              		.loc 1 1233 0
 1132 0016 0199     		ldr	r1, [sp, #4]
 1133 0018 2000     		movs	r0, r4
 1134              	.LVL151:
 1135 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1136              	.LVL152:
1234:freertos\src/queue.c **** 
 1137              		.loc 1 1234 0
 1138 001e A36B     		ldr	r3, [r4, #56]
 1139 0020 013B     		subs	r3, r3, #1
 1140 0022 A363     		str	r3, [r4, #56]
1240:freertos\src/queue.c **** 			{
 1141              		.loc 1 1240 0
 1142 0024 636C     		ldr	r3, [r4, #68]
 1143 0026 0133     		adds	r3, r3, #1
 1144 0028 0DD1     		bne	.L111
1242:freertos\src/queue.c **** 				{
 1145              		.loc 1 1242 0
 1146 002a 2369     		ldr	r3, [r4, #16]
 1147 002c AB42     		cmp	r3, r5
 1148 002e 0DD0     		beq	.L122
1244:freertos\src/queue.c **** 					{
 1149              		.loc 1 1244 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 53


 1150 0030 2000     		movs	r0, r4
 1151 0032 1030     		adds	r0, r0, #16
 1152 0034 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1153              	.LVL153:
 1154 0038 0028     		cmp	r0, #0
 1155 003a 07D0     		beq	.L122
1248:freertos\src/queue.c **** 						{
 1156              		.loc 1 1248 0
 1157 003c 002E     		cmp	r6, #0
 1158 003e 05D0     		beq	.L122
1250:freertos\src/queue.c **** 						}
 1159              		.loc 1 1250 0
 1160 0040 0125     		movs	r5, #1
 1161 0042 3560     		str	r5, [r6]
 1162 0044 03E0     		b	.L110
 1163              	.L111:
1259:freertos\src/queue.c **** 			}
 1164              		.loc 1 1259 0
 1165 0046 636C     		ldr	r3, [r4, #68]
 1166 0048 0133     		adds	r3, r3, #1
 1167 004a 6364     		str	r3, [r4, #68]
 1168              	.L122:
1262:freertos\src/queue.c **** 		}
 1169              		.loc 1 1262 0
 1170 004c 0125     		movs	r5, #1
 1171              	.L110:
 1172              	.LVL154:
1270:freertos\src/queue.c **** 
 1173              		.loc 1 1270 0
 1174 004e 3800     		movs	r0, r7
 1175 0050 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1176              	.LVL155:
1273:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1177              		.loc 1 1273 0
 1178              		@ sp needed
 1179 0054 2800     		movs	r0, r5
 1180              	.LVL156:
 1181              	.LVL157:
 1182              	.LVL158:
 1183              	.LVL159:
 1184 0056 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1185              		.cfi_endproc
 1186              	.LFE38:
 1187              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1188              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1189              		.align	1
 1190              		.global	xQueuePeekFromISR
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	xQueuePeekFromISR, %function
 1194              	xQueuePeekFromISR:
 1195              	.LFB39:
1277:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 1196              		.loc 1 1277 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 0
 1199              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 54


 1200              	.LVL160:
 1201 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1202              		.cfi_def_cfa_offset 24
 1203              		.cfi_offset 3, -24
 1204              		.cfi_offset 4, -20
 1205              		.cfi_offset 5, -16
 1206              		.cfi_offset 6, -12
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
1277:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 1209              		.loc 1 1277 0
 1210 0002 0400     		movs	r4, r0
 1211              	.LVL161:
 1212 0004 0F00     		movs	r7, r1
1319:freertos\src/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 1213              		.loc 1 1319 0
 1214 0006 0025     		movs	r5, #0
1302:freertos\src/queue.c **** 	{
 1215              		.loc 1 1302 0
 1216 0008 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1217              	.LVL162:
1305:freertos\src/queue.c **** 		{
 1218              		.loc 1 1305 0
 1219 000c A36B     		ldr	r3, [r4, #56]
1302:freertos\src/queue.c **** 	{
 1220              		.loc 1 1302 0
 1221 000e 0600     		movs	r6, r0
 1222              	.LVL163:
1305:freertos\src/queue.c **** 		{
 1223              		.loc 1 1305 0
 1224 0010 AB42     		cmp	r3, r5
 1225 0012 06D0     		beq	.L124
1311:freertos\src/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1226              		.loc 1 1311 0
 1227 0014 E568     		ldr	r5, [r4, #12]
 1228              	.LVL164:
1312:freertos\src/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1229              		.loc 1 1312 0
 1230 0016 3900     		movs	r1, r7
 1231 0018 2000     		movs	r0, r4
 1232              	.LVL165:
 1233 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1234              	.LVL166:
1313:freertos\src/queue.c **** 
 1235              		.loc 1 1313 0
 1236 001e E560     		str	r5, [r4, #12]
 1237              	.LVL167:
1315:freertos\src/queue.c **** 		}
 1238              		.loc 1 1315 0
 1239 0020 0125     		movs	r5, #1
 1240              	.LVL168:
 1241              	.L124:
1323:freertos\src/queue.c **** 
 1242              		.loc 1 1323 0
 1243 0022 3000     		movs	r0, r6
 1244 0024 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1245              	.LVL169:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 55


1326:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1246              		.loc 1 1326 0
 1247              		@ sp needed
 1248 0028 2800     		movs	r0, r5
 1249              	.LVL170:
 1250              	.LVL171:
 1251              	.LVL172:
 1252              	.LVL173:
 1253 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1254              		.cfi_endproc
 1255              	.LFE39:
 1256              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 1257              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 1258              		.align	1
 1259              		.global	uxQueueMessagesWaiting
 1260              		.code	16
 1261              		.thumb_func
 1262              		.type	uxQueueMessagesWaiting, %function
 1263              	uxQueueMessagesWaiting:
 1264              	.LFB40:
1330:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
 1265              		.loc 1 1330 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              	.LVL174:
 1270 0000 10B5     		push	{r4, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 4, -8
 1273              		.cfi_offset 14, -4
1330:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
 1274              		.loc 1 1330 0
 1275 0002 0400     		movs	r4, r0
1335:freertos\src/queue.c **** 		uxReturn = ( ( xQUEUE * ) xQueue )->uxMessagesWaiting;
 1276              		.loc 1 1335 0
 1277 0004 FFF7FEFF 		bl	vPortEnterCritical
 1278              	.LVL175:
1336:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
 1279              		.loc 1 1336 0
 1280 0008 A46B     		ldr	r4, [r4, #56]
 1281              	.LVL176:
1340:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1282              		.loc 1 1340 0
 1283              		@ sp needed
1337:freertos\src/queue.c **** 
 1284              		.loc 1 1337 0
 1285 000a FFF7FEFF 		bl	vPortExitCritical
 1286              	.LVL177:
1340:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1287              		.loc 1 1340 0
 1288 000e 2000     		movs	r0, r4
 1289              	.LVL178:
 1290 0010 10BD     		pop	{r4, pc}
 1291              		.cfi_endproc
 1292              	.LFE40:
 1293              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 1294              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 56


 1295              		.align	1
 1296              		.global	uxQueueSpacesAvailable
 1297              		.code	16
 1298              		.thumb_func
 1299              		.type	uxQueueSpacesAvailable, %function
 1300              	uxQueueSpacesAvailable:
 1301              	.LFB41:
1344:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
 1302              		.loc 1 1344 0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306              	.LVL179:
 1307 0000 70B5     		push	{r4, r5, r6, lr}
 1308              		.cfi_def_cfa_offset 16
 1309              		.cfi_offset 4, -16
 1310              		.cfi_offset 5, -12
 1311              		.cfi_offset 6, -8
 1312              		.cfi_offset 14, -4
1344:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
 1313              		.loc 1 1344 0
 1314 0002 0500     		movs	r5, r0
 1315              	.LVL180:
1351:freertos\src/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 1316              		.loc 1 1351 0
 1317 0004 FFF7FEFF 		bl	vPortEnterCritical
 1318              	.LVL181:
1352:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
 1319              		.loc 1 1352 0
 1320 0008 AC6B     		ldr	r4, [r5, #56]
 1321 000a EB6B     		ldr	r3, [r5, #60]
1356:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1322              		.loc 1 1356 0
 1323              		@ sp needed
1352:freertos\src/queue.c **** 	taskEXIT_CRITICAL();
 1324              		.loc 1 1352 0
 1325 000c 1C1B     		subs	r4, r3, r4
 1326              	.LVL182:
1353:freertos\src/queue.c **** 
 1327              		.loc 1 1353 0
 1328 000e FFF7FEFF 		bl	vPortExitCritical
 1329              	.LVL183:
1356:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1330              		.loc 1 1356 0
 1331 0012 2000     		movs	r0, r4
 1332              	.LVL184:
 1333              	.LVL185:
 1334 0014 70BD     		pop	{r4, r5, r6, pc}
 1335              		.cfi_endproc
 1336              	.LFE41:
 1337              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 1338              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1339              		.align	1
 1340              		.global	uxQueueMessagesWaitingFromISR
 1341              		.code	16
 1342              		.thumb_func
 1343              		.type	uxQueueMessagesWaitingFromISR, %function
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 57


 1344              	uxQueueMessagesWaitingFromISR:
 1345              	.LFB42:
1360:freertos\src/queue.c **** unsigned portBASE_TYPE uxReturn;
 1346              		.loc 1 1360 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351              	.LVL186:
1365:freertos\src/queue.c **** 
 1352              		.loc 1 1365 0
 1353 0000 806B     		ldr	r0, [r0, #56]
 1354              	.LVL187:
1368:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1355              		.loc 1 1368 0
 1356              		@ sp needed
 1357 0002 7047     		bx	lr
 1358              		.cfi_endproc
 1359              	.LFE42:
 1360              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 1361              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 1362              		.align	1
 1363              		.global	xQueueIsQueueEmptyFromISR
 1364              		.code	16
 1365              		.thumb_func
 1366              		.type	xQueueIsQueueEmptyFromISR, %function
 1367              	xQueueIsQueueEmptyFromISR:
 1368              	.LFB48:
1603:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
 1369              		.loc 1 1603 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 0
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373              		@ link register save eliminated.
 1374              	.LVL188:
1607:freertos\src/queue.c **** 	{
 1375              		.loc 1 1607 0
 1376 0000 806B     		ldr	r0, [r0, #56]
 1377              	.LVL189:
1617:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1378              		.loc 1 1617 0
 1379              		@ sp needed
1616:freertos\src/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 1380              		.loc 1 1616 0
 1381 0002 4342     		rsbs	r3, r0, #0
 1382 0004 5841     		adcs	r0, r0, r3
 1383              	.LVL190:
1617:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1384              		.loc 1 1617 0
 1385 0006 7047     		bx	lr
 1386              		.cfi_endproc
 1387              	.LFE48:
 1388              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 1389              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 1390              		.align	1
 1391              		.global	xQueueIsQueueFullFromISR
 1392              		.code	16
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 58


 1393              		.thumb_func
 1394              		.type	xQueueIsQueueFullFromISR, %function
 1395              	xQueueIsQueueFullFromISR:
 1396              	.LFB50:
1636:freertos\src/queue.c **** 
1637:freertos\src/queue.c **** 	return xReturn;
1638:freertos\src/queue.c **** }
1639:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1640:freertos\src/queue.c **** 
1641:freertos\src/queue.c **** signed portBASE_TYPE xQueueIsQueueFullFromISR( const xQueueHandle xQueue )
1642:freertos\src/queue.c **** {
 1397              		.loc 1 1642 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
 1402              	.LVL191:
1643:freertos\src/queue.c **** signed portBASE_TYPE xReturn;
1644:freertos\src/queue.c **** 
1645:freertos\src/queue.c **** 	configASSERT( xQueue );
1646:freertos\src/queue.c **** 	if( ( ( xQUEUE * ) xQueue )->uxMessagesWaiting == ( ( xQUEUE * ) xQueue )->uxLength )
1647:freertos\src/queue.c **** 	{
1648:freertos\src/queue.c **** 		xReturn = pdTRUE;
1649:freertos\src/queue.c **** 	}
1650:freertos\src/queue.c **** 	else
1651:freertos\src/queue.c **** 	{
1652:freertos\src/queue.c **** 		xReturn = pdFALSE;
1653:freertos\src/queue.c **** 	}
1654:freertos\src/queue.c **** 
1655:freertos\src/queue.c **** 	return xReturn;
 1403              		.loc 1 1655 0
 1404 0000 C36B     		ldr	r3, [r0, #60]
1646:freertos\src/queue.c **** 	{
 1405              		.loc 1 1646 0
 1406 0002 826B     		ldr	r2, [r0, #56]
 1407              	.LVL192:
1656:freertos\src/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 1408              		.loc 1 1656 0
 1409              		@ sp needed
1655:freertos\src/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 1410              		.loc 1 1655 0
 1411 0004 981A     		subs	r0, r3, r2
 1412              	.LVL193:
 1413 0006 4342     		rsbs	r3, r0, #0
 1414 0008 5841     		adcs	r0, r0, r3
 1415              	.LVL194:
 1416              		.loc 1 1656 0
 1417 000a 7047     		bx	lr
 1418              		.cfi_endproc
 1419              	.LFE50:
 1420              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 1421              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 1422              		.align	1
 1423              		.global	vQueueAddToRegistry
 1424              		.code	16
 1425              		.thumb_func
 1426              		.type	vQueueAddToRegistry, %function
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 59


 1427              	vQueueAddToRegistry:
 1428              	.LFB51:
1657:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1658:freertos\src/queue.c **** 
1659:freertos\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1660:freertos\src/queue.c **** 
1661:freertos\src/queue.c **** 	signed portBASE_TYPE xQueueCRSend( xQueueHandle xQueue, const void *pvItemToQueue, portTickType xT
1662:freertos\src/queue.c **** 	{
1663:freertos\src/queue.c **** 	signed portBASE_TYPE xReturn;
1664:freertos\src/queue.c **** 	xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1665:freertos\src/queue.c **** 
1666:freertos\src/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
1667:freertos\src/queue.c **** 		is required to prevent an interrupt removing something from the queue
1668:freertos\src/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
1669:freertos\src/queue.c **** 		portDISABLE_INTERRUPTS();
1670:freertos\src/queue.c **** 		{
1671:freertos\src/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
1672:freertos\src/queue.c **** 			{
1673:freertos\src/queue.c **** 				/* The queue is full - do we want to block or just leave without
1674:freertos\src/queue.c **** 				posting? */
1675:freertos\src/queue.c **** 				if( xTicksToWait > ( portTickType ) 0 )
1676:freertos\src/queue.c **** 				{
1677:freertos\src/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
1678:freertos\src/queue.c **** 					return indicating that we need to block. */
1679:freertos\src/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
1680:freertos\src/queue.c **** 					portENABLE_INTERRUPTS();
1681:freertos\src/queue.c **** 					return errQUEUE_BLOCKED;
1682:freertos\src/queue.c **** 				}
1683:freertos\src/queue.c **** 				else
1684:freertos\src/queue.c **** 				{
1685:freertos\src/queue.c **** 					portENABLE_INTERRUPTS();
1686:freertos\src/queue.c **** 					return errQUEUE_FULL;
1687:freertos\src/queue.c **** 				}
1688:freertos\src/queue.c **** 			}
1689:freertos\src/queue.c **** 		}
1690:freertos\src/queue.c **** 		portENABLE_INTERRUPTS();
1691:freertos\src/queue.c **** 
1692:freertos\src/queue.c **** 		portDISABLE_INTERRUPTS();
1693:freertos\src/queue.c **** 		{
1694:freertos\src/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
1695:freertos\src/queue.c **** 			{
1696:freertos\src/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
1697:freertos\src/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
1698:freertos\src/queue.c **** 				xReturn = pdPASS;
1699:freertos\src/queue.c **** 
1700:freertos\src/queue.c **** 				/* Were any co-routines waiting for data to become available? */
1701:freertos\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1702:freertos\src/queue.c **** 				{
1703:freertos\src/queue.c **** 					/* In this instance the co-routine could be placed directly
1704:freertos\src/queue.c **** 					into the ready list as we are within a critical section.
1705:freertos\src/queue.c **** 					Instead the same pending ready list mechanism is used as if
1706:freertos\src/queue.c **** 					the event were caused from within an interrupt. */
1707:freertos\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1708:freertos\src/queue.c **** 					{
1709:freertos\src/queue.c **** 						/* The co-routine waiting has a higher priority so record
1710:freertos\src/queue.c **** 						that a yield might be appropriate. */
1711:freertos\src/queue.c **** 						xReturn = errQUEUE_YIELD;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 60


1712:freertos\src/queue.c **** 					}
1713:freertos\src/queue.c **** 				}
1714:freertos\src/queue.c **** 			}
1715:freertos\src/queue.c **** 			else
1716:freertos\src/queue.c **** 			{
1717:freertos\src/queue.c **** 				xReturn = errQUEUE_FULL;
1718:freertos\src/queue.c **** 			}
1719:freertos\src/queue.c **** 		}
1720:freertos\src/queue.c **** 		portENABLE_INTERRUPTS();
1721:freertos\src/queue.c **** 
1722:freertos\src/queue.c **** 		return xReturn;
1723:freertos\src/queue.c **** 	}
1724:freertos\src/queue.c **** 
1725:freertos\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
1726:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1727:freertos\src/queue.c **** 
1728:freertos\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1729:freertos\src/queue.c **** 
1730:freertos\src/queue.c **** 	signed portBASE_TYPE xQueueCRReceive( xQueueHandle xQueue, void *pvBuffer, portTickType xTicksToWa
1731:freertos\src/queue.c **** 	{
1732:freertos\src/queue.c **** 	signed portBASE_TYPE xReturn;
1733:freertos\src/queue.c **** 	xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1734:freertos\src/queue.c **** 
1735:freertos\src/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
1736:freertos\src/queue.c **** 		is required to prevent an interrupt adding something to the queue
1737:freertos\src/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
1738:freertos\src/queue.c **** 		portDISABLE_INTERRUPTS();
1739:freertos\src/queue.c **** 		{
1740:freertos\src/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 )
1741:freertos\src/queue.c **** 			{
1742:freertos\src/queue.c **** 				/* There are no messages in the queue, do we want to block or just
1743:freertos\src/queue.c **** 				leave with nothing? */
1744:freertos\src/queue.c **** 				if( xTicksToWait > ( portTickType ) 0 )
1745:freertos\src/queue.c **** 				{
1746:freertos\src/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
1747:freertos\src/queue.c **** 					indicating that we need to block. */
1748:freertos\src/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
1749:freertos\src/queue.c **** 					portENABLE_INTERRUPTS();
1750:freertos\src/queue.c **** 					return errQUEUE_BLOCKED;
1751:freertos\src/queue.c **** 				}
1752:freertos\src/queue.c **** 				else
1753:freertos\src/queue.c **** 				{
1754:freertos\src/queue.c **** 					portENABLE_INTERRUPTS();
1755:freertos\src/queue.c **** 					return errQUEUE_FULL;
1756:freertos\src/queue.c **** 				}
1757:freertos\src/queue.c **** 			}
1758:freertos\src/queue.c **** 		}
1759:freertos\src/queue.c **** 		portENABLE_INTERRUPTS();
1760:freertos\src/queue.c **** 
1761:freertos\src/queue.c **** 		portDISABLE_INTERRUPTS();
1762:freertos\src/queue.c **** 		{
1763:freertos\src/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
1764:freertos\src/queue.c **** 			{
1765:freertos\src/queue.c **** 				/* Data is available from the queue. */
1766:freertos\src/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1767:freertos\src/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
1768:freertos\src/queue.c **** 				{
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 61


1769:freertos\src/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
1770:freertos\src/queue.c **** 				}
1771:freertos\src/queue.c **** 				--( pxQueue->uxMessagesWaiting );
1772:freertos\src/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
1773:freertos\src/queue.c **** 
1774:freertos\src/queue.c **** 				xReturn = pdPASS;
1775:freertos\src/queue.c **** 
1776:freertos\src/queue.c **** 				/* Were any co-routines waiting for space to become available? */
1777:freertos\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1778:freertos\src/queue.c **** 				{
1779:freertos\src/queue.c **** 					/* In this instance the co-routine could be placed directly
1780:freertos\src/queue.c **** 					into the ready list as we are within a critical section.
1781:freertos\src/queue.c **** 					Instead the same pending ready list mechanism is used as if
1782:freertos\src/queue.c **** 					the event were caused from within an interrupt. */
1783:freertos\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1784:freertos\src/queue.c **** 					{
1785:freertos\src/queue.c **** 						xReturn = errQUEUE_YIELD;
1786:freertos\src/queue.c **** 					}
1787:freertos\src/queue.c **** 				}
1788:freertos\src/queue.c **** 			}
1789:freertos\src/queue.c **** 			else
1790:freertos\src/queue.c **** 			{
1791:freertos\src/queue.c **** 				xReturn = pdFAIL;
1792:freertos\src/queue.c **** 			}
1793:freertos\src/queue.c **** 		}
1794:freertos\src/queue.c **** 		portENABLE_INTERRUPTS();
1795:freertos\src/queue.c **** 
1796:freertos\src/queue.c **** 		return xReturn;
1797:freertos\src/queue.c **** 	}
1798:freertos\src/queue.c **** 
1799:freertos\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
1800:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1801:freertos\src/queue.c **** 
1802:freertos\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1803:freertos\src/queue.c **** 
1804:freertos\src/queue.c **** 	signed portBASE_TYPE xQueueCRSendFromISR( xQueueHandle xQueue, const void *pvItemToQueue, signed p
1805:freertos\src/queue.c **** 	{
1806:freertos\src/queue.c **** 	xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1807:freertos\src/queue.c **** 
1808:freertos\src/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
1809:freertos\src/queue.c **** 		exit without doing anything. */
1810:freertos\src/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
1811:freertos\src/queue.c **** 		{
1812:freertos\src/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
1813:freertos\src/queue.c **** 
1814:freertos\src/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
1815:freertos\src/queue.c **** 			co-routine has not already been woken. */
1816:freertos\src/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
1817:freertos\src/queue.c **** 			{
1818:freertos\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1819:freertos\src/queue.c **** 				{
1820:freertos\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1821:freertos\src/queue.c **** 					{
1822:freertos\src/queue.c **** 						return pdTRUE;
1823:freertos\src/queue.c **** 					}
1824:freertos\src/queue.c **** 				}
1825:freertos\src/queue.c **** 			}
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 62


1826:freertos\src/queue.c **** 		}
1827:freertos\src/queue.c **** 
1828:freertos\src/queue.c **** 		return xCoRoutinePreviouslyWoken;
1829:freertos\src/queue.c **** 	}
1830:freertos\src/queue.c **** 
1831:freertos\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
1832:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1833:freertos\src/queue.c **** 
1834:freertos\src/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1835:freertos\src/queue.c **** 
1836:freertos\src/queue.c **** 	signed portBASE_TYPE xQueueCRReceiveFromISR( xQueueHandle xQueue, void *pvBuffer, signed portBASE_
1837:freertos\src/queue.c **** 	{
1838:freertos\src/queue.c **** 	signed portBASE_TYPE xReturn;
1839:freertos\src/queue.c **** 	xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
1840:freertos\src/queue.c **** 
1841:freertos\src/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
1842:freertos\src/queue.c **** 		not then just leave without doing anything. */
1843:freertos\src/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
1844:freertos\src/queue.c **** 		{
1845:freertos\src/queue.c **** 			/* Copy the data from the queue. */
1846:freertos\src/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1847:freertos\src/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
1848:freertos\src/queue.c **** 			{
1849:freertos\src/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
1850:freertos\src/queue.c **** 			}
1851:freertos\src/queue.c **** 			--( pxQueue->uxMessagesWaiting );
1852:freertos\src/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
1853:freertos\src/queue.c **** 
1854:freertos\src/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
1855:freertos\src/queue.c **** 			{
1856:freertos\src/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1857:freertos\src/queue.c **** 				{
1858:freertos\src/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1859:freertos\src/queue.c **** 					{
1860:freertos\src/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
1861:freertos\src/queue.c **** 					}
1862:freertos\src/queue.c **** 				}
1863:freertos\src/queue.c **** 			}
1864:freertos\src/queue.c **** 
1865:freertos\src/queue.c **** 			xReturn = pdPASS;
1866:freertos\src/queue.c **** 		}
1867:freertos\src/queue.c **** 		else
1868:freertos\src/queue.c **** 		{
1869:freertos\src/queue.c **** 			xReturn = pdFAIL;
1870:freertos\src/queue.c **** 		}
1871:freertos\src/queue.c **** 
1872:freertos\src/queue.c **** 		return xReturn;
1873:freertos\src/queue.c **** 	}
1874:freertos\src/queue.c **** 
1875:freertos\src/queue.c **** #endif /* configUSE_CO_ROUTINES */
1876:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1877:freertos\src/queue.c **** 
1878:freertos\src/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
1879:freertos\src/queue.c **** 
1880:freertos\src/queue.c **** 	void vQueueAddToRegistry( xQueueHandle xQueue, signed char *pcQueueName )
1881:freertos\src/queue.c **** 	{
 1429              		.loc 1 1881 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 63


 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              	.LVL195:
1882:freertos\src/queue.c **** 	unsigned portBASE_TYPE ux;
1883:freertos\src/queue.c **** 
1884:freertos\src/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
1885:freertos\src/queue.c **** 		a free slot. */
1886:freertos\src/queue.c **** 		for( ux = ( unsigned portBASE_TYPE ) 0U; ux < ( unsigned portBASE_TYPE ) configQUEUE_REGISTRY_SIZ
 1434              		.loc 1 1886 0
 1435 0000 0023     		movs	r3, #0
1881:freertos\src/queue.c **** 	unsigned portBASE_TYPE ux;
 1436              		.loc 1 1881 0
 1437 0002 70B5     		push	{r4, r5, r6, lr}
 1438              		.cfi_def_cfa_offset 16
 1439              		.cfi_offset 4, -16
 1440              		.cfi_offset 5, -12
 1441              		.cfi_offset 6, -8
 1442              		.cfi_offset 14, -4
1887:freertos\src/queue.c **** 		{
1888:freertos\src/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 1443              		.loc 1 1888 0
 1444 0004 064A     		ldr	r2, .L137
 1445              	.LVL196:
 1446              	.L135:
 1447 0006 DD00     		lsls	r5, r3, #3
 1448 0008 AC18     		adds	r4, r5, r2
 1449 000a 2668     		ldr	r6, [r4]
 1450 000c 002E     		cmp	r6, #0
 1451 000e 02D1     		bne	.L133
1889:freertos\src/queue.c **** 			{
1890:freertos\src/queue.c **** 				/* Store the information on this queue. */
1891:freertos\src/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 1452              		.loc 1 1891 0
 1453 0010 A950     		str	r1, [r5, r2]
1892:freertos\src/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 1454              		.loc 1 1892 0
 1455 0012 6060     		str	r0, [r4, #4]
1893:freertos\src/queue.c **** 				break;
 1456              		.loc 1 1893 0
 1457 0014 02E0     		b	.L132
 1458              	.L133:
1886:freertos\src/queue.c **** 		{
 1459              		.loc 1 1886 0 discriminator 2
 1460 0016 0133     		adds	r3, r3, #1
 1461              	.LVL197:
 1462 0018 0A2B     		cmp	r3, #10
 1463 001a F4D1     		bne	.L135
 1464              	.L132:
1894:freertos\src/queue.c **** 			}
1895:freertos\src/queue.c **** 		}
1896:freertos\src/queue.c **** 	}
 1465              		.loc 1 1896 0
 1466              		@ sp needed
 1467 001c 70BD     		pop	{r4, r5, r6, pc}
 1468              	.L138:
 1469 001e C046     		.align	2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 64


 1470              	.L137:
 1471 0020 00000000 		.word	xQueueRegistry
 1472              		.cfi_endproc
 1473              	.LFE51:
 1474              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 1475              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 1476              		.align	1
 1477              		.global	vQueueUnregisterQueue
 1478              		.code	16
 1479              		.thumb_func
 1480              		.type	vQueueUnregisterQueue, %function
 1481              	vQueueUnregisterQueue:
 1482              	.LFB52:
1897:freertos\src/queue.c **** 
1898:freertos\src/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
1899:freertos\src/queue.c **** /*-----------------------------------------------------------*/
1900:freertos\src/queue.c **** 
1901:freertos\src/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
1902:freertos\src/queue.c **** 
1903:freertos\src/queue.c **** 	void vQueueUnregisterQueue( xQueueHandle xQueue )
1904:freertos\src/queue.c **** 	{
 1483              		.loc 1 1904 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              	.LVL198:
1905:freertos\src/queue.c **** 	unsigned portBASE_TYPE ux;
1906:freertos\src/queue.c **** 
1907:freertos\src/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
1908:freertos\src/queue.c **** 		registry. */
1909:freertos\src/queue.c **** 		for( ux = ( unsigned portBASE_TYPE ) 0U; ux < ( unsigned portBASE_TYPE ) configQUEUE_REGISTRY_SIZ
 1488              		.loc 1 1909 0
 1489 0000 0023     		movs	r3, #0
1904:freertos\src/queue.c **** 	unsigned portBASE_TYPE ux;
 1490              		.loc 1 1904 0
 1491 0002 10B5     		push	{r4, lr}
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 4, -8
 1494              		.cfi_offset 14, -4
1910:freertos\src/queue.c **** 		{
1911:freertos\src/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 1495              		.loc 1 1911 0
 1496 0004 064A     		ldr	r2, .L144
 1497              	.LVL199:
 1498              	.L142:
 1499 0006 D900     		lsls	r1, r3, #3
 1500 0008 8C18     		adds	r4, r1, r2
 1501 000a 6468     		ldr	r4, [r4, #4]
 1502 000c 8442     		cmp	r4, r0
 1503 000e 02D1     		bne	.L140
1912:freertos\src/queue.c **** 			{
1913:freertos\src/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
1914:freertos\src/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 1504              		.loc 1 1914 0
 1505 0010 0023     		movs	r3, #0
 1506              	.LVL200:
 1507 0012 8B50     		str	r3, [r1, r2]
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 65


1915:freertos\src/queue.c **** 				break;
 1508              		.loc 1 1915 0
 1509 0014 02E0     		b	.L139
 1510              	.LVL201:
 1511              	.L140:
1909:freertos\src/queue.c **** 		{
 1512              		.loc 1 1909 0 discriminator 2
 1513 0016 0133     		adds	r3, r3, #1
 1514              	.LVL202:
 1515 0018 0A2B     		cmp	r3, #10
 1516 001a F4D1     		bne	.L142
 1517              	.LVL203:
 1518              	.L139:
1916:freertos\src/queue.c **** 			}
1917:freertos\src/queue.c **** 		}
1918:freertos\src/queue.c **** 
1919:freertos\src/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 1519              		.loc 1 1919 0
 1520              		@ sp needed
 1521 001c 10BD     		pop	{r4, pc}
 1522              	.L145:
 1523 001e C046     		.align	2
 1524              	.L144:
 1525 0020 00000000 		.word	xQueueRegistry
 1526              		.cfi_endproc
 1527              	.LFE52:
 1528              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 1529              		.section	.text.vQueueDelete,"ax",%progbits
 1530              		.align	1
 1531              		.global	vQueueDelete
 1532              		.code	16
 1533              		.thumb_func
 1534              		.type	vQueueDelete, %function
 1535              	vQueueDelete:
 1536              	.LFB43:
1372:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 1537              		.loc 1 1372 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 0, uses_anonymous_args = 0
 1541              	.LVL204:
 1542 0000 10B5     		push	{r4, lr}
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 4, -8
 1545              		.cfi_offset 14, -4
1372:freertos\src/queue.c **** xQUEUE * const pxQueue = ( xQUEUE * ) xQueue;
 1546              		.loc 1 1372 0
 1547 0002 0400     		movs	r4, r0
1380:freertos\src/queue.c **** 	}
 1548              		.loc 1 1380 0
 1549 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 1550              	.LVL205:
1383:freertos\src/queue.c **** 	vPortFree( pxQueue );
 1551              		.loc 1 1383 0
 1552 0008 2068     		ldr	r0, [r4]
 1553 000a FFF7FEFF 		bl	vPortFree
 1554              	.LVL206:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 66


1384:freertos\src/queue.c **** }
 1555              		.loc 1 1384 0
 1556 000e 2000     		movs	r0, r4
 1557 0010 FFF7FEFF 		bl	vPortFree
 1558              	.LVL207:
1385:freertos\src/queue.c **** /*-----------------------------------------------------------*/
 1559              		.loc 1 1385 0
 1560              		@ sp needed
 1561              	.LVL208:
 1562 0014 10BD     		pop	{r4, pc}
 1563              		.cfi_endproc
 1564              	.LFE43:
 1565              		.size	vQueueDelete, .-vQueueDelete
 1566              		.comm	xQueueRegistry,80,4
 1567              		.text
 1568              	.Letext0:
 1569              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1570              		.file 3 ".\\freertos\\include/portmacro.h"
 1571              		.file 4 ".\\freertos\\include/list.h"
 1572              		.file 5 ".\\freertos\\include/task.h"
 1573              		.file 6 ".\\freertos\\include/queue.h"
 1574              		.file 7 ".\\freertos\\include/portable.h"
 1575              		.section	.debug_info,"",%progbits
 1576              	.Ldebug_info0:
 1577 0000 F10F0000 		.4byte	0xff1
 1578 0004 0400     		.2byte	0x4
 1579 0006 00000000 		.4byte	.Ldebug_abbrev0
 1580 000a 04       		.byte	0x4
 1581 000b 01       		.uleb128 0x1
 1582 000c 8A030000 		.4byte	.LASF111
 1583 0010 0C       		.byte	0xc
 1584 0011 F6000000 		.4byte	.LASF112
 1585 0015 FD020000 		.4byte	.LASF113
 1586 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1587 001d 00000000 		.4byte	0
 1588 0021 00000000 		.4byte	.Ldebug_line0
 1589 0025 02       		.uleb128 0x2
 1590 0026 5E050000 		.4byte	.LASF13
 1591 002a 02       		.byte	0x2
 1592 002b D8       		.byte	0xd8
 1593 002c 30000000 		.4byte	0x30
 1594 0030 03       		.uleb128 0x3
 1595 0031 04       		.byte	0x4
 1596 0032 07       		.byte	0x7
 1597 0033 39040000 		.4byte	.LASF0
 1598 0037 04       		.uleb128 0x4
 1599 0038 04       		.byte	0x4
 1600 0039 05       		.byte	0x5
 1601 003a 696E7400 		.ascii	"int\000"
 1602 003e 03       		.uleb128 0x3
 1603 003f 01       		.byte	0x1
 1604 0040 06       		.byte	0x6
 1605 0041 38030000 		.4byte	.LASF1
 1606 0045 03       		.uleb128 0x3
 1607 0046 01       		.byte	0x1
 1608 0047 08       		.byte	0x8
 1609 0048 D0020000 		.4byte	.LASF2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 67


 1610 004c 03       		.uleb128 0x3
 1611 004d 02       		.byte	0x2
 1612 004e 05       		.byte	0x5
 1613 004f C0000000 		.4byte	.LASF3
 1614 0053 03       		.uleb128 0x3
 1615 0054 02       		.byte	0x2
 1616 0055 07       		.byte	0x7
 1617 0056 BF040000 		.4byte	.LASF4
 1618 005a 03       		.uleb128 0x3
 1619 005b 04       		.byte	0x4
 1620 005c 05       		.byte	0x5
 1621 005d 04020000 		.4byte	.LASF5
 1622 0061 03       		.uleb128 0x3
 1623 0062 04       		.byte	0x4
 1624 0063 07       		.byte	0x7
 1625 0064 B0050000 		.4byte	.LASF6
 1626 0068 03       		.uleb128 0x3
 1627 0069 08       		.byte	0x8
 1628 006a 05       		.byte	0x5
 1629 006b C8010000 		.4byte	.LASF7
 1630 006f 03       		.uleb128 0x3
 1631 0070 08       		.byte	0x8
 1632 0071 07       		.byte	0x7
 1633 0072 59030000 		.4byte	.LASF8
 1634 0076 03       		.uleb128 0x3
 1635 0077 04       		.byte	0x4
 1636 0078 07       		.byte	0x7
 1637 0079 3A020000 		.4byte	.LASF9
 1638 007d 05       		.uleb128 0x5
 1639 007e 04       		.byte	0x4
 1640 007f 03       		.uleb128 0x3
 1641 0080 01       		.byte	0x1
 1642 0081 08       		.byte	0x8
 1643 0082 F6010000 		.4byte	.LASF10
 1644 0086 06       		.uleb128 0x6
 1645 0087 04       		.byte	0x4
 1646 0088 8C000000 		.4byte	0x8c
 1647 008c 07       		.uleb128 0x7
 1648 008d 03       		.uleb128 0x3
 1649 008e 04       		.byte	0x4
 1650 008f 04       		.byte	0x4
 1651 0090 A6010000 		.4byte	.LASF11
 1652 0094 03       		.uleb128 0x3
 1653 0095 08       		.byte	0x8
 1654 0096 04       		.byte	0x4
 1655 0097 C2050000 		.4byte	.LASF12
 1656 009b 02       		.uleb128 0x2
 1657 009c 4D000000 		.4byte	.LASF14
 1658 00a0 03       		.byte	0x3
 1659 00a1 61       		.byte	0x61
 1660 00a2 61000000 		.4byte	0x61
 1661 00a6 08       		.uleb128 0x8
 1662 00a7 97020000 		.4byte	.LASF21
 1663 00ab 14       		.byte	0x14
 1664 00ac 04       		.byte	0x4
 1665 00ad 88       		.byte	0x88
 1666 00ae EF000000 		.4byte	0xef
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 68


 1667 00b2 09       		.uleb128 0x9
 1668 00b3 5C020000 		.4byte	.LASF15
 1669 00b7 04       		.byte	0x4
 1670 00b8 8A       		.byte	0x8a
 1671 00b9 9B000000 		.4byte	0x9b
 1672 00bd 00       		.byte	0
 1673 00be 09       		.uleb128 0x9
 1674 00bf 28050000 		.4byte	.LASF16
 1675 00c3 04       		.byte	0x4
 1676 00c4 8B       		.byte	0x8b
 1677 00c5 EF000000 		.4byte	0xef
 1678 00c9 04       		.byte	0x4
 1679 00ca 09       		.uleb128 0x9
 1680 00cb 5A000000 		.4byte	.LASF17
 1681 00cf 04       		.byte	0x4
 1682 00d0 8C       		.byte	0x8c
 1683 00d1 EF000000 		.4byte	0xef
 1684 00d5 08       		.byte	0x8
 1685 00d6 09       		.uleb128 0x9
 1686 00d7 CA000000 		.4byte	.LASF18
 1687 00db 04       		.byte	0x4
 1688 00dc 8D       		.byte	0x8d
 1689 00dd 7D000000 		.4byte	0x7d
 1690 00e1 0C       		.byte	0xc
 1691 00e2 09       		.uleb128 0x9
 1692 00e3 13000000 		.4byte	.LASF19
 1693 00e7 04       		.byte	0x4
 1694 00e8 8E       		.byte	0x8e
 1695 00e9 7D000000 		.4byte	0x7d
 1696 00ed 10       		.byte	0x10
 1697 00ee 00       		.byte	0
 1698 00ef 06       		.uleb128 0x6
 1699 00f0 04       		.byte	0x4
 1700 00f1 A6000000 		.4byte	0xa6
 1701 00f5 02       		.uleb128 0x2
 1702 00f6 1F000000 		.4byte	.LASF20
 1703 00fa 04       		.byte	0x4
 1704 00fb 90       		.byte	0x90
 1705 00fc A6000000 		.4byte	0xa6
 1706 0100 08       		.uleb128 0x8
 1707 0101 24070000 		.4byte	.LASF22
 1708 0105 0C       		.byte	0xc
 1709 0106 04       		.byte	0x4
 1710 0107 92       		.byte	0x92
 1711 0108 31010000 		.4byte	0x131
 1712 010c 09       		.uleb128 0x9
 1713 010d 5C020000 		.4byte	.LASF15
 1714 0111 04       		.byte	0x4
 1715 0112 94       		.byte	0x94
 1716 0113 9B000000 		.4byte	0x9b
 1717 0117 00       		.byte	0
 1718 0118 09       		.uleb128 0x9
 1719 0119 28050000 		.4byte	.LASF16
 1720 011d 04       		.byte	0x4
 1721 011e 95       		.byte	0x95
 1722 011f EF000000 		.4byte	0xef
 1723 0123 04       		.byte	0x4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 69


 1724 0124 09       		.uleb128 0x9
 1725 0125 5A000000 		.4byte	.LASF17
 1726 0129 04       		.byte	0x4
 1727 012a 96       		.byte	0x96
 1728 012b EF000000 		.4byte	0xef
 1729 012f 08       		.byte	0x8
 1730 0130 00       		.byte	0
 1731 0131 02       		.uleb128 0x2
 1732 0132 98010000 		.4byte	.LASF23
 1733 0136 04       		.byte	0x4
 1734 0137 98       		.byte	0x98
 1735 0138 00010000 		.4byte	0x100
 1736 013c 08       		.uleb128 0x8
 1737 013d 0D020000 		.4byte	.LASF24
 1738 0141 14       		.byte	0x14
 1739 0142 04       		.byte	0x4
 1740 0143 9D       		.byte	0x9d
 1741 0144 6D010000 		.4byte	0x16d
 1742 0148 09       		.uleb128 0x9
 1743 0149 E1050000 		.4byte	.LASF25
 1744 014d 04       		.byte	0x4
 1745 014e 9F       		.byte	0x9f
 1746 014f 61000000 		.4byte	0x61
 1747 0153 00       		.byte	0
 1748 0154 09       		.uleb128 0x9
 1749 0155 06070000 		.4byte	.LASF26
 1750 0159 04       		.byte	0x4
 1751 015a A0       		.byte	0xa0
 1752 015b 6D010000 		.4byte	0x16d
 1753 015f 04       		.byte	0x4
 1754 0160 09       		.uleb128 0x9
 1755 0161 2C060000 		.4byte	.LASF27
 1756 0165 04       		.byte	0x4
 1757 0166 A1       		.byte	0xa1
 1758 0167 31010000 		.4byte	0x131
 1759 016b 08       		.byte	0x8
 1760 016c 00       		.byte	0
 1761 016d 06       		.uleb128 0x6
 1762 016e 04       		.byte	0x4
 1763 016f F5000000 		.4byte	0xf5
 1764 0173 02       		.uleb128 0x2
 1765 0174 DE010000 		.4byte	.LASF28
 1766 0178 04       		.byte	0x4
 1767 0179 A2       		.byte	0xa2
 1768 017a 3C010000 		.4byte	0x13c
 1769 017e 08       		.uleb128 0x8
 1770 017f 29000000 		.4byte	.LASF29
 1771 0183 08       		.byte	0x8
 1772 0184 05       		.byte	0x5
 1773 0185 6F       		.byte	0x6f
 1774 0186 A3010000 		.4byte	0x1a3
 1775 018a 09       		.uleb128 0x9
 1776 018b EE020000 		.4byte	.LASF30
 1777 018f 05       		.byte	0x5
 1778 0190 71       		.byte	0x71
 1779 0191 5A000000 		.4byte	0x5a
 1780 0195 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 70


 1781 0196 09       		.uleb128 0x9
 1782 0197 DE020000 		.4byte	.LASF31
 1783 019b 05       		.byte	0x5
 1784 019c 72       		.byte	0x72
 1785 019d 9B000000 		.4byte	0x9b
 1786 01a1 04       		.byte	0x4
 1787 01a2 00       		.byte	0
 1788 01a3 02       		.uleb128 0x2
 1789 01a4 43020000 		.4byte	.LASF32
 1790 01a8 05       		.byte	0x5
 1791 01a9 73       		.byte	0x73
 1792 01aa 7E010000 		.4byte	0x17e
 1793 01ae 02       		.uleb128 0x2
 1794 01af 2D020000 		.4byte	.LASF33
 1795 01b3 06       		.byte	0x6
 1796 01b4 54       		.byte	0x54
 1797 01b5 7D000000 		.4byte	0x7d
 1798 01b9 0A       		.uleb128 0xa
 1799 01ba 04       		.byte	0x4
 1800 01bb 01       		.byte	0x1
 1801 01bc 84       		.byte	0x84
 1802 01bd D8010000 		.4byte	0x1d8
 1803 01c1 0B       		.uleb128 0xb
 1804 01c2 53050000 		.4byte	.LASF34
 1805 01c6 01       		.byte	0x1
 1806 01c7 86       		.byte	0x86
 1807 01c8 D8010000 		.4byte	0x1d8
 1808 01cc 0B       		.uleb128 0xb
 1809 01cd 63060000 		.4byte	.LASF35
 1810 01d1 01       		.byte	0x1
 1811 01d2 87       		.byte	0x87
 1812 01d3 61000000 		.4byte	0x61
 1813 01d7 00       		.byte	0
 1814 01d8 06       		.uleb128 0x6
 1815 01d9 04       		.byte	0x4
 1816 01da 3E000000 		.4byte	0x3e
 1817 01de 08       		.uleb128 0x8
 1818 01df 99040000 		.4byte	.LASF36
 1819 01e3 4C       		.byte	0x4c
 1820 01e4 01       		.byte	0x1
 1821 01e5 7D       		.byte	0x7d
 1822 01e6 6D020000 		.4byte	0x26d
 1823 01ea 09       		.uleb128 0x9
 1824 01eb B4010000 		.4byte	.LASF37
 1825 01ef 01       		.byte	0x1
 1826 01f0 7F       		.byte	0x7f
 1827 01f1 D8010000 		.4byte	0x1d8
 1828 01f5 00       		.byte	0
 1829 01f6 09       		.uleb128 0x9
 1830 01f7 7F010000 		.4byte	.LASF38
 1831 01fb 01       		.byte	0x1
 1832 01fc 80       		.byte	0x80
 1833 01fd D8010000 		.4byte	0x1d8
 1834 0201 04       		.byte	0x4
 1835 0202 09       		.uleb128 0x9
 1836 0203 1E050000 		.4byte	.LASF39
 1837 0207 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 71


 1838 0208 82       		.byte	0x82
 1839 0209 D8010000 		.4byte	0x1d8
 1840 020d 08       		.byte	0x8
 1841 020e 0C       		.uleb128 0xc
 1842 020f 7500     		.ascii	"u\000"
 1843 0211 01       		.byte	0x1
 1844 0212 88       		.byte	0x88
 1845 0213 B9010000 		.4byte	0x1b9
 1846 0217 0C       		.byte	0xc
 1847 0218 09       		.uleb128 0x9
 1848 0219 F2060000 		.4byte	.LASF40
 1849 021d 01       		.byte	0x1
 1850 021e 8A       		.byte	0x8a
 1851 021f 73010000 		.4byte	0x173
 1852 0223 10       		.byte	0x10
 1853 0224 09       		.uleb128 0x9
 1854 0225 67040000 		.4byte	.LASF41
 1855 0229 01       		.byte	0x1
 1856 022a 8B       		.byte	0x8b
 1857 022b 73010000 		.4byte	0x173
 1858 022f 24       		.byte	0x24
 1859 0230 09       		.uleb128 0x9
 1860 0231 09060000 		.4byte	.LASF42
 1861 0235 01       		.byte	0x1
 1862 0236 8D       		.byte	0x8d
 1863 0237 6D020000 		.4byte	0x26d
 1864 023b 38       		.byte	0x38
 1865 023c 09       		.uleb128 0x9
 1866 023d FB010000 		.4byte	.LASF43
 1867 0241 01       		.byte	0x1
 1868 0242 8E       		.byte	0x8e
 1869 0243 61000000 		.4byte	0x61
 1870 0247 3C       		.byte	0x3c
 1871 0248 09       		.uleb128 0x9
 1872 0249 8C020000 		.4byte	.LASF44
 1873 024d 01       		.byte	0x1
 1874 024e 8F       		.byte	0x8f
 1875 024f 61000000 		.4byte	0x61
 1876 0253 40       		.byte	0x40
 1877 0254 09       		.uleb128 0x9
 1878 0255 44060000 		.4byte	.LASF45
 1879 0259 01       		.byte	0x1
 1880 025a 91       		.byte	0x91
 1881 025b 72020000 		.4byte	0x272
 1882 025f 44       		.byte	0x44
 1883 0260 09       		.uleb128 0x9
 1884 0261 D6010000 		.4byte	.LASF46
 1885 0265 01       		.byte	0x1
 1886 0266 92       		.byte	0x92
 1887 0267 72020000 		.4byte	0x272
 1888 026b 48       		.byte	0x48
 1889 026c 00       		.byte	0
 1890 026d 0D       		.uleb128 0xd
 1891 026e 61000000 		.4byte	0x61
 1892 0272 0D       		.uleb128 0xd
 1893 0273 5A000000 		.4byte	0x5a
 1894 0277 02       		.uleb128 0x2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 72


 1895 0278 85020000 		.4byte	.LASF47
 1896 027c 01       		.byte	0x1
 1897 027d 9D       		.byte	0x9d
 1898 027e DE010000 		.4byte	0x1de
 1899 0282 08       		.uleb128 0x8
 1900 0283 84000000 		.4byte	.LASF48
 1901 0287 08       		.byte	0x8
 1902 0288 01       		.byte	0x1
 1903 0289 A9       		.byte	0xa9
 1904 028a A7020000 		.4byte	0x2a7
 1905 028e 09       		.uleb128 0x9
 1906 028f 65000000 		.4byte	.LASF49
 1907 0293 01       		.byte	0x1
 1908 0294 AB       		.byte	0xab
 1909 0295 D8010000 		.4byte	0x1d8
 1910 0299 00       		.byte	0
 1911 029a 09       		.uleb128 0x9
 1912 029b 01060000 		.4byte	.LASF50
 1913 029f 01       		.byte	0x1
 1914 02a0 AC       		.byte	0xac
 1915 02a1 AE010000 		.4byte	0x1ae
 1916 02a5 04       		.byte	0x4
 1917 02a6 00       		.byte	0
 1918 02a7 02       		.uleb128 0x2
 1919 02a8 54040000 		.4byte	.LASF51
 1920 02ac 01       		.byte	0x1
 1921 02ad AD       		.byte	0xad
 1922 02ae 82020000 		.4byte	0x282
 1923 02b2 0E       		.uleb128 0xe
 1924 02b3 71000000 		.4byte	.LASF55
 1925 02b7 01       		.byte	0x1
 1926 02b8 8A05     		.2byte	0x58a
 1927 02ba 00000000 		.4byte	.LFB44
 1928 02be 6E000000 		.4byte	.LFE44-.LFB44
 1929 02c2 01       		.uleb128 0x1
 1930 02c3 9C       		.byte	0x9c
 1931 02c4 14030000 		.4byte	0x314
 1932 02c8 0F       		.uleb128 0xf
 1933 02c9 AC010000 		.4byte	.LASF52
 1934 02cd 01       		.byte	0x1
 1935 02ce 8A05     		.2byte	0x58a
 1936 02d0 14030000 		.4byte	0x314
 1937 02d4 00000000 		.4byte	.LLST0
 1938 02d8 0F       		.uleb128 0xf
 1939 02d9 46040000 		.4byte	.LASF53
 1940 02dd 01       		.byte	0x1
 1941 02de 8A05     		.2byte	0x58a
 1942 02e0 86000000 		.4byte	0x86
 1943 02e4 58000000 		.4byte	.LLST1
 1944 02e8 0F       		.uleb128 0xf
 1945 02e9 98000000 		.4byte	.LASF54
 1946 02ed 01       		.byte	0x1
 1947 02ee 8A05     		.2byte	0x58a
 1948 02f0 5A000000 		.4byte	0x5a
 1949 02f4 AB000000 		.4byte	.LLST2
 1950 02f8 10       		.uleb128 0x10
 1951 02f9 18000000 		.4byte	.LVL4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 73


 1952 02fd 180F0000 		.4byte	0xf18
 1953 0301 10       		.uleb128 0x10
 1954 0302 26000000 		.4byte	.LVL7
 1955 0306 240F0000 		.4byte	0xf24
 1956 030a 10       		.uleb128 0x10
 1957 030b 40000000 		.4byte	.LVL10
 1958 030f 240F0000 		.4byte	0xf24
 1959 0313 00       		.byte	0
 1960 0314 06       		.uleb128 0x6
 1961 0315 04       		.byte	0x4
 1962 0316 77020000 		.4byte	0x277
 1963 031a 0E       		.uleb128 0xe
 1964 031b 44030000 		.4byte	.LASF56
 1965 031f 01       		.byte	0x1
 1966 0320 BC05     		.2byte	0x5bc
 1967 0322 00000000 		.4byte	.LFB45
 1968 0326 24000000 		.4byte	.LFE45-.LFB45
 1969 032a 01       		.uleb128 0x1
 1970 032b 9C       		.byte	0x9c
 1971 032c 5A030000 		.4byte	0x35a
 1972 0330 0F       		.uleb128 0xf
 1973 0331 AC010000 		.4byte	.LASF52
 1974 0335 01       		.byte	0x1
 1975 0336 BC05     		.2byte	0x5bc
 1976 0338 5A030000 		.4byte	0x35a
 1977 033c F0000000 		.4byte	.LLST3
 1978 0340 0F       		.uleb128 0xf
 1979 0341 90040000 		.4byte	.LASF57
 1980 0345 01       		.byte	0x1
 1981 0346 BC05     		.2byte	0x5bc
 1982 0348 5F030000 		.4byte	0x35f
 1983 034c 1C010000 		.4byte	.LLST4
 1984 0350 10       		.uleb128 0x10
 1985 0351 22000000 		.4byte	.LVL16
 1986 0355 240F0000 		.4byte	0xf24
 1987 0359 00       		.byte	0
 1988 035a 11       		.uleb128 0x11
 1989 035b 14030000 		.4byte	0x314
 1990 035f 11       		.uleb128 0x11
 1991 0360 7D000000 		.4byte	0x7d
 1992 0364 0E       		.uleb128 0xe
 1993 0365 A9040000 		.4byte	.LASF58
 1994 0369 01       		.byte	0x1
 1995 036a CA05     		.2byte	0x5ca
 1996 036c 00000000 		.4byte	.LFB46
 1997 0370 6A000000 		.4byte	.LFE46-.LFB46
 1998 0374 01       		.uleb128 0x1
 1999 0375 9C       		.byte	0x9c
 2000 0376 E9030000 		.4byte	0x3e9
 2001 037a 0F       		.uleb128 0xf
 2002 037b AC010000 		.4byte	.LASF52
 2003 037f 01       		.byte	0x1
 2004 0380 CA05     		.2byte	0x5ca
 2005 0382 14030000 		.4byte	0x314
 2006 0386 48010000 		.4byte	.LLST5
 2007 038a 10       		.uleb128 0x10
 2008 038b 08000000 		.4byte	.LVL18
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 74


 2009 038f 2D0F0000 		.4byte	0xf2d
 2010 0393 12       		.uleb128 0x12
 2011 0394 1C000000 		.4byte	.LVL19
 2012 0398 380F0000 		.4byte	0xf38
 2013 039c A7030000 		.4byte	0x3a7
 2014 03a0 13       		.uleb128 0x13
 2015 03a1 01       		.uleb128 0x1
 2016 03a2 50       		.byte	0x50
 2017 03a3 02       		.uleb128 0x2
 2018 03a4 74       		.byte	0x74
 2019 03a5 24       		.sleb128 36
 2020 03a6 00       		.byte	0
 2021 03a7 10       		.uleb128 0x10
 2022 03a8 24000000 		.4byte	.LVL20
 2023 03ac 440F0000 		.4byte	0xf44
 2024 03b0 10       		.uleb128 0x10
 2025 03b1 36000000 		.4byte	.LVL21
 2026 03b5 500F0000 		.4byte	0xf50
 2027 03b9 10       		.uleb128 0x10
 2028 03ba 3A000000 		.4byte	.LVL22
 2029 03be 2D0F0000 		.4byte	0xf2d
 2030 03c2 12       		.uleb128 0x12
 2031 03c3 4E000000 		.4byte	.LVL23
 2032 03c7 380F0000 		.4byte	0xf38
 2033 03cb D6030000 		.4byte	0x3d6
 2034 03cf 13       		.uleb128 0x13
 2035 03d0 01       		.uleb128 0x1
 2036 03d1 50       		.byte	0x50
 2037 03d2 02       		.uleb128 0x2
 2038 03d3 74       		.byte	0x74
 2039 03d4 10       		.sleb128 16
 2040 03d5 00       		.byte	0
 2041 03d6 10       		.uleb128 0x10
 2042 03d7 56000000 		.4byte	.LVL24
 2043 03db 440F0000 		.4byte	0xf44
 2044 03df 10       		.uleb128 0x10
 2045 03e0 68000000 		.4byte	.LVL25
 2046 03e4 500F0000 		.4byte	0xf50
 2047 03e8 00       		.byte	0
 2048 03e9 14       		.uleb128 0x14
 2049 03ea 00000000 		.4byte	.LASF61
 2050 03ee 01       		.byte	0x1
 2051 03ef F6       		.byte	0xf6
 2052 03f0 5A000000 		.4byte	0x5a
 2053 03f4 00000000 		.4byte	.LFB32
 2054 03f8 5E000000 		.4byte	.LFE32-.LFB32
 2055 03fc 01       		.uleb128 0x1
 2056 03fd 9C       		.byte	0x9c
 2057 03fe 87040000 		.4byte	0x487
 2058 0402 15       		.uleb128 0x15
 2059 0403 B8040000 		.4byte	.LASF59
 2060 0407 01       		.byte	0x1
 2061 0408 F6       		.byte	0xf6
 2062 0409 AE010000 		.4byte	0x1ae
 2063 040d 74010000 		.4byte	.LLST6
 2064 0411 15       		.uleb128 0x15
 2065 0412 BA060000 		.4byte	.LASF60
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 75


 2066 0416 01       		.byte	0x1
 2067 0417 F6       		.byte	0xf6
 2068 0418 5A000000 		.4byte	0x5a
 2069 041c A0010000 		.4byte	.LLST7
 2070 0420 16       		.uleb128 0x16
 2071 0421 AC010000 		.4byte	.LASF52
 2072 0425 01       		.byte	0x1
 2073 0426 F8       		.byte	0xf8
 2074 0427 5A030000 		.4byte	0x35a
 2075 042b CC010000 		.4byte	.LLST8
 2076 042f 10       		.uleb128 0x10
 2077 0430 0A000000 		.4byte	.LVL29
 2078 0434 2D0F0000 		.4byte	0xf2d
 2079 0438 12       		.uleb128 0x12
 2080 0439 3C000000 		.4byte	.LVL30
 2081 043d 380F0000 		.4byte	0xf38
 2082 0441 4C040000 		.4byte	0x44c
 2083 0445 13       		.uleb128 0x13
 2084 0446 01       		.uleb128 0x1
 2085 0447 50       		.byte	0x50
 2086 0448 02       		.uleb128 0x2
 2087 0449 74       		.byte	0x74
 2088 044a 10       		.sleb128 16
 2089 044b 00       		.byte	0
 2090 044c 10       		.uleb128 0x10
 2091 044d 44000000 		.4byte	.LVL31
 2092 0451 5B0F0000 		.4byte	0xf5b
 2093 0455 12       		.uleb128 0x12
 2094 0456 4E000000 		.4byte	.LVL32
 2095 045a 660F0000 		.4byte	0xf66
 2096 045e 69040000 		.4byte	0x469
 2097 0462 13       		.uleb128 0x13
 2098 0463 01       		.uleb128 0x1
 2099 0464 50       		.byte	0x50
 2100 0465 02       		.uleb128 0x2
 2101 0466 74       		.byte	0x74
 2102 0467 10       		.sleb128 16
 2103 0468 00       		.byte	0
 2104 0469 12       		.uleb128 0x12
 2105 046a 56000000 		.4byte	.LVL33
 2106 046e 660F0000 		.4byte	0xf66
 2107 0472 7D040000 		.4byte	0x47d
 2108 0476 13       		.uleb128 0x13
 2109 0477 01       		.uleb128 0x1
 2110 0478 50       		.byte	0x50
 2111 0479 02       		.uleb128 0x2
 2112 047a 74       		.byte	0x74
 2113 047b 24       		.sleb128 36
 2114 047c 00       		.byte	0
 2115 047d 10       		.uleb128 0x10
 2116 047e 5A000000 		.4byte	.LVL34
 2117 0482 500F0000 		.4byte	0xf50
 2118 0486 00       		.byte	0
 2119 0487 17       		.uleb128 0x17
 2120 0488 A2020000 		.4byte	.LASF62
 2121 048c 01       		.byte	0x1
 2122 048d 2301     		.2byte	0x123
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 76


 2123 048f AE010000 		.4byte	0x1ae
 2124 0493 00000000 		.4byte	.LFB33
 2125 0497 42000000 		.4byte	.LFE33-.LFB33
 2126 049b 01       		.uleb128 0x1
 2127 049c 9C       		.byte	0x9c
 2128 049d 58050000 		.4byte	0x558
 2129 04a1 0F       		.uleb128 0xf
 2130 04a2 D2040000 		.4byte	.LASF63
 2131 04a6 01       		.byte	0x1
 2132 04a7 2301     		.2byte	0x123
 2133 04a9 61000000 		.4byte	0x61
 2134 04ad F8010000 		.4byte	.LLST9
 2135 04b1 0F       		.uleb128 0xf
 2136 04b2 8C020000 		.4byte	.LASF44
 2137 04b6 01       		.byte	0x1
 2138 04b7 2301     		.2byte	0x123
 2139 04b9 61000000 		.4byte	0x61
 2140 04bd 3A020000 		.4byte	.LLST10
 2141 04c1 0F       		.uleb128 0xf
 2142 04c2 50020000 		.4byte	.LASF64
 2143 04c6 01       		.byte	0x1
 2144 04c7 2301     		.2byte	0x123
 2145 04c9 45000000 		.4byte	0x45
 2146 04cd 7C020000 		.4byte	.LLST11
 2147 04d1 18       		.uleb128 0x18
 2148 04d2 B6020000 		.4byte	.LASF65
 2149 04d6 01       		.byte	0x1
 2150 04d7 2501     		.2byte	0x125
 2151 04d9 14030000 		.4byte	0x314
 2152 04dd B6020000 		.4byte	.LLST12
 2153 04e1 18       		.uleb128 0x18
 2154 04e2 7E040000 		.4byte	.LASF66
 2155 04e6 01       		.byte	0x1
 2156 04e7 2601     		.2byte	0x126
 2157 04e9 25000000 		.4byte	0x25
 2158 04ed D4020000 		.4byte	.LLST13
 2159 04f1 18       		.uleb128 0x18
 2160 04f2 34070000 		.4byte	.LASF67
 2161 04f6 01       		.byte	0x1
 2162 04f7 2701     		.2byte	0x127
 2163 04f9 AE010000 		.4byte	0x1ae
 2164 04fd 0B030000 		.4byte	.LLST14
 2165 0501 12       		.uleb128 0x12
 2166 0502 14000000 		.4byte	.LVL41
 2167 0506 720F0000 		.4byte	0xf72
 2168 050a 15050000 		.4byte	0x515
 2169 050e 13       		.uleb128 0x13
 2170 050f 01       		.uleb128 0x1
 2171 0510 50       		.byte	0x50
 2172 0511 02       		.uleb128 0x2
 2173 0512 08       		.byte	0x8
 2174 0513 4C       		.byte	0x4c
 2175 0514 00       		.byte	0
 2176 0515 12       		.uleb128 0x12
 2177 0516 22000000 		.4byte	.LVL46
 2178 051a 720F0000 		.4byte	0xf72
 2179 051e 2E050000 		.4byte	0x52e
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 77


 2180 0522 13       		.uleb128 0x13
 2181 0523 01       		.uleb128 0x1
 2182 0524 50       		.byte	0x50
 2183 0525 07       		.uleb128 0x7
 2184 0526 76       		.byte	0x76
 2185 0527 00       		.sleb128 0
 2186 0528 77       		.byte	0x77
 2187 0529 00       		.sleb128 0
 2188 052a 1E       		.byte	0x1e
 2189 052b 23       		.byte	0x23
 2190 052c 01       		.uleb128 0x1
 2191 052d 00       		.byte	0
 2192 052e 12       		.uleb128 0x12
 2193 052f 34000000 		.4byte	.LVL47
 2194 0533 E9030000 		.4byte	0x3e9
 2195 0537 47050000 		.4byte	0x547
 2196 053b 13       		.uleb128 0x13
 2197 053c 01       		.uleb128 0x1
 2198 053d 50       		.byte	0x50
 2199 053e 02       		.uleb128 0x2
 2200 053f 74       		.byte	0x74
 2201 0540 00       		.sleb128 0
 2202 0541 13       		.uleb128 0x13
 2203 0542 01       		.uleb128 0x1
 2204 0543 51       		.byte	0x51
 2205 0544 01       		.uleb128 0x1
 2206 0545 31       		.byte	0x31
 2207 0546 00       		.byte	0
 2208 0547 19       		.uleb128 0x19
 2209 0548 3C000000 		.4byte	.LVL49
 2210 054c 7E0F0000 		.4byte	0xf7e
 2211 0550 13       		.uleb128 0x13
 2212 0551 01       		.uleb128 0x1
 2213 0552 50       		.byte	0x50
 2214 0553 02       		.uleb128 0x2
 2215 0554 74       		.byte	0x74
 2216 0555 00       		.sleb128 0
 2217 0556 00       		.byte	0
 2218 0557 00       		.byte	0
 2219 0558 1A       		.uleb128 0x1a
 2220 0559 70010000 		.4byte	.LASF77
 2221 055d 01       		.byte	0x1
 2222 055e 5406     		.2byte	0x654
 2223 0560 5A000000 		.4byte	0x5a
 2224 0564 01       		.byte	0x1
 2225 0565 82050000 		.4byte	0x582
 2226 0569 1B       		.uleb128 0x1b
 2227 056a AC010000 		.4byte	.LASF52
 2228 056e 01       		.byte	0x1
 2229 056f 5406     		.2byte	0x654
 2230 0571 82050000 		.4byte	0x582
 2231 0575 1C       		.uleb128 0x1c
 2232 0576 34070000 		.4byte	.LASF67
 2233 057a 01       		.byte	0x1
 2234 057b 5606     		.2byte	0x656
 2235 057d 5A000000 		.4byte	0x5a
 2236 0581 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 78


 2237 0582 06       		.uleb128 0x6
 2238 0583 04       		.byte	0x4
 2239 0584 88050000 		.4byte	0x588
 2240 0588 11       		.uleb128 0x11
 2241 0589 77020000 		.4byte	0x277
 2242 058d 17       		.uleb128 0x17
 2243 058e 86010000 		.4byte	.LASF68
 2244 0592 01       		.byte	0x1
 2245 0593 3402     		.2byte	0x234
 2246 0595 5A000000 		.4byte	0x5a
 2247 0599 00000000 		.4byte	.LFB35
 2248 059d DC000000 		.4byte	.LFE35-.LFB35
 2249 05a1 01       		.uleb128 0x1
 2250 05a2 9C       		.byte	0x9c
 2251 05a3 79070000 		.4byte	0x779
 2252 05a7 0F       		.uleb128 0xf
 2253 05a8 B8040000 		.4byte	.LASF59
 2254 05ac 01       		.byte	0x1
 2255 05ad 3402     		.2byte	0x234
 2256 05af AE010000 		.4byte	0x1ae
 2257 05b3 4C030000 		.4byte	.LLST15
 2258 05b7 0F       		.uleb128 0xf
 2259 05b8 46040000 		.4byte	.LASF53
 2260 05bc 01       		.byte	0x1
 2261 05bd 3402     		.2byte	0x234
 2262 05bf 79070000 		.4byte	0x779
 2263 05c3 78030000 		.4byte	.LLST16
 2264 05c7 0F       		.uleb128 0xf
 2265 05c8 BB010000 		.4byte	.LASF69
 2266 05cc 01       		.byte	0x1
 2267 05cd 3402     		.2byte	0x234
 2268 05cf 9B000000 		.4byte	0x9b
 2269 05d3 A3030000 		.4byte	.LLST17
 2270 05d7 0F       		.uleb128 0xf
 2271 05d8 C9050000 		.4byte	.LASF70
 2272 05dc 01       		.byte	0x1
 2273 05dd 3402     		.2byte	0x234
 2274 05df 5A000000 		.4byte	0x5a
 2275 05e3 DA030000 		.4byte	.LLST18
 2276 05e7 18       		.uleb128 0x18
 2277 05e8 8C050000 		.4byte	.LASF71
 2278 05ec 01       		.byte	0x1
 2279 05ed 3602     		.2byte	0x236
 2280 05ef 5A000000 		.4byte	0x5a
 2281 05f3 06040000 		.4byte	.LLST19
 2282 05f7 1D       		.uleb128 0x1d
 2283 05f8 0B010000 		.4byte	.LASF72
 2284 05fc 01       		.byte	0x1
 2285 05fd 3702     		.2byte	0x237
 2286 05ff A3010000 		.4byte	0x1a3
 2287 0603 02       		.uleb128 0x2
 2288 0604 91       		.byte	0x91
 2289 0605 60       		.sleb128 -32
 2290 0606 18       		.uleb128 0x18
 2291 0607 AC010000 		.4byte	.LASF52
 2292 060b 01       		.byte	0x1
 2293 060c 3802     		.2byte	0x238
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 79


 2294 060e 5A030000 		.4byte	0x35a
 2295 0612 31040000 		.4byte	.LLST20
 2296 0616 1E       		.uleb128 0x1e
 2297 0617 58050000 		.4byte	0x558
 2298 061b 8E000000 		.4byte	.LBB4
 2299 061f 0C000000 		.4byte	.LBE4-.LBB4
 2300 0623 01       		.byte	0x1
 2301 0624 A802     		.2byte	0x2a8
 2302 0626 59060000 		.4byte	0x659
 2303 062a 1F       		.uleb128 0x1f
 2304 062b 69050000 		.4byte	0x569
 2305 062f 5D040000 		.4byte	.LLST21
 2306 0633 20       		.uleb128 0x20
 2307 0634 8E000000 		.4byte	.LBB5
 2308 0638 0C000000 		.4byte	.LBE5-.LBB5
 2309 063c 21       		.uleb128 0x21
 2310 063d 75050000 		.4byte	0x575
 2311 0641 70040000 		.4byte	.LLST22
 2312 0645 10       		.uleb128 0x10
 2313 0646 92000000 		.4byte	.LVL71
 2314 064a 2D0F0000 		.4byte	0xf2d
 2315 064e 10       		.uleb128 0x10
 2316 064f 9A000000 		.4byte	.LVL73
 2317 0653 500F0000 		.4byte	0xf50
 2318 0657 00       		.byte	0
 2319 0658 00       		.byte	0
 2320 0659 10       		.uleb128 0x10
 2321 065a 12000000 		.4byte	.LVL57
 2322 065e 2D0F0000 		.4byte	0xf2d
 2323 0662 12       		.uleb128 0x12
 2324 0663 28000000 		.4byte	.LVL58
 2325 0667 B2020000 		.4byte	0x2b2
 2326 066b 83060000 		.4byte	0x683
 2327 066f 13       		.uleb128 0x13
 2328 0670 01       		.uleb128 0x1
 2329 0671 50       		.byte	0x50
 2330 0672 02       		.uleb128 0x2
 2331 0673 74       		.byte	0x74
 2332 0674 00       		.sleb128 0
 2333 0675 13       		.uleb128 0x13
 2334 0676 01       		.uleb128 0x1
 2335 0677 51       		.byte	0x51
 2336 0678 03       		.uleb128 0x3
 2337 0679 7D       		.byte	0x7d
 2338 067a 00       		.sleb128 0
 2339 067b 06       		.byte	0x6
 2340 067c 13       		.uleb128 0x13
 2341 067d 01       		.uleb128 0x1
 2342 067e 52       		.byte	0x52
 2343 067f 02       		.uleb128 0x2
 2344 0680 77       		.byte	0x77
 2345 0681 00       		.sleb128 0
 2346 0682 00       		.byte	0
 2347 0683 12       		.uleb128 0x12
 2348 0684 36000000 		.4byte	.LVL59
 2349 0688 380F0000 		.4byte	0xf38
 2350 068c 97060000 		.4byte	0x697
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 80


 2351 0690 13       		.uleb128 0x13
 2352 0691 01       		.uleb128 0x1
 2353 0692 50       		.byte	0x50
 2354 0693 02       		.uleb128 0x2
 2355 0694 74       		.byte	0x74
 2356 0695 24       		.sleb128 36
 2357 0696 00       		.byte	0
 2358 0697 10       		.uleb128 0x10
 2359 0698 3E000000 		.4byte	.LVL60
 2360 069c 5B0F0000 		.4byte	0xf5b
 2361 06a0 10       		.uleb128 0x10
 2362 06a1 42000000 		.4byte	.LVL61
 2363 06a5 500F0000 		.4byte	0xf50
 2364 06a9 10       		.uleb128 0x10
 2365 06aa 50000000 		.4byte	.LVL62
 2366 06ae 500F0000 		.4byte	0xf50
 2367 06b2 12       		.uleb128 0x12
 2368 06b3 5E000000 		.4byte	.LVL63
 2369 06b7 8A0F0000 		.4byte	0xf8a
 2370 06bb C6060000 		.4byte	0x6c6
 2371 06bf 13       		.uleb128 0x13
 2372 06c0 01       		.uleb128 0x1
 2373 06c1 50       		.byte	0x50
 2374 06c2 02       		.uleb128 0x2
 2375 06c3 91       		.byte	0x91
 2376 06c4 60       		.sleb128 -32
 2377 06c5 00       		.byte	0
 2378 06c6 10       		.uleb128 0x10
 2379 06c7 62000000 		.4byte	.LVL64
 2380 06cb 500F0000 		.4byte	0xf50
 2381 06cf 10       		.uleb128 0x10
 2382 06d0 66000000 		.4byte	.LVL65
 2383 06d4 960F0000 		.4byte	0xf96
 2384 06d8 10       		.uleb128 0x10
 2385 06d9 6A000000 		.4byte	.LVL66
 2386 06dd 2D0F0000 		.4byte	0xf2d
 2387 06e1 10       		.uleb128 0x10
 2388 06e2 82000000 		.4byte	.LVL67
 2389 06e6 500F0000 		.4byte	0xf50
 2390 06ea 12       		.uleb128 0x12
 2391 06eb 8A000000 		.4byte	.LVL69
 2392 06ef A20F0000 		.4byte	0xfa2
 2393 06f3 04070000 		.4byte	0x704
 2394 06f7 13       		.uleb128 0x13
 2395 06f8 01       		.uleb128 0x1
 2396 06f9 50       		.byte	0x50
 2397 06fa 02       		.uleb128 0x2
 2398 06fb 91       		.byte	0x91
 2399 06fc 60       		.sleb128 -32
 2400 06fd 13       		.uleb128 0x13
 2401 06fe 01       		.uleb128 0x1
 2402 06ff 51       		.byte	0x51
 2403 0700 02       		.uleb128 0x2
 2404 0701 91       		.byte	0x91
 2405 0702 5C       		.sleb128 -36
 2406 0703 00       		.byte	0
 2407 0704 12       		.uleb128 0x12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 81


 2408 0705 A8000000 		.4byte	.LVL74
 2409 0709 AE0F0000 		.4byte	0xfae
 2410 070d 18070000 		.4byte	0x718
 2411 0711 13       		.uleb128 0x13
 2412 0712 01       		.uleb128 0x1
 2413 0713 50       		.byte	0x50
 2414 0714 02       		.uleb128 0x2
 2415 0715 74       		.byte	0x74
 2416 0716 10       		.sleb128 16
 2417 0717 00       		.byte	0
 2418 0718 12       		.uleb128 0x12
 2419 0719 AE000000 		.4byte	.LVL75
 2420 071d 64030000 		.4byte	0x364
 2421 0721 2C070000 		.4byte	0x72c
 2422 0725 13       		.uleb128 0x13
 2423 0726 01       		.uleb128 0x1
 2424 0727 50       		.byte	0x50
 2425 0728 02       		.uleb128 0x2
 2426 0729 74       		.byte	0x74
 2427 072a 00       		.sleb128 0
 2428 072b 00       		.byte	0
 2429 072c 10       		.uleb128 0x10
 2430 072d B2000000 		.4byte	.LVL76
 2431 0731 BA0F0000 		.4byte	0xfba
 2432 0735 10       		.uleb128 0x10
 2433 0736 BE000000 		.4byte	.LVL77
 2434 073a 5B0F0000 		.4byte	0xf5b
 2435 073e 12       		.uleb128 0x12
 2436 073f C6000000 		.4byte	.LVL78
 2437 0743 64030000 		.4byte	0x364
 2438 0747 52070000 		.4byte	0x752
 2439 074b 13       		.uleb128 0x13
 2440 074c 01       		.uleb128 0x1
 2441 074d 50       		.byte	0x50
 2442 074e 02       		.uleb128 0x2
 2443 074f 74       		.byte	0x74
 2444 0750 00       		.sleb128 0
 2445 0751 00       		.byte	0
 2446 0752 10       		.uleb128 0x10
 2447 0753 CA000000 		.4byte	.LVL79
 2448 0757 BA0F0000 		.4byte	0xfba
 2449 075b 12       		.uleb128 0x12
 2450 075c D2000000 		.4byte	.LVL80
 2451 0760 64030000 		.4byte	0x364
 2452 0764 6F070000 		.4byte	0x76f
 2453 0768 13       		.uleb128 0x13
 2454 0769 01       		.uleb128 0x1
 2455 076a 50       		.byte	0x50
 2456 076b 02       		.uleb128 0x2
 2457 076c 74       		.byte	0x74
 2458 076d 00       		.sleb128 0
 2459 076e 00       		.byte	0
 2460 076f 10       		.uleb128 0x10
 2461 0770 D6000000 		.4byte	.LVL81
 2462 0774 BA0F0000 		.4byte	0xfba
 2463 0778 00       		.byte	0
 2464 0779 11       		.uleb128 0x11
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 82


 2465 077a 86000000 		.4byte	0x86
 2466 077e 17       		.uleb128 0x17
 2467 077f E4010000 		.4byte	.LASF73
 2468 0783 01       		.byte	0x1
 2469 0784 5F01     		.2byte	0x15f
 2470 0786 AE010000 		.4byte	0x1ae
 2471 078a 00000000 		.4byte	.LFB34
 2472 078e 42000000 		.4byte	.LFE34-.LFB34
 2473 0792 01       		.uleb128 0x1
 2474 0793 9C       		.byte	0x9c
 2475 0794 17080000 		.4byte	0x817
 2476 0798 0F       		.uleb128 0xf
 2477 0799 50020000 		.4byte	.LASF64
 2478 079d 01       		.byte	0x1
 2479 079e 5F01     		.2byte	0x15f
 2480 07a0 45000000 		.4byte	0x45
 2481 07a4 8B040000 		.4byte	.LLST23
 2482 07a8 18       		.uleb128 0x18
 2483 07a9 B6020000 		.4byte	.LASF65
 2484 07ad 01       		.byte	0x1
 2485 07ae 6101     		.2byte	0x161
 2486 07b0 14030000 		.4byte	0x314
 2487 07b4 AC040000 		.4byte	.LLST24
 2488 07b8 12       		.uleb128 0x12
 2489 07b9 08000000 		.4byte	.LVL88
 2490 07bd 720F0000 		.4byte	0xf72
 2491 07c1 CC070000 		.4byte	0x7cc
 2492 07c5 13       		.uleb128 0x13
 2493 07c6 01       		.uleb128 0x1
 2494 07c7 50       		.byte	0x50
 2495 07c8 02       		.uleb128 0x2
 2496 07c9 08       		.byte	0x8
 2497 07ca 4C       		.byte	0x4c
 2498 07cb 00       		.byte	0
 2499 07cc 12       		.uleb128 0x12
 2500 07cd 2A000000 		.4byte	.LVL91
 2501 07d1 660F0000 		.4byte	0xf66
 2502 07d5 E0070000 		.4byte	0x7e0
 2503 07d9 13       		.uleb128 0x13
 2504 07da 01       		.uleb128 0x1
 2505 07db 50       		.byte	0x50
 2506 07dc 02       		.uleb128 0x2
 2507 07dd 74       		.byte	0x74
 2508 07de 10       		.sleb128 16
 2509 07df 00       		.byte	0
 2510 07e0 12       		.uleb128 0x12
 2511 07e1 32000000 		.4byte	.LVL92
 2512 07e5 660F0000 		.4byte	0xf66
 2513 07e9 F4070000 		.4byte	0x7f4
 2514 07ed 13       		.uleb128 0x13
 2515 07ee 01       		.uleb128 0x1
 2516 07ef 50       		.byte	0x50
 2517 07f0 02       		.uleb128 0x2
 2518 07f1 74       		.byte	0x74
 2519 07f2 24       		.sleb128 36
 2520 07f3 00       		.byte	0
 2521 07f4 19       		.uleb128 0x19
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 83


 2522 07f5 3E000000 		.4byte	.LVL93
 2523 07f9 8D050000 		.4byte	0x58d
 2524 07fd 13       		.uleb128 0x13
 2525 07fe 01       		.uleb128 0x1
 2526 07ff 50       		.byte	0x50
 2527 0800 02       		.uleb128 0x2
 2528 0801 74       		.byte	0x74
 2529 0802 00       		.sleb128 0
 2530 0803 13       		.uleb128 0x13
 2531 0804 01       		.uleb128 0x1
 2532 0805 51       		.byte	0x51
 2533 0806 02       		.uleb128 0x2
 2534 0807 75       		.byte	0x75
 2535 0808 00       		.sleb128 0
 2536 0809 13       		.uleb128 0x13
 2537 080a 01       		.uleb128 0x1
 2538 080b 52       		.byte	0x52
 2539 080c 02       		.uleb128 0x2
 2540 080d 75       		.byte	0x75
 2541 080e 00       		.sleb128 0
 2542 080f 13       		.uleb128 0x13
 2543 0810 01       		.uleb128 0x1
 2544 0811 53       		.byte	0x53
 2545 0812 02       		.uleb128 0x2
 2546 0813 75       		.byte	0x75
 2547 0814 00       		.sleb128 0
 2548 0815 00       		.byte	0
 2549 0816 00       		.byte	0
 2550 0817 17       		.uleb128 0x17
 2551 0818 F3040000 		.4byte	.LASF74
 2552 081c 01       		.byte	0x1
 2553 081d A603     		.2byte	0x3a6
 2554 081f 5A000000 		.4byte	0x5a
 2555 0823 00000000 		.4byte	.LFB36
 2556 0827 5C000000 		.4byte	.LFE36-.LFB36
 2557 082b 01       		.uleb128 0x1
 2558 082c 9C       		.byte	0x9c
 2559 082d F1080000 		.4byte	0x8f1
 2560 0831 0F       		.uleb128 0xf
 2561 0832 B8040000 		.4byte	.LASF59
 2562 0836 01       		.byte	0x1
 2563 0837 A603     		.2byte	0x3a6
 2564 0839 AE010000 		.4byte	0x1ae
 2565 083d D5040000 		.4byte	.LLST25
 2566 0841 0F       		.uleb128 0xf
 2567 0842 46040000 		.4byte	.LASF53
 2568 0846 01       		.byte	0x1
 2569 0847 A603     		.2byte	0x3a6
 2570 0849 79070000 		.4byte	0x779
 2571 084d 01050000 		.4byte	.LLST26
 2572 0851 0F       		.uleb128 0xf
 2573 0852 C4060000 		.4byte	.LASF75
 2574 0856 01       		.byte	0x1
 2575 0857 A603     		.2byte	0x3a6
 2576 0859 F1080000 		.4byte	0x8f1
 2577 085d 20050000 		.4byte	.LLST27
 2578 0861 0F       		.uleb128 0xf
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 84


 2579 0862 C9050000 		.4byte	.LASF70
 2580 0866 01       		.byte	0x1
 2581 0867 A603     		.2byte	0x3a6
 2582 0869 5A000000 		.4byte	0x5a
 2583 086d 4C050000 		.4byte	.LLST28
 2584 0871 18       		.uleb128 0x18
 2585 0872 34070000 		.4byte	.LASF67
 2586 0876 01       		.byte	0x1
 2587 0877 A803     		.2byte	0x3a8
 2588 0879 5A000000 		.4byte	0x5a
 2589 087d 78050000 		.4byte	.LLST29
 2590 0881 18       		.uleb128 0x18
 2591 0882 4C060000 		.4byte	.LASF76
 2592 0886 01       		.byte	0x1
 2593 0887 A903     		.2byte	0x3a9
 2594 0889 61000000 		.4byte	0x61
 2595 088d 96050000 		.4byte	.LLST30
 2596 0891 18       		.uleb128 0x18
 2597 0892 AC010000 		.4byte	.LASF52
 2598 0896 01       		.byte	0x1
 2599 0897 AA03     		.2byte	0x3aa
 2600 0899 5A030000 		.4byte	0x35a
 2601 089d B5050000 		.4byte	.LLST31
 2602 08a1 10       		.uleb128 0x10
 2603 08a2 0E000000 		.4byte	.LVL97
 2604 08a6 C60F0000 		.4byte	0xfc6
 2605 08aa 12       		.uleb128 0x12
 2606 08ab 28000000 		.4byte	.LVL100
 2607 08af B2020000 		.4byte	0x2b2
 2608 08b3 CB080000 		.4byte	0x8cb
 2609 08b7 13       		.uleb128 0x13
 2610 08b8 01       		.uleb128 0x1
 2611 08b9 50       		.byte	0x50
 2612 08ba 02       		.uleb128 0x2
 2613 08bb 74       		.byte	0x74
 2614 08bc 00       		.sleb128 0
 2615 08bd 13       		.uleb128 0x13
 2616 08be 01       		.uleb128 0x1
 2617 08bf 51       		.byte	0x51
 2618 08c0 03       		.uleb128 0x3
 2619 08c1 91       		.byte	0x91
 2620 08c2 64       		.sleb128 -28
 2621 08c3 06       		.byte	0x6
 2622 08c4 13       		.uleb128 0x13
 2623 08c5 01       		.uleb128 0x1
 2624 08c6 52       		.byte	0x52
 2625 08c7 02       		.uleb128 0x2
 2626 08c8 77       		.byte	0x77
 2627 08c9 00       		.sleb128 0
 2628 08ca 00       		.byte	0
 2629 08cb 12       		.uleb128 0x12
 2630 08cc 3C000000 		.4byte	.LVL101
 2631 08d0 380F0000 		.4byte	0xf38
 2632 08d4 DF080000 		.4byte	0x8df
 2633 08d8 13       		.uleb128 0x13
 2634 08d9 01       		.uleb128 0x1
 2635 08da 50       		.byte	0x50
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 85


 2636 08db 02       		.uleb128 0x2
 2637 08dc 74       		.byte	0x74
 2638 08dd 24       		.sleb128 36
 2639 08de 00       		.byte	0
 2640 08df 19       		.uleb128 0x19
 2641 08e0 58000000 		.4byte	.LVL103
 2642 08e4 D10F0000 		.4byte	0xfd1
 2643 08e8 13       		.uleb128 0x13
 2644 08e9 01       		.uleb128 0x1
 2645 08ea 50       		.byte	0x50
 2646 08eb 03       		.uleb128 0x3
 2647 08ec 7D       		.byte	0x7d
 2648 08ed 00       		.sleb128 0
 2649 08ee 06       		.byte	0x6
 2650 08ef 00       		.byte	0
 2651 08f0 00       		.byte	0
 2652 08f1 06       		.uleb128 0x6
 2653 08f2 04       		.byte	0x4
 2654 08f3 5A000000 		.4byte	0x5a
 2655 08f7 1A       		.uleb128 0x1a
 2656 08f8 F1050000 		.4byte	.LASF78
 2657 08fc 01       		.byte	0x1
 2658 08fd 2D06     		.2byte	0x62d
 2659 08ff 5A000000 		.4byte	0x5a
 2660 0903 01       		.byte	0x1
 2661 0904 21090000 		.4byte	0x921
 2662 0908 1B       		.uleb128 0x1b
 2663 0909 AC010000 		.4byte	.LASF52
 2664 090d 01       		.byte	0x1
 2665 090e 2D06     		.2byte	0x62d
 2666 0910 82050000 		.4byte	0x582
 2667 0914 1C       		.uleb128 0x1c
 2668 0915 34070000 		.4byte	.LASF67
 2669 0919 01       		.byte	0x1
 2670 091a 2F06     		.2byte	0x62f
 2671 091c 5A000000 		.4byte	0x5a
 2672 0920 00       		.byte	0
 2673 0921 17       		.uleb128 0x17
 2674 0922 77050000 		.4byte	.LASF79
 2675 0926 01       		.byte	0x1
 2676 0927 1604     		.2byte	0x416
 2677 0929 5A000000 		.4byte	0x5a
 2678 092d 00000000 		.4byte	.LFB37
 2679 0931 16010000 		.4byte	.LFE37-.LFB37
 2680 0935 01       		.uleb128 0x1
 2681 0936 9C       		.byte	0x9c
 2682 0937 4E0B0000 		.4byte	0xb4e
 2683 093b 0F       		.uleb128 0xf
 2684 093c B8040000 		.4byte	.LASF59
 2685 0940 01       		.byte	0x1
 2686 0941 1604     		.2byte	0x416
 2687 0943 AE010000 		.4byte	0x1ae
 2688 0947 E1050000 		.4byte	.LLST32
 2689 094b 0F       		.uleb128 0xf
 2690 094c 90040000 		.4byte	.LASF57
 2691 0950 01       		.byte	0x1
 2692 0951 1604     		.2byte	0x416
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 86


 2693 0953 5F030000 		.4byte	0x35f
 2694 0957 0D060000 		.4byte	.LLST33
 2695 095b 0F       		.uleb128 0xf
 2696 095c BB010000 		.4byte	.LASF69
 2697 0960 01       		.byte	0x1
 2698 0961 1604     		.2byte	0x416
 2699 0963 9B000000 		.4byte	0x9b
 2700 0967 39060000 		.4byte	.LLST34
 2701 096b 0F       		.uleb128 0xf
 2702 096c D2000000 		.4byte	.LASF80
 2703 0970 01       		.byte	0x1
 2704 0971 1604     		.2byte	0x416
 2705 0973 5A000000 		.4byte	0x5a
 2706 0977 70060000 		.4byte	.LLST35
 2707 097b 18       		.uleb128 0x18
 2708 097c 8C050000 		.4byte	.LASF71
 2709 0980 01       		.byte	0x1
 2710 0981 1804     		.2byte	0x418
 2711 0983 5A000000 		.4byte	0x5a
 2712 0987 9B060000 		.4byte	.LLST36
 2713 098b 1D       		.uleb128 0x1d
 2714 098c 0B010000 		.4byte	.LASF72
 2715 0990 01       		.byte	0x1
 2716 0991 1904     		.2byte	0x419
 2717 0993 A3010000 		.4byte	0x1a3
 2718 0997 02       		.uleb128 0x2
 2719 0998 91       		.byte	0x91
 2720 0999 60       		.sleb128 -32
 2721 099a 18       		.uleb128 0x18
 2722 099b 59010000 		.4byte	.LASF81
 2723 099f 01       		.byte	0x1
 2724 09a0 1A04     		.2byte	0x41a
 2725 09a2 D8010000 		.4byte	0x1d8
 2726 09a6 C6060000 		.4byte	.LLST37
 2727 09aa 18       		.uleb128 0x18
 2728 09ab AC010000 		.4byte	.LASF52
 2729 09af 01       		.byte	0x1
 2730 09b0 1B04     		.2byte	0x41b
 2731 09b2 5A030000 		.4byte	0x35a
 2732 09b6 D9060000 		.4byte	.LLST38
 2733 09ba 1E       		.uleb128 0x1e
 2734 09bb F7080000 		.4byte	0x8f7
 2735 09bf B6000000 		.4byte	.LBB8
 2736 09c3 0A000000 		.4byte	.LBE8-.LBB8
 2737 09c7 01       		.byte	0x1
 2738 09c8 8704     		.2byte	0x487
 2739 09ca FD090000 		.4byte	0x9fd
 2740 09ce 1F       		.uleb128 0x1f
 2741 09cf 08090000 		.4byte	0x908
 2742 09d3 05070000 		.4byte	.LLST39
 2743 09d7 20       		.uleb128 0x20
 2744 09d8 B6000000 		.4byte	.LBB9
 2745 09dc 0A000000 		.4byte	.LBE9-.LBB9
 2746 09e0 21       		.uleb128 0x21
 2747 09e1 14090000 		.4byte	0x914
 2748 09e5 18070000 		.4byte	.LLST40
 2749 09e9 10       		.uleb128 0x10
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 87


 2750 09ea BA000000 		.4byte	.LVL129
 2751 09ee 2D0F0000 		.4byte	0xf2d
 2752 09f2 10       		.uleb128 0x10
 2753 09f3 C0000000 		.4byte	.LVL131
 2754 09f7 500F0000 		.4byte	0xf50
 2755 09fb 00       		.byte	0
 2756 09fc 00       		.byte	0
 2757 09fd 10       		.uleb128 0x10
 2758 09fe 12000000 		.4byte	.LVL111
 2759 0a02 2D0F0000 		.4byte	0xf2d
 2760 0a06 12       		.uleb128 0x12
 2761 0a07 22000000 		.4byte	.LVL113
 2762 0a0b 1A030000 		.4byte	0x31a
 2763 0a0f 200A0000 		.4byte	0xa20
 2764 0a13 13       		.uleb128 0x13
 2765 0a14 01       		.uleb128 0x1
 2766 0a15 50       		.byte	0x50
 2767 0a16 02       		.uleb128 0x2
 2768 0a17 74       		.byte	0x74
 2769 0a18 00       		.sleb128 0
 2770 0a19 13       		.uleb128 0x13
 2771 0a1a 01       		.uleb128 0x1
 2772 0a1b 51       		.byte	0x51
 2773 0a1c 02       		.uleb128 0x2
 2774 0a1d 77       		.byte	0x77
 2775 0a1e 00       		.sleb128 0
 2776 0a1f 00       		.byte	0
 2777 0a20 10       		.uleb128 0x10
 2778 0a21 38000000 		.4byte	.LVL114
 2779 0a25 DC0F0000 		.4byte	0xfdc
 2780 0a29 12       		.uleb128 0x12
 2781 0a2a 48000000 		.4byte	.LVL115
 2782 0a2e 380F0000 		.4byte	0xf38
 2783 0a32 3D0A0000 		.4byte	0xa3d
 2784 0a36 13       		.uleb128 0x13
 2785 0a37 01       		.uleb128 0x1
 2786 0a38 50       		.byte	0x50
 2787 0a39 02       		.uleb128 0x2
 2788 0a3a 74       		.byte	0x74
 2789 0a3b 10       		.sleb128 16
 2790 0a3c 00       		.byte	0
 2791 0a3d 10       		.uleb128 0x10
 2792 0a3e 50000000 		.4byte	.LVL116
 2793 0a42 5B0F0000 		.4byte	0xf5b
 2794 0a46 12       		.uleb128 0x12
 2795 0a47 62000000 		.4byte	.LVL117
 2796 0a4b 380F0000 		.4byte	0xf38
 2797 0a4f 5A0A0000 		.4byte	0xa5a
 2798 0a53 13       		.uleb128 0x13
 2799 0a54 01       		.uleb128 0x1
 2800 0a55 50       		.byte	0x50
 2801 0a56 02       		.uleb128 0x2
 2802 0a57 74       		.byte	0x74
 2803 0a58 24       		.sleb128 36
 2804 0a59 00       		.byte	0
 2805 0a5a 10       		.uleb128 0x10
 2806 0a5b 6A000000 		.4byte	.LVL118
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 88


 2807 0a5f 500F0000 		.4byte	0xf50
 2808 0a63 10       		.uleb128 0x10
 2809 0a64 78000000 		.4byte	.LVL120
 2810 0a68 500F0000 		.4byte	0xf50
 2811 0a6c 12       		.uleb128 0x12
 2812 0a6d 86000000 		.4byte	.LVL121
 2813 0a71 8A0F0000 		.4byte	0xf8a
 2814 0a75 800A0000 		.4byte	0xa80
 2815 0a79 13       		.uleb128 0x13
 2816 0a7a 01       		.uleb128 0x1
 2817 0a7b 50       		.byte	0x50
 2818 0a7c 02       		.uleb128 0x2
 2819 0a7d 91       		.byte	0x91
 2820 0a7e 60       		.sleb128 -32
 2821 0a7f 00       		.byte	0
 2822 0a80 10       		.uleb128 0x10
 2823 0a81 8A000000 		.4byte	.LVL122
 2824 0a85 500F0000 		.4byte	0xf50
 2825 0a89 10       		.uleb128 0x10
 2826 0a8a 8E000000 		.4byte	.LVL123
 2827 0a8e 960F0000 		.4byte	0xf96
 2828 0a92 10       		.uleb128 0x10
 2829 0a93 92000000 		.4byte	.LVL124
 2830 0a97 2D0F0000 		.4byte	0xf2d
 2831 0a9b 10       		.uleb128 0x10
 2832 0a9c AA000000 		.4byte	.LVL125
 2833 0aa0 500F0000 		.4byte	0xf50
 2834 0aa4 12       		.uleb128 0x12
 2835 0aa5 B2000000 		.4byte	.LVL127
 2836 0aa9 A20F0000 		.4byte	0xfa2
 2837 0aad BE0A0000 		.4byte	0xabe
 2838 0ab1 13       		.uleb128 0x13
 2839 0ab2 01       		.uleb128 0x1
 2840 0ab3 50       		.byte	0x50
 2841 0ab4 02       		.uleb128 0x2
 2842 0ab5 91       		.byte	0x91
 2843 0ab6 60       		.sleb128 -32
 2844 0ab7 13       		.uleb128 0x13
 2845 0ab8 01       		.uleb128 0x1
 2846 0ab9 51       		.byte	0x51
 2847 0aba 02       		.uleb128 0x2
 2848 0abb 91       		.byte	0x91
 2849 0abc 5C       		.sleb128 -36
 2850 0abd 00       		.byte	0
 2851 0abe 10       		.uleb128 0x10
 2852 0abf CE000000 		.4byte	.LVL132
 2853 0ac3 2D0F0000 		.4byte	0xf2d
 2854 0ac7 10       		.uleb128 0x10
 2855 0ac8 D4000000 		.4byte	.LVL133
 2856 0acc E80F0000 		.4byte	0xfe8
 2857 0ad0 10       		.uleb128 0x10
 2858 0ad1 D8000000 		.4byte	.LVL134
 2859 0ad5 500F0000 		.4byte	0xf50
 2860 0ad9 12       		.uleb128 0x12
 2861 0ada E2000000 		.4byte	.LVL135
 2862 0ade AE0F0000 		.4byte	0xfae
 2863 0ae2 ED0A0000 		.4byte	0xaed
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 89


 2864 0ae6 13       		.uleb128 0x13
 2865 0ae7 01       		.uleb128 0x1
 2866 0ae8 50       		.byte	0x50
 2867 0ae9 02       		.uleb128 0x2
 2868 0aea 74       		.byte	0x74
 2869 0aeb 24       		.sleb128 36
 2870 0aec 00       		.byte	0
 2871 0aed 12       		.uleb128 0x12
 2872 0aee E8000000 		.4byte	.LVL136
 2873 0af2 64030000 		.4byte	0x364
 2874 0af6 010B0000 		.4byte	0xb01
 2875 0afa 13       		.uleb128 0x13
 2876 0afb 01       		.uleb128 0x1
 2877 0afc 50       		.byte	0x50
 2878 0afd 02       		.uleb128 0x2
 2879 0afe 74       		.byte	0x74
 2880 0aff 00       		.sleb128 0
 2881 0b00 00       		.byte	0
 2882 0b01 10       		.uleb128 0x10
 2883 0b02 EC000000 		.4byte	.LVL137
 2884 0b06 BA0F0000 		.4byte	0xfba
 2885 0b0a 10       		.uleb128 0x10
 2886 0b0b F8000000 		.4byte	.LVL138
 2887 0b0f 5B0F0000 		.4byte	0xf5b
 2888 0b13 12       		.uleb128 0x12
 2889 0b14 00010000 		.4byte	.LVL139
 2890 0b18 64030000 		.4byte	0x364
 2891 0b1c 270B0000 		.4byte	0xb27
 2892 0b20 13       		.uleb128 0x13
 2893 0b21 01       		.uleb128 0x1
 2894 0b22 50       		.byte	0x50
 2895 0b23 02       		.uleb128 0x2
 2896 0b24 74       		.byte	0x74
 2897 0b25 00       		.sleb128 0
 2898 0b26 00       		.byte	0
 2899 0b27 10       		.uleb128 0x10
 2900 0b28 04010000 		.4byte	.LVL140
 2901 0b2c BA0F0000 		.4byte	0xfba
 2902 0b30 12       		.uleb128 0x12
 2903 0b31 0C010000 		.4byte	.LVL141
 2904 0b35 64030000 		.4byte	0x364
 2905 0b39 440B0000 		.4byte	0xb44
 2906 0b3d 13       		.uleb128 0x13
 2907 0b3e 01       		.uleb128 0x1
 2908 0b3f 50       		.byte	0x50
 2909 0b40 02       		.uleb128 0x2
 2910 0b41 74       		.byte	0x74
 2911 0b42 00       		.sleb128 0
 2912 0b43 00       		.byte	0
 2913 0b44 10       		.uleb128 0x10
 2914 0b45 10010000 		.4byte	.LVL142
 2915 0b49 BA0F0000 		.4byte	0xfba
 2916 0b4d 00       		.byte	0
 2917 0b4e 17       		.uleb128 0x17
 2918 0b4f 44010000 		.4byte	.LASF82
 2919 0b53 01       		.byte	0x1
 2920 0b54 B104     		.2byte	0x4b1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 90


 2921 0b56 5A000000 		.4byte	0x5a
 2922 0b5a 00000000 		.4byte	.LFB38
 2923 0b5e 58000000 		.4byte	.LFE38-.LFB38
 2924 0b62 01       		.uleb128 0x1
 2925 0b63 9C       		.byte	0x9c
 2926 0b64 110C0000 		.4byte	0xc11
 2927 0b68 0F       		.uleb128 0xf
 2928 0b69 B8040000 		.4byte	.LASF59
 2929 0b6d 01       		.byte	0x1
 2930 0b6e B104     		.2byte	0x4b1
 2931 0b70 AE010000 		.4byte	0x1ae
 2932 0b74 32070000 		.4byte	.LLST41
 2933 0b78 0F       		.uleb128 0xf
 2934 0b79 90040000 		.4byte	.LASF57
 2935 0b7d 01       		.byte	0x1
 2936 0b7e B104     		.2byte	0x4b1
 2937 0b80 5F030000 		.4byte	0x35f
 2938 0b84 5E070000 		.4byte	.LLST42
 2939 0b88 0F       		.uleb128 0xf
 2940 0b89 C4060000 		.4byte	.LASF75
 2941 0b8d 01       		.byte	0x1
 2942 0b8e B104     		.2byte	0x4b1
 2943 0b90 F1080000 		.4byte	0x8f1
 2944 0b94 7D070000 		.4byte	.LLST43
 2945 0b98 18       		.uleb128 0x18
 2946 0b99 34070000 		.4byte	.LASF67
 2947 0b9d 01       		.byte	0x1
 2948 0b9e B304     		.2byte	0x4b3
 2949 0ba0 5A000000 		.4byte	0x5a
 2950 0ba4 A9070000 		.4byte	.LLST44
 2951 0ba8 18       		.uleb128 0x18
 2952 0ba9 4C060000 		.4byte	.LASF76
 2953 0bad 01       		.byte	0x1
 2954 0bae B404     		.2byte	0x4b4
 2955 0bb0 61000000 		.4byte	0x61
 2956 0bb4 C7070000 		.4byte	.LLST45
 2957 0bb8 18       		.uleb128 0x18
 2958 0bb9 AC010000 		.4byte	.LASF52
 2959 0bbd 01       		.byte	0x1
 2960 0bbe B504     		.2byte	0x4b5
 2961 0bc0 5A030000 		.4byte	0x35a
 2962 0bc4 E5070000 		.4byte	.LLST46
 2963 0bc8 10       		.uleb128 0x10
 2964 0bc9 0E000000 		.4byte	.LVL149
 2965 0bcd C60F0000 		.4byte	0xfc6
 2966 0bd1 12       		.uleb128 0x12
 2967 0bd2 1E000000 		.4byte	.LVL152
 2968 0bd6 1A030000 		.4byte	0x31a
 2969 0bda EC0B0000 		.4byte	0xbec
 2970 0bde 13       		.uleb128 0x13
 2971 0bdf 01       		.uleb128 0x1
 2972 0be0 50       		.byte	0x50
 2973 0be1 02       		.uleb128 0x2
 2974 0be2 74       		.byte	0x74
 2975 0be3 00       		.sleb128 0
 2976 0be4 13       		.uleb128 0x13
 2977 0be5 01       		.uleb128 0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 91


 2978 0be6 51       		.byte	0x51
 2979 0be7 03       		.uleb128 0x3
 2980 0be8 91       		.byte	0x91
 2981 0be9 64       		.sleb128 -28
 2982 0bea 06       		.byte	0x6
 2983 0beb 00       		.byte	0
 2984 0bec 12       		.uleb128 0x12
 2985 0bed 38000000 		.4byte	.LVL153
 2986 0bf1 380F0000 		.4byte	0xf38
 2987 0bf5 000C0000 		.4byte	0xc00
 2988 0bf9 13       		.uleb128 0x13
 2989 0bfa 01       		.uleb128 0x1
 2990 0bfb 50       		.byte	0x50
 2991 0bfc 02       		.uleb128 0x2
 2992 0bfd 74       		.byte	0x74
 2993 0bfe 10       		.sleb128 16
 2994 0bff 00       		.byte	0
 2995 0c00 19       		.uleb128 0x19
 2996 0c01 54000000 		.4byte	.LVL155
 2997 0c05 D10F0000 		.4byte	0xfd1
 2998 0c09 13       		.uleb128 0x13
 2999 0c0a 01       		.uleb128 0x1
 3000 0c0b 50       		.byte	0x50
 3001 0c0c 02       		.uleb128 0x2
 3002 0c0d 77       		.byte	0x77
 3003 0c0e 00       		.sleb128 0
 3004 0c0f 00       		.byte	0
 3005 0c10 00       		.byte	0
 3006 0c11 17       		.uleb128 0x17
 3007 0c12 0C050000 		.4byte	.LASF83
 3008 0c16 01       		.byte	0x1
 3009 0c17 FC04     		.2byte	0x4fc
 3010 0c19 5A000000 		.4byte	0x5a
 3011 0c1d 00000000 		.4byte	.LFB39
 3012 0c21 2C000000 		.4byte	.LFE39-.LFB39
 3013 0c25 01       		.uleb128 0x1
 3014 0c26 9C       		.byte	0x9c
 3015 0c27 BF0C0000 		.4byte	0xcbf
 3016 0c2b 0F       		.uleb128 0xf
 3017 0c2c B8040000 		.4byte	.LASF59
 3018 0c30 01       		.byte	0x1
 3019 0c31 FC04     		.2byte	0x4fc
 3020 0c33 AE010000 		.4byte	0x1ae
 3021 0c37 11080000 		.4byte	.LLST47
 3022 0c3b 0F       		.uleb128 0xf
 3023 0c3c 90040000 		.4byte	.LASF57
 3024 0c40 01       		.byte	0x1
 3025 0c41 FC04     		.2byte	0x4fc
 3026 0c43 5F030000 		.4byte	0x35f
 3027 0c47 3D080000 		.4byte	.LLST48
 3028 0c4b 18       		.uleb128 0x18
 3029 0c4c 34070000 		.4byte	.LASF67
 3030 0c50 01       		.byte	0x1
 3031 0c51 FE04     		.2byte	0x4fe
 3032 0c53 5A000000 		.4byte	0x5a
 3033 0c57 69080000 		.4byte	.LLST49
 3034 0c5b 18       		.uleb128 0x18
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 92


 3035 0c5c 4C060000 		.4byte	.LASF76
 3036 0c60 01       		.byte	0x1
 3037 0c61 FF04     		.2byte	0x4ff
 3038 0c63 61000000 		.4byte	0x61
 3039 0c67 93080000 		.4byte	.LLST50
 3040 0c6b 18       		.uleb128 0x18
 3041 0c6c 59010000 		.4byte	.LASF81
 3042 0c70 01       		.byte	0x1
 3043 0c71 0005     		.2byte	0x500
 3044 0c73 D8010000 		.4byte	0x1d8
 3045 0c77 B1080000 		.4byte	.LLST51
 3046 0c7b 18       		.uleb128 0x18
 3047 0c7c AC010000 		.4byte	.LASF52
 3048 0c80 01       		.byte	0x1
 3049 0c81 0105     		.2byte	0x501
 3050 0c83 5A030000 		.4byte	0x35a
 3051 0c87 C4080000 		.4byte	.LLST52
 3052 0c8b 10       		.uleb128 0x10
 3053 0c8c 0C000000 		.4byte	.LVL162
 3054 0c90 C60F0000 		.4byte	0xfc6
 3055 0c94 12       		.uleb128 0x12
 3056 0c95 1E000000 		.4byte	.LVL166
 3057 0c99 1A030000 		.4byte	0x31a
 3058 0c9d AE0C0000 		.4byte	0xcae
 3059 0ca1 13       		.uleb128 0x13
 3060 0ca2 01       		.uleb128 0x1
 3061 0ca3 50       		.byte	0x50
 3062 0ca4 02       		.uleb128 0x2
 3063 0ca5 74       		.byte	0x74
 3064 0ca6 00       		.sleb128 0
 3065 0ca7 13       		.uleb128 0x13
 3066 0ca8 01       		.uleb128 0x1
 3067 0ca9 51       		.byte	0x51
 3068 0caa 02       		.uleb128 0x2
 3069 0cab 77       		.byte	0x77
 3070 0cac 00       		.sleb128 0
 3071 0cad 00       		.byte	0
 3072 0cae 19       		.uleb128 0x19
 3073 0caf 28000000 		.4byte	.LVL169
 3074 0cb3 D10F0000 		.4byte	0xfd1
 3075 0cb7 13       		.uleb128 0x13
 3076 0cb8 01       		.uleb128 0x1
 3077 0cb9 50       		.byte	0x50
 3078 0cba 02       		.uleb128 0x2
 3079 0cbb 76       		.byte	0x76
 3080 0cbc 00       		.sleb128 0
 3081 0cbd 00       		.byte	0
 3082 0cbe 00       		.byte	0
 3083 0cbf 17       		.uleb128 0x17
 3084 0cc0 A9000000 		.4byte	.LASF84
 3085 0cc4 01       		.byte	0x1
 3086 0cc5 3105     		.2byte	0x531
 3087 0cc7 61000000 		.4byte	0x61
 3088 0ccb 00000000 		.4byte	.LFB40
 3089 0ccf 12000000 		.4byte	.LFE40-.LFB40
 3090 0cd3 01       		.uleb128 0x1
 3091 0cd4 9C       		.byte	0x9c
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 93


 3092 0cd5 0C0D0000 		.4byte	0xd0c
 3093 0cd9 0F       		.uleb128 0xf
 3094 0cda B8040000 		.4byte	.LASF59
 3095 0cde 01       		.byte	0x1
 3096 0cdf 3105     		.2byte	0x531
 3097 0ce1 0C0D0000 		.4byte	0xd0c
 3098 0ce5 F0080000 		.4byte	.LLST53
 3099 0ce9 18       		.uleb128 0x18
 3100 0cea A7050000 		.4byte	.LASF85
 3101 0cee 01       		.byte	0x1
 3102 0cef 3305     		.2byte	0x533
 3103 0cf1 61000000 		.4byte	0x61
 3104 0cf5 1C090000 		.4byte	.LLST54
 3105 0cf9 10       		.uleb128 0x10
 3106 0cfa 08000000 		.4byte	.LVL175
 3107 0cfe 2D0F0000 		.4byte	0xf2d
 3108 0d02 10       		.uleb128 0x10
 3109 0d03 0E000000 		.4byte	.LVL177
 3110 0d07 500F0000 		.4byte	0xf50
 3111 0d0b 00       		.byte	0
 3112 0d0c 11       		.uleb128 0x11
 3113 0d0d AE010000 		.4byte	0x1ae
 3114 0d11 17       		.uleb128 0x17
 3115 0d12 DF000000 		.4byte	.LASF86
 3116 0d16 01       		.byte	0x1
 3117 0d17 3F05     		.2byte	0x53f
 3118 0d19 61000000 		.4byte	0x61
 3119 0d1d 00000000 		.4byte	.LFB41
 3120 0d21 16000000 		.4byte	.LFE41-.LFB41
 3121 0d25 01       		.uleb128 0x1
 3122 0d26 9C       		.byte	0x9c
 3123 0d27 6E0D0000 		.4byte	0xd6e
 3124 0d2b 0F       		.uleb128 0xf
 3125 0d2c B8040000 		.4byte	.LASF59
 3126 0d30 01       		.byte	0x1
 3127 0d31 3F05     		.2byte	0x53f
 3128 0d33 0C0D0000 		.4byte	0xd0c
 3129 0d37 3A090000 		.4byte	.LLST55
 3130 0d3b 18       		.uleb128 0x18
 3131 0d3c A7050000 		.4byte	.LASF85
 3132 0d40 01       		.byte	0x1
 3133 0d41 4105     		.2byte	0x541
 3134 0d43 61000000 		.4byte	0x61
 3135 0d47 66090000 		.4byte	.LLST56
 3136 0d4b 18       		.uleb128 0x18
 3137 0d4c AC010000 		.4byte	.LASF52
 3138 0d50 01       		.byte	0x1
 3139 0d51 4205     		.2byte	0x542
 3140 0d53 14030000 		.4byte	0x314
 3141 0d57 84090000 		.4byte	.LLST57
 3142 0d5b 10       		.uleb128 0x10
 3143 0d5c 08000000 		.4byte	.LVL181
 3144 0d60 2D0F0000 		.4byte	0xf2d
 3145 0d64 10       		.uleb128 0x10
 3146 0d65 12000000 		.4byte	.LVL183
 3147 0d69 500F0000 		.4byte	0xf50
 3148 0d6d 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 94


 3149 0d6e 17       		.uleb128 0x17
 3150 0d6f 67020000 		.4byte	.LASF87
 3151 0d73 01       		.byte	0x1
 3152 0d74 4F05     		.2byte	0x54f
 3153 0d76 61000000 		.4byte	0x61
 3154 0d7a 00000000 		.4byte	.LFB42
 3155 0d7e 04000000 		.4byte	.LFE42-.LFB42
 3156 0d82 01       		.uleb128 0x1
 3157 0d83 9C       		.byte	0x9c
 3158 0d84 A70D0000 		.4byte	0xda7
 3159 0d88 0F       		.uleb128 0xf
 3160 0d89 B8040000 		.4byte	.LASF59
 3161 0d8d 01       		.byte	0x1
 3162 0d8e 4F05     		.2byte	0x54f
 3163 0d90 0C0D0000 		.4byte	0xd0c
 3164 0d94 B0090000 		.4byte	.LLST58
 3165 0d98 1D       		.uleb128 0x1d
 3166 0d99 A7050000 		.4byte	.LASF85
 3167 0d9d 01       		.byte	0x1
 3168 0d9e 5105     		.2byte	0x551
 3169 0da0 61000000 		.4byte	0x61
 3170 0da4 01       		.uleb128 0x1
 3171 0da5 50       		.byte	0x50
 3172 0da6 00       		.byte	0
 3173 0da7 17       		.uleb128 0x17
 3174 0da8 13020000 		.4byte	.LASF88
 3175 0dac 01       		.byte	0x1
 3176 0dad 4206     		.2byte	0x642
 3177 0daf 5A000000 		.4byte	0x5a
 3178 0db3 00000000 		.4byte	.LFB48
 3179 0db7 08000000 		.4byte	.LFE48-.LFB48
 3180 0dbb 01       		.uleb128 0x1
 3181 0dbc 9C       		.byte	0x9c
 3182 0dbd E20D0000 		.4byte	0xde2
 3183 0dc1 0F       		.uleb128 0xf
 3184 0dc2 B8040000 		.4byte	.LASF59
 3185 0dc6 01       		.byte	0x1
 3186 0dc7 4206     		.2byte	0x642
 3187 0dc9 0C0D0000 		.4byte	0xd0c
 3188 0dcd D1090000 		.4byte	.LLST59
 3189 0dd1 18       		.uleb128 0x18
 3190 0dd2 34070000 		.4byte	.LASF67
 3191 0dd6 01       		.byte	0x1
 3192 0dd7 4406     		.2byte	0x644
 3193 0dd9 5A000000 		.4byte	0x5a
 3194 0ddd F2090000 		.4byte	.LLST60
 3195 0de1 00       		.byte	0
 3196 0de2 17       		.uleb128 0x17
 3197 0de3 2F050000 		.4byte	.LASF89
 3198 0de7 01       		.byte	0x1
 3199 0de8 6906     		.2byte	0x669
 3200 0dea 5A000000 		.4byte	0x5a
 3201 0dee 00000000 		.4byte	.LFB50
 3202 0df2 0C000000 		.4byte	.LFE50-.LFB50
 3203 0df6 01       		.uleb128 0x1
 3204 0df7 9C       		.byte	0x9c
 3205 0df8 1D0E0000 		.4byte	0xe1d
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 95


 3206 0dfc 0F       		.uleb128 0xf
 3207 0dfd B8040000 		.4byte	.LASF59
 3208 0e01 01       		.byte	0x1
 3209 0e02 6906     		.2byte	0x669
 3210 0e04 0C0D0000 		.4byte	0xd0c
 3211 0e08 0C0A0000 		.4byte	.LLST61
 3212 0e0c 18       		.uleb128 0x18
 3213 0e0d 34070000 		.4byte	.LASF67
 3214 0e11 01       		.byte	0x1
 3215 0e12 6B06     		.2byte	0x66b
 3216 0e14 5A000000 		.4byte	0x5a
 3217 0e18 2D0A0000 		.4byte	.LLST62
 3218 0e1c 00       		.byte	0
 3219 0e1d 22       		.uleb128 0x22
 3220 0e1e DE060000 		.4byte	.LASF90
 3221 0e22 01       		.byte	0x1
 3222 0e23 5807     		.2byte	0x758
 3223 0e25 00000000 		.4byte	.LFB51
 3224 0e29 24000000 		.4byte	.LFE51-.LFB51
 3225 0e2d 01       		.uleb128 0x1
 3226 0e2e 9C       		.byte	0x9c
 3227 0e2f 5F0E0000 		.4byte	0xe5f
 3228 0e33 23       		.uleb128 0x23
 3229 0e34 B8040000 		.4byte	.LASF59
 3230 0e38 01       		.byte	0x1
 3231 0e39 5807     		.2byte	0x758
 3232 0e3b AE010000 		.4byte	0x1ae
 3233 0e3f 01       		.uleb128 0x1
 3234 0e40 50       		.byte	0x50
 3235 0e41 23       		.uleb128 0x23
 3236 0e42 65000000 		.4byte	.LASF49
 3237 0e46 01       		.byte	0x1
 3238 0e47 5807     		.2byte	0x758
 3239 0e49 D8010000 		.4byte	0x1d8
 3240 0e4d 01       		.uleb128 0x1
 3241 0e4e 51       		.byte	0x51
 3242 0e4f 24       		.uleb128 0x24
 3243 0e50 757800   		.ascii	"ux\000"
 3244 0e53 01       		.byte	0x1
 3245 0e54 5A07     		.2byte	0x75a
 3246 0e56 61000000 		.4byte	0x61
 3247 0e5a 5F0A0000 		.4byte	.LLST63
 3248 0e5e 00       		.byte	0
 3249 0e5f 22       		.uleb128 0x22
 3250 0e60 23040000 		.4byte	.LASF91
 3251 0e64 01       		.byte	0x1
 3252 0e65 6F07     		.2byte	0x76f
 3253 0e67 00000000 		.4byte	.LFB52
 3254 0e6b 24000000 		.4byte	.LFE52-.LFB52
 3255 0e6f 01       		.uleb128 0x1
 3256 0e70 9C       		.byte	0x9c
 3257 0e71 930E0000 		.4byte	0xe93
 3258 0e75 23       		.uleb128 0x23
 3259 0e76 B8040000 		.4byte	.LASF59
 3260 0e7a 01       		.byte	0x1
 3261 0e7b 6F07     		.2byte	0x76f
 3262 0e7d AE010000 		.4byte	0x1ae
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 96


 3263 0e81 01       		.uleb128 0x1
 3264 0e82 50       		.byte	0x50
 3265 0e83 24       		.uleb128 0x24
 3266 0e84 757800   		.ascii	"ux\000"
 3267 0e87 01       		.byte	0x1
 3268 0e88 7107     		.2byte	0x771
 3269 0e8a 61000000 		.4byte	0x61
 3270 0e8e 7E0A0000 		.4byte	.LLST64
 3271 0e92 00       		.byte	0
 3272 0e93 22       		.uleb128 0x22
 3273 0e94 9A050000 		.4byte	.LASF92
 3274 0e98 01       		.byte	0x1
 3275 0e99 5B05     		.2byte	0x55b
 3276 0e9b 00000000 		.4byte	.LFB43
 3277 0e9f 16000000 		.4byte	.LFE43-.LFB43
 3278 0ea3 01       		.uleb128 0x1
 3279 0ea4 9C       		.byte	0x9c
 3280 0ea5 F70E0000 		.4byte	0xef7
 3281 0ea9 0F       		.uleb128 0xf
 3282 0eaa B8040000 		.4byte	.LASF59
 3283 0eae 01       		.byte	0x1
 3284 0eaf 5B05     		.2byte	0x55b
 3285 0eb1 AE010000 		.4byte	0x1ae
 3286 0eb5 A80A0000 		.4byte	.LLST65
 3287 0eb9 18       		.uleb128 0x18
 3288 0eba AC010000 		.4byte	.LASF52
 3289 0ebe 01       		.byte	0x1
 3290 0ebf 5D05     		.2byte	0x55d
 3291 0ec1 5A030000 		.4byte	0x35a
 3292 0ec5 D40A0000 		.4byte	.LLST66
 3293 0ec9 12       		.uleb128 0x12
 3294 0eca 08000000 		.4byte	.LVL205
 3295 0ece 5F0E0000 		.4byte	0xe5f
 3296 0ed2 DD0E0000 		.4byte	0xedd
 3297 0ed6 13       		.uleb128 0x13
 3298 0ed7 01       		.uleb128 0x1
 3299 0ed8 50       		.byte	0x50
 3300 0ed9 02       		.uleb128 0x2
 3301 0eda 74       		.byte	0x74
 3302 0edb 00       		.sleb128 0
 3303 0edc 00       		.byte	0
 3304 0edd 10       		.uleb128 0x10
 3305 0ede 0E000000 		.4byte	.LVL206
 3306 0ee2 7E0F0000 		.4byte	0xf7e
 3307 0ee6 19       		.uleb128 0x19
 3308 0ee7 14000000 		.4byte	.LVL207
 3309 0eeb 7E0F0000 		.4byte	0xf7e
 3310 0eef 13       		.uleb128 0x13
 3311 0ef0 01       		.uleb128 0x1
 3312 0ef1 50       		.byte	0x50
 3313 0ef2 02       		.uleb128 0x2
 3314 0ef3 74       		.byte	0x74
 3315 0ef4 00       		.sleb128 0
 3316 0ef5 00       		.byte	0
 3317 0ef6 00       		.byte	0
 3318 0ef7 25       		.uleb128 0x25
 3319 0ef8 A7020000 		.4byte	0x2a7
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 97


 3320 0efc 070F0000 		.4byte	0xf07
 3321 0f00 26       		.uleb128 0x26
 3322 0f01 76000000 		.4byte	0x76
 3323 0f05 09       		.byte	0x9
 3324 0f06 00       		.byte	0
 3325 0f07 27       		.uleb128 0x27
 3326 0f08 C1020000 		.4byte	.LASF114
 3327 0f0c 01       		.byte	0x1
 3328 0f0d B2       		.byte	0xb2
 3329 0f0e F70E0000 		.4byte	0xef7
 3330 0f12 05       		.uleb128 0x5
 3331 0f13 03       		.byte	0x3
 3332 0f14 00000000 		.4byte	xQueueRegistry
 3333 0f18 28       		.uleb128 0x28
 3334 0f19 A2060000 		.4byte	.LASF93
 3335 0f1d A2060000 		.4byte	.LASF93
 3336 0f21 05       		.byte	0x5
 3337 0f22 BF05     		.2byte	0x5bf
 3338 0f24 29       		.uleb128 0x29
 3339 0f25 A2000000 		.4byte	.LASF115
 3340 0f29 A2000000 		.4byte	.LASF115
 3341 0f2d 2A       		.uleb128 0x2a
 3342 0f2e E0040000 		.4byte	.LASF94
 3343 0f32 E0040000 		.4byte	.LASF94
 3344 0f36 03       		.byte	0x3
 3345 0f37 78       		.byte	0x78
 3346 0f38 28       		.uleb128 0x28
 3347 0f39 69070000 		.4byte	.LASF95
 3348 0f3d 69070000 		.4byte	.LASF95
 3349 0f41 05       		.byte	0x5
 3350 0f42 8D05     		.2byte	0x58d
 3351 0f44 28       		.uleb128 0x28
 3352 0f45 1B060000 		.4byte	.LASF96
 3353 0f49 1B060000 		.4byte	.LASF96
 3354 0f4d 05       		.byte	0x5
 3355 0f4e AD05     		.2byte	0x5ad
 3356 0f50 2A       		.uleb128 0x2a
 3357 0f51 65050000 		.4byte	.LASF97
 3358 0f55 65050000 		.4byte	.LASF97
 3359 0f59 03       		.byte	0x3
 3360 0f5a 79       		.byte	0x79
 3361 0f5b 2A       		.uleb128 0x2a
 3362 0f5c 48050000 		.4byte	.LASF98
 3363 0f60 48050000 		.4byte	.LASF98
 3364 0f64 03       		.byte	0x3
 3365 0f65 6E       		.byte	0x6e
 3366 0f66 28       		.uleb128 0x28
 3367 0f67 3C070000 		.4byte	.LASF99
 3368 0f6b 3C070000 		.4byte	.LASF99
 3369 0f6f 04       		.byte	0x4
 3370 0f70 3801     		.2byte	0x138
 3371 0f72 28       		.uleb128 0x28
 3372 0f73 4C070000 		.4byte	.LASF100
 3373 0f77 4C070000 		.4byte	.LASF100
 3374 0f7b 07       		.byte	0x7
 3375 0f7c 6F01     		.2byte	0x16f
 3376 0f7e 28       		.uleb128 0x28
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 98


 3377 0f7f D7050000 		.4byte	.LASF101
 3378 0f83 D7050000 		.4byte	.LASF101
 3379 0f87 07       		.byte	0x7
 3380 0f88 7001     		.2byte	0x170
 3381 0f8a 28       		.uleb128 0x28
 3382 0f8b 14010000 		.4byte	.LASF102
 3383 0f8f 14010000 		.4byte	.LASF102
 3384 0f93 05       		.byte	0x5
 3385 0f94 A105     		.2byte	0x5a1
 3386 0f96 28       		.uleb128 0x28
 3387 0f97 59070000 		.4byte	.LASF103
 3388 0f9b 59070000 		.4byte	.LASF103
 3389 0f9f 05       		.byte	0x5
 3390 0fa0 BA03     		.2byte	0x3ba
 3391 0fa2 28       		.uleb128 0x28
 3392 0fa3 8D060000 		.4byte	.LASF104
 3393 0fa7 8D060000 		.4byte	.LASF104
 3394 0fab 05       		.byte	0x5
 3395 0fac A705     		.2byte	0x5a7
 3396 0fae 28       		.uleb128 0x28
 3397 0faf 0E070000 		.4byte	.LASF105
 3398 0fb3 0E070000 		.4byte	.LASF105
 3399 0fb7 05       		.byte	0x5
 3400 0fb8 6D05     		.2byte	0x56d
 3401 0fba 28       		.uleb128 0x28
 3402 0fbb 35060000 		.4byte	.LASF106
 3403 0fbf 35060000 		.4byte	.LASF106
 3404 0fc3 05       		.byte	0x5
 3405 0fc4 EE03     		.2byte	0x3ee
 3406 0fc6 2A       		.uleb128 0x2a
 3407 0fc7 33000000 		.4byte	.LASF107
 3408 0fcb 33000000 		.4byte	.LASF107
 3409 0fcf 03       		.byte	0x3
 3410 0fd0 7A       		.byte	0x7a
 3411 0fd1 2A       		.uleb128 0x2a
 3412 0fd2 29010000 		.4byte	.LASF108
 3413 0fd6 29010000 		.4byte	.LASF108
 3414 0fda 03       		.byte	0x3
 3415 0fdb 7B       		.byte	0x7b
 3416 0fdc 28       		.uleb128 0x28
 3417 0fdd 70030000 		.4byte	.LASF109
 3418 0fe1 70030000 		.4byte	.LASF109
 3419 0fe5 05       		.byte	0x5
 3420 0fe6 9C05     		.2byte	0x59c
 3421 0fe8 28       		.uleb128 0x28
 3422 0fe9 78060000 		.4byte	.LASF110
 3423 0fed 78060000 		.4byte	.LASF110
 3424 0ff1 05       		.byte	0x5
 3425 0ff2 B905     		.2byte	0x5b9
 3426 0ff4 00       		.byte	0
 3427              		.section	.debug_abbrev,"",%progbits
 3428              	.Ldebug_abbrev0:
 3429 0000 01       		.uleb128 0x1
 3430 0001 11       		.uleb128 0x11
 3431 0002 01       		.byte	0x1
 3432 0003 25       		.uleb128 0x25
 3433 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 99


 3434 0005 13       		.uleb128 0x13
 3435 0006 0B       		.uleb128 0xb
 3436 0007 03       		.uleb128 0x3
 3437 0008 0E       		.uleb128 0xe
 3438 0009 1B       		.uleb128 0x1b
 3439 000a 0E       		.uleb128 0xe
 3440 000b 55       		.uleb128 0x55
 3441 000c 17       		.uleb128 0x17
 3442 000d 11       		.uleb128 0x11
 3443 000e 01       		.uleb128 0x1
 3444 000f 10       		.uleb128 0x10
 3445 0010 17       		.uleb128 0x17
 3446 0011 00       		.byte	0
 3447 0012 00       		.byte	0
 3448 0013 02       		.uleb128 0x2
 3449 0014 16       		.uleb128 0x16
 3450 0015 00       		.byte	0
 3451 0016 03       		.uleb128 0x3
 3452 0017 0E       		.uleb128 0xe
 3453 0018 3A       		.uleb128 0x3a
 3454 0019 0B       		.uleb128 0xb
 3455 001a 3B       		.uleb128 0x3b
 3456 001b 0B       		.uleb128 0xb
 3457 001c 49       		.uleb128 0x49
 3458 001d 13       		.uleb128 0x13
 3459 001e 00       		.byte	0
 3460 001f 00       		.byte	0
 3461 0020 03       		.uleb128 0x3
 3462 0021 24       		.uleb128 0x24
 3463 0022 00       		.byte	0
 3464 0023 0B       		.uleb128 0xb
 3465 0024 0B       		.uleb128 0xb
 3466 0025 3E       		.uleb128 0x3e
 3467 0026 0B       		.uleb128 0xb
 3468 0027 03       		.uleb128 0x3
 3469 0028 0E       		.uleb128 0xe
 3470 0029 00       		.byte	0
 3471 002a 00       		.byte	0
 3472 002b 04       		.uleb128 0x4
 3473 002c 24       		.uleb128 0x24
 3474 002d 00       		.byte	0
 3475 002e 0B       		.uleb128 0xb
 3476 002f 0B       		.uleb128 0xb
 3477 0030 3E       		.uleb128 0x3e
 3478 0031 0B       		.uleb128 0xb
 3479 0032 03       		.uleb128 0x3
 3480 0033 08       		.uleb128 0x8
 3481 0034 00       		.byte	0
 3482 0035 00       		.byte	0
 3483 0036 05       		.uleb128 0x5
 3484 0037 0F       		.uleb128 0xf
 3485 0038 00       		.byte	0
 3486 0039 0B       		.uleb128 0xb
 3487 003a 0B       		.uleb128 0xb
 3488 003b 00       		.byte	0
 3489 003c 00       		.byte	0
 3490 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 100


 3491 003e 0F       		.uleb128 0xf
 3492 003f 00       		.byte	0
 3493 0040 0B       		.uleb128 0xb
 3494 0041 0B       		.uleb128 0xb
 3495 0042 49       		.uleb128 0x49
 3496 0043 13       		.uleb128 0x13
 3497 0044 00       		.byte	0
 3498 0045 00       		.byte	0
 3499 0046 07       		.uleb128 0x7
 3500 0047 26       		.uleb128 0x26
 3501 0048 00       		.byte	0
 3502 0049 00       		.byte	0
 3503 004a 00       		.byte	0
 3504 004b 08       		.uleb128 0x8
 3505 004c 13       		.uleb128 0x13
 3506 004d 01       		.byte	0x1
 3507 004e 03       		.uleb128 0x3
 3508 004f 0E       		.uleb128 0xe
 3509 0050 0B       		.uleb128 0xb
 3510 0051 0B       		.uleb128 0xb
 3511 0052 3A       		.uleb128 0x3a
 3512 0053 0B       		.uleb128 0xb
 3513 0054 3B       		.uleb128 0x3b
 3514 0055 0B       		.uleb128 0xb
 3515 0056 01       		.uleb128 0x1
 3516 0057 13       		.uleb128 0x13
 3517 0058 00       		.byte	0
 3518 0059 00       		.byte	0
 3519 005a 09       		.uleb128 0x9
 3520 005b 0D       		.uleb128 0xd
 3521 005c 00       		.byte	0
 3522 005d 03       		.uleb128 0x3
 3523 005e 0E       		.uleb128 0xe
 3524 005f 3A       		.uleb128 0x3a
 3525 0060 0B       		.uleb128 0xb
 3526 0061 3B       		.uleb128 0x3b
 3527 0062 0B       		.uleb128 0xb
 3528 0063 49       		.uleb128 0x49
 3529 0064 13       		.uleb128 0x13
 3530 0065 38       		.uleb128 0x38
 3531 0066 0B       		.uleb128 0xb
 3532 0067 00       		.byte	0
 3533 0068 00       		.byte	0
 3534 0069 0A       		.uleb128 0xa
 3535 006a 17       		.uleb128 0x17
 3536 006b 01       		.byte	0x1
 3537 006c 0B       		.uleb128 0xb
 3538 006d 0B       		.uleb128 0xb
 3539 006e 3A       		.uleb128 0x3a
 3540 006f 0B       		.uleb128 0xb
 3541 0070 3B       		.uleb128 0x3b
 3542 0071 0B       		.uleb128 0xb
 3543 0072 01       		.uleb128 0x1
 3544 0073 13       		.uleb128 0x13
 3545 0074 00       		.byte	0
 3546 0075 00       		.byte	0
 3547 0076 0B       		.uleb128 0xb
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 101


 3548 0077 0D       		.uleb128 0xd
 3549 0078 00       		.byte	0
 3550 0079 03       		.uleb128 0x3
 3551 007a 0E       		.uleb128 0xe
 3552 007b 3A       		.uleb128 0x3a
 3553 007c 0B       		.uleb128 0xb
 3554 007d 3B       		.uleb128 0x3b
 3555 007e 0B       		.uleb128 0xb
 3556 007f 49       		.uleb128 0x49
 3557 0080 13       		.uleb128 0x13
 3558 0081 00       		.byte	0
 3559 0082 00       		.byte	0
 3560 0083 0C       		.uleb128 0xc
 3561 0084 0D       		.uleb128 0xd
 3562 0085 00       		.byte	0
 3563 0086 03       		.uleb128 0x3
 3564 0087 08       		.uleb128 0x8
 3565 0088 3A       		.uleb128 0x3a
 3566 0089 0B       		.uleb128 0xb
 3567 008a 3B       		.uleb128 0x3b
 3568 008b 0B       		.uleb128 0xb
 3569 008c 49       		.uleb128 0x49
 3570 008d 13       		.uleb128 0x13
 3571 008e 38       		.uleb128 0x38
 3572 008f 0B       		.uleb128 0xb
 3573 0090 00       		.byte	0
 3574 0091 00       		.byte	0
 3575 0092 0D       		.uleb128 0xd
 3576 0093 35       		.uleb128 0x35
 3577 0094 00       		.byte	0
 3578 0095 49       		.uleb128 0x49
 3579 0096 13       		.uleb128 0x13
 3580 0097 00       		.byte	0
 3581 0098 00       		.byte	0
 3582 0099 0E       		.uleb128 0xe
 3583 009a 2E       		.uleb128 0x2e
 3584 009b 01       		.byte	0x1
 3585 009c 03       		.uleb128 0x3
 3586 009d 0E       		.uleb128 0xe
 3587 009e 3A       		.uleb128 0x3a
 3588 009f 0B       		.uleb128 0xb
 3589 00a0 3B       		.uleb128 0x3b
 3590 00a1 05       		.uleb128 0x5
 3591 00a2 27       		.uleb128 0x27
 3592 00a3 19       		.uleb128 0x19
 3593 00a4 11       		.uleb128 0x11
 3594 00a5 01       		.uleb128 0x1
 3595 00a6 12       		.uleb128 0x12
 3596 00a7 06       		.uleb128 0x6
 3597 00a8 40       		.uleb128 0x40
 3598 00a9 18       		.uleb128 0x18
 3599 00aa 9742     		.uleb128 0x2117
 3600 00ac 19       		.uleb128 0x19
 3601 00ad 01       		.uleb128 0x1
 3602 00ae 13       		.uleb128 0x13
 3603 00af 00       		.byte	0
 3604 00b0 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 102


 3605 00b1 0F       		.uleb128 0xf
 3606 00b2 05       		.uleb128 0x5
 3607 00b3 00       		.byte	0
 3608 00b4 03       		.uleb128 0x3
 3609 00b5 0E       		.uleb128 0xe
 3610 00b6 3A       		.uleb128 0x3a
 3611 00b7 0B       		.uleb128 0xb
 3612 00b8 3B       		.uleb128 0x3b
 3613 00b9 05       		.uleb128 0x5
 3614 00ba 49       		.uleb128 0x49
 3615 00bb 13       		.uleb128 0x13
 3616 00bc 02       		.uleb128 0x2
 3617 00bd 17       		.uleb128 0x17
 3618 00be 00       		.byte	0
 3619 00bf 00       		.byte	0
 3620 00c0 10       		.uleb128 0x10
 3621 00c1 898201   		.uleb128 0x4109
 3622 00c4 00       		.byte	0
 3623 00c5 11       		.uleb128 0x11
 3624 00c6 01       		.uleb128 0x1
 3625 00c7 31       		.uleb128 0x31
 3626 00c8 13       		.uleb128 0x13
 3627 00c9 00       		.byte	0
 3628 00ca 00       		.byte	0
 3629 00cb 11       		.uleb128 0x11
 3630 00cc 26       		.uleb128 0x26
 3631 00cd 00       		.byte	0
 3632 00ce 49       		.uleb128 0x49
 3633 00cf 13       		.uleb128 0x13
 3634 00d0 00       		.byte	0
 3635 00d1 00       		.byte	0
 3636 00d2 12       		.uleb128 0x12
 3637 00d3 898201   		.uleb128 0x4109
 3638 00d6 01       		.byte	0x1
 3639 00d7 11       		.uleb128 0x11
 3640 00d8 01       		.uleb128 0x1
 3641 00d9 31       		.uleb128 0x31
 3642 00da 13       		.uleb128 0x13
 3643 00db 01       		.uleb128 0x1
 3644 00dc 13       		.uleb128 0x13
 3645 00dd 00       		.byte	0
 3646 00de 00       		.byte	0
 3647 00df 13       		.uleb128 0x13
 3648 00e0 8A8201   		.uleb128 0x410a
 3649 00e3 00       		.byte	0
 3650 00e4 02       		.uleb128 0x2
 3651 00e5 18       		.uleb128 0x18
 3652 00e6 9142     		.uleb128 0x2111
 3653 00e8 18       		.uleb128 0x18
 3654 00e9 00       		.byte	0
 3655 00ea 00       		.byte	0
 3656 00eb 14       		.uleb128 0x14
 3657 00ec 2E       		.uleb128 0x2e
 3658 00ed 01       		.byte	0x1
 3659 00ee 3F       		.uleb128 0x3f
 3660 00ef 19       		.uleb128 0x19
 3661 00f0 03       		.uleb128 0x3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 103


 3662 00f1 0E       		.uleb128 0xe
 3663 00f2 3A       		.uleb128 0x3a
 3664 00f3 0B       		.uleb128 0xb
 3665 00f4 3B       		.uleb128 0x3b
 3666 00f5 0B       		.uleb128 0xb
 3667 00f6 27       		.uleb128 0x27
 3668 00f7 19       		.uleb128 0x19
 3669 00f8 49       		.uleb128 0x49
 3670 00f9 13       		.uleb128 0x13
 3671 00fa 11       		.uleb128 0x11
 3672 00fb 01       		.uleb128 0x1
 3673 00fc 12       		.uleb128 0x12
 3674 00fd 06       		.uleb128 0x6
 3675 00fe 40       		.uleb128 0x40
 3676 00ff 18       		.uleb128 0x18
 3677 0100 9742     		.uleb128 0x2117
 3678 0102 19       		.uleb128 0x19
 3679 0103 01       		.uleb128 0x1
 3680 0104 13       		.uleb128 0x13
 3681 0105 00       		.byte	0
 3682 0106 00       		.byte	0
 3683 0107 15       		.uleb128 0x15
 3684 0108 05       		.uleb128 0x5
 3685 0109 00       		.byte	0
 3686 010a 03       		.uleb128 0x3
 3687 010b 0E       		.uleb128 0xe
 3688 010c 3A       		.uleb128 0x3a
 3689 010d 0B       		.uleb128 0xb
 3690 010e 3B       		.uleb128 0x3b
 3691 010f 0B       		.uleb128 0xb
 3692 0110 49       		.uleb128 0x49
 3693 0111 13       		.uleb128 0x13
 3694 0112 02       		.uleb128 0x2
 3695 0113 17       		.uleb128 0x17
 3696 0114 00       		.byte	0
 3697 0115 00       		.byte	0
 3698 0116 16       		.uleb128 0x16
 3699 0117 34       		.uleb128 0x34
 3700 0118 00       		.byte	0
 3701 0119 03       		.uleb128 0x3
 3702 011a 0E       		.uleb128 0xe
 3703 011b 3A       		.uleb128 0x3a
 3704 011c 0B       		.uleb128 0xb
 3705 011d 3B       		.uleb128 0x3b
 3706 011e 0B       		.uleb128 0xb
 3707 011f 49       		.uleb128 0x49
 3708 0120 13       		.uleb128 0x13
 3709 0121 02       		.uleb128 0x2
 3710 0122 17       		.uleb128 0x17
 3711 0123 00       		.byte	0
 3712 0124 00       		.byte	0
 3713 0125 17       		.uleb128 0x17
 3714 0126 2E       		.uleb128 0x2e
 3715 0127 01       		.byte	0x1
 3716 0128 3F       		.uleb128 0x3f
 3717 0129 19       		.uleb128 0x19
 3718 012a 03       		.uleb128 0x3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 104


 3719 012b 0E       		.uleb128 0xe
 3720 012c 3A       		.uleb128 0x3a
 3721 012d 0B       		.uleb128 0xb
 3722 012e 3B       		.uleb128 0x3b
 3723 012f 05       		.uleb128 0x5
 3724 0130 27       		.uleb128 0x27
 3725 0131 19       		.uleb128 0x19
 3726 0132 49       		.uleb128 0x49
 3727 0133 13       		.uleb128 0x13
 3728 0134 11       		.uleb128 0x11
 3729 0135 01       		.uleb128 0x1
 3730 0136 12       		.uleb128 0x12
 3731 0137 06       		.uleb128 0x6
 3732 0138 40       		.uleb128 0x40
 3733 0139 18       		.uleb128 0x18
 3734 013a 9742     		.uleb128 0x2117
 3735 013c 19       		.uleb128 0x19
 3736 013d 01       		.uleb128 0x1
 3737 013e 13       		.uleb128 0x13
 3738 013f 00       		.byte	0
 3739 0140 00       		.byte	0
 3740 0141 18       		.uleb128 0x18
 3741 0142 34       		.uleb128 0x34
 3742 0143 00       		.byte	0
 3743 0144 03       		.uleb128 0x3
 3744 0145 0E       		.uleb128 0xe
 3745 0146 3A       		.uleb128 0x3a
 3746 0147 0B       		.uleb128 0xb
 3747 0148 3B       		.uleb128 0x3b
 3748 0149 05       		.uleb128 0x5
 3749 014a 49       		.uleb128 0x49
 3750 014b 13       		.uleb128 0x13
 3751 014c 02       		.uleb128 0x2
 3752 014d 17       		.uleb128 0x17
 3753 014e 00       		.byte	0
 3754 014f 00       		.byte	0
 3755 0150 19       		.uleb128 0x19
 3756 0151 898201   		.uleb128 0x4109
 3757 0154 01       		.byte	0x1
 3758 0155 11       		.uleb128 0x11
 3759 0156 01       		.uleb128 0x1
 3760 0157 31       		.uleb128 0x31
 3761 0158 13       		.uleb128 0x13
 3762 0159 00       		.byte	0
 3763 015a 00       		.byte	0
 3764 015b 1A       		.uleb128 0x1a
 3765 015c 2E       		.uleb128 0x2e
 3766 015d 01       		.byte	0x1
 3767 015e 03       		.uleb128 0x3
 3768 015f 0E       		.uleb128 0xe
 3769 0160 3A       		.uleb128 0x3a
 3770 0161 0B       		.uleb128 0xb
 3771 0162 3B       		.uleb128 0x3b
 3772 0163 05       		.uleb128 0x5
 3773 0164 27       		.uleb128 0x27
 3774 0165 19       		.uleb128 0x19
 3775 0166 49       		.uleb128 0x49
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 105


 3776 0167 13       		.uleb128 0x13
 3777 0168 20       		.uleb128 0x20
 3778 0169 0B       		.uleb128 0xb
 3779 016a 01       		.uleb128 0x1
 3780 016b 13       		.uleb128 0x13
 3781 016c 00       		.byte	0
 3782 016d 00       		.byte	0
 3783 016e 1B       		.uleb128 0x1b
 3784 016f 05       		.uleb128 0x5
 3785 0170 00       		.byte	0
 3786 0171 03       		.uleb128 0x3
 3787 0172 0E       		.uleb128 0xe
 3788 0173 3A       		.uleb128 0x3a
 3789 0174 0B       		.uleb128 0xb
 3790 0175 3B       		.uleb128 0x3b
 3791 0176 05       		.uleb128 0x5
 3792 0177 49       		.uleb128 0x49
 3793 0178 13       		.uleb128 0x13
 3794 0179 00       		.byte	0
 3795 017a 00       		.byte	0
 3796 017b 1C       		.uleb128 0x1c
 3797 017c 34       		.uleb128 0x34
 3798 017d 00       		.byte	0
 3799 017e 03       		.uleb128 0x3
 3800 017f 0E       		.uleb128 0xe
 3801 0180 3A       		.uleb128 0x3a
 3802 0181 0B       		.uleb128 0xb
 3803 0182 3B       		.uleb128 0x3b
 3804 0183 05       		.uleb128 0x5
 3805 0184 49       		.uleb128 0x49
 3806 0185 13       		.uleb128 0x13
 3807 0186 00       		.byte	0
 3808 0187 00       		.byte	0
 3809 0188 1D       		.uleb128 0x1d
 3810 0189 34       		.uleb128 0x34
 3811 018a 00       		.byte	0
 3812 018b 03       		.uleb128 0x3
 3813 018c 0E       		.uleb128 0xe
 3814 018d 3A       		.uleb128 0x3a
 3815 018e 0B       		.uleb128 0xb
 3816 018f 3B       		.uleb128 0x3b
 3817 0190 05       		.uleb128 0x5
 3818 0191 49       		.uleb128 0x49
 3819 0192 13       		.uleb128 0x13
 3820 0193 02       		.uleb128 0x2
 3821 0194 18       		.uleb128 0x18
 3822 0195 00       		.byte	0
 3823 0196 00       		.byte	0
 3824 0197 1E       		.uleb128 0x1e
 3825 0198 1D       		.uleb128 0x1d
 3826 0199 01       		.byte	0x1
 3827 019a 31       		.uleb128 0x31
 3828 019b 13       		.uleb128 0x13
 3829 019c 11       		.uleb128 0x11
 3830 019d 01       		.uleb128 0x1
 3831 019e 12       		.uleb128 0x12
 3832 019f 06       		.uleb128 0x6
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 106


 3833 01a0 58       		.uleb128 0x58
 3834 01a1 0B       		.uleb128 0xb
 3835 01a2 59       		.uleb128 0x59
 3836 01a3 05       		.uleb128 0x5
 3837 01a4 01       		.uleb128 0x1
 3838 01a5 13       		.uleb128 0x13
 3839 01a6 00       		.byte	0
 3840 01a7 00       		.byte	0
 3841 01a8 1F       		.uleb128 0x1f
 3842 01a9 05       		.uleb128 0x5
 3843 01aa 00       		.byte	0
 3844 01ab 31       		.uleb128 0x31
 3845 01ac 13       		.uleb128 0x13
 3846 01ad 02       		.uleb128 0x2
 3847 01ae 17       		.uleb128 0x17
 3848 01af 00       		.byte	0
 3849 01b0 00       		.byte	0
 3850 01b1 20       		.uleb128 0x20
 3851 01b2 0B       		.uleb128 0xb
 3852 01b3 01       		.byte	0x1
 3853 01b4 11       		.uleb128 0x11
 3854 01b5 01       		.uleb128 0x1
 3855 01b6 12       		.uleb128 0x12
 3856 01b7 06       		.uleb128 0x6
 3857 01b8 00       		.byte	0
 3858 01b9 00       		.byte	0
 3859 01ba 21       		.uleb128 0x21
 3860 01bb 34       		.uleb128 0x34
 3861 01bc 00       		.byte	0
 3862 01bd 31       		.uleb128 0x31
 3863 01be 13       		.uleb128 0x13
 3864 01bf 02       		.uleb128 0x2
 3865 01c0 17       		.uleb128 0x17
 3866 01c1 00       		.byte	0
 3867 01c2 00       		.byte	0
 3868 01c3 22       		.uleb128 0x22
 3869 01c4 2E       		.uleb128 0x2e
 3870 01c5 01       		.byte	0x1
 3871 01c6 3F       		.uleb128 0x3f
 3872 01c7 19       		.uleb128 0x19
 3873 01c8 03       		.uleb128 0x3
 3874 01c9 0E       		.uleb128 0xe
 3875 01ca 3A       		.uleb128 0x3a
 3876 01cb 0B       		.uleb128 0xb
 3877 01cc 3B       		.uleb128 0x3b
 3878 01cd 05       		.uleb128 0x5
 3879 01ce 27       		.uleb128 0x27
 3880 01cf 19       		.uleb128 0x19
 3881 01d0 11       		.uleb128 0x11
 3882 01d1 01       		.uleb128 0x1
 3883 01d2 12       		.uleb128 0x12
 3884 01d3 06       		.uleb128 0x6
 3885 01d4 40       		.uleb128 0x40
 3886 01d5 18       		.uleb128 0x18
 3887 01d6 9742     		.uleb128 0x2117
 3888 01d8 19       		.uleb128 0x19
 3889 01d9 01       		.uleb128 0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 107


 3890 01da 13       		.uleb128 0x13
 3891 01db 00       		.byte	0
 3892 01dc 00       		.byte	0
 3893 01dd 23       		.uleb128 0x23
 3894 01de 05       		.uleb128 0x5
 3895 01df 00       		.byte	0
 3896 01e0 03       		.uleb128 0x3
 3897 01e1 0E       		.uleb128 0xe
 3898 01e2 3A       		.uleb128 0x3a
 3899 01e3 0B       		.uleb128 0xb
 3900 01e4 3B       		.uleb128 0x3b
 3901 01e5 05       		.uleb128 0x5
 3902 01e6 49       		.uleb128 0x49
 3903 01e7 13       		.uleb128 0x13
 3904 01e8 02       		.uleb128 0x2
 3905 01e9 18       		.uleb128 0x18
 3906 01ea 00       		.byte	0
 3907 01eb 00       		.byte	0
 3908 01ec 24       		.uleb128 0x24
 3909 01ed 34       		.uleb128 0x34
 3910 01ee 00       		.byte	0
 3911 01ef 03       		.uleb128 0x3
 3912 01f0 08       		.uleb128 0x8
 3913 01f1 3A       		.uleb128 0x3a
 3914 01f2 0B       		.uleb128 0xb
 3915 01f3 3B       		.uleb128 0x3b
 3916 01f4 05       		.uleb128 0x5
 3917 01f5 49       		.uleb128 0x49
 3918 01f6 13       		.uleb128 0x13
 3919 01f7 02       		.uleb128 0x2
 3920 01f8 17       		.uleb128 0x17
 3921 01f9 00       		.byte	0
 3922 01fa 00       		.byte	0
 3923 01fb 25       		.uleb128 0x25
 3924 01fc 01       		.uleb128 0x1
 3925 01fd 01       		.byte	0x1
 3926 01fe 49       		.uleb128 0x49
 3927 01ff 13       		.uleb128 0x13
 3928 0200 01       		.uleb128 0x1
 3929 0201 13       		.uleb128 0x13
 3930 0202 00       		.byte	0
 3931 0203 00       		.byte	0
 3932 0204 26       		.uleb128 0x26
 3933 0205 21       		.uleb128 0x21
 3934 0206 00       		.byte	0
 3935 0207 49       		.uleb128 0x49
 3936 0208 13       		.uleb128 0x13
 3937 0209 2F       		.uleb128 0x2f
 3938 020a 0B       		.uleb128 0xb
 3939 020b 00       		.byte	0
 3940 020c 00       		.byte	0
 3941 020d 27       		.uleb128 0x27
 3942 020e 34       		.uleb128 0x34
 3943 020f 00       		.byte	0
 3944 0210 03       		.uleb128 0x3
 3945 0211 0E       		.uleb128 0xe
 3946 0212 3A       		.uleb128 0x3a
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 108


 3947 0213 0B       		.uleb128 0xb
 3948 0214 3B       		.uleb128 0x3b
 3949 0215 0B       		.uleb128 0xb
 3950 0216 49       		.uleb128 0x49
 3951 0217 13       		.uleb128 0x13
 3952 0218 3F       		.uleb128 0x3f
 3953 0219 19       		.uleb128 0x19
 3954 021a 02       		.uleb128 0x2
 3955 021b 18       		.uleb128 0x18
 3956 021c 00       		.byte	0
 3957 021d 00       		.byte	0
 3958 021e 28       		.uleb128 0x28
 3959 021f 2E       		.uleb128 0x2e
 3960 0220 00       		.byte	0
 3961 0221 3F       		.uleb128 0x3f
 3962 0222 19       		.uleb128 0x19
 3963 0223 3C       		.uleb128 0x3c
 3964 0224 19       		.uleb128 0x19
 3965 0225 6E       		.uleb128 0x6e
 3966 0226 0E       		.uleb128 0xe
 3967 0227 03       		.uleb128 0x3
 3968 0228 0E       		.uleb128 0xe
 3969 0229 3A       		.uleb128 0x3a
 3970 022a 0B       		.uleb128 0xb
 3971 022b 3B       		.uleb128 0x3b
 3972 022c 05       		.uleb128 0x5
 3973 022d 00       		.byte	0
 3974 022e 00       		.byte	0
 3975 022f 29       		.uleb128 0x29
 3976 0230 2E       		.uleb128 0x2e
 3977 0231 00       		.byte	0
 3978 0232 3F       		.uleb128 0x3f
 3979 0233 19       		.uleb128 0x19
 3980 0234 3C       		.uleb128 0x3c
 3981 0235 19       		.uleb128 0x19
 3982 0236 6E       		.uleb128 0x6e
 3983 0237 0E       		.uleb128 0xe
 3984 0238 03       		.uleb128 0x3
 3985 0239 0E       		.uleb128 0xe
 3986 023a 00       		.byte	0
 3987 023b 00       		.byte	0
 3988 023c 2A       		.uleb128 0x2a
 3989 023d 2E       		.uleb128 0x2e
 3990 023e 00       		.byte	0
 3991 023f 3F       		.uleb128 0x3f
 3992 0240 19       		.uleb128 0x19
 3993 0241 3C       		.uleb128 0x3c
 3994 0242 19       		.uleb128 0x19
 3995 0243 6E       		.uleb128 0x6e
 3996 0244 0E       		.uleb128 0xe
 3997 0245 03       		.uleb128 0x3
 3998 0246 0E       		.uleb128 0xe
 3999 0247 3A       		.uleb128 0x3a
 4000 0248 0B       		.uleb128 0xb
 4001 0249 3B       		.uleb128 0x3b
 4002 024a 0B       		.uleb128 0xb
 4003 024b 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 109


 4004 024c 00       		.byte	0
 4005 024d 00       		.byte	0
 4006              		.section	.debug_loc,"",%progbits
 4007              	.Ldebug_loc0:
 4008              	.LLST0:
 4009 0000 00000000 		.4byte	.LVL0
 4010 0004 14000000 		.4byte	.LVL3
 4011 0008 0100     		.2byte	0x1
 4012 000a 50       		.byte	0x50
 4013 000b 14000000 		.4byte	.LVL3
 4014 000f 1C000000 		.4byte	.LVL5
 4015 0013 0100     		.2byte	0x1
 4016 0015 54       		.byte	0x54
 4017 0016 1C000000 		.4byte	.LVL5
 4018 001a 22000000 		.4byte	.LVL6
 4019 001e 0100     		.2byte	0x1
 4020 0020 50       		.byte	0x50
 4021 0021 22000000 		.4byte	.LVL6
 4022 0025 3A000000 		.4byte	.LVL8
 4023 0029 0100     		.2byte	0x1
 4024 002b 54       		.byte	0x54
 4025 002c 3A000000 		.4byte	.LVL8
 4026 0030 3C000000 		.4byte	.LVL9
 4027 0034 0100     		.2byte	0x1
 4028 0036 50       		.byte	0x50
 4029 0037 3C000000 		.4byte	.LVL9
 4030 003b 6C000000 		.4byte	.LVL12
 4031 003f 0100     		.2byte	0x1
 4032 0041 54       		.byte	0x54
 4033 0042 6C000000 		.4byte	.LVL12
 4034 0046 6E000000 		.4byte	.LFE44
 4035 004a 0400     		.2byte	0x4
 4036 004c F3       		.byte	0xf3
 4037 004d 01       		.uleb128 0x1
 4038 004e 50       		.byte	0x50
 4039 004f 9F       		.byte	0x9f
 4040 0050 00000000 		.4byte	0
 4041 0054 00000000 		.4byte	0
 4042              	.LLST1:
 4043 0058 00000000 		.4byte	.LVL0
 4044 005c 17000000 		.4byte	.LVL4-1
 4045 0060 0100     		.2byte	0x1
 4046 0062 51       		.byte	0x51
 4047 0063 17000000 		.4byte	.LVL4-1
 4048 0067 1C000000 		.4byte	.LVL5
 4049 006b 0400     		.2byte	0x4
 4050 006d F3       		.byte	0xf3
 4051 006e 01       		.uleb128 0x1
 4052 006f 51       		.byte	0x51
 4053 0070 9F       		.byte	0x9f
 4054 0071 1C000000 		.4byte	.LVL5
 4055 0075 25000000 		.4byte	.LVL7-1
 4056 0079 0100     		.2byte	0x1
 4057 007b 51       		.byte	0x51
 4058 007c 25000000 		.4byte	.LVL7-1
 4059 0080 3A000000 		.4byte	.LVL8
 4060 0084 0400     		.2byte	0x4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 110


 4061 0086 F3       		.byte	0xf3
 4062 0087 01       		.uleb128 0x1
 4063 0088 51       		.byte	0x51
 4064 0089 9F       		.byte	0x9f
 4065 008a 3A000000 		.4byte	.LVL8
 4066 008e 3F000000 		.4byte	.LVL10-1
 4067 0092 0100     		.2byte	0x1
 4068 0094 51       		.byte	0x51
 4069 0095 3F000000 		.4byte	.LVL10-1
 4070 0099 6E000000 		.4byte	.LFE44
 4071 009d 0400     		.2byte	0x4
 4072 009f F3       		.byte	0xf3
 4073 00a0 01       		.uleb128 0x1
 4074 00a1 51       		.byte	0x51
 4075 00a2 9F       		.byte	0x9f
 4076 00a3 00000000 		.4byte	0
 4077 00a7 00000000 		.4byte	0
 4078              	.LLST2:
 4079 00ab 00000000 		.4byte	.LVL0
 4080 00af 06000000 		.4byte	.LVL1
 4081 00b3 0100     		.2byte	0x1
 4082 00b5 52       		.byte	0x52
 4083 00b6 06000000 		.4byte	.LVL1
 4084 00ba 0E000000 		.4byte	.LVL2
 4085 00be 0100     		.2byte	0x1
 4086 00c0 55       		.byte	0x55
 4087 00c1 0E000000 		.4byte	.LVL2
 4088 00c5 1C000000 		.4byte	.LVL5
 4089 00c9 0400     		.2byte	0x4
 4090 00cb F3       		.byte	0xf3
 4091 00cc 01       		.uleb128 0x1
 4092 00cd 52       		.byte	0x52
 4093 00ce 9F       		.byte	0x9f
 4094 00cf 1C000000 		.4byte	.LVL5
 4095 00d3 66000000 		.4byte	.LVL11
 4096 00d7 0100     		.2byte	0x1
 4097 00d9 55       		.byte	0x55
 4098 00da 66000000 		.4byte	.LVL11
 4099 00de 6E000000 		.4byte	.LFE44
 4100 00e2 0400     		.2byte	0x4
 4101 00e4 F3       		.byte	0xf3
 4102 00e5 01       		.uleb128 0x1
 4103 00e6 52       		.byte	0x52
 4104 00e7 9F       		.byte	0x9f
 4105 00e8 00000000 		.4byte	0
 4106 00ec 00000000 		.4byte	0
 4107              	.LLST3:
 4108 00f0 00000000 		.4byte	.LVL13
 4109 00f4 08000000 		.4byte	.LVL14
 4110 00f8 0100     		.2byte	0x1
 4111 00fa 50       		.byte	0x50
 4112 00fb 08000000 		.4byte	.LVL14
 4113 00ff 21000000 		.4byte	.LVL16-1
 4114 0103 0100     		.2byte	0x1
 4115 0105 53       		.byte	0x53
 4116 0106 21000000 		.4byte	.LVL16-1
 4117 010a 24000000 		.4byte	.LFE45
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 111


 4118 010e 0400     		.2byte	0x4
 4119 0110 F3       		.byte	0xf3
 4120 0111 01       		.uleb128 0x1
 4121 0112 50       		.byte	0x50
 4122 0113 9F       		.byte	0x9f
 4123 0114 00000000 		.4byte	0
 4124 0118 00000000 		.4byte	0
 4125              	.LLST4:
 4126 011c 00000000 		.4byte	.LVL13
 4127 0120 0E000000 		.4byte	.LVL15
 4128 0124 0100     		.2byte	0x1
 4129 0126 51       		.byte	0x51
 4130 0127 0E000000 		.4byte	.LVL15
 4131 012b 21000000 		.4byte	.LVL16-1
 4132 012f 0100     		.2byte	0x1
 4133 0131 50       		.byte	0x50
 4134 0132 21000000 		.4byte	.LVL16-1
 4135 0136 24000000 		.4byte	.LFE45
 4136 013a 0400     		.2byte	0x4
 4137 013c F3       		.byte	0xf3
 4138 013d 01       		.uleb128 0x1
 4139 013e 51       		.byte	0x51
 4140 013f 9F       		.byte	0x9f
 4141 0140 00000000 		.4byte	0
 4142 0144 00000000 		.4byte	0
 4143              	.LLST5:
 4144 0148 00000000 		.4byte	.LVL17
 4145 014c 07000000 		.4byte	.LVL18-1
 4146 0150 0100     		.2byte	0x1
 4147 0152 50       		.byte	0x50
 4148 0153 07000000 		.4byte	.LVL18-1
 4149 0157 68000000 		.4byte	.LVL26
 4150 015b 0100     		.2byte	0x1
 4151 015d 54       		.byte	0x54
 4152 015e 68000000 		.4byte	.LVL26
 4153 0162 6A000000 		.4byte	.LFE46
 4154 0166 0400     		.2byte	0x4
 4155 0168 F3       		.byte	0xf3
 4156 0169 01       		.uleb128 0x1
 4157 016a 50       		.byte	0x50
 4158 016b 9F       		.byte	0x9f
 4159 016c 00000000 		.4byte	0
 4160 0170 00000000 		.4byte	0
 4161              	.LLST6:
 4162 0174 00000000 		.4byte	.LVL27
 4163 0178 09000000 		.4byte	.LVL29-1
 4164 017c 0100     		.2byte	0x1
 4165 017e 50       		.byte	0x50
 4166 017f 09000000 		.4byte	.LVL29-1
 4167 0183 5C000000 		.4byte	.LVL35
 4168 0187 0100     		.2byte	0x1
 4169 0189 54       		.byte	0x54
 4170 018a 5C000000 		.4byte	.LVL35
 4171 018e 5E000000 		.4byte	.LFE32
 4172 0192 0400     		.2byte	0x4
 4173 0194 F3       		.byte	0xf3
 4174 0195 01       		.uleb128 0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 112


 4175 0196 50       		.byte	0x50
 4176 0197 9F       		.byte	0x9f
 4177 0198 00000000 		.4byte	0
 4178 019c 00000000 		.4byte	0
 4179              	.LLST7:
 4180 01a0 00000000 		.4byte	.LVL27
 4181 01a4 09000000 		.4byte	.LVL29-1
 4182 01a8 0100     		.2byte	0x1
 4183 01aa 51       		.byte	0x51
 4184 01ab 09000000 		.4byte	.LVL29-1
 4185 01af 5C000000 		.4byte	.LVL36
 4186 01b3 0100     		.2byte	0x1
 4187 01b5 55       		.byte	0x55
 4188 01b6 5C000000 		.4byte	.LVL36
 4189 01ba 5E000000 		.4byte	.LFE32
 4190 01be 0400     		.2byte	0x4
 4191 01c0 F3       		.byte	0xf3
 4192 01c1 01       		.uleb128 0x1
 4193 01c2 51       		.byte	0x51
 4194 01c3 9F       		.byte	0x9f
 4195 01c4 00000000 		.4byte	0
 4196 01c8 00000000 		.4byte	0
 4197              	.LLST8:
 4198 01cc 04000000 		.4byte	.LVL28
 4199 01d0 09000000 		.4byte	.LVL29-1
 4200 01d4 0100     		.2byte	0x1
 4201 01d6 50       		.byte	0x50
 4202 01d7 09000000 		.4byte	.LVL29-1
 4203 01db 5C000000 		.4byte	.LVL35
 4204 01df 0100     		.2byte	0x1
 4205 01e1 54       		.byte	0x54
 4206 01e2 5C000000 		.4byte	.LVL35
 4207 01e6 5E000000 		.4byte	.LFE32
 4208 01ea 0400     		.2byte	0x4
 4209 01ec F3       		.byte	0xf3
 4210 01ed 01       		.uleb128 0x1
 4211 01ee 50       		.byte	0x50
 4212 01ef 9F       		.byte	0x9f
 4213 01f0 00000000 		.4byte	0
 4214 01f4 00000000 		.4byte	0
 4215              	.LLST9:
 4216 01f8 00000000 		.4byte	.LVL37
 4217 01fc 0A000000 		.4byte	.LVL38
 4218 0200 0100     		.2byte	0x1
 4219 0202 50       		.byte	0x50
 4220 0203 0A000000 		.4byte	.LVL38
 4221 0207 0E000000 		.4byte	.LVL39
 4222 020b 0100     		.2byte	0x1
 4223 020d 56       		.byte	0x56
 4224 020e 0E000000 		.4byte	.LVL39
 4225 0212 10000000 		.4byte	.LVL40
 4226 0216 0100     		.2byte	0x1
 4227 0218 50       		.byte	0x50
 4228 0219 10000000 		.4byte	.LVL40
 4229 021d 40000000 		.4byte	.LVL52
 4230 0221 0100     		.2byte	0x1
 4231 0223 56       		.byte	0x56
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 113


 4232 0224 40000000 		.4byte	.LVL52
 4233 0228 42000000 		.4byte	.LFE33
 4234 022c 0400     		.2byte	0x4
 4235 022e F3       		.byte	0xf3
 4236 022f 01       		.uleb128 0x1
 4237 0230 50       		.byte	0x50
 4238 0231 9F       		.byte	0x9f
 4239 0232 00000000 		.4byte	0
 4240 0236 00000000 		.4byte	0
 4241              	.LLST10:
 4242 023a 00000000 		.4byte	.LVL37
 4243 023e 0A000000 		.4byte	.LVL38
 4244 0242 0100     		.2byte	0x1
 4245 0244 51       		.byte	0x51
 4246 0245 0A000000 		.4byte	.LVL38
 4247 0249 0E000000 		.4byte	.LVL39
 4248 024d 0100     		.2byte	0x1
 4249 024f 57       		.byte	0x57
 4250 0250 0E000000 		.4byte	.LVL39
 4251 0254 13000000 		.4byte	.LVL41-1
 4252 0258 0100     		.2byte	0x1
 4253 025a 51       		.byte	0x51
 4254 025b 13000000 		.4byte	.LVL41-1
 4255 025f 40000000 		.4byte	.LVL53
 4256 0263 0100     		.2byte	0x1
 4257 0265 57       		.byte	0x57
 4258 0266 40000000 		.4byte	.LVL53
 4259 026a 42000000 		.4byte	.LFE33
 4260 026e 0400     		.2byte	0x4
 4261 0270 F3       		.byte	0xf3
 4262 0271 01       		.uleb128 0x1
 4263 0272 51       		.byte	0x51
 4264 0273 9F       		.byte	0x9f
 4265 0274 00000000 		.4byte	0
 4266 0278 00000000 		.4byte	0
 4267              	.LLST11:
 4268 027c 00000000 		.4byte	.LVL37
 4269 0280 0A000000 		.4byte	.LVL38
 4270 0284 0100     		.2byte	0x1
 4271 0286 52       		.byte	0x52
 4272 0287 0A000000 		.4byte	.LVL38
 4273 028b 0E000000 		.4byte	.LVL39
 4274 028f 0400     		.2byte	0x4
 4275 0291 F3       		.byte	0xf3
 4276 0292 01       		.uleb128 0x1
 4277 0293 52       		.byte	0x52
 4278 0294 9F       		.byte	0x9f
 4279 0295 0E000000 		.4byte	.LVL39
 4280 0299 13000000 		.4byte	.LVL41-1
 4281 029d 0100     		.2byte	0x1
 4282 029f 52       		.byte	0x52
 4283 02a0 13000000 		.4byte	.LVL41-1
 4284 02a4 42000000 		.4byte	.LFE33
 4285 02a8 0400     		.2byte	0x4
 4286 02aa F3       		.byte	0xf3
 4287 02ab 01       		.uleb128 0x1
 4288 02ac 52       		.byte	0x52
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 114


 4289 02ad 9F       		.byte	0x9f
 4290 02ae 00000000 		.4byte	0
 4291 02b2 00000000 		.4byte	0
 4292              	.LLST12:
 4293 02b6 16000000 		.4byte	.LVL42
 4294 02ba 1A000000 		.4byte	.LVL44
 4295 02be 0100     		.2byte	0x1
 4296 02c0 50       		.byte	0x50
 4297 02c1 1A000000 		.4byte	.LVL44
 4298 02c5 3E000000 		.4byte	.LVL50
 4299 02c9 0100     		.2byte	0x1
 4300 02cb 54       		.byte	0x54
 4301 02cc 00000000 		.4byte	0
 4302 02d0 00000000 		.4byte	0
 4303              	.LLST13:
 4304 02d4 18000000 		.4byte	.LVL43
 4305 02d8 1E000000 		.4byte	.LVL45
 4306 02dc 0800     		.2byte	0x8
 4307 02de 76       		.byte	0x76
 4308 02df 00       		.sleb128 0
 4309 02e0 77       		.byte	0x77
 4310 02e1 00       		.sleb128 0
 4311 02e2 1E       		.byte	0x1e
 4312 02e3 23       		.byte	0x23
 4313 02e4 01       		.uleb128 0x1
 4314 02e5 9F       		.byte	0x9f
 4315 02e6 1E000000 		.4byte	.LVL45
 4316 02ea 21000000 		.4byte	.LVL46-1
 4317 02ee 0100     		.2byte	0x1
 4318 02f0 50       		.byte	0x50
 4319 02f1 21000000 		.4byte	.LVL46-1
 4320 02f5 3E000000 		.4byte	.LVL50
 4321 02f9 0800     		.2byte	0x8
 4322 02fb 76       		.byte	0x76
 4323 02fc 00       		.sleb128 0
 4324 02fd 77       		.byte	0x77
 4325 02fe 00       		.sleb128 0
 4326 02ff 1E       		.byte	0x1e
 4327 0300 23       		.byte	0x23
 4328 0301 01       		.uleb128 0x1
 4329 0302 9F       		.byte	0x9f
 4330 0303 00000000 		.4byte	0
 4331 0307 00000000 		.4byte	0
 4332              	.LLST14:
 4333 030b 00000000 		.4byte	.LVL37
 4334 030f 34000000 		.4byte	.LVL47
 4335 0313 0200     		.2byte	0x2
 4336 0315 30       		.byte	0x30
 4337 0316 9F       		.byte	0x9f
 4338 0317 34000000 		.4byte	.LVL47
 4339 031b 36000000 		.4byte	.LVL48
 4340 031f 0100     		.2byte	0x1
 4341 0321 54       		.byte	0x54
 4342 0322 36000000 		.4byte	.LVL48
 4343 0326 3E000000 		.4byte	.LVL50
 4344 032a 0200     		.2byte	0x2
 4345 032c 30       		.byte	0x30
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 115


 4346 032d 9F       		.byte	0x9f
 4347 032e 3E000000 		.4byte	.LVL50
 4348 0332 40000000 		.4byte	.LVL51
 4349 0336 0100     		.2byte	0x1
 4350 0338 54       		.byte	0x54
 4351 0339 40000000 		.4byte	.LVL51
 4352 033d 42000000 		.4byte	.LFE33
 4353 0341 0100     		.2byte	0x1
 4354 0343 50       		.byte	0x50
 4355 0344 00000000 		.4byte	0
 4356 0348 00000000 		.4byte	0
 4357              	.LLST15:
 4358 034c 00000000 		.4byte	.LVL54
 4359 0350 0E000000 		.4byte	.LVL56
 4360 0354 0100     		.2byte	0x1
 4361 0356 50       		.byte	0x50
 4362 0357 0E000000 		.4byte	.LVL56
 4363 035b DA000000 		.4byte	.LVL84
 4364 035f 0100     		.2byte	0x1
 4365 0361 54       		.byte	0x54
 4366 0362 DA000000 		.4byte	.LVL84
 4367 0366 DC000000 		.4byte	.LFE35
 4368 036a 0400     		.2byte	0x4
 4369 036c F3       		.byte	0xf3
 4370 036d 01       		.uleb128 0x1
 4371 036e 50       		.byte	0x50
 4372 036f 9F       		.byte	0x9f
 4373 0370 00000000 		.4byte	0
 4374 0374 00000000 		.4byte	0
 4375              	.LLST16:
 4376 0378 00000000 		.4byte	.LVL54
 4377 037c 0E000000 		.4byte	.LVL56
 4378 0380 0100     		.2byte	0x1
 4379 0382 51       		.byte	0x51
 4380 0383 0E000000 		.4byte	.LVL56
 4381 0387 DA000000 		.4byte	.LVL83
 4382 038b 0200     		.2byte	0x2
 4383 038d 7D       		.byte	0x7d
 4384 038e 00       		.sleb128 0
 4385 038f DA000000 		.4byte	.LVL83
 4386 0393 DC000000 		.4byte	.LFE35
 4387 0397 0200     		.2byte	0x2
 4388 0399 91       		.byte	0x91
 4389 039a 58       		.sleb128 -40
 4390 039b 00000000 		.4byte	0
 4391 039f 00000000 		.4byte	0
 4392              	.LLST17:
 4393 03a3 00000000 		.4byte	.LVL54
 4394 03a7 0E000000 		.4byte	.LVL56
 4395 03ab 0100     		.2byte	0x1
 4396 03ad 52       		.byte	0x52
 4397 03ae 0E000000 		.4byte	.LVL56
 4398 03b2 84000000 		.4byte	.LVL68
 4399 03b6 0200     		.2byte	0x2
 4400 03b8 91       		.byte	0x91
 4401 03b9 5C       		.sleb128 -36
 4402 03ba 84000000 		.4byte	.LVL68
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 116


 4403 03be 89000000 		.4byte	.LVL69-1
 4404 03c2 0200     		.2byte	0x2
 4405 03c4 71       		.byte	0x71
 4406 03c5 00       		.sleb128 0
 4407 03c6 89000000 		.4byte	.LVL69-1
 4408 03ca DC000000 		.4byte	.LFE35
 4409 03ce 0200     		.2byte	0x2
 4410 03d0 91       		.byte	0x91
 4411 03d1 5C       		.sleb128 -36
 4412 03d2 00000000 		.4byte	0
 4413 03d6 00000000 		.4byte	0
 4414              	.LLST18:
 4415 03da 00000000 		.4byte	.LVL54
 4416 03de 0E000000 		.4byte	.LVL56
 4417 03e2 0100     		.2byte	0x1
 4418 03e4 53       		.byte	0x53
 4419 03e5 0E000000 		.4byte	.LVL56
 4420 03e9 DA000000 		.4byte	.LVL85
 4421 03ed 0100     		.2byte	0x1
 4422 03ef 57       		.byte	0x57
 4423 03f0 DA000000 		.4byte	.LVL85
 4424 03f4 DC000000 		.4byte	.LFE35
 4425 03f8 0400     		.2byte	0x4
 4426 03fa F3       		.byte	0xf3
 4427 03fb 01       		.uleb128 0x1
 4428 03fc 53       		.byte	0x53
 4429 03fd 9F       		.byte	0x9f
 4430 03fe 00000000 		.4byte	0
 4431 0402 00000000 		.4byte	0
 4432              	.LLST19:
 4433 0406 00000000 		.4byte	.LVL54
 4434 040a 0E000000 		.4byte	.LVL56
 4435 040e 0200     		.2byte	0x2
 4436 0410 30       		.byte	0x30
 4437 0411 9F       		.byte	0x9f
 4438 0412 0E000000 		.4byte	.LVL56
 4439 0416 5E000000 		.4byte	.LVL63
 4440 041a 0100     		.2byte	0x1
 4441 041c 56       		.byte	0x56
 4442 041d 5E000000 		.4byte	.LVL63
 4443 0421 D8000000 		.4byte	.LVL82
 4444 0425 0200     		.2byte	0x2
 4445 0427 31       		.byte	0x31
 4446 0428 9F       		.byte	0x9f
 4447 0429 00000000 		.4byte	0
 4448 042d 00000000 		.4byte	0
 4449              	.LLST20:
 4450 0431 04000000 		.4byte	.LVL55
 4451 0435 0E000000 		.4byte	.LVL56
 4452 0439 0100     		.2byte	0x1
 4453 043b 50       		.byte	0x50
 4454 043c 0E000000 		.4byte	.LVL56
 4455 0440 DA000000 		.4byte	.LVL84
 4456 0444 0100     		.2byte	0x1
 4457 0446 54       		.byte	0x54
 4458 0447 DA000000 		.4byte	.LVL84
 4459 044b DC000000 		.4byte	.LFE35
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 117


 4460 044f 0400     		.2byte	0x4
 4461 0451 F3       		.byte	0xf3
 4462 0452 01       		.uleb128 0x1
 4463 0453 50       		.byte	0x50
 4464 0454 9F       		.byte	0x9f
 4465 0455 00000000 		.4byte	0
 4466 0459 00000000 		.4byte	0
 4467              	.LLST21:
 4468 045d 8E000000 		.4byte	.LVL70
 4469 0461 9A000000 		.4byte	.LVL73
 4470 0465 0100     		.2byte	0x1
 4471 0467 54       		.byte	0x54
 4472 0468 00000000 		.4byte	0
 4473 046c 00000000 		.4byte	0
 4474              	.LLST22:
 4475 0470 96000000 		.4byte	.LVL72
 4476 0474 9A000000 		.4byte	.LVL73
 4477 0478 0900     		.2byte	0x9
 4478 047a 76       		.byte	0x76
 4479 047b 00       		.sleb128 0
 4480 047c 75       		.byte	0x75
 4481 047d 00       		.sleb128 0
 4482 047e 29       		.byte	0x29
 4483 047f 08       		.byte	0x8
 4484 0480 FF       		.byte	0xff
 4485 0481 1A       		.byte	0x1a
 4486 0482 9F       		.byte	0x9f
 4487 0483 00000000 		.4byte	0
 4488 0487 00000000 		.4byte	0
 4489              	.LLST23:
 4490 048b 00000000 		.4byte	.LVL86
 4491 048f 04000000 		.4byte	.LVL87
 4492 0493 0100     		.2byte	0x1
 4493 0495 50       		.byte	0x50
 4494 0496 04000000 		.4byte	.LVL87
 4495 049a 42000000 		.4byte	.LFE34
 4496 049e 0400     		.2byte	0x4
 4497 04a0 F3       		.byte	0xf3
 4498 04a1 01       		.uleb128 0x1
 4499 04a2 50       		.byte	0x50
 4500 04a3 9F       		.byte	0x9f
 4501 04a4 00000000 		.4byte	0
 4502 04a8 00000000 		.4byte	0
 4503              	.LLST24:
 4504 04ac 0A000000 		.4byte	.LVL89
 4505 04b0 26000000 		.4byte	.LVL90
 4506 04b4 0100     		.2byte	0x1
 4507 04b6 50       		.byte	0x50
 4508 04b7 26000000 		.4byte	.LVL90
 4509 04bb 40000000 		.4byte	.LVL94
 4510 04bf 0100     		.2byte	0x1
 4511 04c1 54       		.byte	0x54
 4512 04c2 40000000 		.4byte	.LVL94
 4513 04c6 42000000 		.4byte	.LFE34
 4514 04ca 0100     		.2byte	0x1
 4515 04cc 50       		.byte	0x50
 4516 04cd 00000000 		.4byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 118


 4517 04d1 00000000 		.4byte	0
 4518              	.LLST25:
 4519 04d5 00000000 		.4byte	.LVL95
 4520 04d9 0D000000 		.4byte	.LVL97-1
 4521 04dd 0100     		.2byte	0x1
 4522 04df 50       		.byte	0x50
 4523 04e0 0D000000 		.4byte	.LVL97-1
 4524 04e4 5A000000 		.4byte	.LVL104
 4525 04e8 0100     		.2byte	0x1
 4526 04ea 54       		.byte	0x54
 4527 04eb 5A000000 		.4byte	.LVL104
 4528 04ef 5C000000 		.4byte	.LFE36
 4529 04f3 0400     		.2byte	0x4
 4530 04f5 F3       		.byte	0xf3
 4531 04f6 01       		.uleb128 0x1
 4532 04f7 50       		.byte	0x50
 4533 04f8 9F       		.byte	0x9f
 4534 04f9 00000000 		.4byte	0
 4535 04fd 00000000 		.4byte	0
 4536              	.LLST26:
 4537 0501 00000000 		.4byte	.LVL95
 4538 0505 0D000000 		.4byte	.LVL97-1
 4539 0509 0100     		.2byte	0x1
 4540 050b 51       		.byte	0x51
 4541 050c 0D000000 		.4byte	.LVL97-1
 4542 0510 5C000000 		.4byte	.LFE36
 4543 0514 0200     		.2byte	0x2
 4544 0516 91       		.byte	0x91
 4545 0517 64       		.sleb128 -28
 4546 0518 00000000 		.4byte	0
 4547 051c 00000000 		.4byte	0
 4548              	.LLST27:
 4549 0520 00000000 		.4byte	.LVL95
 4550 0524 0D000000 		.4byte	.LVL97-1
 4551 0528 0100     		.2byte	0x1
 4552 052a 52       		.byte	0x52
 4553 052b 0D000000 		.4byte	.LVL97-1
 4554 052f 5A000000 		.4byte	.LVL106
 4555 0533 0100     		.2byte	0x1
 4556 0535 56       		.byte	0x56
 4557 0536 5A000000 		.4byte	.LVL106
 4558 053a 5C000000 		.4byte	.LFE36
 4559 053e 0400     		.2byte	0x4
 4560 0540 F3       		.byte	0xf3
 4561 0541 01       		.uleb128 0x1
 4562 0542 52       		.byte	0x52
 4563 0543 9F       		.byte	0x9f
 4564 0544 00000000 		.4byte	0
 4565 0548 00000000 		.4byte	0
 4566              	.LLST28:
 4567 054c 00000000 		.4byte	.LVL95
 4568 0550 0D000000 		.4byte	.LVL97-1
 4569 0554 0100     		.2byte	0x1
 4570 0556 53       		.byte	0x53
 4571 0557 0D000000 		.4byte	.LVL97-1
 4572 055b 5A000000 		.4byte	.LVL107
 4573 055f 0100     		.2byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 119


 4574 0561 57       		.byte	0x57
 4575 0562 5A000000 		.4byte	.LVL107
 4576 0566 5C000000 		.4byte	.LFE36
 4577 056a 0400     		.2byte	0x4
 4578 056c F3       		.byte	0xf3
 4579 056d 01       		.uleb128 0x1
 4580 056e 53       		.byte	0x53
 4581 056f 9F       		.byte	0x9f
 4582 0570 00000000 		.4byte	0
 4583 0574 00000000 		.4byte	0
 4584              	.LLST29:
 4585 0578 52000000 		.4byte	.LVL102
 4586 057c 5A000000 		.4byte	.LVL105
 4587 0580 0100     		.2byte	0x1
 4588 0582 55       		.byte	0x55
 4589 0583 5A000000 		.4byte	.LVL105
 4590 0587 5C000000 		.4byte	.LFE36
 4591 058b 0100     		.2byte	0x1
 4592 058d 50       		.byte	0x50
 4593 058e 00000000 		.4byte	0
 4594 0592 00000000 		.4byte	0
 4595              	.LLST30:
 4596 0596 14000000 		.4byte	.LVL98
 4597 059a 24000000 		.4byte	.LVL99
 4598 059e 0100     		.2byte	0x1
 4599 05a0 50       		.byte	0x50
 4600 05a1 24000000 		.4byte	.LVL99
 4601 05a5 5C000000 		.4byte	.LFE36
 4602 05a9 0200     		.2byte	0x2
 4603 05ab 7D       		.byte	0x7d
 4604 05ac 00       		.sleb128 0
 4605 05ad 00000000 		.4byte	0
 4606 05b1 00000000 		.4byte	0
 4607              	.LLST31:
 4608 05b5 04000000 		.4byte	.LVL96
 4609 05b9 0D000000 		.4byte	.LVL97-1
 4610 05bd 0100     		.2byte	0x1
 4611 05bf 50       		.byte	0x50
 4612 05c0 0D000000 		.4byte	.LVL97-1
 4613 05c4 5A000000 		.4byte	.LVL104
 4614 05c8 0100     		.2byte	0x1
 4615 05ca 54       		.byte	0x54
 4616 05cb 5A000000 		.4byte	.LVL104
 4617 05cf 5C000000 		.4byte	.LFE36
 4618 05d3 0400     		.2byte	0x4
 4619 05d5 F3       		.byte	0xf3
 4620 05d6 01       		.uleb128 0x1
 4621 05d7 50       		.byte	0x50
 4622 05d8 9F       		.byte	0x9f
 4623 05d9 00000000 		.4byte	0
 4624 05dd 00000000 		.4byte	0
 4625              	.LLST32:
 4626 05e1 00000000 		.4byte	.LVL108
 4627 05e5 0E000000 		.4byte	.LVL110
 4628 05e9 0100     		.2byte	0x1
 4629 05eb 50       		.byte	0x50
 4630 05ec 0E000000 		.4byte	.LVL110
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 120


 4631 05f0 14010000 		.4byte	.LVL145
 4632 05f4 0100     		.2byte	0x1
 4633 05f6 54       		.byte	0x54
 4634 05f7 14010000 		.4byte	.LVL145
 4635 05fb 16010000 		.4byte	.LFE37
 4636 05ff 0400     		.2byte	0x4
 4637 0601 F3       		.byte	0xf3
 4638 0602 01       		.uleb128 0x1
 4639 0603 50       		.byte	0x50
 4640 0604 9F       		.byte	0x9f
 4641 0605 00000000 		.4byte	0
 4642 0609 00000000 		.4byte	0
 4643              	.LLST33:
 4644 060d 00000000 		.4byte	.LVL108
 4645 0611 0E000000 		.4byte	.LVL110
 4646 0615 0100     		.2byte	0x1
 4647 0617 51       		.byte	0x51
 4648 0618 0E000000 		.4byte	.LVL110
 4649 061c 14010000 		.4byte	.LVL146
 4650 0620 0100     		.2byte	0x1
 4651 0622 57       		.byte	0x57
 4652 0623 14010000 		.4byte	.LVL146
 4653 0627 16010000 		.4byte	.LFE37
 4654 062b 0400     		.2byte	0x4
 4655 062d F3       		.byte	0xf3
 4656 062e 01       		.uleb128 0x1
 4657 062f 51       		.byte	0x51
 4658 0630 9F       		.byte	0x9f
 4659 0631 00000000 		.4byte	0
 4660 0635 00000000 		.4byte	0
 4661              	.LLST34:
 4662 0639 00000000 		.4byte	.LVL108
 4663 063d 0E000000 		.4byte	.LVL110
 4664 0641 0100     		.2byte	0x1
 4665 0643 52       		.byte	0x52
 4666 0644 0E000000 		.4byte	.LVL110
 4667 0648 AC000000 		.4byte	.LVL126
 4668 064c 0200     		.2byte	0x2
 4669 064e 91       		.byte	0x91
 4670 064f 5C       		.sleb128 -36
 4671 0650 AC000000 		.4byte	.LVL126
 4672 0654 B1000000 		.4byte	.LVL127-1
 4673 0658 0200     		.2byte	0x2
 4674 065a 71       		.byte	0x71
 4675 065b 00       		.sleb128 0
 4676 065c B1000000 		.4byte	.LVL127-1
 4677 0660 16010000 		.4byte	.LFE37
 4678 0664 0200     		.2byte	0x2
 4679 0666 91       		.byte	0x91
 4680 0667 5C       		.sleb128 -36
 4681 0668 00000000 		.4byte	0
 4682 066c 00000000 		.4byte	0
 4683              	.LLST35:
 4684 0670 00000000 		.4byte	.LVL108
 4685 0674 0E000000 		.4byte	.LVL110
 4686 0678 0100     		.2byte	0x1
 4687 067a 53       		.byte	0x53
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 121


 4688 067b 0E000000 		.4byte	.LVL110
 4689 067f 14010000 		.4byte	.LVL144
 4690 0683 0200     		.2byte	0x2
 4691 0685 7D       		.byte	0x7d
 4692 0686 00       		.sleb128 0
 4693 0687 14010000 		.4byte	.LVL144
 4694 068b 16010000 		.4byte	.LFE37
 4695 068f 0200     		.2byte	0x2
 4696 0691 91       		.byte	0x91
 4697 0692 58       		.sleb128 -40
 4698 0693 00000000 		.4byte	0
 4699 0697 00000000 		.4byte	0
 4700              	.LLST36:
 4701 069b 00000000 		.4byte	.LVL108
 4702 069f 0E000000 		.4byte	.LVL110
 4703 06a3 0200     		.2byte	0x2
 4704 06a5 30       		.byte	0x30
 4705 06a6 9F       		.byte	0x9f
 4706 06a7 0E000000 		.4byte	.LVL110
 4707 06ab 86000000 		.4byte	.LVL121
 4708 06af 0100     		.2byte	0x1
 4709 06b1 56       		.byte	0x56
 4710 06b2 86000000 		.4byte	.LVL121
 4711 06b6 12010000 		.4byte	.LVL143
 4712 06ba 0200     		.2byte	0x2
 4713 06bc 31       		.byte	0x31
 4714 06bd 9F       		.byte	0x9f
 4715 06be 00000000 		.4byte	0
 4716 06c2 00000000 		.4byte	0
 4717              	.LLST37:
 4718 06c6 1E000000 		.4byte	.LVL112
 4719 06ca 6E000000 		.4byte	.LVL119
 4720 06ce 0100     		.2byte	0x1
 4721 06d0 55       		.byte	0x55
 4722 06d1 00000000 		.4byte	0
 4723 06d5 00000000 		.4byte	0
 4724              	.LLST38:
 4725 06d9 04000000 		.4byte	.LVL109
 4726 06dd 0E000000 		.4byte	.LVL110
 4727 06e1 0100     		.2byte	0x1
 4728 06e3 50       		.byte	0x50
 4729 06e4 0E000000 		.4byte	.LVL110
 4730 06e8 14010000 		.4byte	.LVL145
 4731 06ec 0100     		.2byte	0x1
 4732 06ee 54       		.byte	0x54
 4733 06ef 14010000 		.4byte	.LVL145
 4734 06f3 16010000 		.4byte	.LFE37
 4735 06f7 0400     		.2byte	0x4
 4736 06f9 F3       		.byte	0xf3
 4737 06fa 01       		.uleb128 0x1
 4738 06fb 50       		.byte	0x50
 4739 06fc 9F       		.byte	0x9f
 4740 06fd 00000000 		.4byte	0
 4741 0701 00000000 		.4byte	0
 4742              	.LLST39:
 4743 0705 B6000000 		.4byte	.LVL128
 4744 0709 C0000000 		.4byte	.LVL131
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 122


 4745 070d 0100     		.2byte	0x1
 4746 070f 54       		.byte	0x54
 4747 0710 00000000 		.4byte	0
 4748 0714 00000000 		.4byte	0
 4749              	.LLST40:
 4750 0718 BC000000 		.4byte	.LVL130
 4751 071c C0000000 		.4byte	.LVL131
 4752 0720 0800     		.2byte	0x8
 4753 0722 75       		.byte	0x75
 4754 0723 00       		.sleb128 0
 4755 0724 30       		.byte	0x30
 4756 0725 29       		.byte	0x29
 4757 0726 08       		.byte	0x8
 4758 0727 FF       		.byte	0xff
 4759 0728 1A       		.byte	0x1a
 4760 0729 9F       		.byte	0x9f
 4761 072a 00000000 		.4byte	0
 4762 072e 00000000 		.4byte	0
 4763              	.LLST41:
 4764 0732 00000000 		.4byte	.LVL147
 4765 0736 0D000000 		.4byte	.LVL149-1
 4766 073a 0100     		.2byte	0x1
 4767 073c 50       		.byte	0x50
 4768 073d 0D000000 		.4byte	.LVL149-1
 4769 0741 56000000 		.4byte	.LVL156
 4770 0745 0100     		.2byte	0x1
 4771 0747 54       		.byte	0x54
 4772 0748 56000000 		.4byte	.LVL156
 4773 074c 58000000 		.4byte	.LFE38
 4774 0750 0400     		.2byte	0x4
 4775 0752 F3       		.byte	0xf3
 4776 0753 01       		.uleb128 0x1
 4777 0754 50       		.byte	0x50
 4778 0755 9F       		.byte	0x9f
 4779 0756 00000000 		.4byte	0
 4780 075a 00000000 		.4byte	0
 4781              	.LLST42:
 4782 075e 00000000 		.4byte	.LVL147
 4783 0762 0D000000 		.4byte	.LVL149-1
 4784 0766 0100     		.2byte	0x1
 4785 0768 51       		.byte	0x51
 4786 0769 0D000000 		.4byte	.LVL149-1
 4787 076d 58000000 		.4byte	.LFE38
 4788 0771 0200     		.2byte	0x2
 4789 0773 91       		.byte	0x91
 4790 0774 64       		.sleb128 -28
 4791 0775 00000000 		.4byte	0
 4792 0779 00000000 		.4byte	0
 4793              	.LLST43:
 4794 077d 00000000 		.4byte	.LVL147
 4795 0781 0D000000 		.4byte	.LVL149-1
 4796 0785 0100     		.2byte	0x1
 4797 0787 52       		.byte	0x52
 4798 0788 0D000000 		.4byte	.LVL149-1
 4799 078c 56000000 		.4byte	.LVL158
 4800 0790 0100     		.2byte	0x1
 4801 0792 56       		.byte	0x56
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 123


 4802 0793 56000000 		.4byte	.LVL158
 4803 0797 58000000 		.4byte	.LFE38
 4804 079b 0400     		.2byte	0x4
 4805 079d F3       		.byte	0xf3
 4806 079e 01       		.uleb128 0x1
 4807 079f 52       		.byte	0x52
 4808 07a0 9F       		.byte	0x9f
 4809 07a1 00000000 		.4byte	0
 4810 07a5 00000000 		.4byte	0
 4811              	.LLST44:
 4812 07a9 4E000000 		.4byte	.LVL154
 4813 07ad 56000000 		.4byte	.LVL157
 4814 07b1 0100     		.2byte	0x1
 4815 07b3 55       		.byte	0x55
 4816 07b4 56000000 		.4byte	.LVL157
 4817 07b8 58000000 		.4byte	.LFE38
 4818 07bc 0100     		.2byte	0x1
 4819 07be 50       		.byte	0x50
 4820 07bf 00000000 		.4byte	0
 4821 07c3 00000000 		.4byte	0
 4822              	.LLST45:
 4823 07c7 12000000 		.4byte	.LVL150
 4824 07cb 1A000000 		.4byte	.LVL151
 4825 07cf 0100     		.2byte	0x1
 4826 07d1 50       		.byte	0x50
 4827 07d2 1A000000 		.4byte	.LVL151
 4828 07d6 56000000 		.4byte	.LVL159
 4829 07da 0100     		.2byte	0x1
 4830 07dc 57       		.byte	0x57
 4831 07dd 00000000 		.4byte	0
 4832 07e1 00000000 		.4byte	0
 4833              	.LLST46:
 4834 07e5 04000000 		.4byte	.LVL148
 4835 07e9 0D000000 		.4byte	.LVL149-1
 4836 07ed 0100     		.2byte	0x1
 4837 07ef 50       		.byte	0x50
 4838 07f0 0D000000 		.4byte	.LVL149-1
 4839 07f4 56000000 		.4byte	.LVL156
 4840 07f8 0100     		.2byte	0x1
 4841 07fa 54       		.byte	0x54
 4842 07fb 56000000 		.4byte	.LVL156
 4843 07ff 58000000 		.4byte	.LFE38
 4844 0803 0400     		.2byte	0x4
 4845 0805 F3       		.byte	0xf3
 4846 0806 01       		.uleb128 0x1
 4847 0807 50       		.byte	0x50
 4848 0808 9F       		.byte	0x9f
 4849 0809 00000000 		.4byte	0
 4850 080d 00000000 		.4byte	0
 4851              	.LLST47:
 4852 0811 00000000 		.4byte	.LVL160
 4853 0815 0B000000 		.4byte	.LVL162-1
 4854 0819 0100     		.2byte	0x1
 4855 081b 50       		.byte	0x50
 4856 081c 0B000000 		.4byte	.LVL162-1
 4857 0820 2A000000 		.4byte	.LVL170
 4858 0824 0100     		.2byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 124


 4859 0826 54       		.byte	0x54
 4860 0827 2A000000 		.4byte	.LVL170
 4861 082b 2C000000 		.4byte	.LFE39
 4862 082f 0400     		.2byte	0x4
 4863 0831 F3       		.byte	0xf3
 4864 0832 01       		.uleb128 0x1
 4865 0833 50       		.byte	0x50
 4866 0834 9F       		.byte	0x9f
 4867 0835 00000000 		.4byte	0
 4868 0839 00000000 		.4byte	0
 4869              	.LLST48:
 4870 083d 00000000 		.4byte	.LVL160
 4871 0841 0B000000 		.4byte	.LVL162-1
 4872 0845 0100     		.2byte	0x1
 4873 0847 51       		.byte	0x51
 4874 0848 0B000000 		.4byte	.LVL162-1
 4875 084c 2A000000 		.4byte	.LVL173
 4876 0850 0100     		.2byte	0x1
 4877 0852 57       		.byte	0x57
 4878 0853 2A000000 		.4byte	.LVL173
 4879 0857 2C000000 		.4byte	.LFE39
 4880 085b 0400     		.2byte	0x4
 4881 085d F3       		.byte	0xf3
 4882 085e 01       		.uleb128 0x1
 4883 085f 51       		.byte	0x51
 4884 0860 9F       		.byte	0x9f
 4885 0861 00000000 		.4byte	0
 4886 0865 00000000 		.4byte	0
 4887              	.LLST49:
 4888 0869 20000000 		.4byte	.LVL167
 4889 086d 22000000 		.4byte	.LVL168
 4890 0871 0200     		.2byte	0x2
 4891 0873 31       		.byte	0x31
 4892 0874 9F       		.byte	0x9f
 4893 0875 22000000 		.4byte	.LVL168
 4894 0879 2A000000 		.4byte	.LVL171
 4895 087d 0100     		.2byte	0x1
 4896 087f 55       		.byte	0x55
 4897 0880 2A000000 		.4byte	.LVL171
 4898 0884 2C000000 		.4byte	.LFE39
 4899 0888 0100     		.2byte	0x1
 4900 088a 50       		.byte	0x50
 4901 088b 00000000 		.4byte	0
 4902 088f 00000000 		.4byte	0
 4903              	.LLST50:
 4904 0893 10000000 		.4byte	.LVL163
 4905 0897 1A000000 		.4byte	.LVL165
 4906 089b 0100     		.2byte	0x1
 4907 089d 50       		.byte	0x50
 4908 089e 1A000000 		.4byte	.LVL165
 4909 08a2 2A000000 		.4byte	.LVL172
 4910 08a6 0100     		.2byte	0x1
 4911 08a8 56       		.byte	0x56
 4912 08a9 00000000 		.4byte	0
 4913 08ad 00000000 		.4byte	0
 4914              	.LLST51:
 4915 08b1 16000000 		.4byte	.LVL164
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 125


 4916 08b5 22000000 		.4byte	.LVL168
 4917 08b9 0100     		.2byte	0x1
 4918 08bb 55       		.byte	0x55
 4919 08bc 00000000 		.4byte	0
 4920 08c0 00000000 		.4byte	0
 4921              	.LLST52:
 4922 08c4 04000000 		.4byte	.LVL161
 4923 08c8 0B000000 		.4byte	.LVL162-1
 4924 08cc 0100     		.2byte	0x1
 4925 08ce 50       		.byte	0x50
 4926 08cf 0B000000 		.4byte	.LVL162-1
 4927 08d3 2A000000 		.4byte	.LVL170
 4928 08d7 0100     		.2byte	0x1
 4929 08d9 54       		.byte	0x54
 4930 08da 2A000000 		.4byte	.LVL170
 4931 08de 2C000000 		.4byte	.LFE39
 4932 08e2 0400     		.2byte	0x4
 4933 08e4 F3       		.byte	0xf3
 4934 08e5 01       		.uleb128 0x1
 4935 08e6 50       		.byte	0x50
 4936 08e7 9F       		.byte	0x9f
 4937 08e8 00000000 		.4byte	0
 4938 08ec 00000000 		.4byte	0
 4939              	.LLST53:
 4940 08f0 00000000 		.4byte	.LVL174
 4941 08f4 07000000 		.4byte	.LVL175-1
 4942 08f8 0100     		.2byte	0x1
 4943 08fa 50       		.byte	0x50
 4944 08fb 07000000 		.4byte	.LVL175-1
 4945 08ff 0A000000 		.4byte	.LVL176
 4946 0903 0100     		.2byte	0x1
 4947 0905 54       		.byte	0x54
 4948 0906 0A000000 		.4byte	.LVL176
 4949 090a 12000000 		.4byte	.LFE40
 4950 090e 0400     		.2byte	0x4
 4951 0910 F3       		.byte	0xf3
 4952 0911 01       		.uleb128 0x1
 4953 0912 50       		.byte	0x50
 4954 0913 9F       		.byte	0x9f
 4955 0914 00000000 		.4byte	0
 4956 0918 00000000 		.4byte	0
 4957              	.LLST54:
 4958 091c 0A000000 		.4byte	.LVL176
 4959 0920 10000000 		.4byte	.LVL178
 4960 0924 0100     		.2byte	0x1
 4961 0926 54       		.byte	0x54
 4962 0927 10000000 		.4byte	.LVL178
 4963 092b 12000000 		.4byte	.LFE40
 4964 092f 0100     		.2byte	0x1
 4965 0931 50       		.byte	0x50
 4966 0932 00000000 		.4byte	0
 4967 0936 00000000 		.4byte	0
 4968              	.LLST55:
 4969 093a 00000000 		.4byte	.LVL179
 4970 093e 07000000 		.4byte	.LVL181-1
 4971 0942 0100     		.2byte	0x1
 4972 0944 50       		.byte	0x50
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 126


 4973 0945 07000000 		.4byte	.LVL181-1
 4974 0949 14000000 		.4byte	.LVL185
 4975 094d 0100     		.2byte	0x1
 4976 094f 55       		.byte	0x55
 4977 0950 14000000 		.4byte	.LVL185
 4978 0954 16000000 		.4byte	.LFE41
 4979 0958 0400     		.2byte	0x4
 4980 095a F3       		.byte	0xf3
 4981 095b 01       		.uleb128 0x1
 4982 095c 50       		.byte	0x50
 4983 095d 9F       		.byte	0x9f
 4984 095e 00000000 		.4byte	0
 4985 0962 00000000 		.4byte	0
 4986              	.LLST56:
 4987 0966 0E000000 		.4byte	.LVL182
 4988 096a 14000000 		.4byte	.LVL184
 4989 096e 0100     		.2byte	0x1
 4990 0970 54       		.byte	0x54
 4991 0971 14000000 		.4byte	.LVL184
 4992 0975 16000000 		.4byte	.LFE41
 4993 0979 0100     		.2byte	0x1
 4994 097b 50       		.byte	0x50
 4995 097c 00000000 		.4byte	0
 4996 0980 00000000 		.4byte	0
 4997              	.LLST57:
 4998 0984 04000000 		.4byte	.LVL180
 4999 0988 07000000 		.4byte	.LVL181-1
 5000 098c 0100     		.2byte	0x1
 5001 098e 50       		.byte	0x50
 5002 098f 07000000 		.4byte	.LVL181-1
 5003 0993 14000000 		.4byte	.LVL185
 5004 0997 0100     		.2byte	0x1
 5005 0999 55       		.byte	0x55
 5006 099a 14000000 		.4byte	.LVL185
 5007 099e 16000000 		.4byte	.LFE41
 5008 09a2 0400     		.2byte	0x4
 5009 09a4 F3       		.byte	0xf3
 5010 09a5 01       		.uleb128 0x1
 5011 09a6 50       		.byte	0x50
 5012 09a7 9F       		.byte	0x9f
 5013 09a8 00000000 		.4byte	0
 5014 09ac 00000000 		.4byte	0
 5015              	.LLST58:
 5016 09b0 00000000 		.4byte	.LVL186
 5017 09b4 02000000 		.4byte	.LVL187
 5018 09b8 0100     		.2byte	0x1
 5019 09ba 50       		.byte	0x50
 5020 09bb 02000000 		.4byte	.LVL187
 5021 09bf 04000000 		.4byte	.LFE42
 5022 09c3 0400     		.2byte	0x4
 5023 09c5 F3       		.byte	0xf3
 5024 09c6 01       		.uleb128 0x1
 5025 09c7 50       		.byte	0x50
 5026 09c8 9F       		.byte	0x9f
 5027 09c9 00000000 		.4byte	0
 5028 09cd 00000000 		.4byte	0
 5029              	.LLST59:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 127


 5030 09d1 00000000 		.4byte	.LVL188
 5031 09d5 02000000 		.4byte	.LVL189
 5032 09d9 0100     		.2byte	0x1
 5033 09db 50       		.byte	0x50
 5034 09dc 02000000 		.4byte	.LVL189
 5035 09e0 08000000 		.4byte	.LFE48
 5036 09e4 0400     		.2byte	0x4
 5037 09e6 F3       		.byte	0xf3
 5038 09e7 01       		.uleb128 0x1
 5039 09e8 50       		.byte	0x50
 5040 09e9 9F       		.byte	0x9f
 5041 09ea 00000000 		.4byte	0
 5042 09ee 00000000 		.4byte	0
 5043              	.LLST60:
 5044 09f2 02000000 		.4byte	.LVL189
 5045 09f6 06000000 		.4byte	.LVL190
 5046 09fa 0800     		.2byte	0x8
 5047 09fc 70       		.byte	0x70
 5048 09fd 00       		.sleb128 0
 5049 09fe 30       		.byte	0x30
 5050 09ff 29       		.byte	0x29
 5051 0a00 08       		.byte	0x8
 5052 0a01 FF       		.byte	0xff
 5053 0a02 1A       		.byte	0x1a
 5054 0a03 9F       		.byte	0x9f
 5055 0a04 00000000 		.4byte	0
 5056 0a08 00000000 		.4byte	0
 5057              	.LLST61:
 5058 0a0c 00000000 		.4byte	.LVL191
 5059 0a10 06000000 		.4byte	.LVL193
 5060 0a14 0100     		.2byte	0x1
 5061 0a16 50       		.byte	0x50
 5062 0a17 06000000 		.4byte	.LVL193
 5063 0a1b 0C000000 		.4byte	.LFE50
 5064 0a1f 0400     		.2byte	0x4
 5065 0a21 F3       		.byte	0xf3
 5066 0a22 01       		.uleb128 0x1
 5067 0a23 50       		.byte	0x50
 5068 0a24 9F       		.byte	0x9f
 5069 0a25 00000000 		.4byte	0
 5070 0a29 00000000 		.4byte	0
 5071              	.LLST62:
 5072 0a2d 04000000 		.4byte	.LVL192
 5073 0a31 0A000000 		.4byte	.LVL194
 5074 0a35 0900     		.2byte	0x9
 5075 0a37 73       		.byte	0x73
 5076 0a38 00       		.sleb128 0
 5077 0a39 72       		.byte	0x72
 5078 0a3a 00       		.sleb128 0
 5079 0a3b 29       		.byte	0x29
 5080 0a3c 08       		.byte	0x8
 5081 0a3d FF       		.byte	0xff
 5082 0a3e 1A       		.byte	0x1a
 5083 0a3f 9F       		.byte	0x9f
 5084 0a40 0A000000 		.4byte	.LVL194
 5085 0a44 0C000000 		.4byte	.LFE50
 5086 0a48 0D00     		.2byte	0xd
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 128


 5087 0a4a F3       		.byte	0xf3
 5088 0a4b 01       		.uleb128 0x1
 5089 0a4c 50       		.byte	0x50
 5090 0a4d 23       		.byte	0x23
 5091 0a4e 3C       		.uleb128 0x3c
 5092 0a4f 06       		.byte	0x6
 5093 0a50 72       		.byte	0x72
 5094 0a51 00       		.sleb128 0
 5095 0a52 29       		.byte	0x29
 5096 0a53 08       		.byte	0x8
 5097 0a54 FF       		.byte	0xff
 5098 0a55 1A       		.byte	0x1a
 5099 0a56 9F       		.byte	0x9f
 5100 0a57 00000000 		.4byte	0
 5101 0a5b 00000000 		.4byte	0
 5102              	.LLST63:
 5103 0a5f 00000000 		.4byte	.LVL195
 5104 0a63 06000000 		.4byte	.LVL196
 5105 0a67 0200     		.2byte	0x2
 5106 0a69 30       		.byte	0x30
 5107 0a6a 9F       		.byte	0x9f
 5108 0a6b 06000000 		.4byte	.LVL196
 5109 0a6f 24000000 		.4byte	.LFE51
 5110 0a73 0100     		.2byte	0x1
 5111 0a75 53       		.byte	0x53
 5112 0a76 00000000 		.4byte	0
 5113 0a7a 00000000 		.4byte	0
 5114              	.LLST64:
 5115 0a7e 00000000 		.4byte	.LVL198
 5116 0a82 06000000 		.4byte	.LVL199
 5117 0a86 0200     		.2byte	0x2
 5118 0a88 30       		.byte	0x30
 5119 0a89 9F       		.byte	0x9f
 5120 0a8a 06000000 		.4byte	.LVL199
 5121 0a8e 12000000 		.4byte	.LVL200
 5122 0a92 0100     		.2byte	0x1
 5123 0a94 53       		.byte	0x53
 5124 0a95 16000000 		.4byte	.LVL201
 5125 0a99 1C000000 		.4byte	.LVL203
 5126 0a9d 0100     		.2byte	0x1
 5127 0a9f 53       		.byte	0x53
 5128 0aa0 00000000 		.4byte	0
 5129 0aa4 00000000 		.4byte	0
 5130              	.LLST65:
 5131 0aa8 00000000 		.4byte	.LVL204
 5132 0aac 07000000 		.4byte	.LVL205-1
 5133 0ab0 0100     		.2byte	0x1
 5134 0ab2 50       		.byte	0x50
 5135 0ab3 07000000 		.4byte	.LVL205-1
 5136 0ab7 14000000 		.4byte	.LVL208
 5137 0abb 0100     		.2byte	0x1
 5138 0abd 54       		.byte	0x54
 5139 0abe 14000000 		.4byte	.LVL208
 5140 0ac2 16000000 		.4byte	.LFE43
 5141 0ac6 0400     		.2byte	0x4
 5142 0ac8 F3       		.byte	0xf3
 5143 0ac9 01       		.uleb128 0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 129


 5144 0aca 50       		.byte	0x50
 5145 0acb 9F       		.byte	0x9f
 5146 0acc 00000000 		.4byte	0
 5147 0ad0 00000000 		.4byte	0
 5148              	.LLST66:
 5149 0ad4 00000000 		.4byte	.LVL204
 5150 0ad8 07000000 		.4byte	.LVL205-1
 5151 0adc 0100     		.2byte	0x1
 5152 0ade 50       		.byte	0x50
 5153 0adf 07000000 		.4byte	.LVL205-1
 5154 0ae3 14000000 		.4byte	.LVL208
 5155 0ae7 0100     		.2byte	0x1
 5156 0ae9 54       		.byte	0x54
 5157 0aea 14000000 		.4byte	.LVL208
 5158 0aee 16000000 		.4byte	.LFE43
 5159 0af2 0400     		.2byte	0x4
 5160 0af4 F3       		.byte	0xf3
 5161 0af5 01       		.uleb128 0x1
 5162 0af6 50       		.byte	0x50
 5163 0af7 9F       		.byte	0x9f
 5164 0af8 00000000 		.4byte	0
 5165 0afc 00000000 		.4byte	0
 5166              		.section	.debug_aranges,"",%progbits
 5167 0000 AC000000 		.4byte	0xac
 5168 0004 0200     		.2byte	0x2
 5169 0006 00000000 		.4byte	.Ldebug_info0
 5170 000a 04       		.byte	0x4
 5171 000b 00       		.byte	0
 5172 000c 0000     		.2byte	0
 5173 000e 0000     		.2byte	0
 5174 0010 00000000 		.4byte	.LFB44
 5175 0014 6E000000 		.4byte	.LFE44-.LFB44
 5176 0018 00000000 		.4byte	.LFB45
 5177 001c 24000000 		.4byte	.LFE45-.LFB45
 5178 0020 00000000 		.4byte	.LFB46
 5179 0024 6A000000 		.4byte	.LFE46-.LFB46
 5180 0028 00000000 		.4byte	.LFB32
 5181 002c 5E000000 		.4byte	.LFE32-.LFB32
 5182 0030 00000000 		.4byte	.LFB33
 5183 0034 42000000 		.4byte	.LFE33-.LFB33
 5184 0038 00000000 		.4byte	.LFB35
 5185 003c DC000000 		.4byte	.LFE35-.LFB35
 5186 0040 00000000 		.4byte	.LFB34
 5187 0044 42000000 		.4byte	.LFE34-.LFB34
 5188 0048 00000000 		.4byte	.LFB36
 5189 004c 5C000000 		.4byte	.LFE36-.LFB36
 5190 0050 00000000 		.4byte	.LFB37
 5191 0054 16010000 		.4byte	.LFE37-.LFB37
 5192 0058 00000000 		.4byte	.LFB38
 5193 005c 58000000 		.4byte	.LFE38-.LFB38
 5194 0060 00000000 		.4byte	.LFB39
 5195 0064 2C000000 		.4byte	.LFE39-.LFB39
 5196 0068 00000000 		.4byte	.LFB40
 5197 006c 12000000 		.4byte	.LFE40-.LFB40
 5198 0070 00000000 		.4byte	.LFB41
 5199 0074 16000000 		.4byte	.LFE41-.LFB41
 5200 0078 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 130


 5201 007c 04000000 		.4byte	.LFE42-.LFB42
 5202 0080 00000000 		.4byte	.LFB48
 5203 0084 08000000 		.4byte	.LFE48-.LFB48
 5204 0088 00000000 		.4byte	.LFB50
 5205 008c 0C000000 		.4byte	.LFE50-.LFB50
 5206 0090 00000000 		.4byte	.LFB51
 5207 0094 24000000 		.4byte	.LFE51-.LFB51
 5208 0098 00000000 		.4byte	.LFB52
 5209 009c 24000000 		.4byte	.LFE52-.LFB52
 5210 00a0 00000000 		.4byte	.LFB43
 5211 00a4 16000000 		.4byte	.LFE43-.LFB43
 5212 00a8 00000000 		.4byte	0
 5213 00ac 00000000 		.4byte	0
 5214              		.section	.debug_ranges,"",%progbits
 5215              	.Ldebug_ranges0:
 5216 0000 00000000 		.4byte	.LFB44
 5217 0004 6E000000 		.4byte	.LFE44
 5218 0008 00000000 		.4byte	.LFB45
 5219 000c 24000000 		.4byte	.LFE45
 5220 0010 00000000 		.4byte	.LFB46
 5221 0014 6A000000 		.4byte	.LFE46
 5222 0018 00000000 		.4byte	.LFB32
 5223 001c 5E000000 		.4byte	.LFE32
 5224 0020 00000000 		.4byte	.LFB33
 5225 0024 42000000 		.4byte	.LFE33
 5226 0028 00000000 		.4byte	.LFB35
 5227 002c DC000000 		.4byte	.LFE35
 5228 0030 00000000 		.4byte	.LFB34
 5229 0034 42000000 		.4byte	.LFE34
 5230 0038 00000000 		.4byte	.LFB36
 5231 003c 5C000000 		.4byte	.LFE36
 5232 0040 00000000 		.4byte	.LFB37
 5233 0044 16010000 		.4byte	.LFE37
 5234 0048 00000000 		.4byte	.LFB38
 5235 004c 58000000 		.4byte	.LFE38
 5236 0050 00000000 		.4byte	.LFB39
 5237 0054 2C000000 		.4byte	.LFE39
 5238 0058 00000000 		.4byte	.LFB40
 5239 005c 12000000 		.4byte	.LFE40
 5240 0060 00000000 		.4byte	.LFB41
 5241 0064 16000000 		.4byte	.LFE41
 5242 0068 00000000 		.4byte	.LFB42
 5243 006c 04000000 		.4byte	.LFE42
 5244 0070 00000000 		.4byte	.LFB48
 5245 0074 08000000 		.4byte	.LFE48
 5246 0078 00000000 		.4byte	.LFB50
 5247 007c 0C000000 		.4byte	.LFE50
 5248 0080 00000000 		.4byte	.LFB51
 5249 0084 24000000 		.4byte	.LFE51
 5250 0088 00000000 		.4byte	.LFB52
 5251 008c 24000000 		.4byte	.LFE52
 5252 0090 00000000 		.4byte	.LFB43
 5253 0094 16000000 		.4byte	.LFE43
 5254 0098 00000000 		.4byte	0
 5255 009c 00000000 		.4byte	0
 5256              		.section	.debug_line,"",%progbits
 5257              	.Ldebug_line0:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 131


 5258 0000 F6030000 		.section	.debug_str,"MS",%progbits,1
 5258      0200FC00 
 5258      00000201 
 5258      FB0E0D00 
 5258      01010101 
 5259              	.LASF61:
 5260 0000 78517565 		.ascii	"xQueueGenericReset\000"
 5260      75654765 
 5260      6E657269 
 5260      63526573 
 5260      657400
 5261              	.LASF19:
 5262 0013 7076436F 		.ascii	"pvContainer\000"
 5262      6E746169 
 5262      6E657200 
 5263              	.LASF20:
 5264 001f 784C6973 		.ascii	"xListItem\000"
 5264      74497465 
 5264      6D00
 5265              	.LASF29:
 5266 0029 7854494D 		.ascii	"xTIME_OUT\000"
 5266      455F4F55 
 5266      5400
 5267              	.LASF107:
 5268 0033 756C5365 		.ascii	"ulSetInterruptMaskFromISR\000"
 5268      74496E74 
 5268      65727275 
 5268      70744D61 
 5268      736B4672 
 5269              	.LASF14:
 5270 004d 706F7274 		.ascii	"portTickType\000"
 5270      5469636B 
 5270      54797065 
 5270      00
 5271              	.LASF17:
 5272 005a 70785072 		.ascii	"pxPrevious\000"
 5272      6576696F 
 5272      757300
 5273              	.LASF49:
 5274 0065 70635175 		.ascii	"pcQueueName\000"
 5274      6575654E 
 5274      616D6500 
 5275              	.LASF55:
 5276 0071 70727643 		.ascii	"prvCopyDataToQueue\000"
 5276      6F707944 
 5276      61746154 
 5276      6F517565 
 5276      756500
 5277              	.LASF48:
 5278 0084 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 5278      455F5245 
 5278      47495354 
 5278      52595F49 
 5278      54454D00 
 5279              	.LASF54:
 5280 0098 78506F73 		.ascii	"xPosition\000"
 5280      6974696F 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 132


 5280      6E00
 5281              	.LASF115:
 5282 00a2 6D656D63 		.ascii	"memcpy\000"
 5282      707900
 5283              	.LASF84:
 5284 00a9 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 5284      6575654D 
 5284      65737361 
 5284      67657357 
 5284      61697469 
 5285              	.LASF3:
 5286 00c0 73686F72 		.ascii	"short int\000"
 5286      7420696E 
 5286      7400
 5287              	.LASF18:
 5288 00ca 70764F77 		.ascii	"pvOwner\000"
 5288      6E657200 
 5289              	.LASF80:
 5290 00d2 784A7573 		.ascii	"xJustPeeking\000"
 5290      74506565 
 5290      6B696E67 
 5290      00
 5291              	.LASF86:
 5292 00df 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 5292      65756553 
 5292      70616365 
 5292      73417661 
 5292      696C6162 
 5293              	.LASF112:
 5294 00f6 66726565 		.ascii	"freertos\\src\\queue.c\000"
 5294      72746F73 
 5294      5C737263 
 5294      5C717565 
 5294      75652E63 
 5295              	.LASF72:
 5296 010b 7854696D 		.ascii	"xTimeOut\000"
 5296      654F7574 
 5296      00
 5297              	.LASF102:
 5298 0114 76546173 		.ascii	"vTaskSetTimeOutState\000"
 5298      6B536574 
 5298      54696D65 
 5298      4F757453 
 5298      74617465 
 5299              	.LASF108:
 5300 0129 76436C65 		.ascii	"vClearInterruptMaskFromISR\000"
 5300      6172496E 
 5300      74657272 
 5300      7570744D 
 5300      61736B46 
 5301              	.LASF82:
 5302 0144 78517565 		.ascii	"xQueueReceiveFromISR\000"
 5302      75655265 
 5302      63656976 
 5302      6546726F 
 5302      6D495352 
 5303              	.LASF81:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 133


 5304 0159 70634F72 		.ascii	"pcOriginalReadPosition\000"
 5304      6967696E 
 5304      616C5265 
 5304      6164506F 
 5304      73697469 
 5305              	.LASF77:
 5306 0170 70727649 		.ascii	"prvIsQueueFull\000"
 5306      73517565 
 5306      75654675 
 5306      6C6C00
 5307              	.LASF38:
 5308 017f 70635461 		.ascii	"pcTail\000"
 5308      696C00
 5309              	.LASF68:
 5310 0186 78517565 		.ascii	"xQueueGenericSend\000"
 5310      75654765 
 5310      6E657269 
 5310      6353656E 
 5310      6400
 5311              	.LASF23:
 5312 0198 784D696E 		.ascii	"xMiniListItem\000"
 5312      694C6973 
 5312      74497465 
 5312      6D00
 5313              	.LASF11:
 5314 01a6 666C6F61 		.ascii	"float\000"
 5314      7400
 5315              	.LASF52:
 5316 01ac 70785175 		.ascii	"pxQueue\000"
 5316      65756500 
 5317              	.LASF37:
 5318 01b4 70634865 		.ascii	"pcHead\000"
 5318      616400
 5319              	.LASF69:
 5320 01bb 78546963 		.ascii	"xTicksToWait\000"
 5320      6B73546F 
 5320      57616974 
 5320      00
 5321              	.LASF7:
 5322 01c8 6C6F6E67 		.ascii	"long long int\000"
 5322      206C6F6E 
 5322      6720696E 
 5322      7400
 5323              	.LASF46:
 5324 01d6 7854784C 		.ascii	"xTxLock\000"
 5324      6F636B00 
 5325              	.LASF28:
 5326 01de 784C6973 		.ascii	"xList\000"
 5326      7400
 5327              	.LASF73:
 5328 01e4 78517565 		.ascii	"xQueueCreateMutex\000"
 5328      75654372 
 5328      65617465 
 5328      4D757465 
 5328      7800
 5329              	.LASF10:
 5330 01f6 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 134


 5330      00
 5331              	.LASF43:
 5332 01fb 75784C65 		.ascii	"uxLength\000"
 5332      6E677468 
 5332      00
 5333              	.LASF5:
 5334 0204 6C6F6E67 		.ascii	"long int\000"
 5334      20696E74 
 5334      00
 5335              	.LASF24:
 5336 020d 784C4953 		.ascii	"xLIST\000"
 5336      5400
 5337              	.LASF88:
 5338 0213 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 5338      75654973 
 5338      51756575 
 5338      65456D70 
 5338      74794672 
 5339              	.LASF33:
 5340 022d 78517565 		.ascii	"xQueueHandle\000"
 5340      75654861 
 5340      6E646C65 
 5340      00
 5341              	.LASF9:
 5342 023a 73697A65 		.ascii	"sizetype\000"
 5342      74797065 
 5342      00
 5343              	.LASF32:
 5344 0243 7854696D 		.ascii	"xTimeOutType\000"
 5344      654F7574 
 5344      54797065 
 5344      00
 5345              	.LASF64:
 5346 0250 75635175 		.ascii	"ucQueueType\000"
 5346      65756554 
 5346      79706500 
 5347              	.LASF15:
 5348 025c 78497465 		.ascii	"xItemValue\000"
 5348      6D56616C 
 5348      756500
 5349              	.LASF87:
 5350 0267 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 5350      6575654D 
 5350      65737361 
 5350      67657357 
 5350      61697469 
 5351              	.LASF47:
 5352 0285 78515545 		.ascii	"xQUEUE\000"
 5352      554500
 5353              	.LASF44:
 5354 028c 75784974 		.ascii	"uxItemSize\000"
 5354      656D5369 
 5354      7A6500
 5355              	.LASF21:
 5356 0297 784C4953 		.ascii	"xLIST_ITEM\000"
 5356      545F4954 
 5356      454D00
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 135


 5357              	.LASF62:
 5358 02a2 78517565 		.ascii	"xQueueGenericCreate\000"
 5358      75654765 
 5358      6E657269 
 5358      63437265 
 5358      61746500 
 5359              	.LASF65:
 5360 02b6 70784E65 		.ascii	"pxNewQueue\000"
 5360      77517565 
 5360      756500
 5361              	.LASF114:
 5362 02c1 78517565 		.ascii	"xQueueRegistry\000"
 5362      75655265 
 5362      67697374 
 5362      727900
 5363              	.LASF2:
 5364 02d0 756E7369 		.ascii	"unsigned char\000"
 5364      676E6564 
 5364      20636861 
 5364      7200
 5365              	.LASF31:
 5366 02de 7854696D 		.ascii	"xTimeOnEntering\000"
 5366      654F6E45 
 5366      6E746572 
 5366      696E6700 
 5367              	.LASF30:
 5368 02ee 784F7665 		.ascii	"xOverflowCount\000"
 5368      72666C6F 
 5368      77436F75 
 5368      6E7400
 5369              	.LASF113:
 5370 02fd 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Relo"
 5370      5F776F72 
 5370      6B5C6D79 
 5370      5F70726F 
 5370      6A656374 
 5371 032b 61642050 		.ascii	"ad Pro.cydsn\000"
 5371      726F2E63 
 5371      7964736E 
 5371      00
 5372              	.LASF1:
 5373 0338 7369676E 		.ascii	"signed char\000"
 5373      65642063 
 5373      68617200 
 5374              	.LASF56:
 5375 0344 70727643 		.ascii	"prvCopyDataFromQueue\000"
 5375      6F707944 
 5375      61746146 
 5375      726F6D51 
 5375      75657565 
 5376              	.LASF8:
 5377 0359 6C6F6E67 		.ascii	"long long unsigned int\000"
 5377      206C6F6E 
 5377      6720756E 
 5377      7369676E 
 5377      65642069 
 5378              	.LASF109:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 136


 5379 0370 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 5379      6B476574 
 5379      43757272 
 5379      656E7454 
 5379      61736B48 
 5380              	.LASF111:
 5381 038a 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5381      43393920 
 5381      352E342E 
 5381      31203230 
 5381      31363036 
 5382 03bd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5382      20726576 
 5382      6973696F 
 5382      6E203233 
 5382      37373135 
 5383 03f0 73202D73 		.ascii	"s -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 5383      74643D67 
 5383      6E753939 
 5383      202D6666 
 5383      756E6374 
 5384              	.LASF91:
 5385 0423 76517565 		.ascii	"vQueueUnregisterQueue\000"
 5385      7565556E 
 5385      72656769 
 5385      73746572 
 5385      51756575 
 5386              	.LASF0:
 5387 0439 756E7369 		.ascii	"unsigned int\000"
 5387      676E6564 
 5387      20696E74 
 5387      00
 5388              	.LASF53:
 5389 0446 70764974 		.ascii	"pvItemToQueue\000"
 5389      656D546F 
 5389      51756575 
 5389      6500
 5390              	.LASF51:
 5391 0454 78517565 		.ascii	"xQueueRegistryItem\000"
 5391      75655265 
 5391      67697374 
 5391      72794974 
 5391      656D00
 5392              	.LASF41:
 5393 0467 78546173 		.ascii	"xTasksWaitingToReceive\000"
 5393      6B735761 
 5393      6974696E 
 5393      67546F52 
 5393      65636569 
 5394              	.LASF66:
 5395 047e 78517565 		.ascii	"xQueueSizeInBytes\000"
 5395      75655369 
 5395      7A65496E 
 5395      42797465 
 5395      7300
 5396              	.LASF57:
 5397 0490 70764275 		.ascii	"pvBuffer\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 137


 5397      66666572 
 5397      00
 5398              	.LASF36:
 5399 0499 51756575 		.ascii	"QueueDefinition\000"
 5399      65446566 
 5399      696E6974 
 5399      696F6E00 
 5400              	.LASF58:
 5401 04a9 70727655 		.ascii	"prvUnlockQueue\000"
 5401      6E6C6F63 
 5401      6B517565 
 5401      756500
 5402              	.LASF59:
 5403 04b8 78517565 		.ascii	"xQueue\000"
 5403      756500
 5404              	.LASF4:
 5405 04bf 73686F72 		.ascii	"short unsigned int\000"
 5405      7420756E 
 5405      7369676E 
 5405      65642069 
 5405      6E7400
 5406              	.LASF63:
 5407 04d2 75785175 		.ascii	"uxQueueLength\000"
 5407      6575654C 
 5407      656E6774 
 5407      6800
 5408              	.LASF94:
 5409 04e0 76506F72 		.ascii	"vPortEnterCritical\000"
 5409      74456E74 
 5409      65724372 
 5409      69746963 
 5409      616C00
 5410              	.LASF74:
 5411 04f3 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 5411      75654765 
 5411      6E657269 
 5411      6353656E 
 5411      6446726F 
 5412              	.LASF83:
 5413 050c 78517565 		.ascii	"xQueuePeekFromISR\000"
 5413      75655065 
 5413      656B4672 
 5413      6F6D4953 
 5413      5200
 5414              	.LASF39:
 5415 051e 70635772 		.ascii	"pcWriteTo\000"
 5415      69746554 
 5415      6F00
 5416              	.LASF16:
 5417 0528 70784E65 		.ascii	"pxNext\000"
 5417      787400
 5418              	.LASF89:
 5419 052f 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 5419      75654973 
 5419      51756575 
 5419      6546756C 
 5419      6C46726F 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 138


 5420              	.LASF98:
 5421 0548 76506F72 		.ascii	"vPortYield\000"
 5421      74596965 
 5421      6C6400
 5422              	.LASF34:
 5423 0553 70635265 		.ascii	"pcReadFrom\000"
 5423      61644672 
 5423      6F6D00
 5424              	.LASF13:
 5425 055e 73697A65 		.ascii	"size_t\000"
 5425      5F7400
 5426              	.LASF97:
 5427 0565 76506F72 		.ascii	"vPortExitCritical\000"
 5427      74457869 
 5427      74437269 
 5427      74696361 
 5427      6C00
 5428              	.LASF79:
 5429 0577 78517565 		.ascii	"xQueueGenericReceive\000"
 5429      75654765 
 5429      6E657269 
 5429      63526563 
 5429      65697665 
 5430              	.LASF71:
 5431 058c 78456E74 		.ascii	"xEntryTimeSet\000"
 5431      72795469 
 5431      6D655365 
 5431      7400
 5432              	.LASF92:
 5433 059a 76517565 		.ascii	"vQueueDelete\000"
 5433      75654465 
 5433      6C657465 
 5433      00
 5434              	.LASF85:
 5435 05a7 75785265 		.ascii	"uxReturn\000"
 5435      7475726E 
 5435      00
 5436              	.LASF6:
 5437 05b0 6C6F6E67 		.ascii	"long unsigned int\000"
 5437      20756E73 
 5437      69676E65 
 5437      6420696E 
 5437      7400
 5438              	.LASF12:
 5439 05c2 646F7562 		.ascii	"double\000"
 5439      6C6500
 5440              	.LASF70:
 5441 05c9 78436F70 		.ascii	"xCopyPosition\000"
 5441      79506F73 
 5441      6974696F 
 5441      6E00
 5442              	.LASF101:
 5443 05d7 76506F72 		.ascii	"vPortFree\000"
 5443      74467265 
 5443      6500
 5444              	.LASF25:
 5445 05e1 75784E75 		.ascii	"uxNumberOfItems\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 139


 5445      6D626572 
 5445      4F664974 
 5445      656D7300 
 5446              	.LASF78:
 5447 05f1 70727649 		.ascii	"prvIsQueueEmpty\000"
 5447      73517565 
 5447      7565456D 
 5447      70747900 
 5448              	.LASF50:
 5449 0601 7848616E 		.ascii	"xHandle\000"
 5449      646C6500 
 5450              	.LASF42:
 5451 0609 75784D65 		.ascii	"uxMessagesWaiting\000"
 5451      73736167 
 5451      65735761 
 5451      6974696E 
 5451      6700
 5452              	.LASF96:
 5453 061b 76546173 		.ascii	"vTaskMissedYield\000"
 5453      6B4D6973 
 5453      73656459 
 5453      69656C64 
 5453      00
 5454              	.LASF27:
 5455 062c 784C6973 		.ascii	"xListEnd\000"
 5455      74456E64 
 5455      00
 5456              	.LASF106:
 5457 0635 78546173 		.ascii	"xTaskResumeAll\000"
 5457      6B526573 
 5457      756D6541 
 5457      6C6C00
 5458              	.LASF45:
 5459 0644 7852784C 		.ascii	"xRxLock\000"
 5459      6F636B00 
 5460              	.LASF76:
 5461 064c 75785361 		.ascii	"uxSavedInterruptStatus\000"
 5461      76656449 
 5461      6E746572 
 5461      72757074 
 5461      53746174 
 5462              	.LASF35:
 5463 0663 75785265 		.ascii	"uxRecursiveCallCount\000"
 5463      63757273 
 5463      69766543 
 5463      616C6C43 
 5463      6F756E74 
 5464              	.LASF110:
 5465 0678 76546173 		.ascii	"vTaskPriorityInherit\000"
 5465      6B507269 
 5465      6F726974 
 5465      79496E68 
 5465      65726974 
 5466              	.LASF104:
 5467 068d 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 5467      6B436865 
 5467      636B466F 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 140


 5467      7254696D 
 5467      654F7574 
 5468              	.LASF93:
 5469 06a2 76546173 		.ascii	"vTaskPriorityDisinherit\000"
 5469      6B507269 
 5469      6F726974 
 5469      79446973 
 5469      696E6865 
 5470              	.LASF60:
 5471 06ba 784E6577 		.ascii	"xNewQueue\000"
 5471      51756575 
 5471      6500
 5472              	.LASF75:
 5473 06c4 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 5473      67686572 
 5473      5072696F 
 5473      72697479 
 5473      5461736B 
 5474              	.LASF90:
 5475 06de 76517565 		.ascii	"vQueueAddToRegistry\000"
 5475      75654164 
 5475      64546F52 
 5475      65676973 
 5475      74727900 
 5476              	.LASF40:
 5477 06f2 78546173 		.ascii	"xTasksWaitingToSend\000"
 5477      6B735761 
 5477      6974696E 
 5477      67546F53 
 5477      656E6400 
 5478              	.LASF26:
 5479 0706 7078496E 		.ascii	"pxIndex\000"
 5479      64657800 
 5480              	.LASF105:
 5481 070e 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 5481      6B506C61 
 5481      63654F6E 
 5481      4576656E 
 5481      744C6973 
 5482              	.LASF22:
 5483 0724 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 5483      495F4C49 
 5483      53545F49 
 5483      54454D00 
 5484              	.LASF67:
 5485 0734 78526574 		.ascii	"xReturn\000"
 5485      75726E00 
 5486              	.LASF99:
 5487 073c 764C6973 		.ascii	"vListInitialise\000"
 5487      74496E69 
 5487      7469616C 
 5487      69736500 
 5488              	.LASF100:
 5489 074c 7076506F 		.ascii	"pvPortMalloc\000"
 5489      72744D61 
 5489      6C6C6F63 
 5489      00
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc1cRMdm.s 			page 141


 5490              	.LASF103:
 5491 0759 76546173 		.ascii	"vTaskSuspendAll\000"
 5491      6B537573 
 5491      70656E64 
 5491      416C6C00 
 5492              	.LASF95:
 5493 0769 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 5493      6B52656D 
 5493      6F766546 
 5493      726F6D45 
 5493      76656E74 
 5494              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
