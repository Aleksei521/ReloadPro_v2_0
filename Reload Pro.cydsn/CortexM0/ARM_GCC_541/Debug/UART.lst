ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_ScbModePostEnable,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	UART_ScbModePostEnable, %function
  24              	UART_ScbModePostEnable:
  25              	.LFB7:
  26              		.file 1 "Generated_Source\\PSoC4\\UART.c"
   1:Generated_Source\PSoC4/UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART.c **** * \file UART.c
   3:Generated_Source\PSoC4/UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART.c **** *
   5:Generated_Source\PSoC4/UART.c **** * \brief
   6:Generated_Source\PSoC4/UART.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/UART.c **** *
   8:Generated_Source\PSoC4/UART.c **** * Note:
   9:Generated_Source\PSoC4/UART.c **** *
  10:Generated_Source\PSoC4/UART.c **** *******************************************************************************
  11:Generated_Source\PSoC4/UART.c **** * \copyright
  12:Generated_Source\PSoC4/UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/UART.c **** 
  18:Generated_Source\PSoC4/UART.c **** #include "UART_PVT.h"
  19:Generated_Source\PSoC4/UART.c **** 
  20:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_I2C_INC)
  21:Generated_Source\PSoC4/UART.c ****     #include "UART_I2C_PVT.h"
  22:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/UART.c **** 
  24:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/UART.c ****     #include "UART_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/UART.c **** 
  28:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/UART.c ****     #include "UART_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC) */
  31:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 2


  32:Generated_Source\PSoC4/UART.c **** 
  33:Generated_Source\PSoC4/UART.c **** /***************************************
  34:Generated_Source\PSoC4/UART.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/UART.c **** ***************************************/
  36:Generated_Source\PSoC4/UART.c **** 
  37:Generated_Source\PSoC4/UART.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/UART.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbMode = UART_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableWake;
  42:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableIntr;
  43:Generated_Source\PSoC4/UART.c **** 
  44:Generated_Source\PSoC4/UART.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/UART.c ****     uint8 UART_mode;
  46:Generated_Source\PSoC4/UART.c ****     uint8 UART_acceptAddr;
  47:Generated_Source\PSoC4/UART.c **** 
  48:Generated_Source\PSoC4/UART.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_rxBuffer;
  50:Generated_Source\PSoC4/UART.c ****     uint8  UART_rxDataBits;
  51:Generated_Source\PSoC4/UART.c ****     uint32 UART_rxBufferSize;
  52:Generated_Source\PSoC4/UART.c **** 
  53:Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_txBuffer;
  54:Generated_Source\PSoC4/UART.c ****     uint8  UART_txDataBits;
  55:Generated_Source\PSoC4/UART.c ****     uint32 UART_txBufferSize;
  56:Generated_Source\PSoC4/UART.c **** 
  57:Generated_Source\PSoC4/UART.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/UART.c ****     uint8 UART_numberOfAddr;
  59:Generated_Source\PSoC4/UART.c ****     uint8 UART_subAddrSize;
  60:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/UART.c **** 
  62:Generated_Source\PSoC4/UART.c **** 
  63:Generated_Source\PSoC4/UART.c **** /***************************************
  64:Generated_Source\PSoC4/UART.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/UART.c **** ***************************************/
  66:Generated_Source\PSoC4/UART.c **** /**
  67:Generated_Source\PSoC4/UART.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/UART.c **** * \{
  69:Generated_Source\PSoC4/UART.c **** */
  70:Generated_Source\PSoC4/UART.c **** 
  71:Generated_Source\PSoC4/UART.c **** /** UART_initVar indicates whether the UART 
  72:Generated_Source\PSoC4/UART.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/UART.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/UART.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/UART.c **** *  call to the UART_Start() routine.
  76:Generated_Source\PSoC4/UART.c **** *
  77:Generated_Source\PSoC4/UART.c **** *  If re-initialization of the component is required, then the 
  78:Generated_Source\PSoC4/UART.c **** *  UART_Init() function can be called before the 
  79:Generated_Source\PSoC4/UART.c **** *  UART_Start() or UART_Enable() function.
  80:Generated_Source\PSoC4/UART.c **** */
  81:Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  82:Generated_Source\PSoC4/UART.c **** 
  83:Generated_Source\PSoC4/UART.c **** 
  84:Generated_Source\PSoC4/UART.c **** #if (! (UART_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/UART.c ****         UART_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/UART.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/UART.c ****     * UART_Stop() is called. Only these TX interrupt sources 
  88:Generated_Source\PSoC4/UART.c ****     * will be restored on a subsequent UART_Enable() call.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 3


  89:Generated_Source\PSoC4/UART.c ****     */
  90:Generated_Source\PSoC4/UART.c ****     uint16 UART_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/UART.c **** #endif /* (! (UART_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/UART.c ****               UART_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/UART.c **** /** \} globals */
  94:Generated_Source\PSoC4/UART.c **** 
  95:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/UART.c **** #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/UART.c ****     void (*UART_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/UART.c **** #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/UART.c **** 
 101:Generated_Source\PSoC4/UART.c **** 
 102:Generated_Source\PSoC4/UART.c **** /***************************************
 103:Generated_Source\PSoC4/UART.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/UART.c **** ***************************************/
 105:Generated_Source\PSoC4/UART.c **** 
 106:Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void);
 108:Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/UART.c **** 
 110:Generated_Source\PSoC4/UART.c **** 
 111:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
 113:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/UART.c **** *
 115:Generated_Source\PSoC4/UART.c **** *  Initializes the UART component to operate in one of the selected
 116:Generated_Source\PSoC4/UART.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/UART.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/UART.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/UART.c **** *  UART_I2CInit, UART_SpiInit, 
 120:Generated_Source\PSoC4/UART.c **** *  UART_UartInit or UART_EzI2CInit.
 121:Generated_Source\PSoC4/UART.c **** *
 122:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/UART.c **** void UART_Init(void)
 124:Generated_Source\PSoC4/UART.c **** {
 125:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 127:Generated_Source\PSoC4/UART.c ****     {
 128:Generated_Source\PSoC4/UART.c ****         UART_initVar = 0u;
 129:Generated_Source\PSoC4/UART.c ****     }
 130:Generated_Source\PSoC4/UART.c ****     else
 131:Generated_Source\PSoC4/UART.c ****     {
 132:Generated_Source\PSoC4/UART.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/UART.c ****     }
 134:Generated_Source\PSoC4/UART.c **** 
 135:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/UART.c ****     UART_I2CInit();
 137:Generated_Source\PSoC4/UART.c **** 
 138:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/UART.c ****     UART_SpiInit();
 140:Generated_Source\PSoC4/UART.c **** 
 141:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/UART.c ****     UART_UartInit();
 143:Generated_Source\PSoC4/UART.c **** 
 144:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/UART.c ****     UART_EzI2CInit();
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 4


 146:Generated_Source\PSoC4/UART.c **** 
 147:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/UART.c **** }
 149:Generated_Source\PSoC4/UART.c **** 
 150:Generated_Source\PSoC4/UART.c **** 
 151:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 153:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/UART.c **** *
 155:Generated_Source\PSoC4/UART.c **** *  Enables UART component operation: activates the hardware and 
 156:Generated_Source\PSoC4/UART.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/UART.c **** *  UART_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/UART.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/UART.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/UART.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/UART.c **** *  internal or external.
 162:Generated_Source\PSoC4/UART.c **** *  The UART configuration should be not changed when the component
 163:Generated_Source\PSoC4/UART.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/UART.c **** *  component.
 165:Generated_Source\PSoC4/UART.c **** *  When configuration is set to “Unconfigured UART”, the component 
 166:Generated_Source\PSoC4/UART.c **** *  must first be initialized to operate in one of the following configurations: 
 167:Generated_Source\PSoC4/UART.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/UART.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/UART.c **** *
 170:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/UART.c **** void UART_Enable(void)
 172:Generated_Source\PSoC4/UART.c **** {
 173:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/UART.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/UART.c ****     if (!UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/UART.c ****     {
 177:Generated_Source\PSoC4/UART.c ****         UART_CTRL_REG |= UART_CTRL_ENABLED;
 178:Generated_Source\PSoC4/UART.c **** 
 179:Generated_Source\PSoC4/UART.c ****         UART_ScbEnableIntr();
 180:Generated_Source\PSoC4/UART.c **** 
 181:Generated_Source\PSoC4/UART.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/UART.c ****         UART_ScbModePostEnable();
 183:Generated_Source\PSoC4/UART.c ****     }
 184:Generated_Source\PSoC4/UART.c **** #else
 185:Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG |= UART_CTRL_ENABLED;
 186:Generated_Source\PSoC4/UART.c **** 
 187:Generated_Source\PSoC4/UART.c ****     UART_ScbEnableIntr();
 188:Generated_Source\PSoC4/UART.c **** 
 189:Generated_Source\PSoC4/UART.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/UART.c ****     UART_ScbModePostEnable();
 191:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/UART.c **** }
 193:Generated_Source\PSoC4/UART.c **** 
 194:Generated_Source\PSoC4/UART.c **** 
 195:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
 197:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/UART.c **** *
 199:Generated_Source\PSoC4/UART.c **** *  Invokes UART_Init() and UART_Enable().
 200:Generated_Source\PSoC4/UART.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/UART.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/UART.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 5


 203:Generated_Source\PSoC4/UART.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/UART.c **** *
 205:Generated_Source\PSoC4/UART.c **** * \globalvars
 206:Generated_Source\PSoC4/UART.c **** *  UART_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/UART.c **** *  on first function call.
 208:Generated_Source\PSoC4/UART.c **** *
 209:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/UART.c **** void UART_Start(void)
 211:Generated_Source\PSoC4/UART.c **** {
 212:Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 213:Generated_Source\PSoC4/UART.c ****     {
 214:Generated_Source\PSoC4/UART.c ****         UART_Init();
 215:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
 216:Generated_Source\PSoC4/UART.c ****     }
 217:Generated_Source\PSoC4/UART.c **** 
 218:Generated_Source\PSoC4/UART.c ****     UART_Enable();
 219:Generated_Source\PSoC4/UART.c **** }
 220:Generated_Source\PSoC4/UART.c **** 
 221:Generated_Source\PSoC4/UART.c **** 
 222:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 224:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/UART.c **** *
 226:Generated_Source\PSoC4/UART.c **** *  Disables the UART component: disable the hardware and internal 
 227:Generated_Source\PSoC4/UART.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/UART.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/UART.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/UART.c **** *  Refer to the function UART_Enable() for the interrupt 
 231:Generated_Source\PSoC4/UART.c **** *  configuration details.
 232:Generated_Source\PSoC4/UART.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/UART.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/UART.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/UART.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/UART.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/UART.c **** *
 238:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/UART.c **** void UART_Stop(void)
 240:Generated_Source\PSoC4/UART.c **** {
 241:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/UART.c ****     UART_DisableInt();
 243:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/UART.c **** 
 245:Generated_Source\PSoC4/UART.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/UART.c ****     UART_ScbModeStop();
 247:Generated_Source\PSoC4/UART.c **** 
 248:Generated_Source\PSoC4/UART.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG &= (uint32) ~UART_CTRL_ENABLED;
 250:Generated_Source\PSoC4/UART.c **** 
 251:Generated_Source\PSoC4/UART.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/UART.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/UART.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/UART.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/UART.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/UART.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/UART.c ****     * is disabled.
 258:Generated_Source\PSoC4/UART.c ****     */
 259:Generated_Source\PSoC4/UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 6


 260:Generated_Source\PSoC4/UART.c **** 
 261:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/UART.c ****     UART_ClearPendingInt();
 263:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/UART.c **** }
 265:Generated_Source\PSoC4/UART.c **** 
 266:Generated_Source\PSoC4/UART.c **** 
 267:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetRxFifoLevel
 269:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/UART.c **** *
 271:Generated_Source\PSoC4/UART.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/UART.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/UART.c **** *
 275:Generated_Source\PSoC4/UART.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/UART.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/UART.c **** *
 278:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/UART.c **** void UART_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/UART.c **** {
 281:Generated_Source\PSoC4/UART.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/UART.c **** 
 283:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl = UART_RX_FIFO_CTRL_REG;
 284:Generated_Source\PSoC4/UART.c **** 
 285:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl &= ((uint32) ~UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 286:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 287:Generated_Source\PSoC4/UART.c **** 
 288:Generated_Source\PSoC4/UART.c ****     UART_RX_FIFO_CTRL_REG = rxFifoCtrl;
 289:Generated_Source\PSoC4/UART.c **** }
 290:Generated_Source\PSoC4/UART.c **** 
 291:Generated_Source\PSoC4/UART.c **** 
 292:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetTxFifoLevel
 294:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/UART.c **** *
 296:Generated_Source\PSoC4/UART.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/UART.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/UART.c **** *
 300:Generated_Source\PSoC4/UART.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/UART.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/UART.c **** *
 303:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/UART.c **** void UART_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/UART.c **** {
 306:Generated_Source\PSoC4/UART.c ****     uint32 txFifoCtrl;
 307:Generated_Source\PSoC4/UART.c **** 
 308:Generated_Source\PSoC4/UART.c ****     txFifoCtrl = UART_TX_FIFO_CTRL_REG;
 309:Generated_Source\PSoC4/UART.c **** 
 310:Generated_Source\PSoC4/UART.c ****     txFifoCtrl &= ((uint32) ~UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 311:Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 312:Generated_Source\PSoC4/UART.c **** 
 313:Generated_Source\PSoC4/UART.c ****     UART_TX_FIFO_CTRL_REG = txFifoCtrl;
 314:Generated_Source\PSoC4/UART.c **** }
 315:Generated_Source\PSoC4/UART.c **** 
 316:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 7


 317:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/UART.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/UART.c ****     *
 322:Generated_Source\PSoC4/UART.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/UART.c ****     *  First the function that is registered is called, then the internal interrupt
 324:Generated_Source\PSoC4/UART.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/UART.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/UART.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/UART.c ****     *  is the function provided by the most recent call.
 328:Generated_Source\PSoC4/UART.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/UART.c ****     *
 330:Generated_Source\PSoC4/UART.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/UART.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/UART.c ****     *        handler.
 333:Generated_Source\PSoC4/UART.c ****     *
 334:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/UART.c ****     void UART_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/UART.c ****     {
 337:Generated_Source\PSoC4/UART.c ****     #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/UART.c ****         UART_customIntrHandler = func; /* Register interrupt handler */
 339:Generated_Source\PSoC4/UART.c ****     #else
 340:Generated_Source\PSoC4/UART.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/UART.c ****         {
 342:Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/UART.c ****         }
 344:Generated_Source\PSoC4/UART.c ****     #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/UART.c ****     }
 346:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/UART.c **** 
 348:Generated_Source\PSoC4/UART.c **** 
 349:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeEnableIntr
 351:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/UART.c **** *
 353:Generated_Source\PSoC4/UART.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/UART.c **** *
 355:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/UART.c **** {
 358:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/UART.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/UART.c ****     #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/UART.c ****         if (0u != UART_scbEnableIntr)
 362:Generated_Source\PSoC4/UART.c ****         {
 363:Generated_Source\PSoC4/UART.c ****             UART_EnableInt();
 364:Generated_Source\PSoC4/UART.c ****         }
 365:Generated_Source\PSoC4/UART.c **** 
 366:Generated_Source\PSoC4/UART.c ****     #else
 367:Generated_Source\PSoC4/UART.c ****         UART_EnableInt();
 368:Generated_Source\PSoC4/UART.c **** 
 369:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 371:Generated_Source\PSoC4/UART.c **** }
 372:Generated_Source\PSoC4/UART.c **** 
 373:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 8


 374:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModePostEnable
 376:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/UART.c **** *
 378:Generated_Source\PSoC4/UART.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/UART.c **** *
 380:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/UART.c **** {
  27              		.loc 1 382 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
 383:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/UART.c ****     {
 387:Generated_Source\PSoC4/UART.c ****         UART_SpiPostEnable();
 388:Generated_Source\PSoC4/UART.c ****     }
 389:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/UART.c ****     {
 391:Generated_Source\PSoC4/UART.c ****         UART_UartPostEnable();
 392:Generated_Source\PSoC4/UART.c ****     }
 393:Generated_Source\PSoC4/UART.c ****     else
 394:Generated_Source\PSoC4/UART.c ****     {
 395:Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/UART.c ****     }
 397:Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/UART.c **** 
 399:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/UART.c ****     UART_SpiPostEnable();
 401:Generated_Source\PSoC4/UART.c **** 
 402:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 403:Generated_Source\PSoC4/UART.c ****     UART_UartPostEnable();
  35              		.loc 1 403 0
  36 0002 FFF7FEFF 		bl	UART_UartPostEnable
  37              	.LVL0:
 404:Generated_Source\PSoC4/UART.c **** 
 405:Generated_Source\PSoC4/UART.c **** #else
 406:Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/UART.c **** }
  38              		.loc 1 408 0
  39              		@ sp needed
  40 0006 10BD     		pop	{r4, pc}
  41              		.cfi_endproc
  42              	.LFE7:
  43              		.size	UART_ScbModePostEnable, .-UART_ScbModePostEnable
  44              		.section	.text.UART_ScbModeStop,"ax",%progbits
  45              		.align	2
  46              		.code	16
  47              		.thumb_func
  48              		.type	UART_ScbModeStop, %function
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 9


  49              	UART_ScbModeStop:
  50              	.LFB8:
 409:Generated_Source\PSoC4/UART.c **** 
 410:Generated_Source\PSoC4/UART.c **** 
 411:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeStop
 413:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/UART.c **** *
 415:Generated_Source\PSoC4/UART.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/UART.c **** *
 417:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void)
 419:Generated_Source\PSoC4/UART.c **** {
  51              		.loc 1 419 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 10B5     		push	{r4, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 4, -8
  58              		.cfi_offset 14, -4
 420:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/UART.c ****     {
 423:Generated_Source\PSoC4/UART.c ****         UART_I2CStop();
 424:Generated_Source\PSoC4/UART.c ****     }
 425:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/UART.c ****     {
 427:Generated_Source\PSoC4/UART.c ****         UART_EzI2CStop();
 428:Generated_Source\PSoC4/UART.c ****     }
 429:Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/UART.c ****     {
 432:Generated_Source\PSoC4/UART.c ****         UART_SpiStop();
 433:Generated_Source\PSoC4/UART.c ****     }
 434:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/UART.c ****     {
 436:Generated_Source\PSoC4/UART.c ****         UART_UartStop();
 437:Generated_Source\PSoC4/UART.c ****     }
 438:Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/UART.c ****     else
 440:Generated_Source\PSoC4/UART.c ****     {
 441:Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/UART.c ****     }
 443:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/UART.c ****     UART_I2CStop();
 445:Generated_Source\PSoC4/UART.c **** 
 446:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/UART.c ****     UART_EzI2CStop();
 448:Generated_Source\PSoC4/UART.c **** 
 449:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/UART.c ****     UART_SpiStop();
 451:Generated_Source\PSoC4/UART.c **** 
 452:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/UART.c ****     UART_UartStop();
  59              		.loc 1 453 0
  60 0002 FFF7FEFF 		bl	UART_UartStop
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 10


  61              	.LVL1:
 454:Generated_Source\PSoC4/UART.c **** 
 455:Generated_Source\PSoC4/UART.c **** #else
 456:Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/UART.c **** }
  62              		.loc 1 458 0
  63              		@ sp needed
  64 0006 10BD     		pop	{r4, pc}
  65              		.cfi_endproc
  66              	.LFE8:
  67              		.size	UART_ScbModeStop, .-UART_ScbModeStop
  68              		.section	.text.UART_Init,"ax",%progbits
  69              		.align	2
  70              		.global	UART_Init
  71              		.code	16
  72              		.thumb_func
  73              		.type	UART_Init, %function
  74              	UART_Init:
  75              	.LFB0:
 124:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
  76              		.loc 1 124 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 10B5     		push	{r4, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
  83              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/UART.c **** 
  84              		.loc 1 142 0
  85 0002 FFF7FEFF 		bl	UART_UartInit
  86              	.LVL2:
 148:Generated_Source\PSoC4/UART.c **** 
  87              		.loc 1 148 0
  88              		@ sp needed
  89 0006 10BD     		pop	{r4, pc}
  90              		.cfi_endproc
  91              	.LFE0:
  92              		.size	UART_Init, .-UART_Init
  93              		.section	.text.UART_Enable,"ax",%progbits
  94              		.align	2
  95              		.global	UART_Enable
  96              		.code	16
  97              		.thumb_func
  98              		.type	UART_Enable, %function
  99              	UART_Enable:
 100              	.LFB1:
 172:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 101              		.loc 1 172 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105 0000 10B5     		push	{r4, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 14, -4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 11


 185:Generated_Source\PSoC4/UART.c **** 
 109              		.loc 1 185 0
 110 0002 044A     		ldr	r2, .L5
 111 0004 1368     		ldr	r3, [r2]
 112 0006 8021     		movs	r1, #128
 113 0008 0906     		lsls	r1, r1, #24
 114 000a 0B43     		orrs	r3, r1
 115 000c 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 116              		.loc 1 190 0
 117 000e FFF7FEFF 		bl	UART_ScbModePostEnable
 118              	.LVL3:
 192:Generated_Source\PSoC4/UART.c **** 
 119              		.loc 1 192 0
 120              		@ sp needed
 121 0012 10BD     		pop	{r4, pc}
 122              	.L6:
 123              		.align	2
 124              	.L5:
 125 0014 00000640 		.word	1074135040
 126              		.cfi_endproc
 127              	.LFE1:
 128              		.size	UART_Enable, .-UART_Enable
 129              		.section	.text.UART_Start,"ax",%progbits
 130              		.align	2
 131              		.global	UART_Start
 132              		.code	16
 133              		.thumb_func
 134              		.type	UART_Start, %function
 135              	UART_Start:
 136              	.LFB2:
 211:Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 137              		.loc 1 211 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 212:Generated_Source\PSoC4/UART.c ****     {
 145              		.loc 1 212 0
 146 0002 064B     		ldr	r3, .L9
 147 0004 1B78     		ldrb	r3, [r3]
 148 0006 002B     		cmp	r3, #0
 149 0008 04D1     		bne	.L8
 214:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
 150              		.loc 1 214 0
 151 000a FFF7FEFF 		bl	UART_Init
 152              	.LVL4:
 215:Generated_Source\PSoC4/UART.c ****     }
 153              		.loc 1 215 0
 154 000e 0122     		movs	r2, #1
 155 0010 024B     		ldr	r3, .L9
 156 0012 1A70     		strb	r2, [r3]
 157              	.L8:
 218:Generated_Source\PSoC4/UART.c **** }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 12


 158              		.loc 1 218 0
 159 0014 FFF7FEFF 		bl	UART_Enable
 160              	.LVL5:
 219:Generated_Source\PSoC4/UART.c **** 
 161              		.loc 1 219 0
 162              		@ sp needed
 163 0018 10BD     		pop	{r4, pc}
 164              	.L10:
 165 001a C046     		.align	2
 166              	.L9:
 167 001c 00000000 		.word	.LANCHOR0
 168              		.cfi_endproc
 169              	.LFE2:
 170              		.size	UART_Start, .-UART_Start
 171              		.section	.text.UART_Stop,"ax",%progbits
 172              		.align	2
 173              		.global	UART_Stop
 174              		.code	16
 175              		.thumb_func
 176              		.type	UART_Stop, %function
 177              	UART_Stop:
 178              	.LFB3:
 240:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 179              		.loc 1 240 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 246:Generated_Source\PSoC4/UART.c **** 
 187              		.loc 1 246 0
 188 0002 FFF7FEFF 		bl	UART_ScbModeStop
 189              	.LVL6:
 249:Generated_Source\PSoC4/UART.c **** 
 190              		.loc 1 249 0
 191 0006 044A     		ldr	r2, .L12
 192 0008 1368     		ldr	r3, [r2]
 193 000a 5B00     		lsls	r3, r3, #1
 194 000c 5B08     		lsrs	r3, r3, #1
 195 000e 1360     		str	r3, [r2]
 259:Generated_Source\PSoC4/UART.c **** 
 196              		.loc 1 259 0
 197 0010 0022     		movs	r2, #0
 198 0012 024B     		ldr	r3, .L12+4
 199 0014 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/UART.c **** 
 200              		.loc 1 264 0
 201              		@ sp needed
 202 0016 10BD     		pop	{r4, pc}
 203              	.L13:
 204              		.align	2
 205              	.L12:
 206 0018 00000640 		.word	1074135040
 207 001c 880F0640 		.word	1074139016
 208              		.cfi_endproc
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 13


 209              	.LFE3:
 210              		.size	UART_Stop, .-UART_Stop
 211              		.section	.text.UART_SetRxFifoLevel,"ax",%progbits
 212              		.align	2
 213              		.global	UART_SetRxFifoLevel
 214              		.code	16
 215              		.thumb_func
 216              		.type	UART_SetRxFifoLevel, %function
 217              	UART_SetRxFifoLevel:
 218              	.LFB4:
 280:Generated_Source\PSoC4/UART.c ****     uint32 rxFifoCtrl;
 219              		.loc 1 280 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL7:
 283:Generated_Source\PSoC4/UART.c **** 
 225              		.loc 1 283 0
 226 0000 034A     		ldr	r2, .L15
 227 0002 1368     		ldr	r3, [r2]
 228              	.LVL8:
 285:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 229              		.loc 1 285 0
 230 0004 0721     		movs	r1, #7
 231 0006 8B43     		bics	r3, r1
 232              	.LVL9:
 286:Generated_Source\PSoC4/UART.c **** 
 233              		.loc 1 286 0
 234 0008 0840     		ands	r0, r1
 235              	.LVL10:
 236 000a 1843     		orrs	r0, r3
 237              	.LVL11:
 288:Generated_Source\PSoC4/UART.c **** }
 238              		.loc 1 288 0
 239 000c 1060     		str	r0, [r2]
 289:Generated_Source\PSoC4/UART.c **** 
 240              		.loc 1 289 0
 241              		@ sp needed
 242 000e 7047     		bx	lr
 243              	.L16:
 244              		.align	2
 245              	.L15:
 246 0010 04030640 		.word	1074135812
 247              		.cfi_endproc
 248              	.LFE4:
 249              		.size	UART_SetRxFifoLevel, .-UART_SetRxFifoLevel
 250              		.section	.text.UART_SetTxFifoLevel,"ax",%progbits
 251              		.align	2
 252              		.global	UART_SetTxFifoLevel
 253              		.code	16
 254              		.thumb_func
 255              		.type	UART_SetTxFifoLevel, %function
 256              	UART_SetTxFifoLevel:
 257              	.LFB5:
 305:Generated_Source\PSoC4/UART.c ****     uint32 txFifoCtrl;
 258              		.loc 1 305 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 14


 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              	.LVL12:
 308:Generated_Source\PSoC4/UART.c **** 
 264              		.loc 1 308 0
 265 0000 034A     		ldr	r2, .L18
 266 0002 1368     		ldr	r3, [r2]
 267              	.LVL13:
 310:Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 268              		.loc 1 310 0
 269 0004 0721     		movs	r1, #7
 270 0006 8B43     		bics	r3, r1
 271              	.LVL14:
 311:Generated_Source\PSoC4/UART.c **** 
 272              		.loc 1 311 0
 273 0008 0840     		ands	r0, r1
 274              	.LVL15:
 275 000a 1843     		orrs	r0, r3
 276              	.LVL16:
 313:Generated_Source\PSoC4/UART.c **** }
 277              		.loc 1 313 0
 278 000c 1060     		str	r0, [r2]
 314:Generated_Source\PSoC4/UART.c **** 
 279              		.loc 1 314 0
 280              		@ sp needed
 281 000e 7047     		bx	lr
 282              	.L19:
 283              		.align	2
 284              	.L18:
 285 0010 04020640 		.word	1074135556
 286              		.cfi_endproc
 287              	.LFE5:
 288              		.size	UART_SetTxFifoLevel, .-UART_SetTxFifoLevel
 289              		.section	.text.UART_I2CSlaveNackGeneration,"ax",%progbits
 290              		.align	2
 291              		.global	UART_I2CSlaveNackGeneration
 292              		.code	16
 293              		.thumb_func
 294              		.type	UART_I2CSlaveNackGeneration, %function
 295              	UART_I2CSlaveNackGeneration:
 296              	.LFB9:
 459:Generated_Source\PSoC4/UART.c **** 
 460:Generated_Source\PSoC4/UART.c **** 
 461:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 462:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetPins
 464:Generated_Source\PSoC4/UART.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/UART.c ****     *
 466:Generated_Source\PSoC4/UART.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 467:Generated_Source\PSoC4/UART.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 468:Generated_Source\PSoC4/UART.c ****     *  initialization function calls it.
 469:Generated_Source\PSoC4/UART.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 470:Generated_Source\PSoC4/UART.c ****     *  is selected in design time.
 471:Generated_Source\PSoC4/UART.c ****     *
 472:Generated_Source\PSoC4/UART.c ****     *  \param mode:      Mode of SCB operation.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 15


 473:Generated_Source\PSoC4/UART.c ****     *  \param subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 474:Generated_Source\PSoC4/UART.c ****     *             modes.
 475:Generated_Source\PSoC4/UART.c ****     *  \param uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 476:Generated_Source\PSoC4/UART.c ****     *
 477:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 478:Generated_Source\PSoC4/UART.c ****     void UART_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 479:Generated_Source\PSoC4/UART.c ****     {
 480:Generated_Source\PSoC4/UART.c ****         uint32 pinsDm[UART_SCB_PINS_NUMBER];
 481:Generated_Source\PSoC4/UART.c ****         uint32 i;
 482:Generated_Source\PSoC4/UART.c ****         
 483:Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 484:Generated_Source\PSoC4/UART.c ****         uint32 pinsInBuf = 0u;
 485:Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 486:Generated_Source\PSoC4/UART.c ****         
 487:Generated_Source\PSoC4/UART.c ****         uint32 hsiomSel[UART_SCB_PINS_NUMBER] = 
 488:Generated_Source\PSoC4/UART.c ****         {
 489:Generated_Source\PSoC4/UART.c ****             UART_RX_SCL_MOSI_HSIOM_SEL_GPIO,
 490:Generated_Source\PSoC4/UART.c ****             UART_TX_SDA_MISO_HSIOM_SEL_GPIO,
 491:Generated_Source\PSoC4/UART.c ****             0u,
 492:Generated_Source\PSoC4/UART.c ****             0u,
 493:Generated_Source\PSoC4/UART.c ****             0u,
 494:Generated_Source\PSoC4/UART.c ****             0u,
 495:Generated_Source\PSoC4/UART.c ****             0u,
 496:Generated_Source\PSoC4/UART.c ****         };
 497:Generated_Source\PSoC4/UART.c **** 
 498:Generated_Source\PSoC4/UART.c ****     #if (UART_CY_SCBIP_V1)
 499:Generated_Source\PSoC4/UART.c ****         /* Supress compiler warning. */
 500:Generated_Source\PSoC4/UART.c ****         if ((0u == subMode) || (0u == uartEnableMask))
 501:Generated_Source\PSoC4/UART.c ****         {
 502:Generated_Source\PSoC4/UART.c ****         }
 503:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CY_SCBIP_V1) */
 504:Generated_Source\PSoC4/UART.c **** 
 505:Generated_Source\PSoC4/UART.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 506:Generated_Source\PSoC4/UART.c ****         for (i = 0u; i < UART_SCB_PINS_NUMBER; i++)
 507:Generated_Source\PSoC4/UART.c ****         {
 508:Generated_Source\PSoC4/UART.c ****             pinsDm[i] = UART_PIN_DM_ALG_HIZ;
 509:Generated_Source\PSoC4/UART.c ****         }
 510:Generated_Source\PSoC4/UART.c **** 
 511:Generated_Source\PSoC4/UART.c ****         if ((UART_SCB_MODE_I2C   == mode) ||
 512:Generated_Source\PSoC4/UART.c ****             (UART_SCB_MODE_EZI2C == mode))
 513:Generated_Source\PSoC4/UART.c ****         {
 514:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_SCL_MOSI_PIN)
 515:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_RX_SCL_MOSI_HSIOM_SEL_I2C;
 516:Generated_Source\PSoC4/UART.c ****             pinsDm  [UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_OD_LO;
 517:Generated_Source\PSoC4/UART.c ****         #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 518:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_RX_WAKE_SCL_MOSI_HSIOM_SEL_I2C;
 519:Generated_Source\PSoC4/UART.c ****             pinsDm  [UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_OD_LO;
 520:Generated_Source\PSoC4/UART.c ****         #else
 521:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_SCL_MOSI_PIN) */
 522:Generated_Source\PSoC4/UART.c ****         
 523:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_SDA_MISO_PIN)
 524:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_I2C;
 525:Generated_Source\PSoC4/UART.c ****             pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 526:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_SDA_MISO_PIN) */
 527:Generated_Source\PSoC4/UART.c ****         }
 528:Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 529:Generated_Source\PSoC4/UART.c ****         else if (UART_SCB_MODE_SPI == mode)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 16


 530:Generated_Source\PSoC4/UART.c ****         {
 531:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_SCL_MOSI_PIN)
 532:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_RX_SCL_MOSI_HSIOM_SEL_SPI;
 533:Generated_Source\PSoC4/UART.c ****         #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 534:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_RX_WAKE_SCL_MOSI_HSIOM_SEL_SPI;
 535:Generated_Source\PSoC4/UART.c ****         #else
 536:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_SCL_MOSI_PIN) */
 537:Generated_Source\PSoC4/UART.c ****         
 538:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_SDA_MISO_PIN)
 539:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_SPI;
 540:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_SDA_MISO_PIN) */
 541:Generated_Source\PSoC4/UART.c ****         
 542:Generated_Source\PSoC4/UART.c ****         #if (UART_SCLK_PIN)
 543:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_SCLK_PIN_INDEX] = UART_SCLK_HSIOM_SEL_SPI;
 544:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_SCLK_PIN) */
 545:Generated_Source\PSoC4/UART.c **** 
 546:Generated_Source\PSoC4/UART.c ****             if (UART_SPI_SLAVE == subMode)
 547:Generated_Source\PSoC4/UART.c ****             {
 548:Generated_Source\PSoC4/UART.c ****                 /* Slave */
 549:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 550:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 551:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 552:Generated_Source\PSoC4/UART.c **** 
 553:Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 554:Generated_Source\PSoC4/UART.c ****                 /* Only SS0 is valid choice for Slave */
 555:Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_SS0_PIN_INDEX] = UART_SS0_HSIOM_SEL_SPI;
 556:Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 557:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 558:Generated_Source\PSoC4/UART.c **** 
 559:Generated_Source\PSoC4/UART.c ****             #if (UART_TX_SDA_MISO_PIN)
 560:Generated_Source\PSoC4/UART.c ****                 /* Disable input buffer */
 561:Generated_Source\PSoC4/UART.c ****                  pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 562:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_TX_SDA_MISO_PIN) */
 563:Generated_Source\PSoC4/UART.c ****             }
 564:Generated_Source\PSoC4/UART.c ****             else 
 565:Generated_Source\PSoC4/UART.c ****             {
 566:Generated_Source\PSoC4/UART.c ****                 /* (Master) */
 567:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_STRONG;
 568:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 569:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_STRONG;
 570:Generated_Source\PSoC4/UART.c **** 
 571:Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 572:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS0_PIN_INDEX] = UART_SS0_HSIOM_SEL_SPI;
 573:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 574:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS0_PIN_MASK;
 575:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 576:Generated_Source\PSoC4/UART.c **** 
 577:Generated_Source\PSoC4/UART.c ****             #if (UART_SS1_PIN)
 578:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS1_PIN_INDEX] = UART_SS1_HSIOM_SEL_SPI;
 579:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS1_PIN_INDEX] = UART_PIN_DM_STRONG;
 580:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS1_PIN_MASK;
 581:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS1_PIN) */
 582:Generated_Source\PSoC4/UART.c **** 
 583:Generated_Source\PSoC4/UART.c ****             #if (UART_SS2_PIN)
 584:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS2_PIN_INDEX] = UART_SS2_HSIOM_SEL_SPI;
 585:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS2_PIN_INDEX] = UART_PIN_DM_STRONG;
 586:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS2_PIN_MASK;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 17


 587:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS2_PIN) */
 588:Generated_Source\PSoC4/UART.c **** 
 589:Generated_Source\PSoC4/UART.c ****             #if (UART_SS3_PIN)
 590:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS3_PIN_INDEX] = UART_SS3_HSIOM_SEL_SPI;
 591:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS3_PIN_INDEX] = UART_PIN_DM_STRONG;
 592:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS3_PIN_MASK;
 593:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS3_PIN) */
 594:Generated_Source\PSoC4/UART.c **** 
 595:Generated_Source\PSoC4/UART.c ****                 /* Disable input buffers */
 596:Generated_Source\PSoC4/UART.c ****             #if (UART_RX_SCL_MOSI_PIN)
 597:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_SCL_MOSI_PIN_MASK;
 598:Generated_Source\PSoC4/UART.c ****             #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 599:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_WAKE_SCL_MOSI_PIN_MASK;
 600:Generated_Source\PSoC4/UART.c ****             #else
 601:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RX_SCL_MOSI_PIN) */
 602:Generated_Source\PSoC4/UART.c **** 
 603:Generated_Source\PSoC4/UART.c ****             #if (UART_SCLK_PIN)
 604:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SCLK_PIN_MASK;
 605:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SCLK_PIN) */
 606:Generated_Source\PSoC4/UART.c ****             }
 607:Generated_Source\PSoC4/UART.c ****         }
 608:Generated_Source\PSoC4/UART.c ****         else /* UART */
 609:Generated_Source\PSoC4/UART.c ****         {
 610:Generated_Source\PSoC4/UART.c ****             if (UART_UART_MODE_SMARTCARD == subMode)
 611:Generated_Source\PSoC4/UART.c ****             {
 612:Generated_Source\PSoC4/UART.c ****                 /* SmartCard */
 613:Generated_Source\PSoC4/UART.c ****             #if (UART_TX_SDA_MISO_PIN)
 614:Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_UART;
 615:Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 616:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_TX_SDA_MISO_PIN) */
 617:Generated_Source\PSoC4/UART.c ****             }
 618:Generated_Source\PSoC4/UART.c ****             else /* Standard or IrDA */
 619:Generated_Source\PSoC4/UART.c ****             {
 620:Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_RX_PIN_ENABLE & uartEnableMask))
 621:Generated_Source\PSoC4/UART.c ****                 {
 622:Generated_Source\PSoC4/UART.c ****                 #if (UART_RX_SCL_MOSI_PIN)
 623:Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_RX_SCL_MOSI_HSIOM_SEL_UART;
 624:Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 625:Generated_Source\PSoC4/UART.c ****                 #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 626:Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_RX_WAKE_SCL_MOSI_HSIOM_SEL_UAR
 627:Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 628:Generated_Source\PSoC4/UART.c ****                 #else
 629:Generated_Source\PSoC4/UART.c ****                 #endif /* (UART_RX_SCL_MOSI_PIN) */
 630:Generated_Source\PSoC4/UART.c ****                 }
 631:Generated_Source\PSoC4/UART.c **** 
 632:Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_TX_PIN_ENABLE & uartEnableMask))
 633:Generated_Source\PSoC4/UART.c ****                 {
 634:Generated_Source\PSoC4/UART.c ****                 #if (UART_TX_SDA_MISO_PIN)
 635:Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_UART;
 636:Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 637:Generated_Source\PSoC4/UART.c ****                     
 638:Generated_Source\PSoC4/UART.c ****                     /* Disable input buffer */
 639:Generated_Source\PSoC4/UART.c ****                     pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 640:Generated_Source\PSoC4/UART.c ****                 #endif /* (UART_TX_SDA_MISO_PIN) */
 641:Generated_Source\PSoC4/UART.c ****                 }
 642:Generated_Source\PSoC4/UART.c **** 
 643:Generated_Source\PSoC4/UART.c ****             #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 18


 644:Generated_Source\PSoC4/UART.c ****                 if (UART_UART_MODE_STD == subMode)
 645:Generated_Source\PSoC4/UART.c ****                 {
 646:Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_CTS_PIN_ENABLE & uartEnableMask))
 647:Generated_Source\PSoC4/UART.c ****                     {
 648:Generated_Source\PSoC4/UART.c ****                         /* CTS input is multiplexed with SCLK */
 649:Generated_Source\PSoC4/UART.c ****                     #if (UART_SCLK_PIN)
 650:Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SCLK_PIN_INDEX] = UART_SCLK_HSIOM_SEL_UART;
 651:Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 652:Generated_Source\PSoC4/UART.c ****                     #endif /* (UART_SCLK_PIN) */
 653:Generated_Source\PSoC4/UART.c ****                     }
 654:Generated_Source\PSoC4/UART.c **** 
 655:Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_RTS_PIN_ENABLE & uartEnableMask))
 656:Generated_Source\PSoC4/UART.c ****                     {
 657:Generated_Source\PSoC4/UART.c ****                         /* RTS output is multiplexed with SS0 */
 658:Generated_Source\PSoC4/UART.c ****                     #if (UART_SS0_PIN)
 659:Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SS0_PIN_INDEX] = UART_SS0_HSIOM_SEL_UART;
 660:Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 661:Generated_Source\PSoC4/UART.c ****                         
 662:Generated_Source\PSoC4/UART.c ****                         /* Disable input buffer */
 663:Generated_Source\PSoC4/UART.c ****                         pinsInBuf |= UART_SS0_PIN_MASK;
 664:Generated_Source\PSoC4/UART.c ****                     #endif /* (UART_SS0_PIN) */
 665:Generated_Source\PSoC4/UART.c ****                     }
 666:Generated_Source\PSoC4/UART.c ****                 }
 667:Generated_Source\PSoC4/UART.c ****             #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 668:Generated_Source\PSoC4/UART.c ****             }
 669:Generated_Source\PSoC4/UART.c ****         }
 670:Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 671:Generated_Source\PSoC4/UART.c **** 
 672:Generated_Source\PSoC4/UART.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 673:Generated_Source\PSoC4/UART.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 674:Generated_Source\PSoC4/UART.c **** 
 675:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_SCL_MOSI_PIN)
 676:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_SCL_MOSI_HSIOM_REG,
 677:Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_MASK,
 678:Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_POS,
 679:Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX]);
 680:Generated_Source\PSoC4/UART.c **** 
 681:Generated_Source\PSoC4/UART.c ****         UART_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_RX_SCL_MOSI_PIN_INDEX]);
 682:Generated_Source\PSoC4/UART.c **** 
 683:Generated_Source\PSoC4/UART.c ****         #if (!UART_CY_SCBIP_V1)
 684:Generated_Source\PSoC4/UART.c ****             UART_SET_INP_DIS(UART_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 685:Generated_Source\PSoC4/UART.c ****                                          UART_uart_rx_i2c_scl_spi_mosi_MASK,
 686:Generated_Source\PSoC4/UART.c ****                                          (0u != (pinsInBuf & UART_RX_SCL_MOSI_PIN_MASK)));
 687:Generated_Source\PSoC4/UART.c ****         #endif /* (!UART_CY_SCBIP_V1) */
 688:Generated_Source\PSoC4/UART.c ****     
 689:Generated_Source\PSoC4/UART.c ****     #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 690:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_WAKE_SCL_MOSI_HSIOM_REG,
 691:Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 692:Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_POS,
 693:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 694:Generated_Source\PSoC4/UART.c **** 
 695:Generated_Source\PSoC4/UART.c ****         UART_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 696:Generated_Source\PSoC4/UART.c ****                                                                pinsDm[UART_RX_WAKE_SCL_MOSI_PIN_IND
 697:Generated_Source\PSoC4/UART.c **** 
 698:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 699:Generated_Source\PSoC4/UART.c ****                                      UART_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 700:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_RX_WAKE_SCL_MOSI_PIN_MASK)));
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 19


 701:Generated_Source\PSoC4/UART.c **** 
 702:Generated_Source\PSoC4/UART.c ****          /* Set interrupt on falling edge */
 703:Generated_Source\PSoC4/UART.c ****         UART_SET_INCFG_TYPE(UART_RX_WAKE_SCL_MOSI_INTCFG_REG,
 704:Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 705:Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 706:Generated_Source\PSoC4/UART.c ****                                         UART_INTCFG_TYPE_FALLING_EDGE);
 707:Generated_Source\PSoC4/UART.c ****     #else
 708:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_WAKE_SCL_MOSI_PIN) */
 709:Generated_Source\PSoC4/UART.c **** 
 710:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 711:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG,
 712:Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_MASK,
 713:Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_POS,
 714:Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_TX_SDA_MISO_PIN_INDEX]);
 715:Generated_Source\PSoC4/UART.c **** 
 716:Generated_Source\PSoC4/UART.c ****         UART_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_TX_SDA_MISO_PIN_INDEX]);
 717:Generated_Source\PSoC4/UART.c **** 
 718:Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 719:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_tx_i2c_sda_spi_miso_INP_DIS,
 720:Generated_Source\PSoC4/UART.c ****                                      UART_uart_tx_i2c_sda_spi_miso_MASK,
 721:Generated_Source\PSoC4/UART.c ****                                     (0u != (pinsInBuf & UART_TX_SDA_MISO_PIN_MASK)));
 722:Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 723:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_SCL_MOSI_PIN) */
 724:Generated_Source\PSoC4/UART.c **** 
 725:Generated_Source\PSoC4/UART.c ****     #if (UART_SCLK_PIN)
 726:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SCLK_HSIOM_REG,
 727:Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_MASK,
 728:Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_POS,
 729:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SCLK_PIN_INDEX]);
 730:Generated_Source\PSoC4/UART.c **** 
 731:Generated_Source\PSoC4/UART.c ****         UART_spi_sclk_SetDriveMode((uint8) pinsDm[UART_SCLK_PIN_INDEX]);
 732:Generated_Source\PSoC4/UART.c **** 
 733:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_sclk_INP_DIS,
 734:Generated_Source\PSoC4/UART.c ****                                      UART_spi_sclk_MASK,
 735:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SCLK_PIN_MASK)));
 736:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCLK_PIN) */
 737:Generated_Source\PSoC4/UART.c **** 
 738:Generated_Source\PSoC4/UART.c ****     #if (UART_SS0_PIN)
 739:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG,
 740:Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_MASK,
 741:Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_POS,
 742:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS0_PIN_INDEX]);
 743:Generated_Source\PSoC4/UART.c **** 
 744:Generated_Source\PSoC4/UART.c ****         UART_spi_ss0_SetDriveMode((uint8) pinsDm[UART_SS0_PIN_INDEX]);
 745:Generated_Source\PSoC4/UART.c **** 
 746:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss0_INP_DIS,
 747:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss0_MASK,
 748:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS0_PIN_MASK)));
 749:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS0_PIN) */
 750:Generated_Source\PSoC4/UART.c **** 
 751:Generated_Source\PSoC4/UART.c ****     #if (UART_SS1_PIN)
 752:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS1_HSIOM_REG,
 753:Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_MASK,
 754:Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_POS,
 755:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS1_PIN_INDEX]);
 756:Generated_Source\PSoC4/UART.c **** 
 757:Generated_Source\PSoC4/UART.c ****         UART_spi_ss1_SetDriveMode((uint8) pinsDm[UART_SS1_PIN_INDEX]);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 20


 758:Generated_Source\PSoC4/UART.c **** 
 759:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss1_INP_DIS,
 760:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss1_MASK,
 761:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS1_PIN_MASK)));
 762:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS1_PIN) */
 763:Generated_Source\PSoC4/UART.c **** 
 764:Generated_Source\PSoC4/UART.c ****     #if (UART_SS2_PIN)
 765:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS2_HSIOM_REG,
 766:Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_MASK,
 767:Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_POS,
 768:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS2_PIN_INDEX]);
 769:Generated_Source\PSoC4/UART.c **** 
 770:Generated_Source\PSoC4/UART.c ****         UART_spi_ss2_SetDriveMode((uint8) pinsDm[UART_SS2_PIN_INDEX]);
 771:Generated_Source\PSoC4/UART.c **** 
 772:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss2_INP_DIS,
 773:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss2_MASK,
 774:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS2_PIN_MASK)));
 775:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS2_PIN) */
 776:Generated_Source\PSoC4/UART.c **** 
 777:Generated_Source\PSoC4/UART.c ****     #if (UART_SS3_PIN)
 778:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS3_HSIOM_REG,
 779:Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_MASK,
 780:Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_POS,
 781:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS3_PIN_INDEX]);
 782:Generated_Source\PSoC4/UART.c **** 
 783:Generated_Source\PSoC4/UART.c ****         UART_spi_ss3_SetDriveMode((uint8) pinsDm[UART_SS3_PIN_INDEX]);
 784:Generated_Source\PSoC4/UART.c **** 
 785:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss3_INP_DIS,
 786:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss3_MASK,
 787:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS3_PIN_MASK)));
 788:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS3_PIN) */
 789:Generated_Source\PSoC4/UART.c ****     }
 790:Generated_Source\PSoC4/UART.c **** 
 791:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 792:Generated_Source\PSoC4/UART.c **** 
 793:Generated_Source\PSoC4/UART.c **** 
 794:Generated_Source\PSoC4/UART.c **** #if (UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 795:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 796:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_I2CSlaveNackGeneration
 797:Generated_Source\PSoC4/UART.c ****     ****************************************************************************//**
 798:Generated_Source\PSoC4/UART.c ****     *
 799:Generated_Source\PSoC4/UART.c ****     *  Sets command to generate NACK to the address or data.
 800:Generated_Source\PSoC4/UART.c ****     *
 801:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 802:Generated_Source\PSoC4/UART.c ****     void UART_I2CSlaveNackGeneration(void)
 803:Generated_Source\PSoC4/UART.c ****     {
 297              		.loc 1 803 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 804:Generated_Source\PSoC4/UART.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 805:Generated_Source\PSoC4/UART.c ****         if ((0u != (UART_CTRL_REG & UART_CTRL_EC_AM_MODE)) &&
 302              		.loc 1 805 0
 303 0000 0A4B     		ldr	r3, .L22
 304 0002 1B68     		ldr	r3, [r3]
 305 0004 DB05     		lsls	r3, r3, #23
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 21


 306 0006 0DD5     		bpl	.L21
 806:Generated_Source\PSoC4/UART.c ****             (0u == (UART_I2C_CTRL_REG & UART_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 307              		.loc 1 806 0 discriminator 1
 308 0008 094B     		ldr	r3, .L22+4
 309 000a 1B68     		ldr	r3, [r3]
 805:Generated_Source\PSoC4/UART.c ****             (0u == (UART_I2C_CTRL_REG & UART_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 310              		.loc 1 805 0 discriminator 1
 311 000c 5B04     		lsls	r3, r3, #17
 312 000e 09D4     		bmi	.L21
 807:Generated_Source\PSoC4/UART.c ****         {
 808:Generated_Source\PSoC4/UART.c ****             /* Toggle EC_AM before NACK generation */
 809:Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG &= ~UART_CTRL_EC_AM_MODE;
 313              		.loc 1 809 0
 314 0010 064B     		ldr	r3, .L22
 315 0012 1968     		ldr	r1, [r3]
 316 0014 074A     		ldr	r2, .L22+8
 317 0016 0A40     		ands	r2, r1
 318 0018 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG |=  UART_CTRL_EC_AM_MODE;
 319              		.loc 1 810 0
 320 001a 1A68     		ldr	r2, [r3]
 321 001c 8021     		movs	r1, #128
 322 001e 4900     		lsls	r1, r1, #1
 323 0020 0A43     		orrs	r2, r1
 324 0022 1A60     		str	r2, [r3]
 325              	.L21:
 811:Generated_Source\PSoC4/UART.c ****         }
 812:Generated_Source\PSoC4/UART.c **** 
 813:Generated_Source\PSoC4/UART.c ****         UART_I2C_SLAVE_CMD_REG = UART_I2C_SLAVE_CMD_S_NACK;
 326              		.loc 1 813 0
 327 0024 0222     		movs	r2, #2
 328 0026 044B     		ldr	r3, .L22+12
 329 0028 1A60     		str	r2, [r3]
 814:Generated_Source\PSoC4/UART.c ****     }
 330              		.loc 1 814 0
 331              		@ sp needed
 332 002a 7047     		bx	lr
 333              	.L23:
 334              		.align	2
 335              	.L22:
 336 002c 00000640 		.word	1074135040
 337 0030 60000640 		.word	1074135136
 338 0034 FFFEFFFF 		.word	-257
 339 0038 6C000640 		.word	1074135148
 340              		.cfi_endproc
 341              	.LFE9:
 342              		.size	UART_I2CSlaveNackGeneration, .-UART_I2CSlaveNackGeneration
 343              		.global	UART_IntrTxMask
 344              		.global	UART_initVar
 345              		.bss
 346              		.align	1
 347              		.set	.LANCHOR0,. + 0
 348              		.type	UART_initVar, %object
 349              		.size	UART_initVar, 1
 350              	UART_initVar:
 351 0000 00       		.space	1
 352 0001 00       		.space	1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 22


 353              		.type	UART_IntrTxMask, %object
 354              		.size	UART_IntrTxMask, 2
 355              	UART_IntrTxMask:
 356 0002 0000     		.space	2
 357              		.text
 358              	.Letext0:
 359              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 360              		.file 3 "Generated_Source\\PSoC4\\UART_SPI_UART_PVT.h"
 361              		.section	.debug_info,"",%progbits
 362              	.Ldebug_info0:
 363 0000 41020000 		.4byte	0x241
 364 0004 0400     		.2byte	0x4
 365 0006 00000000 		.4byte	.Ldebug_abbrev0
 366 000a 04       		.byte	0x4
 367 000b 01       		.uleb128 0x1
 368 000c 72000000 		.4byte	.LASF33
 369 0010 0C       		.byte	0xc
 370 0011 88010000 		.4byte	.LASF34
 371 0015 FA010000 		.4byte	.LASF35
 372 0019 00000000 		.4byte	.Ldebug_ranges0+0
 373 001d 00000000 		.4byte	0
 374 0021 00000000 		.4byte	.Ldebug_line0
 375 0025 02       		.uleb128 0x2
 376 0026 01       		.byte	0x1
 377 0027 06       		.byte	0x6
 378 0028 83020000 		.4byte	.LASF0
 379 002c 02       		.uleb128 0x2
 380 002d 01       		.byte	0x1
 381 002e 08       		.byte	0x8
 382 002f 1D010000 		.4byte	.LASF1
 383 0033 02       		.uleb128 0x2
 384 0034 02       		.byte	0x2
 385 0035 05       		.byte	0x5
 386 0036 65020000 		.4byte	.LASF2
 387 003a 02       		.uleb128 0x2
 388 003b 02       		.byte	0x2
 389 003c 07       		.byte	0x7
 390 003d 52000000 		.4byte	.LASF3
 391 0041 02       		.uleb128 0x2
 392 0042 04       		.byte	0x4
 393 0043 05       		.byte	0x5
 394 0044 7A020000 		.4byte	.LASF4
 395 0048 02       		.uleb128 0x2
 396 0049 04       		.byte	0x4
 397 004a 07       		.byte	0x7
 398 004b 49010000 		.4byte	.LASF5
 399 004f 02       		.uleb128 0x2
 400 0050 08       		.byte	0x8
 401 0051 05       		.byte	0x5
 402 0052 3E020000 		.4byte	.LASF6
 403 0056 02       		.uleb128 0x2
 404 0057 08       		.byte	0x8
 405 0058 07       		.byte	0x7
 406 0059 D9010000 		.4byte	.LASF7
 407 005d 03       		.uleb128 0x3
 408 005e 04       		.byte	0x4
 409 005f 05       		.byte	0x5
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 23


 410 0060 696E7400 		.ascii	"int\000"
 411 0064 02       		.uleb128 0x2
 412 0065 04       		.byte	0x4
 413 0066 07       		.byte	0x7
 414 0067 BE010000 		.4byte	.LASF8
 415 006b 04       		.uleb128 0x4
 416 006c 69010000 		.4byte	.LASF9
 417 0070 02       		.byte	0x2
 418 0071 E401     		.2byte	0x1e4
 419 0073 2C000000 		.4byte	0x2c
 420 0077 04       		.uleb128 0x4
 421 0078 81010000 		.4byte	.LASF10
 422 007c 02       		.byte	0x2
 423 007d E501     		.2byte	0x1e5
 424 007f 3A000000 		.4byte	0x3a
 425 0083 04       		.uleb128 0x4
 426 0084 A6010000 		.4byte	.LASF11
 427 0088 02       		.byte	0x2
 428 0089 E601     		.2byte	0x1e6
 429 008b 48000000 		.4byte	0x48
 430 008f 02       		.uleb128 0x2
 431 0090 04       		.byte	0x4
 432 0091 04       		.byte	0x4
 433 0092 0B010000 		.4byte	.LASF12
 434 0096 02       		.uleb128 0x2
 435 0097 08       		.byte	0x8
 436 0098 04       		.byte	0x4
 437 0099 7A010000 		.4byte	.LASF13
 438 009d 02       		.uleb128 0x2
 439 009e 01       		.byte	0x1
 440 009f 08       		.byte	0x8
 441 00a0 60020000 		.4byte	.LASF14
 442 00a4 04       		.uleb128 0x4
 443 00a5 00000000 		.4byte	.LASF15
 444 00a9 02       		.byte	0x2
 445 00aa 9002     		.2byte	0x290
 446 00ac B0000000 		.4byte	0xb0
 447 00b0 05       		.uleb128 0x5
 448 00b1 83000000 		.4byte	0x83
 449 00b5 02       		.uleb128 0x2
 450 00b6 04       		.byte	0x4
 451 00b7 07       		.byte	0x7
 452 00b8 35020000 		.4byte	.LASF16
 453 00bc 06       		.uleb128 0x6
 454 00bd 3B000000 		.4byte	.LASF17
 455 00c1 01       		.byte	0x1
 456 00c2 7D01     		.2byte	0x17d
 457 00c4 00000000 		.4byte	.LFB7
 458 00c8 08000000 		.4byte	.LFE7-.LFB7
 459 00cc 01       		.uleb128 0x1
 460 00cd 9C       		.byte	0x9c
 461 00ce DC000000 		.4byte	0xdc
 462 00d2 07       		.uleb128 0x7
 463 00d3 06000000 		.4byte	.LVL0
 464 00d7 23020000 		.4byte	0x223
 465 00db 00       		.byte	0
 466 00dc 06       		.uleb128 0x6
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 24


 467 00dd AD010000 		.4byte	.LASF18
 468 00e1 01       		.byte	0x1
 469 00e2 A201     		.2byte	0x1a2
 470 00e4 00000000 		.4byte	.LFB8
 471 00e8 08000000 		.4byte	.LFE8-.LFB8
 472 00ec 01       		.uleb128 0x1
 473 00ed 9C       		.byte	0x9c
 474 00ee FC000000 		.4byte	0xfc
 475 00f2 07       		.uleb128 0x7
 476 00f3 06000000 		.4byte	.LVL1
 477 00f7 2E020000 		.4byte	0x22e
 478 00fb 00       		.byte	0
 479 00fc 08       		.uleb128 0x8
 480 00fd 2B010000 		.4byte	.LASF19
 481 0101 01       		.byte	0x1
 482 0102 7B       		.byte	0x7b
 483 0103 00000000 		.4byte	.LFB0
 484 0107 08000000 		.4byte	.LFE0-.LFB0
 485 010b 01       		.uleb128 0x1
 486 010c 9C       		.byte	0x9c
 487 010d 1B010000 		.4byte	0x11b
 488 0111 07       		.uleb128 0x7
 489 0112 06000000 		.4byte	.LVL2
 490 0116 39020000 		.4byte	0x239
 491 011a 00       		.byte	0
 492 011b 08       		.uleb128 0x8
 493 011c 11010000 		.4byte	.LASF20
 494 0120 01       		.byte	0x1
 495 0121 AB       		.byte	0xab
 496 0122 00000000 		.4byte	.LFB1
 497 0126 18000000 		.4byte	.LFE1-.LFB1
 498 012a 01       		.uleb128 0x1
 499 012b 9C       		.byte	0x9c
 500 012c 3A010000 		.4byte	0x13a
 501 0130 07       		.uleb128 0x7
 502 0131 12000000 		.4byte	.LVL3
 503 0135 BC000000 		.4byte	0xbc
 504 0139 00       		.byte	0
 505 013a 08       		.uleb128 0x8
 506 013b 6F010000 		.4byte	.LASF21
 507 013f 01       		.byte	0x1
 508 0140 D2       		.byte	0xd2
 509 0141 00000000 		.4byte	.LFB2
 510 0145 20000000 		.4byte	.LFE2-.LFB2
 511 0149 01       		.uleb128 0x1
 512 014a 9C       		.byte	0x9c
 513 014b 62010000 		.4byte	0x162
 514 014f 07       		.uleb128 0x7
 515 0150 0E000000 		.4byte	.LVL4
 516 0154 FC000000 		.4byte	0xfc
 517 0158 07       		.uleb128 0x7
 518 0159 18000000 		.4byte	.LVL5
 519 015d 1B010000 		.4byte	0x11b
 520 0161 00       		.byte	0
 521 0162 08       		.uleb128 0x8
 522 0163 F0010000 		.4byte	.LASF22
 523 0167 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 25


 524 0168 EF       		.byte	0xef
 525 0169 00000000 		.4byte	.LFB3
 526 016d 20000000 		.4byte	.LFE3-.LFB3
 527 0171 01       		.uleb128 0x1
 528 0172 9C       		.byte	0x9c
 529 0173 81010000 		.4byte	0x181
 530 0177 07       		.uleb128 0x7
 531 0178 06000000 		.4byte	.LVL6
 532 017c DC000000 		.4byte	0xdc
 533 0180 00       		.byte	0
 534 0181 09       		.uleb128 0x9
 535 0182 4C020000 		.4byte	.LASF23
 536 0186 01       		.byte	0x1
 537 0187 1701     		.2byte	0x117
 538 0189 00000000 		.4byte	.LFB4
 539 018d 14000000 		.4byte	.LFE4-.LFB4
 540 0191 01       		.uleb128 0x1
 541 0192 9C       		.byte	0x9c
 542 0193 B8010000 		.4byte	0x1b8
 543 0197 0A       		.uleb128 0xa
 544 0198 35000000 		.4byte	.LASF25
 545 019c 01       		.byte	0x1
 546 019d 1701     		.2byte	0x117
 547 019f 83000000 		.4byte	0x83
 548 01a3 00000000 		.4byte	.LLST0
 549 01a7 0B       		.uleb128 0xb
 550 01a8 6F020000 		.4byte	.LASF26
 551 01ac 01       		.byte	0x1
 552 01ad 1901     		.2byte	0x119
 553 01af 83000000 		.4byte	0x83
 554 01b3 21000000 		.4byte	.LLST1
 555 01b7 00       		.byte	0
 556 01b8 09       		.uleb128 0x9
 557 01b9 21000000 		.4byte	.LASF24
 558 01bd 01       		.byte	0x1
 559 01be 3001     		.2byte	0x130
 560 01c0 00000000 		.4byte	.LFB5
 561 01c4 14000000 		.4byte	.LFE5-.LFB5
 562 01c8 01       		.uleb128 0x1
 563 01c9 9C       		.byte	0x9c
 564 01ca EF010000 		.4byte	0x1ef
 565 01ce 0A       		.uleb128 0xa
 566 01cf 35000000 		.4byte	.LASF25
 567 01d3 01       		.byte	0x1
 568 01d4 3001     		.2byte	0x130
 569 01d6 83000000 		.4byte	0x83
 570 01da 3F000000 		.4byte	.LLST2
 571 01de 0B       		.uleb128 0xb
 572 01df 06000000 		.4byte	.LASF27
 573 01e3 01       		.byte	0x1
 574 01e4 3201     		.2byte	0x132
 575 01e6 83000000 		.4byte	0x83
 576 01ea 60000000 		.4byte	.LLST3
 577 01ee 00       		.byte	0
 578 01ef 0C       		.uleb128 0xc
 579 01f0 8F020000 		.4byte	.LASF36
 580 01f4 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 26


 581 01f5 2203     		.2byte	0x322
 582 01f7 00000000 		.4byte	.LFB9
 583 01fb 3C000000 		.4byte	.LFE9-.LFB9
 584 01ff 01       		.uleb128 0x1
 585 0200 9C       		.byte	0x9c
 586 0201 0D       		.uleb128 0xd
 587 0202 65000000 		.4byte	.LASF28
 588 0206 01       		.byte	0x1
 589 0207 51       		.byte	0x51
 590 0208 6B000000 		.4byte	0x6b
 591 020c 05       		.uleb128 0x5
 592 020d 03       		.byte	0x3
 593 020e 00000000 		.4byte	UART_initVar
 594 0212 0D       		.uleb128 0xd
 595 0213 11000000 		.4byte	.LASF29
 596 0217 01       		.byte	0x1
 597 0218 5A       		.byte	0x5a
 598 0219 77000000 		.4byte	0x77
 599 021d 05       		.uleb128 0x5
 600 021e 03       		.byte	0x3
 601 021f 00000000 		.4byte	UART_IntrTxMask
 602 0223 0E       		.uleb128 0xe
 603 0224 35010000 		.4byte	.LASF30
 604 0228 35010000 		.4byte	.LASF30
 605 022c 03       		.byte	0x3
 606 022d 4C       		.byte	0x4c
 607 022e 0E       		.uleb128 0xe
 608 022f 5B010000 		.4byte	.LASF31
 609 0233 5B010000 		.4byte	.LASF31
 610 0237 03       		.byte	0x3
 611 0238 4D       		.byte	0x4d
 612 0239 0E       		.uleb128 0xe
 613 023a CB010000 		.4byte	.LASF32
 614 023e CB010000 		.4byte	.LASF32
 615 0242 03       		.byte	0x3
 616 0243 50       		.byte	0x50
 617 0244 00       		.byte	0
 618              		.section	.debug_abbrev,"",%progbits
 619              	.Ldebug_abbrev0:
 620 0000 01       		.uleb128 0x1
 621 0001 11       		.uleb128 0x11
 622 0002 01       		.byte	0x1
 623 0003 25       		.uleb128 0x25
 624 0004 0E       		.uleb128 0xe
 625 0005 13       		.uleb128 0x13
 626 0006 0B       		.uleb128 0xb
 627 0007 03       		.uleb128 0x3
 628 0008 0E       		.uleb128 0xe
 629 0009 1B       		.uleb128 0x1b
 630 000a 0E       		.uleb128 0xe
 631 000b 55       		.uleb128 0x55
 632 000c 17       		.uleb128 0x17
 633 000d 11       		.uleb128 0x11
 634 000e 01       		.uleb128 0x1
 635 000f 10       		.uleb128 0x10
 636 0010 17       		.uleb128 0x17
 637 0011 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 27


 638 0012 00       		.byte	0
 639 0013 02       		.uleb128 0x2
 640 0014 24       		.uleb128 0x24
 641 0015 00       		.byte	0
 642 0016 0B       		.uleb128 0xb
 643 0017 0B       		.uleb128 0xb
 644 0018 3E       		.uleb128 0x3e
 645 0019 0B       		.uleb128 0xb
 646 001a 03       		.uleb128 0x3
 647 001b 0E       		.uleb128 0xe
 648 001c 00       		.byte	0
 649 001d 00       		.byte	0
 650 001e 03       		.uleb128 0x3
 651 001f 24       		.uleb128 0x24
 652 0020 00       		.byte	0
 653 0021 0B       		.uleb128 0xb
 654 0022 0B       		.uleb128 0xb
 655 0023 3E       		.uleb128 0x3e
 656 0024 0B       		.uleb128 0xb
 657 0025 03       		.uleb128 0x3
 658 0026 08       		.uleb128 0x8
 659 0027 00       		.byte	0
 660 0028 00       		.byte	0
 661 0029 04       		.uleb128 0x4
 662 002a 16       		.uleb128 0x16
 663 002b 00       		.byte	0
 664 002c 03       		.uleb128 0x3
 665 002d 0E       		.uleb128 0xe
 666 002e 3A       		.uleb128 0x3a
 667 002f 0B       		.uleb128 0xb
 668 0030 3B       		.uleb128 0x3b
 669 0031 05       		.uleb128 0x5
 670 0032 49       		.uleb128 0x49
 671 0033 13       		.uleb128 0x13
 672 0034 00       		.byte	0
 673 0035 00       		.byte	0
 674 0036 05       		.uleb128 0x5
 675 0037 35       		.uleb128 0x35
 676 0038 00       		.byte	0
 677 0039 49       		.uleb128 0x49
 678 003a 13       		.uleb128 0x13
 679 003b 00       		.byte	0
 680 003c 00       		.byte	0
 681 003d 06       		.uleb128 0x6
 682 003e 2E       		.uleb128 0x2e
 683 003f 01       		.byte	0x1
 684 0040 03       		.uleb128 0x3
 685 0041 0E       		.uleb128 0xe
 686 0042 3A       		.uleb128 0x3a
 687 0043 0B       		.uleb128 0xb
 688 0044 3B       		.uleb128 0x3b
 689 0045 05       		.uleb128 0x5
 690 0046 27       		.uleb128 0x27
 691 0047 19       		.uleb128 0x19
 692 0048 11       		.uleb128 0x11
 693 0049 01       		.uleb128 0x1
 694 004a 12       		.uleb128 0x12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 28


 695 004b 06       		.uleb128 0x6
 696 004c 40       		.uleb128 0x40
 697 004d 18       		.uleb128 0x18
 698 004e 9742     		.uleb128 0x2117
 699 0050 19       		.uleb128 0x19
 700 0051 01       		.uleb128 0x1
 701 0052 13       		.uleb128 0x13
 702 0053 00       		.byte	0
 703 0054 00       		.byte	0
 704 0055 07       		.uleb128 0x7
 705 0056 898201   		.uleb128 0x4109
 706 0059 00       		.byte	0
 707 005a 11       		.uleb128 0x11
 708 005b 01       		.uleb128 0x1
 709 005c 31       		.uleb128 0x31
 710 005d 13       		.uleb128 0x13
 711 005e 00       		.byte	0
 712 005f 00       		.byte	0
 713 0060 08       		.uleb128 0x8
 714 0061 2E       		.uleb128 0x2e
 715 0062 01       		.byte	0x1
 716 0063 3F       		.uleb128 0x3f
 717 0064 19       		.uleb128 0x19
 718 0065 03       		.uleb128 0x3
 719 0066 0E       		.uleb128 0xe
 720 0067 3A       		.uleb128 0x3a
 721 0068 0B       		.uleb128 0xb
 722 0069 3B       		.uleb128 0x3b
 723 006a 0B       		.uleb128 0xb
 724 006b 27       		.uleb128 0x27
 725 006c 19       		.uleb128 0x19
 726 006d 11       		.uleb128 0x11
 727 006e 01       		.uleb128 0x1
 728 006f 12       		.uleb128 0x12
 729 0070 06       		.uleb128 0x6
 730 0071 40       		.uleb128 0x40
 731 0072 18       		.uleb128 0x18
 732 0073 9742     		.uleb128 0x2117
 733 0075 19       		.uleb128 0x19
 734 0076 01       		.uleb128 0x1
 735 0077 13       		.uleb128 0x13
 736 0078 00       		.byte	0
 737 0079 00       		.byte	0
 738 007a 09       		.uleb128 0x9
 739 007b 2E       		.uleb128 0x2e
 740 007c 01       		.byte	0x1
 741 007d 3F       		.uleb128 0x3f
 742 007e 19       		.uleb128 0x19
 743 007f 03       		.uleb128 0x3
 744 0080 0E       		.uleb128 0xe
 745 0081 3A       		.uleb128 0x3a
 746 0082 0B       		.uleb128 0xb
 747 0083 3B       		.uleb128 0x3b
 748 0084 05       		.uleb128 0x5
 749 0085 27       		.uleb128 0x27
 750 0086 19       		.uleb128 0x19
 751 0087 11       		.uleb128 0x11
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 29


 752 0088 01       		.uleb128 0x1
 753 0089 12       		.uleb128 0x12
 754 008a 06       		.uleb128 0x6
 755 008b 40       		.uleb128 0x40
 756 008c 18       		.uleb128 0x18
 757 008d 9742     		.uleb128 0x2117
 758 008f 19       		.uleb128 0x19
 759 0090 01       		.uleb128 0x1
 760 0091 13       		.uleb128 0x13
 761 0092 00       		.byte	0
 762 0093 00       		.byte	0
 763 0094 0A       		.uleb128 0xa
 764 0095 05       		.uleb128 0x5
 765 0096 00       		.byte	0
 766 0097 03       		.uleb128 0x3
 767 0098 0E       		.uleb128 0xe
 768 0099 3A       		.uleb128 0x3a
 769 009a 0B       		.uleb128 0xb
 770 009b 3B       		.uleb128 0x3b
 771 009c 05       		.uleb128 0x5
 772 009d 49       		.uleb128 0x49
 773 009e 13       		.uleb128 0x13
 774 009f 02       		.uleb128 0x2
 775 00a0 17       		.uleb128 0x17
 776 00a1 00       		.byte	0
 777 00a2 00       		.byte	0
 778 00a3 0B       		.uleb128 0xb
 779 00a4 34       		.uleb128 0x34
 780 00a5 00       		.byte	0
 781 00a6 03       		.uleb128 0x3
 782 00a7 0E       		.uleb128 0xe
 783 00a8 3A       		.uleb128 0x3a
 784 00a9 0B       		.uleb128 0xb
 785 00aa 3B       		.uleb128 0x3b
 786 00ab 05       		.uleb128 0x5
 787 00ac 49       		.uleb128 0x49
 788 00ad 13       		.uleb128 0x13
 789 00ae 02       		.uleb128 0x2
 790 00af 17       		.uleb128 0x17
 791 00b0 00       		.byte	0
 792 00b1 00       		.byte	0
 793 00b2 0C       		.uleb128 0xc
 794 00b3 2E       		.uleb128 0x2e
 795 00b4 00       		.byte	0
 796 00b5 3F       		.uleb128 0x3f
 797 00b6 19       		.uleb128 0x19
 798 00b7 03       		.uleb128 0x3
 799 00b8 0E       		.uleb128 0xe
 800 00b9 3A       		.uleb128 0x3a
 801 00ba 0B       		.uleb128 0xb
 802 00bb 3B       		.uleb128 0x3b
 803 00bc 05       		.uleb128 0x5
 804 00bd 27       		.uleb128 0x27
 805 00be 19       		.uleb128 0x19
 806 00bf 11       		.uleb128 0x11
 807 00c0 01       		.uleb128 0x1
 808 00c1 12       		.uleb128 0x12
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 30


 809 00c2 06       		.uleb128 0x6
 810 00c3 40       		.uleb128 0x40
 811 00c4 18       		.uleb128 0x18
 812 00c5 9742     		.uleb128 0x2117
 813 00c7 19       		.uleb128 0x19
 814 00c8 00       		.byte	0
 815 00c9 00       		.byte	0
 816 00ca 0D       		.uleb128 0xd
 817 00cb 34       		.uleb128 0x34
 818 00cc 00       		.byte	0
 819 00cd 03       		.uleb128 0x3
 820 00ce 0E       		.uleb128 0xe
 821 00cf 3A       		.uleb128 0x3a
 822 00d0 0B       		.uleb128 0xb
 823 00d1 3B       		.uleb128 0x3b
 824 00d2 0B       		.uleb128 0xb
 825 00d3 49       		.uleb128 0x49
 826 00d4 13       		.uleb128 0x13
 827 00d5 3F       		.uleb128 0x3f
 828 00d6 19       		.uleb128 0x19
 829 00d7 02       		.uleb128 0x2
 830 00d8 18       		.uleb128 0x18
 831 00d9 00       		.byte	0
 832 00da 00       		.byte	0
 833 00db 0E       		.uleb128 0xe
 834 00dc 2E       		.uleb128 0x2e
 835 00dd 00       		.byte	0
 836 00de 3F       		.uleb128 0x3f
 837 00df 19       		.uleb128 0x19
 838 00e0 3C       		.uleb128 0x3c
 839 00e1 19       		.uleb128 0x19
 840 00e2 6E       		.uleb128 0x6e
 841 00e3 0E       		.uleb128 0xe
 842 00e4 03       		.uleb128 0x3
 843 00e5 0E       		.uleb128 0xe
 844 00e6 3A       		.uleb128 0x3a
 845 00e7 0B       		.uleb128 0xb
 846 00e8 3B       		.uleb128 0x3b
 847 00e9 0B       		.uleb128 0xb
 848 00ea 00       		.byte	0
 849 00eb 00       		.byte	0
 850 00ec 00       		.byte	0
 851              		.section	.debug_loc,"",%progbits
 852              	.Ldebug_loc0:
 853              	.LLST0:
 854 0000 00000000 		.4byte	.LVL7
 855 0004 0A000000 		.4byte	.LVL10
 856 0008 0100     		.2byte	0x1
 857 000a 50       		.byte	0x50
 858 000b 0A000000 		.4byte	.LVL10
 859 000f 14000000 		.4byte	.LFE4
 860 0013 0400     		.2byte	0x4
 861 0015 F3       		.byte	0xf3
 862 0016 01       		.uleb128 0x1
 863 0017 50       		.byte	0x50
 864 0018 9F       		.byte	0x9f
 865 0019 00000000 		.4byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 31


 866 001d 00000000 		.4byte	0
 867              	.LLST1:
 868 0021 04000000 		.4byte	.LVL8
 869 0025 0C000000 		.4byte	.LVL11
 870 0029 0100     		.2byte	0x1
 871 002b 53       		.byte	0x53
 872 002c 0C000000 		.4byte	.LVL11
 873 0030 14000000 		.4byte	.LFE4
 874 0034 0100     		.2byte	0x1
 875 0036 50       		.byte	0x50
 876 0037 00000000 		.4byte	0
 877 003b 00000000 		.4byte	0
 878              	.LLST2:
 879 003f 00000000 		.4byte	.LVL12
 880 0043 0A000000 		.4byte	.LVL15
 881 0047 0100     		.2byte	0x1
 882 0049 50       		.byte	0x50
 883 004a 0A000000 		.4byte	.LVL15
 884 004e 14000000 		.4byte	.LFE5
 885 0052 0400     		.2byte	0x4
 886 0054 F3       		.byte	0xf3
 887 0055 01       		.uleb128 0x1
 888 0056 50       		.byte	0x50
 889 0057 9F       		.byte	0x9f
 890 0058 00000000 		.4byte	0
 891 005c 00000000 		.4byte	0
 892              	.LLST3:
 893 0060 04000000 		.4byte	.LVL13
 894 0064 0C000000 		.4byte	.LVL16
 895 0068 0100     		.2byte	0x1
 896 006a 53       		.byte	0x53
 897 006b 0C000000 		.4byte	.LVL16
 898 006f 14000000 		.4byte	.LFE5
 899 0073 0100     		.2byte	0x1
 900 0075 50       		.byte	0x50
 901 0076 00000000 		.4byte	0
 902 007a 00000000 		.4byte	0
 903              		.section	.debug_aranges,"",%progbits
 904 0000 5C000000 		.4byte	0x5c
 905 0004 0200     		.2byte	0x2
 906 0006 00000000 		.4byte	.Ldebug_info0
 907 000a 04       		.byte	0x4
 908 000b 00       		.byte	0
 909 000c 0000     		.2byte	0
 910 000e 0000     		.2byte	0
 911 0010 00000000 		.4byte	.LFB7
 912 0014 08000000 		.4byte	.LFE7-.LFB7
 913 0018 00000000 		.4byte	.LFB8
 914 001c 08000000 		.4byte	.LFE8-.LFB8
 915 0020 00000000 		.4byte	.LFB0
 916 0024 08000000 		.4byte	.LFE0-.LFB0
 917 0028 00000000 		.4byte	.LFB1
 918 002c 18000000 		.4byte	.LFE1-.LFB1
 919 0030 00000000 		.4byte	.LFB2
 920 0034 20000000 		.4byte	.LFE2-.LFB2
 921 0038 00000000 		.4byte	.LFB3
 922 003c 20000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 32


 923 0040 00000000 		.4byte	.LFB4
 924 0044 14000000 		.4byte	.LFE4-.LFB4
 925 0048 00000000 		.4byte	.LFB5
 926 004c 14000000 		.4byte	.LFE5-.LFB5
 927 0050 00000000 		.4byte	.LFB9
 928 0054 3C000000 		.4byte	.LFE9-.LFB9
 929 0058 00000000 		.4byte	0
 930 005c 00000000 		.4byte	0
 931              		.section	.debug_ranges,"",%progbits
 932              	.Ldebug_ranges0:
 933 0000 00000000 		.4byte	.LFB7
 934 0004 08000000 		.4byte	.LFE7
 935 0008 00000000 		.4byte	.LFB8
 936 000c 08000000 		.4byte	.LFE8
 937 0010 00000000 		.4byte	.LFB0
 938 0014 08000000 		.4byte	.LFE0
 939 0018 00000000 		.4byte	.LFB1
 940 001c 18000000 		.4byte	.LFE1
 941 0020 00000000 		.4byte	.LFB2
 942 0024 20000000 		.4byte	.LFE2
 943 0028 00000000 		.4byte	.LFB3
 944 002c 20000000 		.4byte	.LFE3
 945 0030 00000000 		.4byte	.LFB4
 946 0034 14000000 		.4byte	.LFE4
 947 0038 00000000 		.4byte	.LFB5
 948 003c 14000000 		.4byte	.LFE5
 949 0040 00000000 		.4byte	.LFB9
 950 0044 3C000000 		.4byte	.LFE9
 951 0048 00000000 		.4byte	0
 952 004c 00000000 		.4byte	0
 953              		.section	.debug_line,"",%progbits
 954              	.Ldebug_line0:
 955 0000 23010000 		.section	.debug_str,"MS",%progbits,1
 955      02005800 
 955      00000201 
 955      FB0E0D00 
 955      01010101 
 956              	.LASF15:
 957 0000 72656733 		.ascii	"reg32\000"
 957      3200
 958              	.LASF27:
 959 0006 74784669 		.ascii	"txFifoCtrl\000"
 959      666F4374 
 959      726C00
 960              	.LASF29:
 961 0011 55415254 		.ascii	"UART_IntrTxMask\000"
 961      5F496E74 
 961      7254784D 
 961      61736B00 
 962              	.LASF24:
 963 0021 55415254 		.ascii	"UART_SetTxFifoLevel\000"
 963      5F536574 
 963      54784669 
 963      666F4C65 
 963      76656C00 
 964              	.LASF25:
 965 0035 6C657665 		.ascii	"level\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 33


 965      6C00
 966              	.LASF17:
 967 003b 55415254 		.ascii	"UART_ScbModePostEnable\000"
 967      5F536362 
 967      4D6F6465 
 967      506F7374 
 967      456E6162 
 968              	.LASF3:
 969 0052 73686F72 		.ascii	"short unsigned int\000"
 969      7420756E 
 969      7369676E 
 969      65642069 
 969      6E7400
 970              	.LASF28:
 971 0065 55415254 		.ascii	"UART_initVar\000"
 971      5F696E69 
 971      74566172 
 971      00
 972              	.LASF33:
 973 0072 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 973      43393920 
 973      352E342E 
 973      31203230 
 973      31363036 
 974 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 974      20726576 
 974      6973696F 
 974      6E203233 
 974      37373135 
 975 00d8 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 975      74643D67 
 975      6E753939 
 975      202D6666 
 975      756E6374 
 976              	.LASF12:
 977 010b 666C6F61 		.ascii	"float\000"
 977      7400
 978              	.LASF20:
 979 0111 55415254 		.ascii	"UART_Enable\000"
 979      5F456E61 
 979      626C6500 
 980              	.LASF1:
 981 011d 756E7369 		.ascii	"unsigned char\000"
 981      676E6564 
 981      20636861 
 981      7200
 982              	.LASF19:
 983 012b 55415254 		.ascii	"UART_Init\000"
 983      5F496E69 
 983      7400
 984              	.LASF30:
 985 0135 55415254 		.ascii	"UART_UartPostEnable\000"
 985      5F556172 
 985      74506F73 
 985      74456E61 
 985      626C6500 
 986              	.LASF5:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 34


 987 0149 6C6F6E67 		.ascii	"long unsigned int\000"
 987      20756E73 
 987      69676E65 
 987      6420696E 
 987      7400
 988              	.LASF31:
 989 015b 55415254 		.ascii	"UART_UartStop\000"
 989      5F556172 
 989      7453746F 
 989      7000
 990              	.LASF9:
 991 0169 75696E74 		.ascii	"uint8\000"
 991      3800
 992              	.LASF21:
 993 016f 55415254 		.ascii	"UART_Start\000"
 993      5F537461 
 993      727400
 994              	.LASF13:
 995 017a 646F7562 		.ascii	"double\000"
 995      6C6500
 996              	.LASF10:
 997 0181 75696E74 		.ascii	"uint16\000"
 997      313600
 998              	.LASF34:
 999 0188 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART.c\000"
 999      72617465 
 999      645F536F 
 999      75726365 
 999      5C50536F 
 1000              	.LASF11:
 1001 01a6 75696E74 		.ascii	"uint32\000"
 1001      333200
 1002              	.LASF18:
 1003 01ad 55415254 		.ascii	"UART_ScbModeStop\000"
 1003      5F536362 
 1003      4D6F6465 
 1003      53746F70 
 1003      00
 1004              	.LASF8:
 1005 01be 756E7369 		.ascii	"unsigned int\000"
 1005      676E6564 
 1005      20696E74 
 1005      00
 1006              	.LASF32:
 1007 01cb 55415254 		.ascii	"UART_UartInit\000"
 1007      5F556172 
 1007      74496E69 
 1007      7400
 1008              	.LASF7:
 1009 01d9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1009      206C6F6E 
 1009      6720756E 
 1009      7369676E 
 1009      65642069 
 1010              	.LASF22:
 1011 01f0 55415254 		.ascii	"UART_Stop\000"
 1011      5F53746F 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\cc78AYRu.s 			page 35


 1011      7000
 1012              	.LASF35:
 1013 01fa 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Relo"
 1013      5F776F72 
 1013      6B5C6D79 
 1013      5F70726F 
 1013      6A656374 
 1014 0228 61642050 		.ascii	"ad Pro.cydsn\000"
 1014      726F2E63 
 1014      7964736E 
 1014      00
 1015              	.LASF16:
 1016 0235 73697A65 		.ascii	"sizetype\000"
 1016      74797065 
 1016      00
 1017              	.LASF6:
 1018 023e 6C6F6E67 		.ascii	"long long int\000"
 1018      206C6F6E 
 1018      6720696E 
 1018      7400
 1019              	.LASF23:
 1020 024c 55415254 		.ascii	"UART_SetRxFifoLevel\000"
 1020      5F536574 
 1020      52784669 
 1020      666F4C65 
 1020      76656C00 
 1021              	.LASF14:
 1022 0260 63686172 		.ascii	"char\000"
 1022      00
 1023              	.LASF2:
 1024 0265 73686F72 		.ascii	"short int\000"
 1024      7420696E 
 1024      7400
 1025              	.LASF26:
 1026 026f 72784669 		.ascii	"rxFifoCtrl\000"
 1026      666F4374 
 1026      726C00
 1027              	.LASF4:
 1028 027a 6C6F6E67 		.ascii	"long int\000"
 1028      20696E74 
 1028      00
 1029              	.LASF0:
 1030 0283 7369676E 		.ascii	"signed char\000"
 1030      65642063 
 1030      68617200 
 1031              	.LASF36:
 1032 028f 55415254 		.ascii	"UART_I2CSlaveNackGeneration\000"
 1032      5F493243 
 1032      536C6176 
 1032      654E6163 
 1032      6B47656E 
 1033              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
