ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_intClock.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_intClock_Start,"ax",%progbits
  20              		.align	1
  21              		.global	ADC_intClock_Start
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_intClock_Start, %function
  25              	ADC_intClock_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_intClock.c"
   1:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_intClock.c **** * File Name: ADC_intClock.c
   3:Generated_Source\PSoC4/ADC_intClock.c **** * Version 2.20
   4:Generated_Source\PSoC4/ADC_intClock.c **** *
   5:Generated_Source\PSoC4/ADC_intClock.c **** *  Description:
   6:Generated_Source\PSoC4/ADC_intClock.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/ADC_intClock.c **** *
   8:Generated_Source\PSoC4/ADC_intClock.c **** *  Note:
   9:Generated_Source\PSoC4/ADC_intClock.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/ADC_intClock.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/ADC_intClock.c **** *
  12:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  13:Generated_Source\PSoC4/ADC_intClock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/ADC_intClock.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/ADC_intClock.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/ADC_intClock.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/ADC_intClock.c **** 
  19:Generated_Source\PSoC4/ADC_intClock.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/ADC_intClock.c **** #include "ADC_intClock.h"
  21:Generated_Source\PSoC4/ADC_intClock.c **** 
  22:Generated_Source\PSoC4/ADC_intClock.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/ADC_intClock.c **** 
  24:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_StartEx
  26:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  27:Generated_Source\PSoC4/ADC_intClock.c **** *
  28:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
  29:Generated_Source\PSoC4/ADC_intClock.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/ADC_intClock.c **** *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 2


  31:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
  32:Generated_Source\PSoC4/ADC_intClock.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
  33:Generated_Source\PSoC4/ADC_intClock.c **** *    clock is started.
  34:Generated_Source\PSoC4/ADC_intClock.c **** *
  35:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
  36:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  37:Generated_Source\PSoC4/ADC_intClock.c **** *
  38:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/ADC_intClock.c **** {
  41:Generated_Source\PSoC4/ADC_intClock.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/ADC_intClock.c ****     while((ADC_intClock_CMD_REG & ADC_intClock_CMD_ENABLE_MASK) != 0u)
  43:Generated_Source\PSoC4/ADC_intClock.c ****     {
  44:Generated_Source\PSoC4/ADC_intClock.c ****     }
  45:Generated_Source\PSoC4/ADC_intClock.c ****     
  46:Generated_Source\PSoC4/ADC_intClock.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_CMD_REG =
  48:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)ADC_intClock__DIV_ID << ADC_intClock_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/ADC_intClock.c ****         (alignClkDiv << ADC_intClock_CMD_PA_DIV_SHIFT) |
  50:Generated_Source\PSoC4/ADC_intClock.c ****         (uint32)ADC_intClock_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/ADC_intClock.c **** }
  52:Generated_Source\PSoC4/ADC_intClock.c **** 
  53:Generated_Source\PSoC4/ADC_intClock.c **** #else
  54:Generated_Source\PSoC4/ADC_intClock.c **** 
  55:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_Start
  57:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  58:Generated_Source\PSoC4/ADC_intClock.c **** *
  59:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
  60:Generated_Source\PSoC4/ADC_intClock.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/ADC_intClock.c **** *
  62:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
  63:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  64:Generated_Source\PSoC4/ADC_intClock.c **** *
  65:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
  66:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  67:Generated_Source\PSoC4/ADC_intClock.c **** *
  68:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/ADC_intClock.c **** 
  70:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_Start(void)
  71:Generated_Source\PSoC4/ADC_intClock.c **** {
  28              		.loc 1 71 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  72:Generated_Source\PSoC4/ADC_intClock.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_ENABLE_REG |= ADC_intClock__ENABLE_MASK;
  33              		.loc 1 73 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
  74:Generated_Source\PSoC4/ADC_intClock.c **** }
  38              		.loc 1 74 0
  39              		@ sp needed
  73:Generated_Source\PSoC4/ADC_intClock.c **** }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 3


  40              		.loc 1 73 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 74 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 40000240 		.word	1073872960
  49              		.cfi_endproc
  50              	.LFE0:
  51              		.size	ADC_intClock_Start, .-ADC_intClock_Start
  52              		.section	.text.ADC_intClock_Stop,"ax",%progbits
  53              		.align	1
  54              		.global	ADC_intClock_Stop
  55              		.code	16
  56              		.thumb_func
  57              		.type	ADC_intClock_Stop, %function
  58              	ADC_intClock_Stop:
  59              	.LFB1:
  75:Generated_Source\PSoC4/ADC_intClock.c **** 
  76:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/ADC_intClock.c **** 
  78:Generated_Source\PSoC4/ADC_intClock.c **** 
  79:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_Stop
  81:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
  82:Generated_Source\PSoC4/ADC_intClock.c **** *
  83:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
  84:Generated_Source\PSoC4/ADC_intClock.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/ADC_intClock.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/ADC_intClock.c **** *  disabled.
  87:Generated_Source\PSoC4/ADC_intClock.c **** *
  88:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
  89:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  90:Generated_Source\PSoC4/ADC_intClock.c **** *
  91:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
  92:Generated_Source\PSoC4/ADC_intClock.c **** *  None
  93:Generated_Source\PSoC4/ADC_intClock.c **** *
  94:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_Stop(void)
  96:Generated_Source\PSoC4/ADC_intClock.c **** {
  60              		.loc 1 96 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  97:Generated_Source\PSoC4/ADC_intClock.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/ADC_intClock.c **** 
  99:Generated_Source\PSoC4/ADC_intClock.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/ADC_intClock.c ****     while((ADC_intClock_CMD_REG & ADC_intClock_CMD_ENABLE_MASK) != 0u)
 101:Generated_Source\PSoC4/ADC_intClock.c ****     {
 102:Generated_Source\PSoC4/ADC_intClock.c ****     }
 103:Generated_Source\PSoC4/ADC_intClock.c ****     
 104:Generated_Source\PSoC4/ADC_intClock.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_CMD_REG =
 106:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)ADC_intClock__DIV_ID << ADC_intClock_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 4


 107:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)ADC_intClock_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/ADC_intClock.c **** 
 109:Generated_Source\PSoC4/ADC_intClock.c **** #else
 110:Generated_Source\PSoC4/ADC_intClock.c **** 
 111:Generated_Source\PSoC4/ADC_intClock.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_ENABLE_REG &= (uint32)(~ADC_intClock__ENABLE_MASK);
  65              		.loc 1 112 0
  66 0000 024A     		ldr	r2, .L5
 113:Generated_Source\PSoC4/ADC_intClock.c ****     
 114:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/ADC_intClock.c **** }
  67              		.loc 1 115 0
  68              		@ sp needed
 112:Generated_Source\PSoC4/ADC_intClock.c ****     
  69              		.loc 1 112 0
  70 0002 1368     		ldr	r3, [r2]
  71 0004 5B00     		lsls	r3, r3, #1
  72 0006 5B08     		lsrs	r3, r3, #1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 115 0
  75 000a 7047     		bx	lr
  76              	.L6:
  77              		.align	2
  78              	.L5:
  79 000c 40000240 		.word	1073872960
  80              		.cfi_endproc
  81              	.LFE1:
  82              		.size	ADC_intClock_Stop, .-ADC_intClock_Stop
  83              		.section	.text.ADC_intClock_SetFractionalDividerRegister,"ax",%progbits
  84              		.align	1
  85              		.global	ADC_intClock_SetFractionalDividerRegister
  86              		.code	16
  87              		.thumb_func
  88              		.type	ADC_intClock_SetFractionalDividerRegister, %function
  89              	ADC_intClock_SetFractionalDividerRegister:
  90              	.LFB2:
 116:Generated_Source\PSoC4/ADC_intClock.c **** 
 117:Generated_Source\PSoC4/ADC_intClock.c **** 
 118:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
 121:Generated_Source\PSoC4/ADC_intClock.c **** *
 122:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
 123:Generated_Source\PSoC4/ADC_intClock.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/ADC_intClock.c **** *
 125:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
 126:Generated_Source\PSoC4/ADC_intClock.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/ADC_intClock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/ADC_intClock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/ADC_intClock.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
 131:Generated_Source\PSoC4/ADC_intClock.c **** *  None
 132:Generated_Source\PSoC4/ADC_intClock.c **** *
 133:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/ADC_intClock.c **** void ADC_intClock_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/ADC_intClock.c **** {
  91              		.loc 1 135 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 5


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL0:
 136:Generated_Source\PSoC4/ADC_intClock.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/ADC_intClock.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/ADC_intClock.c ****     
 139:Generated_Source\PSoC4/ADC_intClock.c **** #if defined (ADC_intClock__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/ADC_intClock.c ****     
 141:Generated_Source\PSoC4/ADC_intClock.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/ADC_intClock.c ****     maskVal = ADC_intClock_DIV_REG & 
 143:Generated_Source\PSoC4/ADC_intClock.c ****                     (uint32)(~(uint32)(ADC_intClock_DIV_INT_MASK | ADC_intClock_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/ADC_intClock.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/ADC_intClock.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)((uint32)clkDivider <<  ADC_intClock_DIV_INT_SHIFT) & ADC_intClock_DIV_INT_MASK) |
 147:Generated_Source\PSoC4/ADC_intClock.c ****         ((uint32)((uint32)clkFractional << ADC_intClock_DIV_FRAC_SHIFT) & ADC_intClock_DIV_FRAC_MAS
 148:Generated_Source\PSoC4/ADC_intClock.c ****     
 149:Generated_Source\PSoC4/ADC_intClock.c **** #else
 150:Generated_Source\PSoC4/ADC_intClock.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/ADC_intClock.c ****     maskVal = ADC_intClock_DIV_REG & (uint32)(~(uint32)ADC_intClock__DIVIDER_MASK);
  97              		.loc 1 151 0
  98 0000 034A     		ldr	r2, .L8
 152:Generated_Source\PSoC4/ADC_intClock.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/ADC_intClock.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/ADC_intClock.c ****     
 155:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* ADC_intClock__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/ADC_intClock.c **** 
 157:Generated_Source\PSoC4/ADC_intClock.c ****     ADC_intClock_DIV_REG = regVal;
 158:Generated_Source\PSoC4/ADC_intClock.c **** }
  99              		.loc 1 158 0
 100              		@ sp needed
 151:Generated_Source\PSoC4/ADC_intClock.c ****     /* combine mask and new divider val into 32-bit value */
 101              		.loc 1 151 0
 102 0002 1368     		ldr	r3, [r2]
 103              	.LVL1:
 153:Generated_Source\PSoC4/ADC_intClock.c ****     
 104              		.loc 1 153 0
 105 0004 1B0C     		lsrs	r3, r3, #16
 106              	.LVL2:
 107 0006 1B04     		lsls	r3, r3, #16
 108 0008 0343     		orrs	r3, r0
 109              	.LVL3:
 157:Generated_Source\PSoC4/ADC_intClock.c **** }
 110              		.loc 1 157 0
 111 000a 1360     		str	r3, [r2]
 112              		.loc 1 158 0
 113 000c 7047     		bx	lr
 114              	.L9:
 115 000e C046     		.align	2
 116              	.L8:
 117 0010 40000240 		.word	1073872960
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	ADC_intClock_SetFractionalDividerRegister, .-ADC_intClock_SetFractionalDividerRegister
 121              		.section	.text.ADC_intClock_GetDividerRegister,"ax",%progbits
 122              		.align	1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 6


 123              		.global	ADC_intClock_GetDividerRegister
 124              		.code	16
 125              		.thumb_func
 126              		.type	ADC_intClock_GetDividerRegister, %function
 127              	ADC_intClock_GetDividerRegister:
 128              	.LFB3:
 159:Generated_Source\PSoC4/ADC_intClock.c **** 
 160:Generated_Source\PSoC4/ADC_intClock.c **** 
 161:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_GetDividerRegister
 163:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
 164:Generated_Source\PSoC4/ADC_intClock.c **** *
 165:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
 166:Generated_Source\PSoC4/ADC_intClock.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/ADC_intClock.c **** *
 168:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
 169:Generated_Source\PSoC4/ADC_intClock.c **** *  None
 170:Generated_Source\PSoC4/ADC_intClock.c **** *
 171:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
 172:Generated_Source\PSoC4/ADC_intClock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/ADC_intClock.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/ADC_intClock.c **** *
 175:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/ADC_intClock.c **** uint16 ADC_intClock_GetDividerRegister(void)
 177:Generated_Source\PSoC4/ADC_intClock.c **** {
 129              		.loc 1 177 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 178:Generated_Source\PSoC4/ADC_intClock.c ****     return (uint16)((ADC_intClock_DIV_REG & ADC_intClock_DIV_INT_MASK)
 134              		.loc 1 178 0
 135 0000 014B     		ldr	r3, .L11
 179:Generated_Source\PSoC4/ADC_intClock.c ****         >> ADC_intClock_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/ADC_intClock.c **** }
 136              		.loc 1 180 0
 137              		@ sp needed
 178:Generated_Source\PSoC4/ADC_intClock.c ****     return (uint16)((ADC_intClock_DIV_REG & ADC_intClock_DIV_INT_MASK)
 138              		.loc 1 178 0
 139 0002 1868     		ldr	r0, [r3]
 140 0004 80B2     		uxth	r0, r0
 141              		.loc 1 180 0
 142 0006 7047     		bx	lr
 143              	.L12:
 144              		.align	2
 145              	.L11:
 146 0008 40000240 		.word	1073872960
 147              		.cfi_endproc
 148              	.LFE3:
 149              		.size	ADC_intClock_GetDividerRegister, .-ADC_intClock_GetDividerRegister
 150              		.section	.text.ADC_intClock_GetFractionalDividerRegister,"ax",%progbits
 151              		.align	1
 152              		.global	ADC_intClock_GetFractionalDividerRegister
 153              		.code	16
 154              		.thumb_func
 155              		.type	ADC_intClock_GetFractionalDividerRegister, %function
 156              	ADC_intClock_GetFractionalDividerRegister:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 7


 157              	.LFB4:
 181:Generated_Source\PSoC4/ADC_intClock.c **** 
 182:Generated_Source\PSoC4/ADC_intClock.c **** 
 183:Generated_Source\PSoC4/ADC_intClock.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/ADC_intClock.c **** * Function Name: ADC_intClock_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/ADC_intClock.c **** ********************************************************************************
 186:Generated_Source\PSoC4/ADC_intClock.c **** *
 187:Generated_Source\PSoC4/ADC_intClock.c **** * Summary:
 188:Generated_Source\PSoC4/ADC_intClock.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/ADC_intClock.c **** *
 190:Generated_Source\PSoC4/ADC_intClock.c **** * Parameters:
 191:Generated_Source\PSoC4/ADC_intClock.c **** *  None
 192:Generated_Source\PSoC4/ADC_intClock.c **** *
 193:Generated_Source\PSoC4/ADC_intClock.c **** * Returns:
 194:Generated_Source\PSoC4/ADC_intClock.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/ADC_intClock.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/ADC_intClock.c **** *
 197:Generated_Source\PSoC4/ADC_intClock.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/ADC_intClock.c **** uint8 ADC_intClock_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/ADC_intClock.c **** {
 158              		.loc 1 199 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 200:Generated_Source\PSoC4/ADC_intClock.c **** #if defined (ADC_intClock__FRAC_MASK)
 201:Generated_Source\PSoC4/ADC_intClock.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/ADC_intClock.c ****     return (uint8)((ADC_intClock_DIV_REG & ADC_intClock_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/ADC_intClock.c ****         >> ADC_intClock_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/ADC_intClock.c **** #else
 205:Generated_Source\PSoC4/ADC_intClock.c ****     return 0u;
 206:Generated_Source\PSoC4/ADC_intClock.c **** #endif /* ADC_intClock__FRAC_MASK */
 207:Generated_Source\PSoC4/ADC_intClock.c **** }
 163              		.loc 1 207 0
 164 0000 0020     		movs	r0, #0
 165              		@ sp needed
 166 0002 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE4:
 169              		.size	ADC_intClock_GetFractionalDividerRegister, .-ADC_intClock_GetFractionalDividerRegister
 170              		.text
 171              	.Letext0:
 172              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 173              		.section	.debug_info,"",%progbits
 174              	.Ldebug_info0:
 175 0000 4A010000 		.4byte	0x14a
 176 0004 0400     		.2byte	0x4
 177 0006 00000000 		.4byte	.Ldebug_abbrev0
 178 000a 04       		.byte	0x4
 179 000b 01       		.uleb128 0x1
 180 000c 70010000 		.4byte	.LASF24
 181 0010 0C       		.byte	0xc
 182 0011 98000000 		.4byte	.LASF25
 183 0015 06000000 		.4byte	.LASF26
 184 0019 00000000 		.4byte	.Ldebug_ranges0+0
 185 001d 00000000 		.4byte	0
 186 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 8


 187 0025 02       		.uleb128 0x2
 188 0026 01       		.byte	0x1
 189 0027 06       		.byte	0x6
 190 0028 5F020000 		.4byte	.LASF0
 191 002c 02       		.uleb128 0x2
 192 002d 01       		.byte	0x1
 193 002e 08       		.byte	0x8
 194 002f E4000000 		.4byte	.LASF1
 195 0033 02       		.uleb128 0x2
 196 0034 02       		.byte	0x2
 197 0035 05       		.byte	0x5
 198 0036 46020000 		.4byte	.LASF2
 199 003a 02       		.uleb128 0x2
 200 003b 02       		.byte	0x2
 201 003c 07       		.byte	0x7
 202 003d 04010000 		.4byte	.LASF3
 203 0041 02       		.uleb128 0x2
 204 0042 04       		.byte	0x4
 205 0043 05       		.byte	0x5
 206 0044 56020000 		.4byte	.LASF4
 207 0048 02       		.uleb128 0x2
 208 0049 04       		.byte	0x4
 209 004a 07       		.byte	0x7
 210 004b F2000000 		.4byte	.LASF5
 211 004f 02       		.uleb128 0x2
 212 0050 08       		.byte	0x8
 213 0051 05       		.byte	0x5
 214 0052 09020000 		.4byte	.LASF6
 215 0056 02       		.uleb128 0x2
 216 0057 08       		.byte	0x8
 217 0058 07       		.byte	0x7
 218 0059 59010000 		.4byte	.LASF7
 219 005d 03       		.uleb128 0x3
 220 005e 04       		.byte	0x4
 221 005f 05       		.byte	0x5
 222 0060 696E7400 		.ascii	"int\000"
 223 0064 02       		.uleb128 0x2
 224 0065 04       		.byte	0x4
 225 0066 07       		.byte	0x7
 226 0067 4C010000 		.4byte	.LASF8
 227 006b 04       		.uleb128 0x4
 228 006c 50020000 		.4byte	.LASF9
 229 0070 02       		.byte	0x2
 230 0071 E401     		.2byte	0x1e4
 231 0073 2C000000 		.4byte	0x2c
 232 0077 04       		.uleb128 0x4
 233 0078 3E010000 		.4byte	.LASF10
 234 007c 02       		.byte	0x2
 235 007d E501     		.2byte	0x1e5
 236 007f 3A000000 		.4byte	0x3a
 237 0083 04       		.uleb128 0x4
 238 0084 45010000 		.4byte	.LASF11
 239 0088 02       		.byte	0x2
 240 0089 E601     		.2byte	0x1e6
 241 008b 48000000 		.4byte	0x48
 242 008f 02       		.uleb128 0x2
 243 0090 04       		.byte	0x4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 9


 244 0091 04       		.byte	0x4
 245 0092 DE000000 		.4byte	.LASF12
 246 0096 02       		.uleb128 0x2
 247 0097 08       		.byte	0x8
 248 0098 04       		.byte	0x4
 249 0099 22010000 		.4byte	.LASF13
 250 009d 02       		.uleb128 0x2
 251 009e 01       		.byte	0x1
 252 009f 08       		.byte	0x8
 253 00a0 17020000 		.4byte	.LASF14
 254 00a4 04       		.uleb128 0x4
 255 00a5 00000000 		.4byte	.LASF15
 256 00a9 02       		.byte	0x2
 257 00aa 9002     		.2byte	0x290
 258 00ac B0000000 		.4byte	0xb0
 259 00b0 05       		.uleb128 0x5
 260 00b1 83000000 		.4byte	0x83
 261 00b5 06       		.uleb128 0x6
 262 00b6 6B000000 		.4byte	.LASF16
 263 00ba 01       		.byte	0x1
 264 00bb 46       		.byte	0x46
 265 00bc 00000000 		.4byte	.LFB0
 266 00c0 14000000 		.4byte	.LFE0-.LFB0
 267 00c4 01       		.uleb128 0x1
 268 00c5 9C       		.byte	0x9c
 269 00c6 06       		.uleb128 0x6
 270 00c7 86000000 		.4byte	.LASF17
 271 00cb 01       		.byte	0x1
 272 00cc 5F       		.byte	0x5f
 273 00cd 00000000 		.4byte	.LFB1
 274 00d1 10000000 		.4byte	.LFE1-.LFB1
 275 00d5 01       		.uleb128 0x1
 276 00d6 9C       		.byte	0x9c
 277 00d7 07       		.uleb128 0x7
 278 00d8 41000000 		.4byte	.LASF27
 279 00dc 01       		.byte	0x1
 280 00dd 86       		.byte	0x86
 281 00de 00000000 		.4byte	.LFB2
 282 00e2 14000000 		.4byte	.LFE2-.LFB2
 283 00e6 01       		.uleb128 0x1
 284 00e7 9C       		.byte	0x9c
 285 00e8 23010000 		.4byte	0x123
 286 00ec 08       		.uleb128 0x8
 287 00ed 17010000 		.4byte	.LASF18
 288 00f1 01       		.byte	0x1
 289 00f2 86       		.byte	0x86
 290 00f3 77000000 		.4byte	0x77
 291 00f7 01       		.uleb128 0x1
 292 00f8 50       		.byte	0x50
 293 00f9 08       		.uleb128 0x8
 294 00fa 30010000 		.4byte	.LASF19
 295 00fe 01       		.byte	0x1
 296 00ff 86       		.byte	0x86
 297 0100 6B000000 		.4byte	0x6b
 298 0104 01       		.uleb128 0x1
 299 0105 51       		.byte	0x51
 300 0106 09       		.uleb128 0x9
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 10


 301 0107 7E000000 		.4byte	.LASF20
 302 010b 01       		.byte	0x1
 303 010c 88       		.byte	0x88
 304 010d 83000000 		.4byte	0x83
 305 0111 00000000 		.4byte	.LLST0
 306 0115 0A       		.uleb128 0xa
 307 0116 29010000 		.4byte	.LASF21
 308 011a 01       		.byte	0x1
 309 011b 89       		.byte	0x89
 310 011c 83000000 		.4byte	0x83
 311 0120 01       		.uleb128 0x1
 312 0121 53       		.byte	0x53
 313 0122 00       		.byte	0
 314 0123 0B       		.uleb128 0xb
 315 0124 BE000000 		.4byte	.LASF22
 316 0128 01       		.byte	0x1
 317 0129 B0       		.byte	0xb0
 318 012a 77000000 		.4byte	0x77
 319 012e 00000000 		.4byte	.LFB3
 320 0132 0C000000 		.4byte	.LFE3-.LFB3
 321 0136 01       		.uleb128 0x1
 322 0137 9C       		.byte	0x9c
 323 0138 0B       		.uleb128 0xb
 324 0139 1C020000 		.4byte	.LASF23
 325 013d 01       		.byte	0x1
 326 013e C6       		.byte	0xc6
 327 013f 6B000000 		.4byte	0x6b
 328 0143 00000000 		.4byte	.LFB4
 329 0147 04000000 		.4byte	.LFE4-.LFB4
 330 014b 01       		.uleb128 0x1
 331 014c 9C       		.byte	0x9c
 332 014d 00       		.byte	0
 333              		.section	.debug_abbrev,"",%progbits
 334              	.Ldebug_abbrev0:
 335 0000 01       		.uleb128 0x1
 336 0001 11       		.uleb128 0x11
 337 0002 01       		.byte	0x1
 338 0003 25       		.uleb128 0x25
 339 0004 0E       		.uleb128 0xe
 340 0005 13       		.uleb128 0x13
 341 0006 0B       		.uleb128 0xb
 342 0007 03       		.uleb128 0x3
 343 0008 0E       		.uleb128 0xe
 344 0009 1B       		.uleb128 0x1b
 345 000a 0E       		.uleb128 0xe
 346 000b 55       		.uleb128 0x55
 347 000c 17       		.uleb128 0x17
 348 000d 11       		.uleb128 0x11
 349 000e 01       		.uleb128 0x1
 350 000f 10       		.uleb128 0x10
 351 0010 17       		.uleb128 0x17
 352 0011 00       		.byte	0
 353 0012 00       		.byte	0
 354 0013 02       		.uleb128 0x2
 355 0014 24       		.uleb128 0x24
 356 0015 00       		.byte	0
 357 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 11


 358 0017 0B       		.uleb128 0xb
 359 0018 3E       		.uleb128 0x3e
 360 0019 0B       		.uleb128 0xb
 361 001a 03       		.uleb128 0x3
 362 001b 0E       		.uleb128 0xe
 363 001c 00       		.byte	0
 364 001d 00       		.byte	0
 365 001e 03       		.uleb128 0x3
 366 001f 24       		.uleb128 0x24
 367 0020 00       		.byte	0
 368 0021 0B       		.uleb128 0xb
 369 0022 0B       		.uleb128 0xb
 370 0023 3E       		.uleb128 0x3e
 371 0024 0B       		.uleb128 0xb
 372 0025 03       		.uleb128 0x3
 373 0026 08       		.uleb128 0x8
 374 0027 00       		.byte	0
 375 0028 00       		.byte	0
 376 0029 04       		.uleb128 0x4
 377 002a 16       		.uleb128 0x16
 378 002b 00       		.byte	0
 379 002c 03       		.uleb128 0x3
 380 002d 0E       		.uleb128 0xe
 381 002e 3A       		.uleb128 0x3a
 382 002f 0B       		.uleb128 0xb
 383 0030 3B       		.uleb128 0x3b
 384 0031 05       		.uleb128 0x5
 385 0032 49       		.uleb128 0x49
 386 0033 13       		.uleb128 0x13
 387 0034 00       		.byte	0
 388 0035 00       		.byte	0
 389 0036 05       		.uleb128 0x5
 390 0037 35       		.uleb128 0x35
 391 0038 00       		.byte	0
 392 0039 49       		.uleb128 0x49
 393 003a 13       		.uleb128 0x13
 394 003b 00       		.byte	0
 395 003c 00       		.byte	0
 396 003d 06       		.uleb128 0x6
 397 003e 2E       		.uleb128 0x2e
 398 003f 00       		.byte	0
 399 0040 3F       		.uleb128 0x3f
 400 0041 19       		.uleb128 0x19
 401 0042 03       		.uleb128 0x3
 402 0043 0E       		.uleb128 0xe
 403 0044 3A       		.uleb128 0x3a
 404 0045 0B       		.uleb128 0xb
 405 0046 3B       		.uleb128 0x3b
 406 0047 0B       		.uleb128 0xb
 407 0048 27       		.uleb128 0x27
 408 0049 19       		.uleb128 0x19
 409 004a 11       		.uleb128 0x11
 410 004b 01       		.uleb128 0x1
 411 004c 12       		.uleb128 0x12
 412 004d 06       		.uleb128 0x6
 413 004e 40       		.uleb128 0x40
 414 004f 18       		.uleb128 0x18
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 12


 415 0050 9742     		.uleb128 0x2117
 416 0052 19       		.uleb128 0x19
 417 0053 00       		.byte	0
 418 0054 00       		.byte	0
 419 0055 07       		.uleb128 0x7
 420 0056 2E       		.uleb128 0x2e
 421 0057 01       		.byte	0x1
 422 0058 3F       		.uleb128 0x3f
 423 0059 19       		.uleb128 0x19
 424 005a 03       		.uleb128 0x3
 425 005b 0E       		.uleb128 0xe
 426 005c 3A       		.uleb128 0x3a
 427 005d 0B       		.uleb128 0xb
 428 005e 3B       		.uleb128 0x3b
 429 005f 0B       		.uleb128 0xb
 430 0060 27       		.uleb128 0x27
 431 0061 19       		.uleb128 0x19
 432 0062 11       		.uleb128 0x11
 433 0063 01       		.uleb128 0x1
 434 0064 12       		.uleb128 0x12
 435 0065 06       		.uleb128 0x6
 436 0066 40       		.uleb128 0x40
 437 0067 18       		.uleb128 0x18
 438 0068 9742     		.uleb128 0x2117
 439 006a 19       		.uleb128 0x19
 440 006b 01       		.uleb128 0x1
 441 006c 13       		.uleb128 0x13
 442 006d 00       		.byte	0
 443 006e 00       		.byte	0
 444 006f 08       		.uleb128 0x8
 445 0070 05       		.uleb128 0x5
 446 0071 00       		.byte	0
 447 0072 03       		.uleb128 0x3
 448 0073 0E       		.uleb128 0xe
 449 0074 3A       		.uleb128 0x3a
 450 0075 0B       		.uleb128 0xb
 451 0076 3B       		.uleb128 0x3b
 452 0077 0B       		.uleb128 0xb
 453 0078 49       		.uleb128 0x49
 454 0079 13       		.uleb128 0x13
 455 007a 02       		.uleb128 0x2
 456 007b 18       		.uleb128 0x18
 457 007c 00       		.byte	0
 458 007d 00       		.byte	0
 459 007e 09       		.uleb128 0x9
 460 007f 34       		.uleb128 0x34
 461 0080 00       		.byte	0
 462 0081 03       		.uleb128 0x3
 463 0082 0E       		.uleb128 0xe
 464 0083 3A       		.uleb128 0x3a
 465 0084 0B       		.uleb128 0xb
 466 0085 3B       		.uleb128 0x3b
 467 0086 0B       		.uleb128 0xb
 468 0087 49       		.uleb128 0x49
 469 0088 13       		.uleb128 0x13
 470 0089 02       		.uleb128 0x2
 471 008a 17       		.uleb128 0x17
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 13


 472 008b 00       		.byte	0
 473 008c 00       		.byte	0
 474 008d 0A       		.uleb128 0xa
 475 008e 34       		.uleb128 0x34
 476 008f 00       		.byte	0
 477 0090 03       		.uleb128 0x3
 478 0091 0E       		.uleb128 0xe
 479 0092 3A       		.uleb128 0x3a
 480 0093 0B       		.uleb128 0xb
 481 0094 3B       		.uleb128 0x3b
 482 0095 0B       		.uleb128 0xb
 483 0096 49       		.uleb128 0x49
 484 0097 13       		.uleb128 0x13
 485 0098 02       		.uleb128 0x2
 486 0099 18       		.uleb128 0x18
 487 009a 00       		.byte	0
 488 009b 00       		.byte	0
 489 009c 0B       		.uleb128 0xb
 490 009d 2E       		.uleb128 0x2e
 491 009e 00       		.byte	0
 492 009f 3F       		.uleb128 0x3f
 493 00a0 19       		.uleb128 0x19
 494 00a1 03       		.uleb128 0x3
 495 00a2 0E       		.uleb128 0xe
 496 00a3 3A       		.uleb128 0x3a
 497 00a4 0B       		.uleb128 0xb
 498 00a5 3B       		.uleb128 0x3b
 499 00a6 0B       		.uleb128 0xb
 500 00a7 27       		.uleb128 0x27
 501 00a8 19       		.uleb128 0x19
 502 00a9 49       		.uleb128 0x49
 503 00aa 13       		.uleb128 0x13
 504 00ab 11       		.uleb128 0x11
 505 00ac 01       		.uleb128 0x1
 506 00ad 12       		.uleb128 0x12
 507 00ae 06       		.uleb128 0x6
 508 00af 40       		.uleb128 0x40
 509 00b0 18       		.uleb128 0x18
 510 00b1 9742     		.uleb128 0x2117
 511 00b3 19       		.uleb128 0x19
 512 00b4 00       		.byte	0
 513 00b5 00       		.byte	0
 514 00b6 00       		.byte	0
 515              		.section	.debug_loc,"",%progbits
 516              	.Ldebug_loc0:
 517              	.LLST0:
 518 0000 04000000 		.4byte	.LVL1
 519 0004 06000000 		.4byte	.LVL2
 520 0008 0800     		.2byte	0x8
 521 000a 73       		.byte	0x73
 522 000b 00       		.sleb128 0
 523 000c 11       		.byte	0x11
 524 000d 80807C   		.sleb128 -65536
 525 0010 1A       		.byte	0x1a
 526 0011 9F       		.byte	0x9f
 527 0012 00000000 		.4byte	0
 528 0016 00000000 		.4byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 14


 529              		.section	.debug_aranges,"",%progbits
 530 0000 3C000000 		.4byte	0x3c
 531 0004 0200     		.2byte	0x2
 532 0006 00000000 		.4byte	.Ldebug_info0
 533 000a 04       		.byte	0x4
 534 000b 00       		.byte	0
 535 000c 0000     		.2byte	0
 536 000e 0000     		.2byte	0
 537 0010 00000000 		.4byte	.LFB0
 538 0014 14000000 		.4byte	.LFE0-.LFB0
 539 0018 00000000 		.4byte	.LFB1
 540 001c 10000000 		.4byte	.LFE1-.LFB1
 541 0020 00000000 		.4byte	.LFB2
 542 0024 14000000 		.4byte	.LFE2-.LFB2
 543 0028 00000000 		.4byte	.LFB3
 544 002c 0C000000 		.4byte	.LFE3-.LFB3
 545 0030 00000000 		.4byte	.LFB4
 546 0034 04000000 		.4byte	.LFE4-.LFB4
 547 0038 00000000 		.4byte	0
 548 003c 00000000 		.4byte	0
 549              		.section	.debug_ranges,"",%progbits
 550              	.Ldebug_ranges0:
 551 0000 00000000 		.4byte	.LFB0
 552 0004 14000000 		.4byte	.LFE0
 553 0008 00000000 		.4byte	.LFB1
 554 000c 10000000 		.4byte	.LFE1
 555 0010 00000000 		.4byte	.LFB2
 556 0014 14000000 		.4byte	.LFE2
 557 0018 00000000 		.4byte	.LFB3
 558 001c 0C000000 		.4byte	.LFE3
 559 0020 00000000 		.4byte	.LFB4
 560 0024 04000000 		.4byte	.LFE4
 561 0028 00000000 		.4byte	0
 562 002c 00000000 		.4byte	0
 563              		.section	.debug_line,"",%progbits
 564              	.Ldebug_line0:
 565 0000 B8000000 		.section	.debug_str,"MS",%progbits,1
 565      02004900 
 565      00000201 
 565      FB0E0D00 
 565      01010101 
 566              	.LASF15:
 567 0000 72656733 		.ascii	"reg32\000"
 567      3200
 568              	.LASF26:
 569 0006 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Relo"
 569      5F776F72 
 569      6B5C6D79 
 569      5F70726F 
 569      6A656374 
 570 0034 61642050 		.ascii	"ad Pro.cydsn\000"
 570      726F2E63 
 570      7964736E 
 570      00
 571              	.LASF27:
 572 0041 4144435F 		.ascii	"ADC_intClock_SetFractionalDividerRegister\000"
 572      696E7443 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 15


 572      6C6F636B 
 572      5F536574 
 572      46726163 
 573              	.LASF16:
 574 006b 4144435F 		.ascii	"ADC_intClock_Start\000"
 574      696E7443 
 574      6C6F636B 
 574      5F537461 
 574      727400
 575              	.LASF20:
 576 007e 6D61736B 		.ascii	"maskVal\000"
 576      56616C00 
 577              	.LASF17:
 578 0086 4144435F 		.ascii	"ADC_intClock_Stop\000"
 578      696E7443 
 578      6C6F636B 
 578      5F53746F 
 578      7000
 579              	.LASF25:
 580 0098 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_intClock.c\000"
 580      72617465 
 580      645F536F 
 580      75726365 
 580      5C50536F 
 581              	.LASF22:
 582 00be 4144435F 		.ascii	"ADC_intClock_GetDividerRegister\000"
 582      696E7443 
 582      6C6F636B 
 582      5F476574 
 582      44697669 
 583              	.LASF12:
 584 00de 666C6F61 		.ascii	"float\000"
 584      7400
 585              	.LASF1:
 586 00e4 756E7369 		.ascii	"unsigned char\000"
 586      676E6564 
 586      20636861 
 586      7200
 587              	.LASF5:
 588 00f2 6C6F6E67 		.ascii	"long unsigned int\000"
 588      20756E73 
 588      69676E65 
 588      6420696E 
 588      7400
 589              	.LASF3:
 590 0104 73686F72 		.ascii	"short unsigned int\000"
 590      7420756E 
 590      7369676E 
 590      65642069 
 590      6E7400
 591              	.LASF18:
 592 0117 636C6B44 		.ascii	"clkDivider\000"
 592      69766964 
 592      657200
 593              	.LASF13:
 594 0122 646F7562 		.ascii	"double\000"
 594      6C6500
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 16


 595              	.LASF21:
 596 0129 72656756 		.ascii	"regVal\000"
 596      616C00
 597              	.LASF19:
 598 0130 636C6B46 		.ascii	"clkFractional\000"
 598      72616374 
 598      696F6E61 
 598      6C00
 599              	.LASF10:
 600 013e 75696E74 		.ascii	"uint16\000"
 600      313600
 601              	.LASF11:
 602 0145 75696E74 		.ascii	"uint32\000"
 602      333200
 603              	.LASF8:
 604 014c 756E7369 		.ascii	"unsigned int\000"
 604      676E6564 
 604      20696E74 
 604      00
 605              	.LASF7:
 606 0159 6C6F6E67 		.ascii	"long long unsigned int\000"
 606      206C6F6E 
 606      6720756E 
 606      7369676E 
 606      65642069 
 607              	.LASF24:
 608 0170 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 608      43393920 
 608      352E342E 
 608      31203230 
 608      31363036 
 609 01a3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 609      20726576 
 609      6973696F 
 609      6E203233 
 609      37373135 
 610 01d6 73202D73 		.ascii	"s -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 610      74643D67 
 610      6E753939 
 610      202D6666 
 610      756E6374 
 611              	.LASF6:
 612 0209 6C6F6E67 		.ascii	"long long int\000"
 612      206C6F6E 
 612      6720696E 
 612      7400
 613              	.LASF14:
 614 0217 63686172 		.ascii	"char\000"
 614      00
 615              	.LASF23:
 616 021c 4144435F 		.ascii	"ADC_intClock_GetFractionalDividerRegister\000"
 616      696E7443 
 616      6C6F636B 
 616      5F476574 
 616      46726163 
 617              	.LASF2:
 618 0246 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccsS3dAg.s 			page 17


 618      7420696E 
 618      7400
 619              	.LASF9:
 620 0250 75696E74 		.ascii	"uint8\000"
 620      3800
 621              	.LASF4:
 622 0256 6C6F6E67 		.ascii	"long int\000"
 622      20696E74 
 622      00
 623              	.LASF0:
 624 025f 7369676E 		.ascii	"signed char\000"
 624      65642063 
 624      68617200 
 625              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
