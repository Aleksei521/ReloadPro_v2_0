ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Display_SPI_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Display_SPI_TX_ISR,"ax",%progbits
  20              		.align	1
  21              		.global	Display_SPI_TX_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	Display_SPI_TX_ISR, %function
  25              	Display_SPI_TX_ISR:
  26              	.LFB3:
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              		@ sp needed
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE3:
  35              		.size	Display_SPI_TX_ISR, .-Display_SPI_TX_ISR
  36              		.section	.text.Display_SPI_RX_ISR,"ax",%progbits
  37              		.align	1
  38              		.global	Display_SPI_RX_ISR
  39              		.code	16
  40              		.thumb_func
  41              		.type	Display_SPI_RX_ISR, %function
  42              	Display_SPI_RX_ISR:
  43              	.LFB1:
  44              		.file 1 "Generated_Source\\PSoC4\\Display_SPI_INT.c"
   1:Generated_Source\PSoC4/Display_SPI_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Display_SPI_INT.c **** * File Name: Display_SPI_INT.c
   3:Generated_Source\PSoC4/Display_SPI_INT.c **** * Version 2.50
   4:Generated_Source\PSoC4/Display_SPI_INT.c **** *
   5:Generated_Source\PSoC4/Display_SPI_INT.c **** * Description:
   6:Generated_Source\PSoC4/Display_SPI_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:Generated_Source\PSoC4/Display_SPI_INT.c **** *  component.
   8:Generated_Source\PSoC4/Display_SPI_INT.c **** *
   9:Generated_Source\PSoC4/Display_SPI_INT.c **** * Note:
  10:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
  11:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  12:Generated_Source\PSoC4/Display_SPI_INT.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Display_SPI_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 2


  14:Generated_Source\PSoC4/Display_SPI_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Display_SPI_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Display_SPI_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Display_SPI_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  19:Generated_Source\PSoC4/Display_SPI_INT.c **** #include "Display_SPI_PVT.h"
  20:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  21:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  22:Generated_Source\PSoC4/Display_SPI_INT.c **** /* User code required at start of ISR */
  23:Generated_Source\PSoC4/Display_SPI_INT.c **** /* `#START Display_SPI_ISR_START_DEF` */
  24:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  25:Generated_Source\PSoC4/Display_SPI_INT.c **** /* `#END` */
  26:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  27:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  28:Generated_Source\PSoC4/Display_SPI_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC4/Display_SPI_INT.c **** * Function Name: Display_SPI_TX_ISR
  30:Generated_Source\PSoC4/Display_SPI_INT.c **** ********************************************************************************
  31:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  32:Generated_Source\PSoC4/Display_SPI_INT.c **** * Summary:
  33:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  34:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  35:Generated_Source\PSoC4/Display_SPI_INT.c **** * Parameters:
  36:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
  37:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  38:Generated_Source\PSoC4/Display_SPI_INT.c **** * Return:
  39:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
  40:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  41:Generated_Source\PSoC4/Display_SPI_INT.c **** * Global variables:
  42:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_txBufferWrite - used for the account of the bytes which
  43:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been written down in the TX software buffer.
  44:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_txBufferRead - used for the account of the bytes which
  45:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  46:Generated_Source\PSoC4/Display_SPI_INT.c **** *  sending and FIFO Not Full.
  47:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_txBuffer[Display_SPI_TX_BUFFER_SIZE] - used to store
  48:Generated_Source\PSoC4/Display_SPI_INT.c **** *  data to sending.
  49:Generated_Source\PSoC4/Display_SPI_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  50:Generated_Source\PSoC4/Display_SPI_INT.c **** *
  51:Generated_Source\PSoC4/Display_SPI_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/Display_SPI_INT.c **** CY_ISR(Display_SPI_TX_ISR)
  53:Generated_Source\PSoC4/Display_SPI_INT.c **** {
  54:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
  55:Generated_Source\PSoC4/Display_SPI_INT.c ****         uint8 tmpStatus;
  56:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
  57:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  58:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_TX_ISR_ENTRY_CALLBACK
  59:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_TX_ISR_EntryCallback();
  60:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_TX_ISR_ENTRY_CALLBACK */
  61:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  62:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at start of ISR */
  63:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_TX_ISR_START` */
  64:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  65:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
  66:Generated_Source\PSoC4/Display_SPI_INT.c ****     
  67:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_TX_SOFTWARE_BUF_ENABLED)
  68:Generated_Source\PSoC4/Display_SPI_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  69:Generated_Source\PSoC4/Display_SPI_INT.c ****         while(Display_SPI_txBufferRead != Display_SPI_txBufferWrite)
  70:Generated_Source\PSoC4/Display_SPI_INT.c ****         {
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 3


  71:Generated_Source\PSoC4/Display_SPI_INT.c ****             tmpStatus = Display_SPI_GET_STATUS_TX(Display_SPI_swStatusTx);
  72:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_swStatusTx = tmpStatus;
  73:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  74:Generated_Source\PSoC4/Display_SPI_INT.c ****             if(0u != (Display_SPI_swStatusTx & Display_SPI_STS_TX_FIFO_NOT_FULL))
  75:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
  76:Generated_Source\PSoC4/Display_SPI_INT.c ****                 if(0u == Display_SPI_txBufferFull)
  77:Generated_Source\PSoC4/Display_SPI_INT.c ****                 {
  78:Generated_Source\PSoC4/Display_SPI_INT.c ****                    Display_SPI_txBufferRead++;
  79:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  80:Generated_Source\PSoC4/Display_SPI_INT.c ****                     if(Display_SPI_txBufferRead >= Display_SPI_TX_BUFFER_SIZE)
  81:Generated_Source\PSoC4/Display_SPI_INT.c ****                     {
  82:Generated_Source\PSoC4/Display_SPI_INT.c ****                         Display_SPI_txBufferRead = 0u;
  83:Generated_Source\PSoC4/Display_SPI_INT.c ****                     }
  84:Generated_Source\PSoC4/Display_SPI_INT.c ****                 }
  85:Generated_Source\PSoC4/Display_SPI_INT.c ****                 else
  86:Generated_Source\PSoC4/Display_SPI_INT.c ****                 {
  87:Generated_Source\PSoC4/Display_SPI_INT.c ****                     Display_SPI_txBufferFull = 0u;
  88:Generated_Source\PSoC4/Display_SPI_INT.c ****                 }
  89:Generated_Source\PSoC4/Display_SPI_INT.c **** 
  90:Generated_Source\PSoC4/Display_SPI_INT.c ****                 /* Put data element into the TX FIFO */
  91:Generated_Source\PSoC4/Display_SPI_INT.c ****                 CY_SET_REG8(Display_SPI_TXDATA_PTR, 
  92:Generated_Source\PSoC4/Display_SPI_INT.c ****                                              Display_SPI_txBuffer[Display_SPI_txBufferRead]);
  93:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
  94:Generated_Source\PSoC4/Display_SPI_INT.c ****             else
  95:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
  96:Generated_Source\PSoC4/Display_SPI_INT.c ****                 break;
  97:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
  98:Generated_Source\PSoC4/Display_SPI_INT.c ****         }
  99:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 100:Generated_Source\PSoC4/Display_SPI_INT.c ****         if(Display_SPI_txBufferRead == Display_SPI_txBufferWrite)
 101:Generated_Source\PSoC4/Display_SPI_INT.c ****         {
 102:Generated_Source\PSoC4/Display_SPI_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
 103:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_TX_STATUS_MASK_REG &= ((uint8) ~Display_SPI_STS_TX_FIFO_NOT_FULL);
 104:Generated_Source\PSoC4/Display_SPI_INT.c ****         }
 105:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 106:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_TX_SOFTWARE_BUF_ENABLED) */
 107:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 108:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at end of ISR (Optional) */
 109:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_TX_ISR_END` */
 110:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 111:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC4/Display_SPI_INT.c ****     
 113:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_TX_ISR_EXIT_CALLBACK
 114:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_TX_ISR_ExitCallback();
 115:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_TX_ISR_EXIT_CALLBACK */
 116:Generated_Source\PSoC4/Display_SPI_INT.c **** }
 117:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 118:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 119:Generated_Source\PSoC4/Display_SPI_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/Display_SPI_INT.c **** * Function Name: Display_SPI_RX_ISR
 121:Generated_Source\PSoC4/Display_SPI_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 123:Generated_Source\PSoC4/Display_SPI_INT.c **** * Summary:
 124:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 125:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 126:Generated_Source\PSoC4/Display_SPI_INT.c **** * Parameters:
 127:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 4


 128:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 129:Generated_Source\PSoC4/Display_SPI_INT.c **** * Return:
 130:Generated_Source\PSoC4/Display_SPI_INT.c **** *  None.
 131:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 132:Generated_Source\PSoC4/Display_SPI_INT.c **** * Global variables:
 133:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_rxBufferWrite - used for the account of the bytes which
 134:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 135:Generated_Source\PSoC4/Display_SPI_INT.c **** *  new data.
 136:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_rxBufferRead - used for the account of the bytes which
 137:Generated_Source\PSoC4/Display_SPI_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 138:Generated_Source\PSoC4/Display_SPI_INT.c **** *  Display_SPI_rxBuffer[Display_SPI_RX_BUFFER_SIZE] - used to store
 139:Generated_Source\PSoC4/Display_SPI_INT.c **** *  received data, modified when FIFO contains new data.
 140:Generated_Source\PSoC4/Display_SPI_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 141:Generated_Source\PSoC4/Display_SPI_INT.c **** *
 142:Generated_Source\PSoC4/Display_SPI_INT.c **** *******************************************************************************/
 143:Generated_Source\PSoC4/Display_SPI_INT.c **** CY_ISR(Display_SPI_RX_ISR)
 144:Generated_Source\PSoC4/Display_SPI_INT.c **** {
  45              		.loc 1 144 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
 145:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 146:Generated_Source\PSoC4/Display_SPI_INT.c ****         uint8 tmpStatus;
 147:Generated_Source\PSoC4/Display_SPI_INT.c ****         uint8 rxData;
 148:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
 149:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 150:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_RX_ISR_ENTRY_CALLBACK
 151:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_RX_ISR_EntryCallback();
 152:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_RX_ISR_ENTRY_CALLBACK */
 153:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 154:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at start of ISR */
 155:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_RX_ISR_START` */
 156:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 157:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
 158:Generated_Source\PSoC4/Display_SPI_INT.c ****     
 159:Generated_Source\PSoC4/Display_SPI_INT.c ****     #if(Display_SPI_RX_SOFTWARE_BUF_ENABLED)
 160:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 161:Generated_Source\PSoC4/Display_SPI_INT.c ****         tmpStatus = Display_SPI_GET_STATUS_RX(Display_SPI_swStatusRx);
 162:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_swStatusRx = tmpStatus;
 163:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 164:Generated_Source\PSoC4/Display_SPI_INT.c ****         /* Check if RX data FIFO has some data to be moved into the RX Buffer */
 165:Generated_Source\PSoC4/Display_SPI_INT.c ****         while(0u != (Display_SPI_swStatusRx & Display_SPI_STS_RX_FIFO_NOT_EMPTY))
 166:Generated_Source\PSoC4/Display_SPI_INT.c ****         {
 167:Generated_Source\PSoC4/Display_SPI_INT.c ****             rxData = CY_GET_REG8(Display_SPI_RXDATA_PTR);
 168:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 169:Generated_Source\PSoC4/Display_SPI_INT.c ****             /* Set next pointer. */
 170:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_rxBufferWrite++;
 171:Generated_Source\PSoC4/Display_SPI_INT.c ****             if(Display_SPI_rxBufferWrite >= Display_SPI_RX_BUFFER_SIZE)
 172:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
 173:Generated_Source\PSoC4/Display_SPI_INT.c ****                 Display_SPI_rxBufferWrite = 0u;
 174:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
 175:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 176:Generated_Source\PSoC4/Display_SPI_INT.c ****             if(Display_SPI_rxBufferWrite == Display_SPI_rxBufferRead)
 177:Generated_Source\PSoC4/Display_SPI_INT.c ****             {
 178:Generated_Source\PSoC4/Display_SPI_INT.c ****                 Display_SPI_rxBufferRead++;
 179:Generated_Source\PSoC4/Display_SPI_INT.c ****                 if(Display_SPI_rxBufferRead >= Display_SPI_RX_BUFFER_SIZE)
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 5


 180:Generated_Source\PSoC4/Display_SPI_INT.c ****                 {
 181:Generated_Source\PSoC4/Display_SPI_INT.c ****                     Display_SPI_rxBufferRead = 0u;
 182:Generated_Source\PSoC4/Display_SPI_INT.c ****                 }
 183:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 184:Generated_Source\PSoC4/Display_SPI_INT.c ****                 Display_SPI_rxBufferFull = 1u;
 185:Generated_Source\PSoC4/Display_SPI_INT.c ****             }
 186:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 187:Generated_Source\PSoC4/Display_SPI_INT.c ****             /* Move data from the FIFO to the Buffer */
 188:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_rxBuffer[Display_SPI_rxBufferWrite] = rxData;
 189:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 190:Generated_Source\PSoC4/Display_SPI_INT.c ****             tmpStatus = Display_SPI_GET_STATUS_RX(Display_SPI_swStatusRx);
 191:Generated_Source\PSoC4/Display_SPI_INT.c ****             Display_SPI_swStatusRx = tmpStatus;
 192:Generated_Source\PSoC4/Display_SPI_INT.c ****         }
 193:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 194:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* (Display_SPI_RX_SOFTWARE_BUF_ENABLED) */
 195:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 196:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* User code required at end of ISR (Optional) */
 197:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#START Display_SPI_RX_ISR_END` */
 198:Generated_Source\PSoC4/Display_SPI_INT.c **** 
 199:Generated_Source\PSoC4/Display_SPI_INT.c ****     /* `#END` */
 200:Generated_Source\PSoC4/Display_SPI_INT.c ****     
 201:Generated_Source\PSoC4/Display_SPI_INT.c ****     #ifdef Display_SPI_RX_ISR_EXIT_CALLBACK
 202:Generated_Source\PSoC4/Display_SPI_INT.c ****         Display_SPI_RX_ISR_ExitCallback();
 203:Generated_Source\PSoC4/Display_SPI_INT.c ****     #endif /* Display_SPI_RX_ISR_EXIT_CALLBACK */
 204:Generated_Source\PSoC4/Display_SPI_INT.c **** }
  50              		.loc 1 204 0
  51              		@ sp needed
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE1:
  55              		.size	Display_SPI_RX_ISR, .-Display_SPI_RX_ISR
  56              		.text
  57              	.Letext0:
  58              		.section	.debug_info,"",%progbits
  59              	.Ldebug_info0:
  60 0000 9B000000 		.4byte	0x9b
  61 0004 0400     		.2byte	0x4
  62 0006 00000000 		.4byte	.Ldebug_abbrev0
  63 000a 04       		.byte	0x4
  64 000b 01       		.uleb128 0x1
  65 000c 1B000000 		.4byte	.LASF13
  66 0010 0C       		.byte	0xc
  67 0011 7D010000 		.4byte	.LASF14
  68 0015 B4000000 		.4byte	.LASF15
  69 0019 00000000 		.4byte	.Ldebug_ranges0+0
  70 001d 00000000 		.4byte	0
  71 0021 00000000 		.4byte	.Ldebug_line0
  72 0025 02       		.uleb128 0x2
  73 0026 01       		.byte	0x1
  74 0027 06       		.byte	0x6
  75 0028 4E010000 		.4byte	.LASF0
  76 002c 02       		.uleb128 0x2
  77 002d 01       		.byte	0x1
  78 002e 08       		.byte	0x8
  79 002f 18010000 		.4byte	.LASF1
  80 0033 02       		.uleb128 0x2
  81 0034 02       		.byte	0x2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 6


  82 0035 05       		.byte	0x5
  83 0036 60010000 		.4byte	.LASF2
  84 003a 02       		.uleb128 0x2
  85 003b 02       		.byte	0x2
  86 003c 07       		.byte	0x7
  87 003d 3B010000 		.4byte	.LASF3
  88 0041 02       		.uleb128 0x2
  89 0042 04       		.byte	0x4
  90 0043 05       		.byte	0x5
  91 0044 2B010000 		.4byte	.LASF4
  92 0048 02       		.uleb128 0x2
  93 0049 04       		.byte	0x4
  94 004a 07       		.byte	0x7
  95 004b EF000000 		.4byte	.LASF5
  96 004f 02       		.uleb128 0x2
  97 0050 08       		.byte	0x8
  98 0051 05       		.byte	0x5
  99 0052 00000000 		.4byte	.LASF6
 100 0056 02       		.uleb128 0x2
 101 0057 08       		.byte	0x8
 102 0058 07       		.byte	0x7
 103 0059 01010000 		.4byte	.LASF7
 104 005d 03       		.uleb128 0x3
 105 005e 04       		.byte	0x4
 106 005f 05       		.byte	0x5
 107 0060 696E7400 		.ascii	"int\000"
 108 0064 02       		.uleb128 0x2
 109 0065 04       		.byte	0x4
 110 0066 07       		.byte	0x7
 111 0067 0E000000 		.4byte	.LASF8
 112 006b 02       		.uleb128 0x2
 113 006c 04       		.byte	0x4
 114 006d 04       		.byte	0x4
 115 006e 5A010000 		.4byte	.LASF9
 116 0072 02       		.uleb128 0x2
 117 0073 08       		.byte	0x8
 118 0074 04       		.byte	0x4
 119 0075 34010000 		.4byte	.LASF10
 120 0079 02       		.uleb128 0x2
 121 007a 01       		.byte	0x1
 122 007b 08       		.byte	0x8
 123 007c 26010000 		.4byte	.LASF11
 124 0080 02       		.uleb128 0x2
 125 0081 04       		.byte	0x4
 126 0082 07       		.byte	0x7
 127 0083 A6010000 		.4byte	.LASF12
 128 0087 04       		.uleb128 0x4
 129 0088 6A010000 		.4byte	.LASF16
 130 008c 01       		.byte	0x1
 131 008d 8F       		.byte	0x8f
 132 008e 01       		.byte	0x1
 133 008f 05       		.uleb128 0x5
 134 0090 87000000 		.4byte	0x87
 135 0094 00000000 		.4byte	.LFB1
 136 0098 02000000 		.4byte	.LFE1-.LFB1
 137 009c 01       		.uleb128 0x1
 138 009d 9C       		.byte	0x9c
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 7


 139 009e 00       		.byte	0
 140              		.section	.debug_abbrev,"",%progbits
 141              	.Ldebug_abbrev0:
 142 0000 01       		.uleb128 0x1
 143 0001 11       		.uleb128 0x11
 144 0002 01       		.byte	0x1
 145 0003 25       		.uleb128 0x25
 146 0004 0E       		.uleb128 0xe
 147 0005 13       		.uleb128 0x13
 148 0006 0B       		.uleb128 0xb
 149 0007 03       		.uleb128 0x3
 150 0008 0E       		.uleb128 0xe
 151 0009 1B       		.uleb128 0x1b
 152 000a 0E       		.uleb128 0xe
 153 000b 55       		.uleb128 0x55
 154 000c 17       		.uleb128 0x17
 155 000d 11       		.uleb128 0x11
 156 000e 01       		.uleb128 0x1
 157 000f 10       		.uleb128 0x10
 158 0010 17       		.uleb128 0x17
 159 0011 00       		.byte	0
 160 0012 00       		.byte	0
 161 0013 02       		.uleb128 0x2
 162 0014 24       		.uleb128 0x24
 163 0015 00       		.byte	0
 164 0016 0B       		.uleb128 0xb
 165 0017 0B       		.uleb128 0xb
 166 0018 3E       		.uleb128 0x3e
 167 0019 0B       		.uleb128 0xb
 168 001a 03       		.uleb128 0x3
 169 001b 0E       		.uleb128 0xe
 170 001c 00       		.byte	0
 171 001d 00       		.byte	0
 172 001e 03       		.uleb128 0x3
 173 001f 24       		.uleb128 0x24
 174 0020 00       		.byte	0
 175 0021 0B       		.uleb128 0xb
 176 0022 0B       		.uleb128 0xb
 177 0023 3E       		.uleb128 0x3e
 178 0024 0B       		.uleb128 0xb
 179 0025 03       		.uleb128 0x3
 180 0026 08       		.uleb128 0x8
 181 0027 00       		.byte	0
 182 0028 00       		.byte	0
 183 0029 04       		.uleb128 0x4
 184 002a 2E       		.uleb128 0x2e
 185 002b 00       		.byte	0
 186 002c 3F       		.uleb128 0x3f
 187 002d 19       		.uleb128 0x19
 188 002e 03       		.uleb128 0x3
 189 002f 0E       		.uleb128 0xe
 190 0030 3A       		.uleb128 0x3a
 191 0031 0B       		.uleb128 0xb
 192 0032 3B       		.uleb128 0x3b
 193 0033 0B       		.uleb128 0xb
 194 0034 27       		.uleb128 0x27
 195 0035 19       		.uleb128 0x19
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 8


 196 0036 20       		.uleb128 0x20
 197 0037 0B       		.uleb128 0xb
 198 0038 00       		.byte	0
 199 0039 00       		.byte	0
 200 003a 05       		.uleb128 0x5
 201 003b 2E       		.uleb128 0x2e
 202 003c 00       		.byte	0
 203 003d 31       		.uleb128 0x31
 204 003e 13       		.uleb128 0x13
 205 003f 11       		.uleb128 0x11
 206 0040 01       		.uleb128 0x1
 207 0041 12       		.uleb128 0x12
 208 0042 06       		.uleb128 0x6
 209 0043 40       		.uleb128 0x40
 210 0044 18       		.uleb128 0x18
 211 0045 9742     		.uleb128 0x2117
 212 0047 19       		.uleb128 0x19
 213 0048 00       		.byte	0
 214 0049 00       		.byte	0
 215 004a 00       		.byte	0
 216              		.section	.debug_aranges,"",%progbits
 217 0000 1C000000 		.4byte	0x1c
 218 0004 0200     		.2byte	0x2
 219 0006 00000000 		.4byte	.Ldebug_info0
 220 000a 04       		.byte	0x4
 221 000b 00       		.byte	0
 222 000c 0000     		.2byte	0
 223 000e 0000     		.2byte	0
 224 0010 00000000 		.4byte	.LFB1
 225 0014 02000000 		.4byte	.LFE1-.LFB1
 226 0018 00000000 		.4byte	0
 227 001c 00000000 		.4byte	0
 228              		.section	.debug_ranges,"",%progbits
 229              	.Ldebug_ranges0:
 230 0000 00000000 		.4byte	.LFB1
 231 0004 02000000 		.4byte	.LFE1
 232 0008 00000000 		.4byte	0
 233 000c 00000000 		.4byte	0
 234              		.section	.debug_line,"",%progbits
 235              	.Ldebug_line0:
 236 0000 58000000 		.section	.debug_str,"MS",%progbits,1
 236      02003F00 
 236      00000201 
 236      FB0E0D00 
 236      01010101 
 237              	.LASF6:
 238 0000 6C6F6E67 		.ascii	"long long int\000"
 238      206C6F6E 
 238      6720696E 
 238      7400
 239              	.LASF8:
 240 000e 756E7369 		.ascii	"unsigned int\000"
 240      676E6564 
 240      20696E74 
 240      00
 241              	.LASF13:
 242 001b 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 9


 242      43393920 
 242      352E342E 
 242      31203230 
 242      31363036 
 243 004e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 243      20726576 
 243      6973696F 
 243      6E203233 
 243      37373135 
 244 0081 73202D73 		.ascii	"s -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 244      74643D67 
 244      6E753939 
 244      202D6666 
 244      756E6374 
 245              	.LASF15:
 246 00b4 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Relo"
 246      5F776F72 
 246      6B5C6D79 
 246      5F70726F 
 246      6A656374 
 247 00e2 61642050 		.ascii	"ad Pro.cydsn\000"
 247      726F2E63 
 247      7964736E 
 247      00
 248              	.LASF5:
 249 00ef 6C6F6E67 		.ascii	"long unsigned int\000"
 249      20756E73 
 249      69676E65 
 249      6420696E 
 249      7400
 250              	.LASF7:
 251 0101 6C6F6E67 		.ascii	"long long unsigned int\000"
 251      206C6F6E 
 251      6720756E 
 251      7369676E 
 251      65642069 
 252              	.LASF1:
 253 0118 756E7369 		.ascii	"unsigned char\000"
 253      676E6564 
 253      20636861 
 253      7200
 254              	.LASF11:
 255 0126 63686172 		.ascii	"char\000"
 255      00
 256              	.LASF4:
 257 012b 6C6F6E67 		.ascii	"long int\000"
 257      20696E74 
 257      00
 258              	.LASF10:
 259 0134 646F7562 		.ascii	"double\000"
 259      6C6500
 260              	.LASF3:
 261 013b 73686F72 		.ascii	"short unsigned int\000"
 261      7420756E 
 261      7369676E 
 261      65642069 
 261      6E7400
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccMJUodF.s 			page 10


 262              	.LASF0:
 263 014e 7369676E 		.ascii	"signed char\000"
 263      65642063 
 263      68617200 
 264              	.LASF9:
 265 015a 666C6F61 		.ascii	"float\000"
 265      7400
 266              	.LASF2:
 267 0160 73686F72 		.ascii	"short int\000"
 267      7420696E 
 267      7400
 268              	.LASF16:
 269 016a 44697370 		.ascii	"Display_SPI_RX_ISR\000"
 269      6C61795F 
 269      5350495F 
 269      52585F49 
 269      535200
 270              	.LASF14:
 271 017d 47656E65 		.ascii	"Generated_Source\\PSoC4\\Display_SPI_INT.c\000"
 271      72617465 
 271      645F536F 
 271      75726365 
 271      5C50536F 
 272              	.LASF12:
 273 01a6 73697A65 		.ascii	"sizetype\000"
 273      74797065 
 273      00
 274              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
