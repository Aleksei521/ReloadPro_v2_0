ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_UartInit,"ax",%progbits
  20              		.align	1
  21              		.global	UART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_UartInit, %function
  25              	UART_UartInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** 
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 2


  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/UART_UART.c ****     };
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c **** 
  80:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  82:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/UART_UART.c ****     *
  84:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  85:Generated_Source\PSoC4/UART_UART.c ****     *
  86:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  87:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 3


  88:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  89:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  90:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
  91:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/UART_UART.c ****     *
  95:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/UART_UART.c ****     *
  99:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/UART_UART.c ****     {
 102:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/UART_UART.c **** 
 104:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/UART_UART.c ****         {
 106:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/UART_UART.c ****         }
 108:Generated_Source\PSoC4/UART_UART.c ****         else
 109:Generated_Source\PSoC4/UART_UART.c ****         {
 110:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/UART_UART.c **** 
 113:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/UART_UART.c **** 
 119:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/UART_UART.c **** 
 122:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/UART_UART.c **** 
 127:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/UART_UART.c **** 
 132:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/UART_UART.c **** 
 137:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/UART_UART.c ****             {
 140:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 143:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/UART_UART.c ****             }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 4


 145:Generated_Source\PSoC4/UART_UART.c ****             else
 146:Generated_Source\PSoC4/UART_UART.c ****             {
 147:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/UART_UART.c ****             }
 150:Generated_Source\PSoC4/UART_UART.c **** 
 151:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 153:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 154:Generated_Source\PSoC4/UART_UART.c **** 
 155:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/UART_UART.c **** 
 158:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 163:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 164:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/UART_UART.c **** 
 166:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/UART_UART.c ****             {
 168:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/UART_UART.c ****             }
 171:Generated_Source\PSoC4/UART_UART.c **** 
 172:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 174:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/UART_UART.c **** 
 178:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/UART_UART.c **** 
 182:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 185:Generated_Source\PSoC4/UART_UART.c **** 
 186:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/UART_UART.c ****             {
 188:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/UART_UART.c ****             }
 191:Generated_Source\PSoC4/UART_UART.c **** 
 192:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 196:Generated_Source\PSoC4/UART_UART.c **** 
 197:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 200:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 201:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 5


 202:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/UART_UART.c **** 
 204:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 206:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/UART_UART.c **** 
 209:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/UART_UART.c **** 
 216:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/UART_UART.c **** 
 224:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/UART_UART.c **** 
 227:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/UART_UART.c **** 
 232:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/UART_UART.c ****         }
 236:Generated_Source\PSoC4/UART_UART.c ****     }
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c **** #else
 239:Generated_Source\PSoC4/UART_UART.c **** 
 240:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 242:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/UART_UART.c ****     *
 246:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 248:Generated_Source\PSoC4/UART_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 249:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  33              		.loc 1 250 0
  34 0000 144A     		ldr	r2, .L2
  35 0002 154B     		ldr	r3, .L2+4
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 6


 251:Generated_Source\PSoC4/UART_UART.c **** 
 252:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
 254:Generated_Source\PSoC4/UART_UART.c **** 
 255:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
 258:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  36              		.loc 1 258 0
  37 0004 0720     		movs	r0, #7
 250:Generated_Source\PSoC4/UART_UART.c **** 
  38              		.loc 1 250 0
  39 0006 1A60     		str	r2, [r3]
 253:Generated_Source\PSoC4/UART_UART.c **** 
  40              		.loc 1 253 0
  41 0008 0023     		movs	r3, #0
  42 000a 144A     		ldr	r2, .L2+8
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  43              		.loc 1 256 0
  44 000c 1449     		ldr	r1, .L2+12
 253:Generated_Source\PSoC4/UART_UART.c **** 
  45              		.loc 1 253 0
  46 000e 1360     		str	r3, [r2]
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  47              		.loc 1 256 0
  48 0010 144A     		ldr	r2, .L2+16
 259:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
 260:Generated_Source\PSoC4/UART_UART.c **** 
 261:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
 263:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
 264:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
 265:Generated_Source\PSoC4/UART_UART.c **** 
 266:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
 268:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/UART_UART.c **** 
 270:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 273:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 274:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 275:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/UART_UART.c **** 
 277:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/UART_UART.c **** 
 284:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 7


 290:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
 291:Generated_Source\PSoC4/UART_UART.c **** 
 292:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 294:Generated_Source\PSoC4/UART_UART.c **** 
 295:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 297:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/UART_UART.c **** 
 301:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 303:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 304:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/UART_UART.c ****     }
  49              		.loc 1 305 0
  50              		@ sp needed
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  51              		.loc 1 256 0
  52 0012 1160     		str	r1, [r2]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  53              		.loc 1 257 0
  54 0014 144A     		ldr	r2, .L2+20
  55 0016 1549     		ldr	r1, .L2+24
  56 0018 0A60     		str	r2, [r1]
 258:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  57              		.loc 1 258 0
  58 001a 1549     		ldr	r1, .L2+28
  59 001c 0860     		str	r0, [r1]
 259:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  60              		.loc 1 259 0
  61 001e 1549     		ldr	r1, .L2+32
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  62              		.loc 1 262 0
  63 0020 0638     		subs	r0, r0, #6
 259:Generated_Source\PSoC4/UART_UART.c **** 
  64              		.loc 1 259 0
  65 0022 0B60     		str	r3, [r1]
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  66              		.loc 1 262 0
  67 0024 1449     		ldr	r1, .L2+36
  68 0026 0860     		str	r0, [r1]
 263:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  69              		.loc 1 263 0
  70 0028 1449     		ldr	r1, .L2+40
  71 002a 0A60     		str	r2, [r1]
 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  72              		.loc 1 289 0
  73 002c 0421     		movs	r1, #4
 264:Generated_Source\PSoC4/UART_UART.c **** 
  74              		.loc 1 264 0
  75 002e 144A     		ldr	r2, .L2+44
  76 0030 1360     		str	r3, [r2]
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  77              		.loc 1 285 0
  78 0032 144A     		ldr	r2, .L2+48
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 8


  79 0034 1360     		str	r3, [r2]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  80              		.loc 1 286 0
  81 0036 144A     		ldr	r2, .L2+52
  82 0038 1360     		str	r3, [r2]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  83              		.loc 1 287 0
  84 003a 144A     		ldr	r2, .L2+56
  85 003c 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  86              		.loc 1 288 0
  87 003e 144A     		ldr	r2, .L2+60
  88 0040 1360     		str	r3, [r2]
 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  89              		.loc 1 289 0
  90 0042 144A     		ldr	r2, .L2+64
  91 0044 1160     		str	r1, [r2]
 290:Generated_Source\PSoC4/UART_UART.c **** 
  92              		.loc 1 290 0
  93 0046 144A     		ldr	r2, .L2+68
  94 0048 1360     		str	r3, [r2]
 293:Generated_Source\PSoC4/UART_UART.c **** 
  95              		.loc 1 293 0
  96 004a 1268     		ldr	r2, [r2]
  97 004c 134B     		ldr	r3, .L2+72
  98 004e 1A80     		strh	r2, [r3]
  99              		.loc 1 305 0
 100 0050 7047     		bx	lr
 101              	.L3:
 102 0052 C046     		.align	2
 103              	.L2:
 104 0054 0B000002 		.word	33554443
 105 0058 00000640 		.word	1074135040
 106 005c 40000640 		.word	1074135104
 107 0060 01000A00 		.word	655361
 108 0064 48000640 		.word	1074135112
 109 0068 07000080 		.word	-2147483641
 110 006c 00030640 		.word	1074135808
 111 0070 04030640 		.word	1074135812
 112 0074 10030640 		.word	1074135824
 113 0078 44000640 		.word	1074135108
 114 007c 00020640 		.word	1074135552
 115 0080 04020640 		.word	1074135556
 116 0084 880E0640 		.word	1074138760
 117 0088 C80E0640 		.word	1074138824
 118 008c 480F0640 		.word	1074138952
 119 0090 080F0640 		.word	1074138888
 120 0094 C80F0640 		.word	1074139080
 121 0098 880F0640 		.word	1074139016
 122 009c 00000000 		.word	UART_IntrTxMask
 123              		.cfi_endproc
 124              	.LFE0:
 125              		.size	UART_UartInit, .-UART_UartInit
 126              		.section	.text.UART_UartPostEnable,"ax",%progbits
 127              		.align	1
 128              		.global	UART_UartPostEnable
 129              		.code	16
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 9


 130              		.thumb_func
 131              		.type	UART_UartPostEnable, %function
 132              	UART_UartPostEnable:
 133              	.LFB1:
 306:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/UART_UART.c **** 
 308:Generated_Source\PSoC4/UART_UART.c **** 
 309:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 311:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/UART_UART.c **** *
 313:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/UART_UART.c **** *
 316:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 318:Generated_Source\PSoC4/UART_UART.c **** {
 134              		.loc 1 318 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 319:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/UART_UART.c ****         {
 323:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_U
 326:Generated_Source\PSoC4/UART_UART.c ****         }
 327:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/UART_UART.c **** 
 329:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 331:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 332:Generated_Source\PSoC4/UART_UART.c ****             {
 333:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_UART);
 336:Generated_Source\PSoC4/UART_UART.c ****             }
 337:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 338:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/UART_UART.c **** 
 340:Generated_Source\PSoC4/UART_UART.c **** #else
 341:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 342:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 139              		.loc 1 343 0
 140 0000 F021     		movs	r1, #240
 141 0002 054A     		ldr	r2, .L5
 344:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/UART_UART.c **** 
 347:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 10


 351:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/UART_UART.c **** 
 354:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 356:Generated_Source\PSoC4/UART_UART.c **** }
 142              		.loc 1 356 0
 143              		@ sp needed
 343:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 144              		.loc 1 343 0
 145 0004 1368     		ldr	r3, [r2]
 146 0006 8B43     		bics	r3, r1
 147 0008 6039     		subs	r1, r1, #96
 148 000a 0B43     		orrs	r3, r1
 149 000c 1360     		str	r3, [r2]
 355:Generated_Source\PSoC4/UART_UART.c **** }
 150              		.loc 1 355 0
 151 000e 034B     		ldr	r3, .L5+4
 152 0010 1A88     		ldrh	r2, [r3]
 153 0012 034B     		ldr	r3, .L5+8
 154 0014 1A60     		str	r2, [r3]
 155              		.loc 1 356 0
 156 0016 7047     		bx	lr
 157              	.L6:
 158              		.align	2
 159              	.L5:
 160 0018 10000140 		.word	1073807376
 161 001c 00000000 		.word	UART_IntrTxMask
 162 0020 880F0640 		.word	1074139016
 163              		.cfi_endproc
 164              	.LFE1:
 165              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 166              		.section	.text.UART_UartStop,"ax",%progbits
 167              		.align	1
 168              		.global	UART_UartStop
 169              		.code	16
 170              		.thumb_func
 171              		.type	UART_UartStop, %function
 172              	UART_UartStop:
 173              	.LFB2:
 357:Generated_Source\PSoC4/UART_UART.c **** 
 358:Generated_Source\PSoC4/UART_UART.c **** 
 359:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 361:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/UART_UART.c **** *
 363:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/UART_UART.c **** *
 368:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 370:Generated_Source\PSoC4/UART_UART.c **** {
 174              		.loc 1 370 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 11


 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 371:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 374:Generated_Source\PSoC4/UART_UART.c ****         {
 375:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_G
 378:Generated_Source\PSoC4/UART_UART.c ****         }
 379:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/UART_UART.c **** 
 381:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 383:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 384:Generated_Source\PSoC4/UART_UART.c ****             {
 385:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/UART_UART.c ****                 UART_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/UART_UART.c **** 
 388:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_GPIO);
 391:Generated_Source\PSoC4/UART_UART.c ****             }
 392:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 393:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/UART_UART.c **** 
 395:Generated_Source\PSoC4/UART_UART.c **** #else
 396:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 397:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 179              		.loc 1 398 0
 180 0000 F021     		movs	r1, #240
 181 0002 064A     		ldr	r2, .L8
 399:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/UART_UART.c **** 
 402:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/UART_UART.c **** 
 406:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/UART_UART.c **** 
 413:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/UART_UART.c **** 
 418:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 420:Generated_Source\PSoC4/UART_UART.c **** }
 182              		.loc 1 420 0
 183              		@ sp needed
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 12


 398:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 184              		.loc 1 398 0
 185 0004 1368     		ldr	r3, [r2]
 186 0006 8B43     		bics	r3, r1
 187 0008 1360     		str	r3, [r2]
 419:Generated_Source\PSoC4/UART_UART.c **** }
 188              		.loc 1 419 0
 189 000a 054B     		ldr	r3, .L8+4
 190 000c 1A68     		ldr	r2, [r3]
 191 000e E423     		movs	r3, #228
 192 0010 DB00     		lsls	r3, r3, #3
 193 0012 1340     		ands	r3, r2
 194 0014 034A     		ldr	r2, .L8+8
 195 0016 1380     		strh	r3, [r2]
 196              		.loc 1 420 0
 197 0018 7047     		bx	lr
 198              	.L9:
 199 001a C046     		.align	2
 200              	.L8:
 201 001c 10000140 		.word	1073807376
 202 0020 880F0640 		.word	1074139016
 203 0024 00000000 		.word	UART_IntrTxMask
 204              		.cfi_endproc
 205              	.LFE2:
 206              		.size	UART_UartStop, .-UART_UartStop
 207              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 208              		.align	1
 209              		.global	UART_UartSetRxAddress
 210              		.code	16
 211              		.thumb_func
 212              		.type	UART_UartSetRxAddress, %function
 213              	UART_UartSetRxAddress:
 214              	.LFB3:
 421:Generated_Source\PSoC4/UART_UART.c **** 
 422:Generated_Source\PSoC4/UART_UART.c **** 
 423:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 425:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/UART_UART.c **** *
 427:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/UART_UART.c **** *
 432:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/UART_UART.c **** {
 215              		.loc 1 434 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 220              	.LVL0:
 435:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 438:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 13


 439:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 221              		.loc 1 439 0
 222 0000 FF22     		movs	r2, #255
 437:Generated_Source\PSoC4/UART_UART.c **** 
 223              		.loc 1 437 0
 224 0002 0349     		ldr	r1, .L11
 440:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 225              		.loc 1 440 0
 226 0004 1040     		ands	r0, r2
 227              	.LVL1:
 437:Generated_Source\PSoC4/UART_UART.c **** 
 228              		.loc 1 437 0
 229 0006 0B68     		ldr	r3, [r1]
 230              	.LVL2:
 441:Generated_Source\PSoC4/UART_UART.c **** 
 442:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 443:Generated_Source\PSoC4/UART_UART.c **** }
 231              		.loc 1 443 0
 232              		@ sp needed
 439:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 233              		.loc 1 439 0
 234 0008 9343     		bics	r3, r2
 235              	.LVL3:
 440:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 236              		.loc 1 440 0
 237 000a 1843     		orrs	r0, r3
 238              	.LVL4:
 442:Generated_Source\PSoC4/UART_UART.c **** }
 239              		.loc 1 442 0
 240 000c 0860     		str	r0, [r1]
 241              		.loc 1 443 0
 242 000e 7047     		bx	lr
 243              	.L12:
 244              		.align	2
 245              	.L11:
 246 0010 10030640 		.word	1074135824
 247              		.cfi_endproc
 248              	.LFE3:
 249              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 250              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 251              		.align	1
 252              		.global	UART_UartSetRxAddressMask
 253              		.code	16
 254              		.thumb_func
 255              		.type	UART_UartSetRxAddressMask, %function
 256              	UART_UartSetRxAddressMask:
 257              	.LFB4:
 444:Generated_Source\PSoC4/UART_UART.c **** 
 445:Generated_Source\PSoC4/UART_UART.c **** 
 446:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/UART_UART.c **** *
 452:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 14


 454:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/UART_UART.c **** *
 457:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/UART_UART.c **** {
 258              		.loc 1 459 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              	.LVL5:
 460:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 264              		.loc 1 462 0
 265 0000 034A     		ldr	r2, .L14
 463:Generated_Source\PSoC4/UART_UART.c **** 
 464:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 266              		.loc 1 464 0
 267 0002 044B     		ldr	r3, .L14+4
 462:Generated_Source\PSoC4/UART_UART.c **** 
 268              		.loc 1 462 0
 269 0004 1168     		ldr	r1, [r2]
 270              	.LVL6:
 465:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 271              		.loc 1 465 0
 272 0006 0004     		lsls	r0, r0, #16
 273              	.LVL7:
 464:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 274              		.loc 1 464 0
 275 0008 0B40     		ands	r3, r1
 276              	.LVL8:
 277              		.loc 1 465 0
 278 000a 1843     		orrs	r0, r3
 279              	.LVL9:
 466:Generated_Source\PSoC4/UART_UART.c **** 
 467:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 280              		.loc 1 467 0
 281 000c 1060     		str	r0, [r2]
 468:Generated_Source\PSoC4/UART_UART.c **** }
 282              		.loc 1 468 0
 283              		@ sp needed
 284 000e 7047     		bx	lr
 285              	.L15:
 286              		.align	2
 287              	.L14:
 288 0010 10030640 		.word	1074135824
 289 0014 FFFF00FF 		.word	-16711681
 290              		.cfi_endproc
 291              	.LFE4:
 292              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 293              		.section	.text.UART_UartGetChar,"ax",%progbits
 294              		.align	1
 295              		.global	UART_UartGetChar
 296              		.code	16
 297              		.thumb_func
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 15


 298              		.type	UART_UartGetChar, %function
 299              	UART_UartGetChar:
 300              	.LFB5:
 469:Generated_Source\PSoC4/UART_UART.c **** 
 470:Generated_Source\PSoC4/UART_UART.c **** 
 471:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 474:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/UART_UART.c ****     *
 476:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/UART_UART.c ****     *
 485:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/UART_UART.c ****     *
 490:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/UART_UART.c ****     *
 497:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 499:Generated_Source\PSoC4/UART_UART.c ****     {
 301              		.loc 1 499 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              	.LVL10:
 306 0000 10B5     		push	{r4, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 4, -8
 309              		.cfi_offset 14, -4
 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 501:Generated_Source\PSoC4/UART_UART.c **** 
 502:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 310              		.loc 1 503 0
 311 0002 FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 312              	.LVL11:
 313 0006 0300     		movs	r3, r0
 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 314              		.loc 1 500 0
 315 0008 0020     		movs	r0, #0
 316              		.loc 1 503 0
 317 000a 8342     		cmp	r3, r0
 318 000c 01D0     		beq	.L17
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 16


 504:Generated_Source\PSoC4/UART_UART.c ****         {
 505:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 319              		.loc 1 505 0
 320 000e FFF7FEFF 		bl	UART_SpiUartReadRxData
 321              	.LVL12:
 322              	.L17:
 506:Generated_Source\PSoC4/UART_UART.c ****         }
 507:Generated_Source\PSoC4/UART_UART.c **** 
 508:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 323              		.loc 1 508 0
 324 0012 D822     		movs	r2, #216
 325 0014 034B     		ldr	r3, .L25
 326 0016 9200     		lsls	r2, r2, #2
 327 0018 1968     		ldr	r1, [r3]
 328 001a 1142     		tst	r1, r2
 329 001c 01D0     		beq	.L18
 330              	.LVL13:
 509:Generated_Source\PSoC4/UART_UART.c ****         {
 510:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 331              		.loc 1 510 0
 332 001e 0020     		movs	r0, #0
 511:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 333              		.loc 1 511 0
 334 0020 1A60     		str	r2, [r3]
 335              	.LVL14:
 336              	.L18:
 512:Generated_Source\PSoC4/UART_UART.c ****         }
 513:Generated_Source\PSoC4/UART_UART.c **** 
 514:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 515:Generated_Source\PSoC4/UART_UART.c ****     }
 337              		.loc 1 515 0
 338              		@ sp needed
 339 0022 10BD     		pop	{r4, pc}
 340              	.L26:
 341              		.align	2
 342              	.L25:
 343 0024 C00F0640 		.word	1074139072
 344              		.cfi_endproc
 345              	.LFE5:
 346              		.size	UART_UartGetChar, .-UART_UartGetChar
 347              		.section	.text.UART_UartGetByte,"ax",%progbits
 348              		.align	1
 349              		.global	UART_UartGetByte
 350              		.code	16
 351              		.thumb_func
 352              		.type	UART_UartGetByte, %function
 353              	UART_UartGetByte:
 354              	.LFB6:
 516:Generated_Source\PSoC4/UART_UART.c **** 
 517:Generated_Source\PSoC4/UART_UART.c **** 
 518:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 520:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/UART_UART.c ****     *
 522:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 17


 525:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/UART_UART.c ****     *
 530:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/UART_UART.c ****     *
 540:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/UART_UART.c ****     *
 547:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 549:Generated_Source\PSoC4/UART_UART.c ****     {
 355              		.loc 1 549 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 10B5     		push	{r4, lr}
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 4, -8
 362              		.cfi_offset 14, -4
 550:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/UART_UART.c **** 
 553:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/UART_UART.c ****         {
 555:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 556:Generated_Source\PSoC4/UART_UART.c ****         }
 557:Generated_Source\PSoC4/UART_UART.c ****         #endif
 558:Generated_Source\PSoC4/UART_UART.c **** 
 559:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 363              		.loc 1 559 0
 364 0002 FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 365              	.LVL15:
 366 0006 0028     		cmp	r0, #0
 367 0008 02D0     		beq	.L28
 560:Generated_Source\PSoC4/UART_UART.c ****         {
 561:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/UART_UART.c ****             */
 564:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/UART_UART.c ****             {
 566:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 567:Generated_Source\PSoC4/UART_UART.c ****             }
 568:Generated_Source\PSoC4/UART_UART.c ****             #endif
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 18


 569:Generated_Source\PSoC4/UART_UART.c **** 
 570:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 368              		.loc 1 571 0
 369 000a FFF7FEFF 		bl	UART_SpiUartReadRxData
 370              	.LVL16:
 371 000e 01E0     		b	.L29
 372              	.LVL17:
 373              	.L28:
 572:Generated_Source\PSoC4/UART_UART.c ****         }
 573:Generated_Source\PSoC4/UART_UART.c ****         else
 574:Generated_Source\PSoC4/UART_UART.c ****         {
 575:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/UART_UART.c ****             */
 578:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 374              		.loc 1 578 0
 375 0010 064B     		ldr	r3, .L30
 376 0012 1868     		ldr	r0, [r3]
 377              	.LVL18:
 378              	.L29:
 579:Generated_Source\PSoC4/UART_UART.c **** 
 580:Generated_Source\PSoC4/UART_UART.c **** 
 581:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/UART_UART.c ****             {
 584:Generated_Source\PSoC4/UART_UART.c **** 
 585:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/UART_UART.c ****                 */
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/UART_UART.c **** 
 590:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 591:Generated_Source\PSoC4/UART_UART.c ****             }
 592:Generated_Source\PSoC4/UART_UART.c ****             #endif
 593:Generated_Source\PSoC4/UART_UART.c ****         }
 594:Generated_Source\PSoC4/UART_UART.c **** 
 595:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 597:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 379              		.loc 1 597 0
 380 0014 D821     		movs	r1, #216
 596:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 381              		.loc 1 596 0
 382 0016 064A     		ldr	r2, .L30+4
 383              		.loc 1 597 0
 384 0018 8900     		lsls	r1, r1, #2
 596:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 385              		.loc 1 596 0
 386 001a 1368     		ldr	r3, [r2]
 387              	.LVL19:
 388              		.loc 1 597 0
 389 001c 1160     		str	r1, [r2]
 390              	.LVL20:
 598:Generated_Source\PSoC4/UART_UART.c **** 
 599:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 19


 601:Generated_Source\PSoC4/UART_UART.c ****         */
 602:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 603:Generated_Source\PSoC4/UART_UART.c **** 
 604:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 391              		.loc 1 604 0
 392 001e D822     		movs	r2, #216
 393 0020 1B02     		lsls	r3, r3, #8
 394              	.LVL21:
 395 0022 9202     		lsls	r2, r2, #10
 396 0024 1340     		ands	r3, r2
 397 0026 1843     		orrs	r0, r3
 605:Generated_Source\PSoC4/UART_UART.c ****     }
 398              		.loc 1 605 0
 399              		@ sp needed
 400 0028 10BD     		pop	{r4, pc}
 401              	.L31:
 402 002a C046     		.align	2
 403              	.L30:
 404 002c 40030640 		.word	1074135872
 405 0030 C00F0640 		.word	1074139072
 406              		.cfi_endproc
 407              	.LFE6:
 408              		.size	UART_UartGetByte, .-UART_UartGetByte
 409              		.section	.text.UART_UartPutString,"ax",%progbits
 410              		.align	1
 411              		.global	UART_UartPutString
 412              		.code	16
 413              		.thumb_func
 414              		.type	UART_UartPutString, %function
 415              	UART_UartPutString:
 416              	.LFB7:
 606:Generated_Source\PSoC4/UART_UART.c **** 
 607:Generated_Source\PSoC4/UART_UART.c **** 
 608:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/UART_UART.c ****         *
 613:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/UART_UART.c ****         *
 617:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/UART_UART.c ****         *
 621:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****         {
 624:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 625:Generated_Source\PSoC4/UART_UART.c ****             {
 626:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 627:Generated_Source\PSoC4/UART_UART.c ****             }
 628:Generated_Source\PSoC4/UART_UART.c ****             else
 629:Generated_Source\PSoC4/UART_UART.c ****             {
 630:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 631:Generated_Source\PSoC4/UART_UART.c ****             }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 20


 632:Generated_Source\PSoC4/UART_UART.c ****         }
 633:Generated_Source\PSoC4/UART_UART.c **** 
 634:Generated_Source\PSoC4/UART_UART.c **** 
 635:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/UART_UART.c ****         *
 639:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/UART_UART.c ****         *
 645:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/UART_UART.c ****         *
 649:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/UART_UART.c ****         {
 652:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 655:Generated_Source\PSoC4/UART_UART.c **** 
 656:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 657:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:Generated_Source\PSoC4/UART_UART.c **** 
 659:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:Generated_Source\PSoC4/UART_UART.c ****         }
 661:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/UART_UART.c **** 
 665:Generated_Source\PSoC4/UART_UART.c **** 
 666:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 669:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/UART_UART.c ****     *
 671:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/UART_UART.c ****     *
 676:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/UART_UART.c ****     *
 679:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/UART_UART.c ****     {
 417              		.loc 1 681 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL22:
 422 0000 10B5     		push	{r4, lr}
 423              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 21


 424              		.cfi_offset 4, -8
 425              		.cfi_offset 14, -4
 426 0002 0400     		movs	r4, r0
 427              	.LVL23:
 428              	.L33:
 429 0004 0134     		adds	r4, r4, #1
 430              	.LVL24:
 682:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 685:Generated_Source\PSoC4/UART_UART.c **** 
 686:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 431              		.loc 1 687 0
 432 0006 631E     		subs	r3, r4, #1
 433 0008 1878     		ldrb	r0, [r3]
 434 000a 0028     		cmp	r0, #0
 435 000c 02D0     		beq	.L35
 688:Generated_Source\PSoC4/UART_UART.c ****         {
 689:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 436              		.loc 1 689 0
 437 000e FFF7FEFF 		bl	UART_SpiUartWriteTxData
 438              	.LVL25:
 439 0012 F7E7     		b	.L33
 440              	.LVL26:
 441              	.L35:
 690:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 691:Generated_Source\PSoC4/UART_UART.c ****         }
 692:Generated_Source\PSoC4/UART_UART.c ****     }
 442              		.loc 1 692 0
 443              		@ sp needed
 444              	.LVL27:
 445 0014 10BD     		pop	{r4, pc}
 446              		.cfi_endproc
 447              	.LFE7:
 448              		.size	UART_UartPutString, .-UART_UartPutString
 449              		.section	.text.UART_UartPutCRLF,"ax",%progbits
 450              		.align	1
 451              		.global	UART_UartPutCRLF
 452              		.code	16
 453              		.thumb_func
 454              		.type	UART_UartPutCRLF, %function
 455              	UART_UartPutCRLF:
 456              	.LFB8:
 693:Generated_Source\PSoC4/UART_UART.c **** 
 694:Generated_Source\PSoC4/UART_UART.c **** 
 695:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 697:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/UART_UART.c ****     *
 699:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/UART_UART.c ****     *
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 22


 706:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/UART_UART.c ****     {
 457              		.loc 1 708 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              	.LVL28:
 462 0000 10B5     		push	{r4, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 4, -8
 465              		.cfi_offset 14, -4
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 466              		.loc 1 709 0
 467 0002 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 468              	.LVL29:
 710:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 469              		.loc 1 710 0
 470 0006 0D20     		movs	r0, #13
 471 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 472              	.LVL30:
 711:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 473              		.loc 1 711 0
 474 000c 0A20     		movs	r0, #10
 475 000e FFF7FEFF 		bl	UART_SpiUartWriteTxData
 476              	.LVL31:
 712:Generated_Source\PSoC4/UART_UART.c ****     }
 477              		.loc 1 712 0
 478              		@ sp needed
 479 0012 10BD     		pop	{r4, pc}
 480              		.cfi_endproc
 481              	.LFE8:
 482              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 483              		.section	.text.UART_UartSendBreakBlocking,"ax",%progbits
 484              		.align	1
 485              		.global	UART_UartSendBreakBlocking
 486              		.code	16
 487              		.thumb_func
 488              		.type	UART_UartSendBreakBlocking, %function
 489              	UART_UartSendBreakBlocking:
 490              	.LFB9:
 713:Generated_Source\PSoC4/UART_UART.c **** 
 714:Generated_Source\PSoC4/UART_UART.c **** 
 715:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/UART_UART.c ****         *
 720:Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/UART_UART.c ****         *
 724:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 726:Generated_Source\PSoC4/UART_UART.c ****         {
 727:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 728:Generated_Source\PSoC4/UART_UART.c ****         }
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 23


 729:Generated_Source\PSoC4/UART_UART.c **** 
 730:Generated_Source\PSoC4/UART_UART.c **** 
 731:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 733:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/UART_UART.c ****         *
 735:Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/UART_UART.c ****         *
 739:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
 741:Generated_Source\PSoC4/UART_UART.c ****         {
 742:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 743:Generated_Source\PSoC4/UART_UART.c ****         }
 744:Generated_Source\PSoC4/UART_UART.c **** 
 745:Generated_Source\PSoC4/UART_UART.c **** 
 746:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/UART_UART.c ****         *
 750:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/UART_UART.c ****         *
 754:Generated_Source\PSoC4/UART_UART.c ****         * \param
 755:Generated_Source\PSoC4/UART_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/UART_UART.c ****         *
 759:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/UART_UART.c ****         {
 762:Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 763:Generated_Source\PSoC4/UART_UART.c ****             {
 764:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 765:Generated_Source\PSoC4/UART_UART.c ****             }
 766:Generated_Source\PSoC4/UART_UART.c ****             else
 767:Generated_Source\PSoC4/UART_UART.c ****             {
 768:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 769:Generated_Source\PSoC4/UART_UART.c ****             }
 770:Generated_Source\PSoC4/UART_UART.c ****         }
 771:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/UART_UART.c **** 
 773:Generated_Source\PSoC4/UART_UART.c **** 
 774:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/UART_UART.c ****     *
 778:Generated_Source\PSoC4/UART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/UART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/UART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/UART_UART.c ****     *
 782:Generated_Source\PSoC4/UART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/UART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/UART_UART.c ****     *
 785:Generated_Source\PSoC4/UART_UART.c ****     * \note
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 24


 786:Generated_Source\PSoC4/UART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/UART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/UART_UART.c ****     *
 789:Generated_Source\PSoC4/UART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/UART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/UART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/UART_UART.c ****     *
 793:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/UART_UART.c ****     {
 491              		.loc 1 795 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 8
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              	.LVL32:
 496 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 497              		.cfi_def_cfa_offset 32
 498              		.cfi_offset 0, -32
 499              		.cfi_offset 1, -28
 500              		.cfi_offset 2, -24
 501              		.cfi_offset 4, -20
 502              		.cfi_offset 5, -16
 503              		.cfi_offset 6, -12
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 796:Generated_Source\PSoC4/UART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/UART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/UART_UART.c **** 
 799:Generated_Source\PSoC4/UART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/UART_UART.c ****         txIntrReg = UART_GetTxInterruptMode();
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 802:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 506              		.loc 1 802 0
 507 0002 8024     		movs	r4, #128
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 508              		.loc 1 801 0
 509 0004 0026     		movs	r6, #0
 803:Generated_Source\PSoC4/UART_UART.c **** 
 804:Generated_Source\PSoC4/UART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/UART_UART.c ****         txCtrlReg = UART_TX_CTRL_REG;
 806:Generated_Source\PSoC4/UART_UART.c **** 
 807:Generated_Source\PSoC4/UART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = (UART_TX_CTRL_REG & (uint32) ~UART_TX_CTRL_DATA_WIDTH_MASK) |
 510              		.loc 1 808 0
 511 0006 0F27     		movs	r7, #15
 800:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 512              		.loc 1 800 0
 513 0008 0E4A     		ldr	r2, .L41
 802:Generated_Source\PSoC4/UART_UART.c **** 
 514              		.loc 1 802 0
 515 000a 0F4D     		ldr	r5, .L41+4
 800:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 516              		.loc 1 800 0
 517 000c 1368     		ldr	r3, [r2]
 802:Generated_Source\PSoC4/UART_UART.c **** 
 518              		.loc 1 802 0
 519 000e A400     		lsls	r4, r4, #2
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 25


 800:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 520              		.loc 1 800 0
 521 0010 0193     		str	r3, [sp, #4]
 522              	.LVL33:
 805:Generated_Source\PSoC4/UART_UART.c **** 
 523              		.loc 1 805 0
 524 0012 0E4B     		ldr	r3, .L41+8
 525              	.LVL34:
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 526              		.loc 1 801 0
 527 0014 1660     		str	r6, [r2]
 802:Generated_Source\PSoC4/UART_UART.c **** 
 528              		.loc 1 802 0
 529 0016 2C60     		str	r4, [r5]
 805:Generated_Source\PSoC4/UART_UART.c **** 
 530              		.loc 1 805 0
 531 0018 1968     		ldr	r1, [r3]
 532              		.loc 1 808 0
 533 001a 0138     		subs	r0, r0, #1
 534              	.LVL35:
 805:Generated_Source\PSoC4/UART_UART.c **** 
 535              		.loc 1 805 0
 536 001c 8C46     		mov	ip, r1
 537              	.LVL36:
 538              		.loc 1 808 0
 539 001e 1968     		ldr	r1, [r3]
 540              	.LVL37:
 541 0020 3840     		ands	r0, r7
 542              	.LVL38:
 543 0022 B943     		bics	r1, r7
 544 0024 0843     		orrs	r0, r1
 809:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 810:Generated_Source\PSoC4/UART_UART.c **** 
 811:Generated_Source\PSoC4/UART_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_WR_REG = 0u;
 545              		.loc 1 812 0
 546 0026 0A49     		ldr	r1, .L41+12
 808:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 547              		.loc 1 808 0
 548 0028 1860     		str	r0, [r3]
 549              		.loc 1 812 0
 550 002a 0E60     		str	r6, [r1]
 551              	.L38:
 813:Generated_Source\PSoC4/UART_UART.c **** 
 814:Generated_Source\PSoC4/UART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/UART_UART.c ****         while (0u == (UART_GetTxInterruptSource() & UART_INTR_TX_UART_DONE))
 552              		.loc 1 815 0 discriminator 1
 553 002c 2968     		ldr	r1, [r5]
 554 002e 2142     		tst	r1, r4
 555 0030 FCD0     		beq	.L38
 816:Generated_Source\PSoC4/UART_UART.c ****         {
 817:Generated_Source\PSoC4/UART_UART.c ****         }
 818:Generated_Source\PSoC4/UART_UART.c **** 
 819:Generated_Source\PSoC4/UART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 556              		.loc 1 820 0
 557 0032 0848     		ldr	r0, .L41+16
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 26


 558 0034 0449     		ldr	r1, .L41+4
 821:Generated_Source\PSoC4/UART_UART.c **** 
 822:Generated_Source\PSoC4/UART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = txCtrlReg;
 824:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(txIntrReg);
 825:Generated_Source\PSoC4/UART_UART.c ****     }
 559              		.loc 1 825 0
 560              		@ sp needed
 820:Generated_Source\PSoC4/UART_UART.c **** 
 561              		.loc 1 820 0
 562 0036 0860     		str	r0, [r1]
 823:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(txIntrReg);
 563              		.loc 1 823 0
 564 0038 6146     		mov	r1, ip
 565 003a 1960     		str	r1, [r3]
 824:Generated_Source\PSoC4/UART_UART.c ****     }
 566              		.loc 1 824 0
 567 003c 019B     		ldr	r3, [sp, #4]
 568 003e 1360     		str	r3, [r2]
 569              		.loc 1 825 0
 570 0040 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 571              	.L42:
 572 0042 C046     		.align	2
 573              	.L41:
 574 0044 880F0640 		.word	1074139016
 575 0048 800F0640 		.word	1074139008
 576 004c 00020640 		.word	1074135552
 577 0050 40020640 		.word	1074135616
 578 0054 F3070000 		.word	2035
 579              		.cfi_endproc
 580              	.LFE9:
 581              		.size	UART_UartSendBreakBlocking, .-UART_UartSendBreakBlocking
 582              		.text
 583              	.Letext0:
 584              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 585              		.file 3 "Generated_Source\\PSoC4\\UART_SPI_UART.h"
 586              		.file 4 "Generated_Source\\PSoC4\\UART_PVT.h"
 587              		.section	.debug_info,"",%progbits
 588              	.Ldebug_info0:
 589 0000 05030000 		.4byte	0x305
 590 0004 0400     		.2byte	0x4
 591 0006 00000000 		.4byte	.Ldebug_abbrev0
 592 000a 04       		.byte	0x4
 593 000b 01       		.uleb128 0x1
 594 000c F0010000 		.4byte	.LASF41
 595 0010 0C       		.byte	0xc
 596 0011 DF020000 		.4byte	.LASF42
 597 0015 14000000 		.4byte	.LASF43
 598 0019 00000000 		.4byte	.Ldebug_ranges0+0
 599 001d 00000000 		.4byte	0
 600 0021 00000000 		.4byte	.Ldebug_line0
 601 0025 02       		.uleb128 0x2
 602 0026 01       		.byte	0x1
 603 0027 06       		.byte	0x6
 604 0028 02030000 		.4byte	.LASF0
 605 002c 02       		.uleb128 0x2
 606 002d 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 27


 607 002e 08       		.byte	0x8
 608 002f E1000000 		.4byte	.LASF1
 609 0033 02       		.uleb128 0x2
 610 0034 02       		.byte	0x2
 611 0035 05       		.byte	0x5
 612 0036 A2020000 		.4byte	.LASF2
 613 003a 02       		.uleb128 0x2
 614 003b 02       		.byte	0x2
 615 003c 07       		.byte	0x7
 616 003d 29010000 		.4byte	.LASF3
 617 0041 02       		.uleb128 0x2
 618 0042 04       		.byte	0x4
 619 0043 05       		.byte	0x5
 620 0044 C3020000 		.4byte	.LASF4
 621 0048 02       		.uleb128 0x2
 622 0049 04       		.byte	0x4
 623 004a 07       		.byte	0x7
 624 004b 09010000 		.4byte	.LASF5
 625 004f 02       		.uleb128 0x2
 626 0050 08       		.byte	0x8
 627 0051 05       		.byte	0x5
 628 0052 00000000 		.4byte	.LASF6
 629 0056 02       		.uleb128 0x2
 630 0057 08       		.byte	0x8
 631 0058 07       		.byte	0x7
 632 0059 BF010000 		.4byte	.LASF7
 633 005d 03       		.uleb128 0x3
 634 005e 04       		.byte	0x4
 635 005f 05       		.byte	0x5
 636 0060 696E7400 		.ascii	"int\000"
 637 0064 02       		.uleb128 0x2
 638 0065 04       		.byte	0x4
 639 0066 07       		.byte	0x7
 640 0067 9C010000 		.4byte	.LASF8
 641 006b 04       		.uleb128 0x4
 642 006c 8E010000 		.4byte	.LASF9
 643 0070 02       		.byte	0x2
 644 0071 E501     		.2byte	0x1e5
 645 0073 3A000000 		.4byte	0x3a
 646 0077 04       		.uleb128 0x4
 647 0078 95010000 		.4byte	.LASF10
 648 007c 02       		.byte	0x2
 649 007d E601     		.2byte	0x1e6
 650 007f 48000000 		.4byte	0x48
 651 0083 02       		.uleb128 0x2
 652 0084 04       		.byte	0x4
 653 0085 04       		.byte	0x4
 654 0086 79000000 		.4byte	.LASF11
 655 008a 02       		.uleb128 0x2
 656 008b 08       		.byte	0x8
 657 008c 04       		.byte	0x4
 658 008d 71010000 		.4byte	.LASF12
 659 0091 04       		.uleb128 0x4
 660 0092 EF000000 		.4byte	.LASF13
 661 0096 02       		.byte	0x2
 662 0097 F501     		.2byte	0x1f5
 663 0099 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 28


 664 009d 02       		.uleb128 0x2
 665 009e 01       		.byte	0x1
 666 009f 08       		.byte	0x8
 667 00a0 9D020000 		.4byte	.LASF14
 668 00a4 04       		.uleb128 0x4
 669 00a5 0E000000 		.4byte	.LASF15
 670 00a9 02       		.byte	0x2
 671 00aa 9002     		.2byte	0x290
 672 00ac B0000000 		.4byte	0xb0
 673 00b0 05       		.uleb128 0x5
 674 00b1 77000000 		.4byte	0x77
 675 00b5 02       		.uleb128 0x2
 676 00b6 04       		.byte	0x4
 677 00b7 07       		.byte	0x7
 678 00b8 89020000 		.4byte	.LASF16
 679 00bc 06       		.uleb128 0x6
 680 00bd A9010000 		.4byte	.LASF17
 681 00c1 01       		.byte	0x1
 682 00c2 F7       		.byte	0xf7
 683 00c3 00000000 		.4byte	.LFB0
 684 00c7 A0000000 		.4byte	.LFE0-.LFB0
 685 00cb 01       		.uleb128 0x1
 686 00cc 9C       		.byte	0x9c
 687 00cd 07       		.uleb128 0x7
 688 00ce F5000000 		.4byte	.LASF18
 689 00d2 01       		.byte	0x1
 690 00d3 3D01     		.2byte	0x13d
 691 00d5 00000000 		.4byte	.LFB1
 692 00d9 24000000 		.4byte	.LFE1-.LFB1
 693 00dd 01       		.uleb128 0x1
 694 00de 9C       		.byte	0x9c
 695 00df 07       		.uleb128 0x7
 696 00e0 1B010000 		.4byte	.LASF19
 697 00e4 01       		.byte	0x1
 698 00e5 7101     		.2byte	0x171
 699 00e7 00000000 		.4byte	.LFB2
 700 00eb 28000000 		.4byte	.LFE2-.LFB2
 701 00ef 01       		.uleb128 0x1
 702 00f0 9C       		.byte	0x9c
 703 00f1 08       		.uleb128 0x8
 704 00f2 78010000 		.4byte	.LASF20
 705 00f6 01       		.byte	0x1
 706 00f7 B101     		.2byte	0x1b1
 707 00f9 00000000 		.4byte	.LFB3
 708 00fd 14000000 		.4byte	.LFE3-.LFB3
 709 0101 01       		.uleb128 0x1
 710 0102 9C       		.byte	0x9c
 711 0103 28010000 		.4byte	0x128
 712 0107 09       		.uleb128 0x9
 713 0108 B7010000 		.4byte	.LASF22
 714 010c 01       		.byte	0x1
 715 010d B101     		.2byte	0x1b1
 716 010f 77000000 		.4byte	0x77
 717 0113 00000000 		.4byte	.LLST0
 718 0117 0A       		.uleb128 0xa
 719 0118 D6020000 		.4byte	.LASF24
 720 011c 01       		.byte	0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 29


 721 011d B301     		.2byte	0x1b3
 722 011f 77000000 		.4byte	0x77
 723 0123 21000000 		.4byte	.LLST1
 724 0127 00       		.byte	0
 725 0128 08       		.uleb128 0x8
 726 0129 5F000000 		.4byte	.LASF21
 727 012d 01       		.byte	0x1
 728 012e CA01     		.2byte	0x1ca
 729 0130 00000000 		.4byte	.LFB4
 730 0134 18000000 		.4byte	.LFE4-.LFB4
 731 0138 01       		.uleb128 0x1
 732 0139 9C       		.byte	0x9c
 733 013a 5F010000 		.4byte	0x15f
 734 013e 09       		.uleb128 0x9
 735 013f 65010000 		.4byte	.LASF23
 736 0143 01       		.byte	0x1
 737 0144 CA01     		.2byte	0x1ca
 738 0146 77000000 		.4byte	0x77
 739 014a 3F000000 		.4byte	.LLST2
 740 014e 0A       		.uleb128 0xa
 741 014f D6020000 		.4byte	.LASF24
 742 0153 01       		.byte	0x1
 743 0154 CC01     		.2byte	0x1cc
 744 0156 77000000 		.4byte	0x77
 745 015a 60000000 		.4byte	.LLST3
 746 015e 00       		.byte	0
 747 015f 0B       		.uleb128 0xb
 748 0160 DF010000 		.4byte	.LASF26
 749 0164 01       		.byte	0x1
 750 0165 F201     		.2byte	0x1f2
 751 0167 77000000 		.4byte	0x77
 752 016b 00000000 		.4byte	.LFB5
 753 016f 28000000 		.4byte	.LFE5-.LFB5
 754 0173 01       		.uleb128 0x1
 755 0174 9C       		.byte	0x9c
 756 0175 9C010000 		.4byte	0x19c
 757 0179 0A       		.uleb128 0xa
 758 017a 5E010000 		.4byte	.LASF25
 759 017e 01       		.byte	0x1
 760 017f F401     		.2byte	0x1f4
 761 0181 77000000 		.4byte	0x77
 762 0185 89000000 		.4byte	.LLST4
 763 0189 0C       		.uleb128 0xc
 764 018a 06000000 		.4byte	.LVL11
 765 018e E4020000 		.4byte	0x2e4
 766 0192 0C       		.uleb128 0xc
 767 0193 12000000 		.4byte	.LVL12
 768 0197 F0020000 		.4byte	0x2f0
 769 019b 00       		.byte	0
 770 019c 0B       		.uleb128 0xb
 771 019d 4D010000 		.4byte	.LASF27
 772 01a1 01       		.byte	0x1
 773 01a2 2402     		.2byte	0x224
 774 01a4 77000000 		.4byte	0x77
 775 01a8 00000000 		.4byte	.LFB6
 776 01ac 34000000 		.4byte	.LFE6-.LFB6
 777 01b0 01       		.uleb128 0x1
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 30


 778 01b1 9C       		.byte	0x9c
 779 01b2 E9010000 		.4byte	0x1e9
 780 01b6 0A       		.uleb128 0xa
 781 01b7 5E010000 		.4byte	.LASF25
 782 01bb 01       		.byte	0x1
 783 01bc 2602     		.2byte	0x226
 784 01be 77000000 		.4byte	0x77
 785 01c2 BF000000 		.4byte	.LLST5
 786 01c6 0A       		.uleb128 0xa
 787 01c7 CC020000 		.4byte	.LASF28
 788 01cb 01       		.byte	0x1
 789 01cc 2702     		.2byte	0x227
 790 01ce 77000000 		.4byte	0x77
 791 01d2 F3000000 		.4byte	.LLST6
 792 01d6 0C       		.uleb128 0xc
 793 01d7 06000000 		.4byte	.LVL15
 794 01db E4020000 		.4byte	0x2e4
 795 01df 0C       		.uleb128 0xc
 796 01e0 0E000000 		.4byte	.LVL16
 797 01e4 F0020000 		.4byte	0x2f0
 798 01e8 00       		.byte	0
 799 01e9 08       		.uleb128 0x8
 800 01ea 9E000000 		.4byte	.LASF29
 801 01ee 01       		.byte	0x1
 802 01ef A802     		.2byte	0x2a8
 803 01f1 00000000 		.4byte	.LFB7
 804 01f5 16000000 		.4byte	.LFE7-.LFB7
 805 01f9 01       		.uleb128 0x1
 806 01fa 9C       		.byte	0x9c
 807 01fb 29020000 		.4byte	0x229
 808 01ff 09       		.uleb128 0x9
 809 0200 97000000 		.4byte	.LASF30
 810 0204 01       		.byte	0x1
 811 0205 A802     		.2byte	0x2a8
 812 0207 29020000 		.4byte	0x229
 813 020b 0C010000 		.4byte	.LLST7
 814 020f 0A       		.uleb128 0xa
 815 0210 D6010000 		.4byte	.LASF31
 816 0214 01       		.byte	0x1
 817 0215 AA02     		.2byte	0x2aa
 818 0217 77000000 		.4byte	0x77
 819 021b 2D010000 		.4byte	.LLST8
 820 021f 0C       		.uleb128 0xc
 821 0220 12000000 		.4byte	.LVL25
 822 0224 FC020000 		.4byte	0x2fc
 823 0228 00       		.byte	0
 824 0229 0D       		.uleb128 0xd
 825 022a 04       		.byte	0x4
 826 022b 2F020000 		.4byte	0x22f
 827 022f 0E       		.uleb128 0xe
 828 0230 91000000 		.4byte	0x91
 829 0234 08       		.uleb128 0x8
 830 0235 3C010000 		.4byte	.LASF32
 831 0239 01       		.byte	0x1
 832 023a C302     		.2byte	0x2c3
 833 023c 00000000 		.4byte	.LFB8
 834 0240 14000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 31


 835 0244 01       		.uleb128 0x1
 836 0245 9C       		.byte	0x9c
 837 0246 92020000 		.4byte	0x292
 838 024a 09       		.uleb128 0x9
 839 024b 92020000 		.4byte	.LASF33
 840 024f 01       		.byte	0x1
 841 0250 C302     		.2byte	0x2c3
 842 0252 77000000 		.4byte	0x77
 843 0256 8C010000 		.4byte	.LLST9
 844 025a 0F       		.uleb128 0xf
 845 025b 06000000 		.4byte	.LVL29
 846 025f FC020000 		.4byte	0x2fc
 847 0263 6F020000 		.4byte	0x26f
 848 0267 10       		.uleb128 0x10
 849 0268 01       		.uleb128 0x1
 850 0269 50       		.byte	0x50
 851 026a 03       		.uleb128 0x3
 852 026b F3       		.byte	0xf3
 853 026c 01       		.uleb128 0x1
 854 026d 50       		.byte	0x50
 855 026e 00       		.byte	0
 856 026f 0F       		.uleb128 0xf
 857 0270 0C000000 		.4byte	.LVL30
 858 0274 FC020000 		.4byte	0x2fc
 859 0278 82020000 		.4byte	0x282
 860 027c 10       		.uleb128 0x10
 861 027d 01       		.uleb128 0x1
 862 027e 50       		.byte	0x50
 863 027f 01       		.uleb128 0x1
 864 0280 3D       		.byte	0x3d
 865 0281 00       		.byte	0
 866 0282 11       		.uleb128 0x11
 867 0283 12000000 		.4byte	.LVL31
 868 0287 FC020000 		.4byte	0x2fc
 869 028b 10       		.uleb128 0x10
 870 028c 01       		.uleb128 0x1
 871 028d 50       		.byte	0x50
 872 028e 01       		.uleb128 0x1
 873 028f 3A       		.byte	0x3a
 874 0290 00       		.byte	0
 875 0291 00       		.byte	0
 876 0292 08       		.uleb128 0x8
 877 0293 BC000000 		.4byte	.LASF34
 878 0297 01       		.byte	0x1
 879 0298 1A03     		.2byte	0x31a
 880 029a 00000000 		.4byte	.LFB9
 881 029e 58000000 		.4byte	.LFE9-.LFB9
 882 02a2 01       		.uleb128 0x1
 883 02a3 9C       		.byte	0x9c
 884 02a4 D9020000 		.4byte	0x2d9
 885 02a8 09       		.uleb128 0x9
 886 02a9 B1000000 		.4byte	.LASF35
 887 02ad 01       		.byte	0x1
 888 02ae 1A03     		.2byte	0x31a
 889 02b0 77000000 		.4byte	0x77
 890 02b4 AD010000 		.4byte	.LLST10
 891 02b8 0A       		.uleb128 0xa
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 32


 892 02b9 2A030000 		.4byte	.LASF36
 893 02bd 01       		.byte	0x1
 894 02be 1C03     		.2byte	0x31c
 895 02c0 77000000 		.4byte	0x77
 896 02c4 DB010000 		.4byte	.LLST11
 897 02c8 0A       		.uleb128 0xa
 898 02c9 D7000000 		.4byte	.LASF37
 899 02cd 01       		.byte	0x1
 900 02ce 1D03     		.2byte	0x31d
 901 02d0 77000000 		.4byte	0x77
 902 02d4 F9010000 		.4byte	.LLST12
 903 02d8 00       		.byte	0
 904 02d9 12       		.uleb128 0x12
 905 02da 4F000000 		.4byte	.LASF44
 906 02de 04       		.byte	0x4
 907 02df 5B       		.byte	0x5b
 908 02e0 6B000000 		.4byte	0x6b
 909 02e4 13       		.uleb128 0x13
 910 02e5 0E030000 		.4byte	.LASF38
 911 02e9 0E030000 		.4byte	.LASF38
 912 02ed 03       		.byte	0x3
 913 02ee 3E03     		.2byte	0x33e
 914 02f0 13       		.uleb128 0x13
 915 02f1 AC020000 		.4byte	.LASF39
 916 02f5 AC020000 		.4byte	.LASF39
 917 02f9 03       		.byte	0x3
 918 02fa 3D03     		.2byte	0x33d
 919 02fc 13       		.uleb128 0x13
 920 02fd 7F000000 		.4byte	.LASF40
 921 0301 7F000000 		.4byte	.LASF40
 922 0305 03       		.byte	0x3
 923 0306 4403     		.2byte	0x344
 924 0308 00       		.byte	0
 925              		.section	.debug_abbrev,"",%progbits
 926              	.Ldebug_abbrev0:
 927 0000 01       		.uleb128 0x1
 928 0001 11       		.uleb128 0x11
 929 0002 01       		.byte	0x1
 930 0003 25       		.uleb128 0x25
 931 0004 0E       		.uleb128 0xe
 932 0005 13       		.uleb128 0x13
 933 0006 0B       		.uleb128 0xb
 934 0007 03       		.uleb128 0x3
 935 0008 0E       		.uleb128 0xe
 936 0009 1B       		.uleb128 0x1b
 937 000a 0E       		.uleb128 0xe
 938 000b 55       		.uleb128 0x55
 939 000c 17       		.uleb128 0x17
 940 000d 11       		.uleb128 0x11
 941 000e 01       		.uleb128 0x1
 942 000f 10       		.uleb128 0x10
 943 0010 17       		.uleb128 0x17
 944 0011 00       		.byte	0
 945 0012 00       		.byte	0
 946 0013 02       		.uleb128 0x2
 947 0014 24       		.uleb128 0x24
 948 0015 00       		.byte	0
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 33


 949 0016 0B       		.uleb128 0xb
 950 0017 0B       		.uleb128 0xb
 951 0018 3E       		.uleb128 0x3e
 952 0019 0B       		.uleb128 0xb
 953 001a 03       		.uleb128 0x3
 954 001b 0E       		.uleb128 0xe
 955 001c 00       		.byte	0
 956 001d 00       		.byte	0
 957 001e 03       		.uleb128 0x3
 958 001f 24       		.uleb128 0x24
 959 0020 00       		.byte	0
 960 0021 0B       		.uleb128 0xb
 961 0022 0B       		.uleb128 0xb
 962 0023 3E       		.uleb128 0x3e
 963 0024 0B       		.uleb128 0xb
 964 0025 03       		.uleb128 0x3
 965 0026 08       		.uleb128 0x8
 966 0027 00       		.byte	0
 967 0028 00       		.byte	0
 968 0029 04       		.uleb128 0x4
 969 002a 16       		.uleb128 0x16
 970 002b 00       		.byte	0
 971 002c 03       		.uleb128 0x3
 972 002d 0E       		.uleb128 0xe
 973 002e 3A       		.uleb128 0x3a
 974 002f 0B       		.uleb128 0xb
 975 0030 3B       		.uleb128 0x3b
 976 0031 05       		.uleb128 0x5
 977 0032 49       		.uleb128 0x49
 978 0033 13       		.uleb128 0x13
 979 0034 00       		.byte	0
 980 0035 00       		.byte	0
 981 0036 05       		.uleb128 0x5
 982 0037 35       		.uleb128 0x35
 983 0038 00       		.byte	0
 984 0039 49       		.uleb128 0x49
 985 003a 13       		.uleb128 0x13
 986 003b 00       		.byte	0
 987 003c 00       		.byte	0
 988 003d 06       		.uleb128 0x6
 989 003e 2E       		.uleb128 0x2e
 990 003f 00       		.byte	0
 991 0040 3F       		.uleb128 0x3f
 992 0041 19       		.uleb128 0x19
 993 0042 03       		.uleb128 0x3
 994 0043 0E       		.uleb128 0xe
 995 0044 3A       		.uleb128 0x3a
 996 0045 0B       		.uleb128 0xb
 997 0046 3B       		.uleb128 0x3b
 998 0047 0B       		.uleb128 0xb
 999 0048 27       		.uleb128 0x27
 1000 0049 19       		.uleb128 0x19
 1001 004a 11       		.uleb128 0x11
 1002 004b 01       		.uleb128 0x1
 1003 004c 12       		.uleb128 0x12
 1004 004d 06       		.uleb128 0x6
 1005 004e 40       		.uleb128 0x40
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 34


 1006 004f 18       		.uleb128 0x18
 1007 0050 9742     		.uleb128 0x2117
 1008 0052 19       		.uleb128 0x19
 1009 0053 00       		.byte	0
 1010 0054 00       		.byte	0
 1011 0055 07       		.uleb128 0x7
 1012 0056 2E       		.uleb128 0x2e
 1013 0057 00       		.byte	0
 1014 0058 3F       		.uleb128 0x3f
 1015 0059 19       		.uleb128 0x19
 1016 005a 03       		.uleb128 0x3
 1017 005b 0E       		.uleb128 0xe
 1018 005c 3A       		.uleb128 0x3a
 1019 005d 0B       		.uleb128 0xb
 1020 005e 3B       		.uleb128 0x3b
 1021 005f 05       		.uleb128 0x5
 1022 0060 27       		.uleb128 0x27
 1023 0061 19       		.uleb128 0x19
 1024 0062 11       		.uleb128 0x11
 1025 0063 01       		.uleb128 0x1
 1026 0064 12       		.uleb128 0x12
 1027 0065 06       		.uleb128 0x6
 1028 0066 40       		.uleb128 0x40
 1029 0067 18       		.uleb128 0x18
 1030 0068 9742     		.uleb128 0x2117
 1031 006a 19       		.uleb128 0x19
 1032 006b 00       		.byte	0
 1033 006c 00       		.byte	0
 1034 006d 08       		.uleb128 0x8
 1035 006e 2E       		.uleb128 0x2e
 1036 006f 01       		.byte	0x1
 1037 0070 3F       		.uleb128 0x3f
 1038 0071 19       		.uleb128 0x19
 1039 0072 03       		.uleb128 0x3
 1040 0073 0E       		.uleb128 0xe
 1041 0074 3A       		.uleb128 0x3a
 1042 0075 0B       		.uleb128 0xb
 1043 0076 3B       		.uleb128 0x3b
 1044 0077 05       		.uleb128 0x5
 1045 0078 27       		.uleb128 0x27
 1046 0079 19       		.uleb128 0x19
 1047 007a 11       		.uleb128 0x11
 1048 007b 01       		.uleb128 0x1
 1049 007c 12       		.uleb128 0x12
 1050 007d 06       		.uleb128 0x6
 1051 007e 40       		.uleb128 0x40
 1052 007f 18       		.uleb128 0x18
 1053 0080 9742     		.uleb128 0x2117
 1054 0082 19       		.uleb128 0x19
 1055 0083 01       		.uleb128 0x1
 1056 0084 13       		.uleb128 0x13
 1057 0085 00       		.byte	0
 1058 0086 00       		.byte	0
 1059 0087 09       		.uleb128 0x9
 1060 0088 05       		.uleb128 0x5
 1061 0089 00       		.byte	0
 1062 008a 03       		.uleb128 0x3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 35


 1063 008b 0E       		.uleb128 0xe
 1064 008c 3A       		.uleb128 0x3a
 1065 008d 0B       		.uleb128 0xb
 1066 008e 3B       		.uleb128 0x3b
 1067 008f 05       		.uleb128 0x5
 1068 0090 49       		.uleb128 0x49
 1069 0091 13       		.uleb128 0x13
 1070 0092 02       		.uleb128 0x2
 1071 0093 17       		.uleb128 0x17
 1072 0094 00       		.byte	0
 1073 0095 00       		.byte	0
 1074 0096 0A       		.uleb128 0xa
 1075 0097 34       		.uleb128 0x34
 1076 0098 00       		.byte	0
 1077 0099 03       		.uleb128 0x3
 1078 009a 0E       		.uleb128 0xe
 1079 009b 3A       		.uleb128 0x3a
 1080 009c 0B       		.uleb128 0xb
 1081 009d 3B       		.uleb128 0x3b
 1082 009e 05       		.uleb128 0x5
 1083 009f 49       		.uleb128 0x49
 1084 00a0 13       		.uleb128 0x13
 1085 00a1 02       		.uleb128 0x2
 1086 00a2 17       		.uleb128 0x17
 1087 00a3 00       		.byte	0
 1088 00a4 00       		.byte	0
 1089 00a5 0B       		.uleb128 0xb
 1090 00a6 2E       		.uleb128 0x2e
 1091 00a7 01       		.byte	0x1
 1092 00a8 3F       		.uleb128 0x3f
 1093 00a9 19       		.uleb128 0x19
 1094 00aa 03       		.uleb128 0x3
 1095 00ab 0E       		.uleb128 0xe
 1096 00ac 3A       		.uleb128 0x3a
 1097 00ad 0B       		.uleb128 0xb
 1098 00ae 3B       		.uleb128 0x3b
 1099 00af 05       		.uleb128 0x5
 1100 00b0 27       		.uleb128 0x27
 1101 00b1 19       		.uleb128 0x19
 1102 00b2 49       		.uleb128 0x49
 1103 00b3 13       		.uleb128 0x13
 1104 00b4 11       		.uleb128 0x11
 1105 00b5 01       		.uleb128 0x1
 1106 00b6 12       		.uleb128 0x12
 1107 00b7 06       		.uleb128 0x6
 1108 00b8 40       		.uleb128 0x40
 1109 00b9 18       		.uleb128 0x18
 1110 00ba 9742     		.uleb128 0x2117
 1111 00bc 19       		.uleb128 0x19
 1112 00bd 01       		.uleb128 0x1
 1113 00be 13       		.uleb128 0x13
 1114 00bf 00       		.byte	0
 1115 00c0 00       		.byte	0
 1116 00c1 0C       		.uleb128 0xc
 1117 00c2 898201   		.uleb128 0x4109
 1118 00c5 00       		.byte	0
 1119 00c6 11       		.uleb128 0x11
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 36


 1120 00c7 01       		.uleb128 0x1
 1121 00c8 31       		.uleb128 0x31
 1122 00c9 13       		.uleb128 0x13
 1123 00ca 00       		.byte	0
 1124 00cb 00       		.byte	0
 1125 00cc 0D       		.uleb128 0xd
 1126 00cd 0F       		.uleb128 0xf
 1127 00ce 00       		.byte	0
 1128 00cf 0B       		.uleb128 0xb
 1129 00d0 0B       		.uleb128 0xb
 1130 00d1 49       		.uleb128 0x49
 1131 00d2 13       		.uleb128 0x13
 1132 00d3 00       		.byte	0
 1133 00d4 00       		.byte	0
 1134 00d5 0E       		.uleb128 0xe
 1135 00d6 26       		.uleb128 0x26
 1136 00d7 00       		.byte	0
 1137 00d8 49       		.uleb128 0x49
 1138 00d9 13       		.uleb128 0x13
 1139 00da 00       		.byte	0
 1140 00db 00       		.byte	0
 1141 00dc 0F       		.uleb128 0xf
 1142 00dd 898201   		.uleb128 0x4109
 1143 00e0 01       		.byte	0x1
 1144 00e1 11       		.uleb128 0x11
 1145 00e2 01       		.uleb128 0x1
 1146 00e3 31       		.uleb128 0x31
 1147 00e4 13       		.uleb128 0x13
 1148 00e5 01       		.uleb128 0x1
 1149 00e6 13       		.uleb128 0x13
 1150 00e7 00       		.byte	0
 1151 00e8 00       		.byte	0
 1152 00e9 10       		.uleb128 0x10
 1153 00ea 8A8201   		.uleb128 0x410a
 1154 00ed 00       		.byte	0
 1155 00ee 02       		.uleb128 0x2
 1156 00ef 18       		.uleb128 0x18
 1157 00f0 9142     		.uleb128 0x2111
 1158 00f2 18       		.uleb128 0x18
 1159 00f3 00       		.byte	0
 1160 00f4 00       		.byte	0
 1161 00f5 11       		.uleb128 0x11
 1162 00f6 898201   		.uleb128 0x4109
 1163 00f9 01       		.byte	0x1
 1164 00fa 11       		.uleb128 0x11
 1165 00fb 01       		.uleb128 0x1
 1166 00fc 31       		.uleb128 0x31
 1167 00fd 13       		.uleb128 0x13
 1168 00fe 00       		.byte	0
 1169 00ff 00       		.byte	0
 1170 0100 12       		.uleb128 0x12
 1171 0101 34       		.uleb128 0x34
 1172 0102 00       		.byte	0
 1173 0103 03       		.uleb128 0x3
 1174 0104 0E       		.uleb128 0xe
 1175 0105 3A       		.uleb128 0x3a
 1176 0106 0B       		.uleb128 0xb
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 37


 1177 0107 3B       		.uleb128 0x3b
 1178 0108 0B       		.uleb128 0xb
 1179 0109 49       		.uleb128 0x49
 1180 010a 13       		.uleb128 0x13
 1181 010b 3F       		.uleb128 0x3f
 1182 010c 19       		.uleb128 0x19
 1183 010d 3C       		.uleb128 0x3c
 1184 010e 19       		.uleb128 0x19
 1185 010f 00       		.byte	0
 1186 0110 00       		.byte	0
 1187 0111 13       		.uleb128 0x13
 1188 0112 2E       		.uleb128 0x2e
 1189 0113 00       		.byte	0
 1190 0114 3F       		.uleb128 0x3f
 1191 0115 19       		.uleb128 0x19
 1192 0116 3C       		.uleb128 0x3c
 1193 0117 19       		.uleb128 0x19
 1194 0118 6E       		.uleb128 0x6e
 1195 0119 0E       		.uleb128 0xe
 1196 011a 03       		.uleb128 0x3
 1197 011b 0E       		.uleb128 0xe
 1198 011c 3A       		.uleb128 0x3a
 1199 011d 0B       		.uleb128 0xb
 1200 011e 3B       		.uleb128 0x3b
 1201 011f 05       		.uleb128 0x5
 1202 0120 00       		.byte	0
 1203 0121 00       		.byte	0
 1204 0122 00       		.byte	0
 1205              		.section	.debug_loc,"",%progbits
 1206              	.Ldebug_loc0:
 1207              	.LLST0:
 1208 0000 00000000 		.4byte	.LVL0
 1209 0004 06000000 		.4byte	.LVL1
 1210 0008 0100     		.2byte	0x1
 1211 000a 50       		.byte	0x50
 1212 000b 06000000 		.4byte	.LVL1
 1213 000f 14000000 		.4byte	.LFE3
 1214 0013 0400     		.2byte	0x4
 1215 0015 F3       		.byte	0xf3
 1216 0016 01       		.uleb128 0x1
 1217 0017 50       		.byte	0x50
 1218 0018 9F       		.byte	0x9f
 1219 0019 00000000 		.4byte	0
 1220 001d 00000000 		.4byte	0
 1221              	.LLST1:
 1222 0021 08000000 		.4byte	.LVL2
 1223 0025 0C000000 		.4byte	.LVL4
 1224 0029 0100     		.2byte	0x1
 1225 002b 53       		.byte	0x53
 1226 002c 0C000000 		.4byte	.LVL4
 1227 0030 14000000 		.4byte	.LFE3
 1228 0034 0100     		.2byte	0x1
 1229 0036 50       		.byte	0x50
 1230 0037 00000000 		.4byte	0
 1231 003b 00000000 		.4byte	0
 1232              	.LLST2:
 1233 003f 00000000 		.4byte	.LVL5
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 38


 1234 0043 08000000 		.4byte	.LVL7
 1235 0047 0100     		.2byte	0x1
 1236 0049 50       		.byte	0x50
 1237 004a 08000000 		.4byte	.LVL7
 1238 004e 18000000 		.4byte	.LFE4
 1239 0052 0400     		.2byte	0x4
 1240 0054 F3       		.byte	0xf3
 1241 0055 01       		.uleb128 0x1
 1242 0056 50       		.byte	0x50
 1243 0057 9F       		.byte	0x9f
 1244 0058 00000000 		.4byte	0
 1245 005c 00000000 		.4byte	0
 1246              	.LLST3:
 1247 0060 06000000 		.4byte	.LVL6
 1248 0064 0A000000 		.4byte	.LVL8
 1249 0068 0100     		.2byte	0x1
 1250 006a 51       		.byte	0x51
 1251 006b 0A000000 		.4byte	.LVL8
 1252 006f 0C000000 		.4byte	.LVL9
 1253 0073 0100     		.2byte	0x1
 1254 0075 53       		.byte	0x53
 1255 0076 0C000000 		.4byte	.LVL9
 1256 007a 18000000 		.4byte	.LFE4
 1257 007e 0100     		.2byte	0x1
 1258 0080 50       		.byte	0x50
 1259 0081 00000000 		.4byte	0
 1260 0085 00000000 		.4byte	0
 1261              	.LLST4:
 1262 0089 00000000 		.4byte	.LVL10
 1263 008d 12000000 		.4byte	.LVL12
 1264 0091 0200     		.2byte	0x2
 1265 0093 30       		.byte	0x30
 1266 0094 9F       		.byte	0x9f
 1267 0095 12000000 		.4byte	.LVL12
 1268 0099 1E000000 		.4byte	.LVL13
 1269 009d 0100     		.2byte	0x1
 1270 009f 50       		.byte	0x50
 1271 00a0 1E000000 		.4byte	.LVL13
 1272 00a4 22000000 		.4byte	.LVL14
 1273 00a8 0200     		.2byte	0x2
 1274 00aa 30       		.byte	0x30
 1275 00ab 9F       		.byte	0x9f
 1276 00ac 22000000 		.4byte	.LVL14
 1277 00b0 28000000 		.4byte	.LFE5
 1278 00b4 0100     		.2byte	0x1
 1279 00b6 50       		.byte	0x50
 1280 00b7 00000000 		.4byte	0
 1281 00bb 00000000 		.4byte	0
 1282              	.LLST5:
 1283 00bf 0E000000 		.4byte	.LVL16
 1284 00c3 10000000 		.4byte	.LVL17
 1285 00c7 0100     		.2byte	0x1
 1286 00c9 50       		.byte	0x50
 1287 00ca 14000000 		.4byte	.LVL18
 1288 00ce 1E000000 		.4byte	.LVL20
 1289 00d2 0100     		.2byte	0x1
 1290 00d4 50       		.byte	0x50
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 39


 1291 00d5 1E000000 		.4byte	.LVL20
 1292 00d9 22000000 		.4byte	.LVL21
 1293 00dd 0C00     		.2byte	0xc
 1294 00df 73       		.byte	0x73
 1295 00e0 00       		.sleb128 0
 1296 00e1 38       		.byte	0x38
 1297 00e2 24       		.byte	0x24
 1298 00e3 4B       		.byte	0x4b
 1299 00e4 3D       		.byte	0x3d
 1300 00e5 24       		.byte	0x24
 1301 00e6 1A       		.byte	0x1a
 1302 00e7 70       		.byte	0x70
 1303 00e8 00       		.sleb128 0
 1304 00e9 21       		.byte	0x21
 1305 00ea 9F       		.byte	0x9f
 1306 00eb 00000000 		.4byte	0
 1307 00ef 00000000 		.4byte	0
 1308              	.LLST6:
 1309 00f3 1C000000 		.4byte	.LVL19
 1310 00f7 22000000 		.4byte	.LVL21
 1311 00fb 0700     		.2byte	0x7
 1312 00fd 73       		.byte	0x73
 1313 00fe 00       		.sleb128 0
 1314 00ff 0A       		.byte	0xa
 1315 0100 6003     		.2byte	0x360
 1316 0102 1A       		.byte	0x1a
 1317 0103 9F       		.byte	0x9f
 1318 0104 00000000 		.4byte	0
 1319 0108 00000000 		.4byte	0
 1320              	.LLST7:
 1321 010c 00000000 		.4byte	.LVL22
 1322 0110 04000000 		.4byte	.LVL23
 1323 0114 0100     		.2byte	0x1
 1324 0116 50       		.byte	0x50
 1325 0117 04000000 		.4byte	.LVL23
 1326 011b 16000000 		.4byte	.LFE7
 1327 011f 0400     		.2byte	0x4
 1328 0121 F3       		.byte	0xf3
 1329 0122 01       		.uleb128 0x1
 1330 0123 50       		.byte	0x50
 1331 0124 9F       		.byte	0x9f
 1332 0125 00000000 		.4byte	0
 1333 0129 00000000 		.4byte	0
 1334              	.LLST8:
 1335 012d 04000000 		.4byte	.LVL23
 1336 0131 06000000 		.4byte	.LVL24
 1337 0135 0700     		.2byte	0x7
 1338 0137 74       		.byte	0x74
 1339 0138 00       		.sleb128 0
 1340 0139 F3       		.byte	0xf3
 1341 013a 01       		.uleb128 0x1
 1342 013b 50       		.byte	0x50
 1343 013c 1C       		.byte	0x1c
 1344 013d 9F       		.byte	0x9f
 1345 013e 06000000 		.4byte	.LVL24
 1346 0142 12000000 		.4byte	.LVL25
 1347 0146 0800     		.2byte	0x8
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 40


 1348 0148 F3       		.byte	0xf3
 1349 0149 01       		.uleb128 0x1
 1350 014a 50       		.byte	0x50
 1351 014b 20       		.byte	0x20
 1352 014c 74       		.byte	0x74
 1353 014d 00       		.sleb128 0
 1354 014e 22       		.byte	0x22
 1355 014f 9F       		.byte	0x9f
 1356 0150 12000000 		.4byte	.LVL25
 1357 0154 14000000 		.4byte	.LVL26
 1358 0158 0700     		.2byte	0x7
 1359 015a 74       		.byte	0x74
 1360 015b 00       		.sleb128 0
 1361 015c F3       		.byte	0xf3
 1362 015d 01       		.uleb128 0x1
 1363 015e 50       		.byte	0x50
 1364 015f 1C       		.byte	0x1c
 1365 0160 9F       		.byte	0x9f
 1366 0161 14000000 		.4byte	.LVL26
 1367 0165 14000000 		.4byte	.LVL27
 1368 0169 0800     		.2byte	0x8
 1369 016b F3       		.byte	0xf3
 1370 016c 01       		.uleb128 0x1
 1371 016d 50       		.byte	0x50
 1372 016e 20       		.byte	0x20
 1373 016f 74       		.byte	0x74
 1374 0170 00       		.sleb128 0
 1375 0171 22       		.byte	0x22
 1376 0172 9F       		.byte	0x9f
 1377 0173 14000000 		.4byte	.LVL27
 1378 0177 16000000 		.4byte	.LFE7
 1379 017b 0700     		.2byte	0x7
 1380 017d 73       		.byte	0x73
 1381 017e 00       		.sleb128 0
 1382 017f F3       		.byte	0xf3
 1383 0180 01       		.uleb128 0x1
 1384 0181 50       		.byte	0x50
 1385 0182 1C       		.byte	0x1c
 1386 0183 9F       		.byte	0x9f
 1387 0184 00000000 		.4byte	0
 1388 0188 00000000 		.4byte	0
 1389              	.LLST9:
 1390 018c 00000000 		.4byte	.LVL28
 1391 0190 05000000 		.4byte	.LVL29-1
 1392 0194 0100     		.2byte	0x1
 1393 0196 50       		.byte	0x50
 1394 0197 05000000 		.4byte	.LVL29-1
 1395 019b 14000000 		.4byte	.LFE8
 1396 019f 0400     		.2byte	0x4
 1397 01a1 F3       		.byte	0xf3
 1398 01a2 01       		.uleb128 0x1
 1399 01a3 50       		.byte	0x50
 1400 01a4 9F       		.byte	0x9f
 1401 01a5 00000000 		.4byte	0
 1402 01a9 00000000 		.4byte	0
 1403              	.LLST10:
 1404 01ad 00000000 		.4byte	.LVL32
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 41


 1405 01b1 1C000000 		.4byte	.LVL35
 1406 01b5 0100     		.2byte	0x1
 1407 01b7 50       		.byte	0x50
 1408 01b8 1C000000 		.4byte	.LVL35
 1409 01bc 22000000 		.4byte	.LVL38
 1410 01c0 0300     		.2byte	0x3
 1411 01c2 70       		.byte	0x70
 1412 01c3 01       		.sleb128 1
 1413 01c4 9F       		.byte	0x9f
 1414 01c5 22000000 		.4byte	.LVL38
 1415 01c9 58000000 		.4byte	.LFE9
 1416 01cd 0400     		.2byte	0x4
 1417 01cf F3       		.byte	0xf3
 1418 01d0 01       		.uleb128 0x1
 1419 01d1 50       		.byte	0x50
 1420 01d2 9F       		.byte	0x9f
 1421 01d3 00000000 		.4byte	0
 1422 01d7 00000000 		.4byte	0
 1423              	.LLST11:
 1424 01db 1E000000 		.4byte	.LVL36
 1425 01df 20000000 		.4byte	.LVL37
 1426 01e3 0100     		.2byte	0x1
 1427 01e5 51       		.byte	0x51
 1428 01e6 20000000 		.4byte	.LVL37
 1429 01ea 58000000 		.4byte	.LFE9
 1430 01ee 0100     		.2byte	0x1
 1431 01f0 5C       		.byte	0x5c
 1432 01f1 00000000 		.4byte	0
 1433 01f5 00000000 		.4byte	0
 1434              	.LLST12:
 1435 01f9 12000000 		.4byte	.LVL33
 1436 01fd 14000000 		.4byte	.LVL34
 1437 0201 0100     		.2byte	0x1
 1438 0203 53       		.byte	0x53
 1439 0204 14000000 		.4byte	.LVL34
 1440 0208 58000000 		.4byte	.LFE9
 1441 020c 0200     		.2byte	0x2
 1442 020e 91       		.byte	0x91
 1443 020f 64       		.sleb128 -28
 1444 0210 00000000 		.4byte	0
 1445 0214 00000000 		.4byte	0
 1446              		.section	.debug_aranges,"",%progbits
 1447 0000 64000000 		.4byte	0x64
 1448 0004 0200     		.2byte	0x2
 1449 0006 00000000 		.4byte	.Ldebug_info0
 1450 000a 04       		.byte	0x4
 1451 000b 00       		.byte	0
 1452 000c 0000     		.2byte	0
 1453 000e 0000     		.2byte	0
 1454 0010 00000000 		.4byte	.LFB0
 1455 0014 A0000000 		.4byte	.LFE0-.LFB0
 1456 0018 00000000 		.4byte	.LFB1
 1457 001c 24000000 		.4byte	.LFE1-.LFB1
 1458 0020 00000000 		.4byte	.LFB2
 1459 0024 28000000 		.4byte	.LFE2-.LFB2
 1460 0028 00000000 		.4byte	.LFB3
 1461 002c 14000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 42


 1462 0030 00000000 		.4byte	.LFB4
 1463 0034 18000000 		.4byte	.LFE4-.LFB4
 1464 0038 00000000 		.4byte	.LFB5
 1465 003c 28000000 		.4byte	.LFE5-.LFB5
 1466 0040 00000000 		.4byte	.LFB6
 1467 0044 34000000 		.4byte	.LFE6-.LFB6
 1468 0048 00000000 		.4byte	.LFB7
 1469 004c 16000000 		.4byte	.LFE7-.LFB7
 1470 0050 00000000 		.4byte	.LFB8
 1471 0054 14000000 		.4byte	.LFE8-.LFB8
 1472 0058 00000000 		.4byte	.LFB9
 1473 005c 58000000 		.4byte	.LFE9-.LFB9
 1474 0060 00000000 		.4byte	0
 1475 0064 00000000 		.4byte	0
 1476              		.section	.debug_ranges,"",%progbits
 1477              	.Ldebug_ranges0:
 1478 0000 00000000 		.4byte	.LFB0
 1479 0004 A0000000 		.4byte	.LFE0
 1480 0008 00000000 		.4byte	.LFB1
 1481 000c 24000000 		.4byte	.LFE1
 1482 0010 00000000 		.4byte	.LFB2
 1483 0014 28000000 		.4byte	.LFE2
 1484 0018 00000000 		.4byte	.LFB3
 1485 001c 14000000 		.4byte	.LFE3
 1486 0020 00000000 		.4byte	.LFB4
 1487 0024 18000000 		.4byte	.LFE4
 1488 0028 00000000 		.4byte	.LFB5
 1489 002c 28000000 		.4byte	.LFE5
 1490 0030 00000000 		.4byte	.LFB6
 1491 0034 34000000 		.4byte	.LFE6
 1492 0038 00000000 		.4byte	.LFB7
 1493 003c 16000000 		.4byte	.LFE7
 1494 0040 00000000 		.4byte	.LFB8
 1495 0044 14000000 		.4byte	.LFE8
 1496 0048 00000000 		.4byte	.LFB9
 1497 004c 58000000 		.4byte	.LFE9
 1498 0050 00000000 		.4byte	0
 1499 0054 00000000 		.4byte	0
 1500              		.section	.debug_line,"",%progbits
 1501              	.Ldebug_line0:
 1502 0000 9E010000 		.section	.debug_str,"MS",%progbits,1
 1502      02006700 
 1502      00000201 
 1502      FB0E0D00 
 1502      01010101 
 1503              	.LASF6:
 1504 0000 6C6F6E67 		.ascii	"long long int\000"
 1504      206C6F6E 
 1504      6720696E 
 1504      7400
 1505              	.LASF15:
 1506 000e 72656733 		.ascii	"reg32\000"
 1506      3200
 1507              	.LASF43:
 1508 0014 443A5C31 		.ascii	"D:\\1_work\\my_project\\ReloadPro\\psoc42boot\\Relo"
 1508      5F776F72 
 1508      6B5C6D79 
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 43


 1508      5F70726F 
 1508      6A656374 
 1509 0042 61642050 		.ascii	"ad Pro.cydsn\000"
 1509      726F2E63 
 1509      7964736E 
 1509      00
 1510              	.LASF44:
 1511 004f 55415254 		.ascii	"UART_IntrTxMask\000"
 1511      5F496E74 
 1511      7254784D 
 1511      61736B00 
 1512              	.LASF21:
 1513 005f 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1513      5F556172 
 1513      74536574 
 1513      52784164 
 1513      64726573 
 1514              	.LASF11:
 1515 0079 666C6F61 		.ascii	"float\000"
 1515      7400
 1516              	.LASF40:
 1517 007f 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1517      5F537069 
 1517      55617274 
 1517      57726974 
 1517      65547844 
 1518              	.LASF30:
 1519 0097 73747269 		.ascii	"string\000"
 1519      6E6700
 1520              	.LASF29:
 1521 009e 55415254 		.ascii	"UART_UartPutString\000"
 1521      5F556172 
 1521      74507574 
 1521      53747269 
 1521      6E6700
 1522              	.LASF35:
 1523 00b1 62726561 		.ascii	"breakWidth\000"
 1523      6B576964 
 1523      746800
 1524              	.LASF34:
 1525 00bc 55415254 		.ascii	"UART_UartSendBreakBlocking\000"
 1525      5F556172 
 1525      7453656E 
 1525      64427265 
 1525      616B426C 
 1526              	.LASF37:
 1527 00d7 7478496E 		.ascii	"txIntrReg\000"
 1527      74725265 
 1527      6700
 1528              	.LASF1:
 1529 00e1 756E7369 		.ascii	"unsigned char\000"
 1529      676E6564 
 1529      20636861 
 1529      7200
 1530              	.LASF13:
 1531 00ef 63686172 		.ascii	"char8\000"
 1531      3800
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 44


 1532              	.LASF18:
 1533 00f5 55415254 		.ascii	"UART_UartPostEnable\000"
 1533      5F556172 
 1533      74506F73 
 1533      74456E61 
 1533      626C6500 
 1534              	.LASF5:
 1535 0109 6C6F6E67 		.ascii	"long unsigned int\000"
 1535      20756E73 
 1535      69676E65 
 1535      6420696E 
 1535      7400
 1536              	.LASF19:
 1537 011b 55415254 		.ascii	"UART_UartStop\000"
 1537      5F556172 
 1537      7453746F 
 1537      7000
 1538              	.LASF3:
 1539 0129 73686F72 		.ascii	"short unsigned int\000"
 1539      7420756E 
 1539      7369676E 
 1539      65642069 
 1539      6E7400
 1540              	.LASF32:
 1541 013c 55415254 		.ascii	"UART_UartPutCRLF\000"
 1541      5F556172 
 1541      74507574 
 1541      43524C46 
 1541      00
 1542              	.LASF27:
 1543 014d 55415254 		.ascii	"UART_UartGetByte\000"
 1543      5F556172 
 1543      74476574 
 1543      42797465 
 1543      00
 1544              	.LASF25:
 1545 015e 72784461 		.ascii	"rxData\000"
 1545      746100
 1546              	.LASF23:
 1547 0165 61646472 		.ascii	"addressMask\000"
 1547      6573734D 
 1547      61736B00 
 1548              	.LASF12:
 1549 0171 646F7562 		.ascii	"double\000"
 1549      6C6500
 1550              	.LASF20:
 1551 0178 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1551      5F556172 
 1551      74536574 
 1551      52784164 
 1551      64726573 
 1552              	.LASF9:
 1553 018e 75696E74 		.ascii	"uint16\000"
 1553      313600
 1554              	.LASF10:
 1555 0195 75696E74 		.ascii	"uint32\000"
 1555      333200
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 45


 1556              	.LASF8:
 1557 019c 756E7369 		.ascii	"unsigned int\000"
 1557      676E6564 
 1557      20696E74 
 1557      00
 1558              	.LASF17:
 1559 01a9 55415254 		.ascii	"UART_UartInit\000"
 1559      5F556172 
 1559      74496E69 
 1559      7400
 1560              	.LASF22:
 1561 01b7 61646472 		.ascii	"address\000"
 1561      65737300 
 1562              	.LASF7:
 1563 01bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1563      206C6F6E 
 1563      6720756E 
 1563      7369676E 
 1563      65642069 
 1564              	.LASF31:
 1565 01d6 62756649 		.ascii	"bufIndex\000"
 1565      6E646578 
 1565      00
 1566              	.LASF26:
 1567 01df 55415254 		.ascii	"UART_UartGetChar\000"
 1567      5F556172 
 1567      74476574 
 1567      43686172 
 1567      00
 1568              	.LASF41:
 1569 01f0 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1569      43393920 
 1569      352E342E 
 1569      31203230 
 1569      31363036 
 1570 0223 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1570      20726576 
 1570      6973696F 
 1570      6E203233 
 1570      37373135 
 1571 0256 73202D73 		.ascii	"s -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 1571      74643D67 
 1571      6E753939 
 1571      202D6666 
 1571      756E6374 
 1572              	.LASF16:
 1573 0289 73697A65 		.ascii	"sizetype\000"
 1573      74797065 
 1573      00
 1574              	.LASF33:
 1575 0292 74784461 		.ascii	"txDataByte\000"
 1575      74614279 
 1575      746500
 1576              	.LASF14:
 1577 029d 63686172 		.ascii	"char\000"
 1577      00
 1578              	.LASF2:
ARM GAS  C:\Users\VIDEOH~1\AppData\Local\Temp\ccnPYXlr.s 			page 46


 1579 02a2 73686F72 		.ascii	"short int\000"
 1579      7420696E 
 1579      7400
 1580              	.LASF39:
 1581 02ac 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1581      5F537069 
 1581      55617274 
 1581      52656164 
 1581      52784461 
 1582              	.LASF4:
 1583 02c3 6C6F6E67 		.ascii	"long int\000"
 1583      20696E74 
 1583      00
 1584              	.LASF28:
 1585 02cc 746D7053 		.ascii	"tmpStatus\000"
 1585      74617475 
 1585      7300
 1586              	.LASF24:
 1587 02d6 6D617463 		.ascii	"matchReg\000"
 1587      68526567 
 1587      00
 1588              	.LASF42:
 1589 02df 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 1589      72617465 
 1589      645F536F 
 1589      75726365 
 1589      5C50536F 
 1590              	.LASF0:
 1591 0302 7369676E 		.ascii	"signed char\000"
 1591      65642063 
 1591      68617200 
 1592              	.LASF38:
 1593 030e 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1593      5F537069 
 1593      55617274 
 1593      47657452 
 1593      78427566 
 1594              	.LASF36:
 1595 032a 74784374 		.ascii	"txCtrlReg\000"
 1595      726C5265 
 1595      6700
 1596              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
